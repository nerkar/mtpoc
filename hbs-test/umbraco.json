[{"pageId":"1","pageLevel":0,"pageOrder":"1","pageParentId":"-1","pageName":"Umbraco1","endPointPath":"","pageHeading":"","pageContent":"","templateType":"article:topic-category","pageStyleReducedHeading":"","pageStyleReducedContent":"","sub":[{"pageId":"1","pageLevel":0,"pageOrder":"1","pageParentId":"-1","pageName":"Objectives:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 10pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading173\" class=\"heading173\"><a name=\"bookmark0\" id=\"174\" style=\"color: lime;\">Objectives:</a></h2>","pageContent":"<div id=\"contentheading173\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"175\"><br id=\"176\"></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"177\">In “how to umbraco” book contains basic information about Umbraco site, using this book new developer will be able to develop Web site using Umbraco from scratch. Most of case I tried to explain using examples rather than theory. “how to Umbraco” will show the way to new developer so that new developer will be able to start building complex website using Umbraco CMS. Main objectives of “how to Umbraco” is to generalizing complex structure of Umbraco CMS that new developer can easily understand relationship between different parts of Umbraco. Understanding connection between content, template and DocumentType are mostly difficult and hardest part for new developer. I am trying to explain using examples in simple word about connection between content, templates and document Type to make understandable to new developer. Installation and extending is also hardest part in Umbraco for new developer. Providing step by set guide will help to install and extend Umbraco is core concept of this book. As a whole “how to Umbraco” book is for new developer to understand basic concept of Umbraco CMS and extending Umbraco.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"178\"><br id=\"179\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading173\" class=\"heading173\"><a name=\"bookmark0\" id=\"174\" >Objectives:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading173\" ><p  id=\"175\"><br id=\"176\"></p><p  id=\"177\">In “how to umbraco” book contains basic information about Umbraco site, using this book new developer will be able to develop Web site using Umbraco from scratch. Most of case I tried to explain using examples rather than theory. “how to Umbraco” will show the way to new developer so that new developer will be able to start building complex website using Umbraco CMS. Main objectives of “how to Umbraco” is to generalizing complex structure of Umbraco CMS that new developer can easily understand relationship between different parts of Umbraco. Understanding connection between content, template and DocumentType are mostly difficult and hardest part for new developer. I am trying to explain using examples in simple word about connection between content, templates and document Type to make understandable to new developer. Installation and extending is also hardest part in Umbraco for new developer. Providing step by set guide will help to install and extend Umbraco is core concept of this book. As a whole “how to Umbraco” book is for new developer to understand basic concept of Umbraco CMS and extending Umbraco.</p><p  id=\"178\"><br id=\"179\"></p></div>","sub":[]},{"pageId":"2","pageLevel":0,"pageOrder":"2","pageParentId":"-1","pageName":"Inspiration:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading180\" class=\"heading180\"><a name=\"bookmark1\" id=\"181\" style=\"color: lime;\">Inspiration:</a></h2>","pageContent":"<div id=\"contentheading180\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"182\">Without reasons I did not attend to write “how to Umbraco” book. One reason is writing and publishing this book is I faced so many difficulties to learn Umbraco Site because of its complexity, finding materials to learn and lack of examples on official documentation another reason is personal interest to share knowledge. Students studying at Erhvervsakademiet København Nord Lyngby, Demark are inspiration for writing this book. Teacher <b id=\"183\">Søren Hjarlvig </b>taught and provided material and guide about Umbraco and <b id=\"184\">Tue Becher </b>taught IT security helped me to implement security topics in “how to Umbraco” book. Creuna Digital Service Agency provided chance to sharp my Umbraco knowledge is also account for inspiration. All teachers at KNORD who helped me to learn programming are inspirations.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"185\">Finally of course readers are great inspiration to writing this book.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"186\"><br id=\"187\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading180\" class=\"heading180\"><a name=\"bookmark1\" id=\"181\" >Inspiration:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading180\" ><p  id=\"182\">Without reasons I did not attend to write “how to Umbraco” book. One reason is writing and publishing this book is I faced so many difficulties to learn Umbraco Site because of its complexity, finding materials to learn and lack of examples on official documentation another reason is personal interest to share knowledge. Students studying at Erhvervsakademiet København Nord Lyngby, Demark are inspiration for writing this book. Teacher <b id=\"183\">Søren Hjarlvig </b>taught and provided material and guide about Umbraco and <b id=\"184\">Tue Becher </b>taught IT security helped me to implement security topics in “how to Umbraco” book. Creuna Digital Service Agency provided chance to sharp my Umbraco knowledge is also account for inspiration. All teachers at KNORD who helped me to learn programming are inspirations.</p><p  id=\"185\">Finally of course readers are great inspiration to writing this book.</p><p  id=\"186\"><br id=\"187\"></p></div>","sub":[]},{"pageId":"3","pageLevel":0,"pageOrder":"3","pageParentId":"-1","pageName":"Introduction:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading188\" class=\"heading188\"><a name=\"bookmark2\" id=\"189\" style=\"color: lime;\">Introduction</a><span class=\"p\" id=\"190\">:</span></h2>","pageContent":"<div id=\"contentheading188\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 12pt;padding-left: 5pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"191\">Umbraco CMS is one of the CMS systems that based on asp.net which is Microsoft platform. Many developers who are familiar with one of the Microsoft platform Dot.Net languages they are interested to work with Umbraco CMS. Official web sites of Umbraco CMS claims “Umbraco CMS currently powers more than 85.000 websites worldwide”<span class=\"s3\" id=\"192\">1 </span>which is huge numbers of websites and according to Wikipedia</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"193\">“1000 downloads a day and top most popular downloads via the Microsoft Web Platform Installer” <span class=\"s3\" id=\"194\">2</span>.</p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"195\">I am working with Umbraco since one and half year and had chance to work with big web project based on Umbraco CMS while I was doing my internship at Creuna.dk. When I worked with Umbraco I feel bad sometimes and good most of time. I feel bad in that sense it require lots of pre settings in order to install and set up first time as compared to other CMS like Joomla and drupal. I feel good in that sense when I finished installation and setup it worked perfectly without any problem and have great functionality, flexibility and capable to support multiple programming language.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"196\">According to first paragraph and my one year of personal experience made me to conclude that Umbraco CMS is growing CMS system and will continue to grow up every year and my first choice of CMS is Umbraco. I stared to learn Umbraco from scratch before one year from school (KNORD) and still learning about Umbraco CMS. During my learning process I got very hard time to learn Umbraco CMS and still getting hard time to learn. One reason was that there was not cooked book</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: justify;\" id=\"197\">publish<span class=\"s3\" id=\"198\">3 </span>yet about Umbraco CMS and Second reason is documentation is not</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"199\">enough in Umbraco official site. One reason for having not enough documentation about Umbraco could be Umbraco CMS is open source so that Creator of Umbraco CMS wants to force developers or users to pay for official published video tutorials that‟ require to pay. I was planning to provide general information and instruction material about Umbraco CMS since long time ago for beginners who want to develop his carrier as Umbraco Specialist in future.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"200\"><a href=\"http://www.youtube.com/jeevan2np\" class=\"a\" target=\"_blank\" id=\"201\">I already started to share my knowledge about Umbraco CMS using video tutorials in YouTube social network sites. </a>www.youtube.com/jeevan2np is my YouTube video channel. Every week number of visitors is increasing in my videos and some visitors also commented on videos that made me happy and provided energy to look more about Umbraco CMS. All videos I had uploaded to YouTube are not professional some videos was raw video, too little information, very basic, not much about programming and little much mess with information. It was mess because I did not organize message properly on videos. I created videos about “how to install Umbraco CMS in localhost” before three month ago and have 295 views (based on date May 30, 2011)that also provided me energy to look more about Umbraco CMS.</p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"202\">I created that video with my friends “Niraj Bana” as my final exam project for Advanced Media Technology projects.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"203\">Now I am trying to provide more academic knowledge about Umbraco CMS. Going deep inside Umbraco CMS and provide basic core concept of Umbraco CMS will help a lot to new developer who want to build carrier as Umbraco Specialist in future. This Umbraco Basic “How to Umbraco” will not provide knowledge that makes readers as Umbraco Expert rather than it will show the way by providing concept in different areas of Umbraco CMS, providing guidance to developers. So after reading a digital book, developers will be able to figure out basic concept of Umbraco CMS and develop skills and knowledge to build websites in Umbraco CMS.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"204\">Reading this book will provide general over view of Umbraco CMS, how Umbraco CMS works, what are the extension possibility of Umbraco CMS if it needs to extend. In this book I am looking into Umbraco API and extending Umbraco CMS in brief. I will cover basic concept of different parts of Umbraco like templates, macro and Content, 40% of this book is focused on programming for Umbraco CMS. By providing general programming knowledge of Umbraco CMS will help readers to be expert in Umbraco CMS in future and such general knowledge will work as pillar from where new developer can start to build big house.</p><p class=\"s4\" style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"205\">References: References date: 04/07/2011</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"206\"><a href=\"http://umbraco.com/get-started/case-studies/sites-running-umbraco\" class=\"a\" target=\"_blank\" id=\"207\">1: </a><a href=\"http://umbraco.com/get-started/case-studies/sites-running-umbraco\" class=\"s5\" target=\"_blank\" id=\"208\">http://umbraco.com/get-started/case-studies/sites-running-umbraco</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"209\"><br id=\"210\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 113%;text-align: justify;\" id=\"211\"><a href=\"http://labs.thesedays.com/2010/07/30/why-umbraco-suits-us/\" style=\" color: #252525; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt;\" target=\"_blank\" id=\"212\">Extra link about Umbraco: </a><a href=\"http://labs.thesedays.com/2010/07/30/why-umbraco-suits-us/\" class=\"s5\" target=\"_blank\" id=\"213\">http://labs.thesedays.com/2010/07/30/why-umbraco-suits- us/</a></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"214\"><a href=\"http://en.wikipedia.org/wiki/Umbraco\" style=\" color: #252525; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 12pt;\" target=\"_blank\" id=\"215\">2: </a><a href=\"http://en.wikipedia.org/wiki/Umbraco\" class=\"s5\" target=\"_blank\" id=\"216\">http://en.wikipedia.org/wiki/Umbraco</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"217\"><br id=\"218\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"219\">3: until references date mention above.</p><p class=\"s8\" style=\"padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"220\">Validity or trustworthy of References<span class=\"p\" id=\"221\">:</span></p><ul id=\"l1\"><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"223\"><p style=\"display: inline;\" id=\"224\"><a href=\"http://blog.leekelleher.com/author/vertino/\" class=\"a\" target=\"_blank\" id=\"225\">Article was modified by Umbraco developers and most of are either Umbraco core developer team or freelance and Umbraco specialist have experience since 4 years. Most of have own blogs about Umbraco. Example Lee Kelleher </a><a href=\"http://blog.leekelleher.com/author/vertino/\" target=\"_blank\" id=\"226\">http://blog.leekelleher.com/author/vertino/</a></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"227\"><p style=\"display: inline;\" id=\"228\">People are discussion about why Umbraco “extra link above”. Somehow they are represents real voice coming from developer so there is place to trust.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"229\"><p style=\"display: inline;\" id=\"230\">http://www.cmsmatrix.org/ is one organization that provides comparison of different web site CMS. It is also possible to compare more than two CMS at a time.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"231\"><p style=\"display: inline;\" id=\"232\">http://www.cmsmatrix.org/ has list of almost all available CMS. Information may not reliable for example Umbraco is Free CMS but it shows 30Euro + VAT per domain. We can use this site as to get ideas but should not be use as guarantee or 100% true information.</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"233\"><br id=\"234\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading188\" class=\"heading188\"><a name=\"bookmark2\" id=\"189\" >Introduction</a><span class=\"p\" id=\"190\">:</span></h2>","pageStyleReducedContent":"<div id=\"contentheading188\" ><p  id=\"191\">Umbraco CMS is one of the CMS systems that based on asp.net which is Microsoft platform. Many developers who are familiar with one of the Microsoft platform Dot.Net languages they are interested to work with Umbraco CMS. Official web sites of Umbraco CMS claims “Umbraco CMS currently powers more than 85.000 websites worldwide”<span class=\"s3\" id=\"192\">1 </span>which is huge numbers of websites and according to Wikipedia</p><p  id=\"193\">“1000 downloads a day and top most popular downloads via the Microsoft Web Platform Installer” <span class=\"s3\" id=\"194\">2</span>.</p><p  id=\"195\">I am working with Umbraco since one and half year and had chance to work with big web project based on Umbraco CMS while I was doing my internship at Creuna.dk. When I worked with Umbraco I feel bad sometimes and good most of time. I feel bad in that sense it require lots of pre settings in order to install and set up first time as compared to other CMS like Joomla and drupal. I feel good in that sense when I finished installation and setup it worked perfectly without any problem and have great functionality, flexibility and capable to support multiple programming language.</p><p  id=\"196\">According to first paragraph and my one year of personal experience made me to conclude that Umbraco CMS is growing CMS system and will continue to grow up every year and my first choice of CMS is Umbraco. I stared to learn Umbraco from scratch before one year from school (KNORD) and still learning about Umbraco CMS. During my learning process I got very hard time to learn Umbraco CMS and still getting hard time to learn. One reason was that there was not cooked book</p><p  id=\"197\">publish<span class=\"s3\" id=\"198\">3 </span>yet about Umbraco CMS and Second reason is documentation is not</p><p  id=\"199\">enough in Umbraco official site. One reason for having not enough documentation about Umbraco could be Umbraco CMS is open source so that Creator of Umbraco CMS wants to force developers or users to pay for official published video tutorials that‟ require to pay. I was planning to provide general information and instruction material about Umbraco CMS since long time ago for beginners who want to develop his carrier as Umbraco Specialist in future.</p><p  id=\"200\"><a href=\"http://www.youtube.com/jeevan2np\" class=\"a\" target=\"_blank\" id=\"201\">I already started to share my knowledge about Umbraco CMS using video tutorials in YouTube social network sites. </a>www.youtube.com/jeevan2np is my YouTube video channel. Every week number of visitors is increasing in my videos and some visitors also commented on videos that made me happy and provided energy to look more about Umbraco CMS. All videos I had uploaded to YouTube are not professional some videos was raw video, too little information, very basic, not much about programming and little much mess with information. It was mess because I did not organize message properly on videos. I created videos about “how to install Umbraco CMS in localhost” before three month ago and have 295 views (based on date May 30, 2011)that also provided me energy to look more about Umbraco CMS.</p><p  id=\"202\">I created that video with my friends “Niraj Bana” as my final exam project for Advanced Media Technology projects.</p><p  id=\"203\">Now I am trying to provide more academic knowledge about Umbraco CMS. Going deep inside Umbraco CMS and provide basic core concept of Umbraco CMS will help a lot to new developer who want to build carrier as Umbraco Specialist in future. This Umbraco Basic “How to Umbraco” will not provide knowledge that makes readers as Umbraco Expert rather than it will show the way by providing concept in different areas of Umbraco CMS, providing guidance to developers. So after reading a digital book, developers will be able to figure out basic concept of Umbraco CMS and develop skills and knowledge to build websites in Umbraco CMS.</p><p  id=\"204\">Reading this book will provide general over view of Umbraco CMS, how Umbraco CMS works, what are the extension possibility of Umbraco CMS if it needs to extend. In this book I am looking into Umbraco API and extending Umbraco CMS in brief. I will cover basic concept of different parts of Umbraco like templates, macro and Content, 40% of this book is focused on programming for Umbraco CMS. By providing general programming knowledge of Umbraco CMS will help readers to be expert in Umbraco CMS in future and such general knowledge will work as pillar from where new developer can start to build big house.</p><p class=\"s4\"  id=\"205\">References: References date: 04/07/2011</p><p  id=\"206\"><a href=\"http://umbraco.com/get-started/case-studies/sites-running-umbraco\" class=\"a\" target=\"_blank\" id=\"207\">1: </a><a href=\"http://umbraco.com/get-started/case-studies/sites-running-umbraco\" class=\"s5\" target=\"_blank\" id=\"208\">http://umbraco.com/get-started/case-studies/sites-running-umbraco</a></p><p  id=\"209\"><br id=\"210\"></p><p  id=\"211\"><a href=\"http://labs.thesedays.com/2010/07/30/why-umbraco-suits-us/\"  target=\"_blank\" id=\"212\">Extra link about Umbraco: </a><a href=\"http://labs.thesedays.com/2010/07/30/why-umbraco-suits-us/\" class=\"s5\" target=\"_blank\" id=\"213\">http://labs.thesedays.com/2010/07/30/why-umbraco-suits- us/</a></p><p  id=\"214\"><a href=\"http://en.wikipedia.org/wiki/Umbraco\"  target=\"_blank\" id=\"215\">2: </a><a href=\"http://en.wikipedia.org/wiki/Umbraco\" class=\"s5\" target=\"_blank\" id=\"216\">http://en.wikipedia.org/wiki/Umbraco</a></p><p  id=\"217\"><br id=\"218\"></p><p  id=\"219\">3: until references date mention above.</p><p class=\"s8\"  id=\"220\">Validity or trustworthy of References<span class=\"p\" id=\"221\">:</span></p><ul id=\"l1\"><li  id=\"223\"><p  id=\"224\"><a href=\"http://blog.leekelleher.com/author/vertino/\" class=\"a\" target=\"_blank\" id=\"225\">Article was modified by Umbraco developers and most of are either Umbraco core developer team or freelance and Umbraco specialist have experience since 4 years. Most of have own blogs about Umbraco. Example Lee Kelleher </a><a href=\"http://blog.leekelleher.com/author/vertino/\" target=\"_blank\" id=\"226\">http://blog.leekelleher.com/author/vertino/</a></p></li><li  id=\"227\"><p  id=\"228\">People are discussion about why Umbraco “extra link above”. Somehow they are represents real voice coming from developer so there is place to trust.</p></li><li  id=\"229\"><p  id=\"230\">http://www.cmsmatrix.org/ is one organization that provides comparison of different web site CMS. It is also possible to compare more than two CMS at a time.</p></li><li  id=\"231\"><p  id=\"232\">http://www.cmsmatrix.org/ has list of almost all available CMS. Information may not reliable for example Umbraco is Free CMS but it shows 30Euro + VAT per domain. We can use this site as to get ideas but should not be use as guarantee or 100% true information.</p></li></ul><p  id=\"233\"><br id=\"234\"></p></div>","sub":[]},{"pageId":"4","pageLevel":0,"pageOrder":"4","pageParentId":"-1","pageName":"Scope:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 13pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading235\" class=\"heading235\"><a name=\"bookmark3\" id=\"236\" style=\"color: lime;\">Scope</a><span class=\"h4\" id=\"237\">:</span></h2>","pageContent":"<div id=\"contentheading235\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"238\">In this “How to Umbraco” book I will look into major parts of Umbraco CMS and provide knowledge of its core concept. Here is will address these issues.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"239\"><br id=\"240\"></p><ol id=\"l2\"><li style=\"padding-left: 24pt;text-indent: -18pt;text-align: justify;\" id=\"242\"><h4 style=\"display: inline;\" id=\"243\"><a name=\"a1\" id=\"244\">Umbraco requirements</a></h4></li><li style=\"padding-top: 6pt;padding-left: 24pt;text-indent: -18pt;text-align: justify;\" id=\"245\"><h4 style=\"display: inline;\" id=\"246\">Installation</h4></li><li style=\"padding-top: 6pt;padding-left: 24pt;text-indent: -18pt;text-align: justify;\" id=\"247\"><h4 style=\"display: inline;\" id=\"248\">Umbraco Core Concept</h4><ul id=\"l3\"><li style=\"padding-top: 6pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"250\"><p style=\"display: inline;\" id=\"251\">Developer will understand, its core concept.</p></li></ul></li><li style=\"padding-top: 5pt;padding-left: 24pt;text-indent: -18pt;text-align: justify;\" id=\"252\"><h4 style=\"display: inline;\" id=\"253\"><a name=\"a2\" id=\"254\">Document Types:</a></h4><ul id=\"l4\"><li style=\"padding-top: 6pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"256\"><p style=\"display: inline;\" id=\"257\">Understanding of Create, use, apply Document Types and its API</p></li></ul></li><li style=\"padding-top: 5pt;padding-left: 24pt;text-indent: -18pt;text-align: justify;\" id=\"258\"><h4 style=\"display: inline;\" id=\"259\"><a name=\"a3\" id=\"260\">Templates</a></h4><ul id=\"l5\"><li style=\"padding-top: 6pt;padding-left: 60pt;text-indent: -18pt;line-height: 140%;text-align: left;\" id=\"262\"><p style=\"display: inline;\" id=\"263\">Understand concept of templates, create, render content, extending templates using Macros and xslt.</p></li></ul></li><li style=\"padding-top: 1pt;padding-left: 24pt;text-indent: -18pt;text-align: justify;\" id=\"264\"><h4 style=\"display: inline;\" id=\"265\"><a name=\"a4\" id=\"266\">Macros</a></h4><ul id=\"l6\"><li style=\"padding-top: 6pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"268\"><p style=\"display: inline;\" id=\"269\">Concept of macros and use it.</p></li></ul></li><li style=\"padding-top: 5pt;padding-left: 24pt;text-indent: -18pt;text-align: justify;\" id=\"270\"><h4 style=\"display: inline;\" id=\"271\"><a name=\"a5\" id=\"272\">XSLT</a></h4><ul id=\"l7\"><li style=\"padding-top: 6pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"274\"><p style=\"display: inline;\" id=\"275\">Overview of xslt, use it, extend xslt using .net class</p></li></ul></li><li style=\"padding-top: 5pt;padding-left: 24pt;text-indent: -18pt;text-align: justify;\" id=\"276\"><h4 style=\"display: inline;\" id=\"277\"><a name=\"a6\" id=\"278\">Content</a></h4><ul id=\"l8\"><li style=\"padding-top: 6pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"280\"><p style=\"display: inline;\" id=\"281\">Create content based on DocumentType, save, publish and delete</p></li></ul></li><li style=\"padding-top: 5pt;padding-left: 24pt;text-indent: -18pt;text-align: justify;\" id=\"282\"><h4 style=\"display: inline;\" id=\"283\"><a name=\"a7\" id=\"284\">User Control:</a></h4></li><li style=\"padding-top: 6pt;padding-left: 27pt;text-indent: -21pt;text-align: justify;\" id=\"285\"><h4 style=\"display: inline;\" id=\"286\">Database</h4><ul id=\"l9\"><li style=\"padding-top: 6pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"288\"><p style=\"display: inline;\" id=\"289\">Insert data into Database</p></li><li style=\"padding-top: 5pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"290\"><p style=\"display: inline;\" id=\"291\">Fetch data from Database</p></li></ul></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"292\"><br id=\"293\"></p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"294\">These are list of my focused area. It does not mean that it covers or represents whole Umbraco CMS. Umbraco is very huge. It‟s only covers basic Umbraco. basic Umbraco can be varying from developer to developer. In my assumption by having knowledge in above, understanding, using it will be enough to make simple websites that I am going to develop along with this book as a case “online Vcard generator”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"295\"><br id=\"296\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading235\" class=\"heading235\"><a name=\"bookmark3\" id=\"236\" >Scope</a><span class=\"h4\" id=\"237\">:</span></h2>","pageStyleReducedContent":"<div id=\"contentheading235\" ><p  id=\"238\">In this “How to Umbraco” book I will look into major parts of Umbraco CMS and provide knowledge of its core concept. Here is will address these issues.</p><p  id=\"239\"><br id=\"240\"></p><ol id=\"l2\"><li  id=\"242\"><h4  id=\"243\"><a name=\"a1\" id=\"244\">Umbraco requirements</a></h4></li><li  id=\"245\"><h4  id=\"246\">Installation</h4></li><li  id=\"247\"><h4  id=\"248\">Umbraco Core Concept</h4><ul id=\"l3\"><li  id=\"250\"><p  id=\"251\">Developer will understand, its core concept.</p></li></ul></li><li  id=\"252\"><h4  id=\"253\"><a name=\"a2\" id=\"254\">Document Types:</a></h4><ul id=\"l4\"><li  id=\"256\"><p  id=\"257\">Understanding of Create, use, apply Document Types and its API</p></li></ul></li><li  id=\"258\"><h4  id=\"259\"><a name=\"a3\" id=\"260\">Templates</a></h4><ul id=\"l5\"><li  id=\"262\"><p  id=\"263\">Understand concept of templates, create, render content, extending templates using Macros and xslt.</p></li></ul></li><li  id=\"264\"><h4  id=\"265\"><a name=\"a4\" id=\"266\">Macros</a></h4><ul id=\"l6\"><li  id=\"268\"><p  id=\"269\">Concept of macros and use it.</p></li></ul></li><li  id=\"270\"><h4  id=\"271\"><a name=\"a5\" id=\"272\">XSLT</a></h4><ul id=\"l7\"><li  id=\"274\"><p  id=\"275\">Overview of xslt, use it, extend xslt using .net class</p></li></ul></li><li  id=\"276\"><h4  id=\"277\"><a name=\"a6\" id=\"278\">Content</a></h4><ul id=\"l8\"><li  id=\"280\"><p  id=\"281\">Create content based on DocumentType, save, publish and delete</p></li></ul></li><li  id=\"282\"><h4  id=\"283\"><a name=\"a7\" id=\"284\">User Control:</a></h4></li><li  id=\"285\"><h4  id=\"286\">Database</h4><ul id=\"l9\"><li  id=\"288\"><p  id=\"289\">Insert data into Database</p></li><li  id=\"290\"><p  id=\"291\">Fetch data from Database</p></li></ul></li></ol><p  id=\"292\"><br id=\"293\"></p><p  id=\"294\">These are list of my focused area. It does not mean that it covers or represents whole Umbraco CMS. Umbraco is very huge. It‟s only covers basic Umbraco. basic Umbraco can be varying from developer to developer. In my assumption by having knowledge in above, understanding, using it will be enough to make simple websites that I am going to develop along with this book as a case “online Vcard generator”.</p><p  id=\"295\"><br id=\"296\"></p></div>","sub":[]},{"pageId":"12","pageLevel":0,"pageOrder":"12","pageParentId":"-1","pageName":"Online Vcard Generator website as a CASE","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 11pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading297\" class=\"heading297\"><a name=\"bookmark4\" id=\"298\" style=\"color: lime;\">Online Vcard Generator website as a CASE</a></h2>","pageContent":"<div id=\"contentheading297\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"299\"><br id=\"300\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"301\">Vcard is one part of Microformat and semantic web. In one sentence semantic web make websites or web content for human first and machine second. Using Vcard we can make it possible to read our content by human so machine will not only read content as binary format or characters it can understand like people, address, age, email etc.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"302\">I use Vcard generator as a case to demonstrate Umbraco Basic, it‟s a good practice for developer to make semantic web.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"303\"><br id=\"304\"></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"305\">Scope of Vcard generator:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"306\"><br id=\"307\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"308\">It will be basic but will contain core concept. By providing personal information like name, email, address, phone and image. It will generate Vcard based on personal information and will received attached Email. See visual diagram bellow Vcard can easily read by many applications for example Firefox browser extension “Operator”, Microsoft Outlook and other mobile devices.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"309\"><br id=\"310\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"311\"><br id=\"312\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"313\"><span id=\"314\"><img width=\"516\" height=\"305\" alt=\"image\" src=\"Image_003.png\" id=\"315\"></span></p><p class=\"s9\" style=\"padding-left: 62pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"316\">Websites: input <span style=\" color: #000;\" id=\"317\">First Name: Jivan Last Name: Thapa Title: Student Email:</span></p><p class=\"s10\" style=\"padding-left: 62pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"318\">jeevan_2np@yahoo.com Phone No: 12345678 Address: Bispeparken xx KBH NV 2400</p><p class=\"s10\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"319\">Image:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"320\"><br id=\"321\"></p><p class=\"s12\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"322\">Process in Server</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"323\"><br id=\"324\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"325\">… Generate Vcard</p><p style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"326\">.......</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"327\"><br id=\"328\"></p><p class=\"s12\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"329\">Send</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"330\"><br id=\"331\"></p><p style=\"padding-left: 25pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"332\">Send email including Vcard Attach</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"333\"><br id=\"334\"></p><p style=\"padding-left: 73pt;text-indent: 0pt;line-height: 6pt;text-align: left;\" id=\"335\"><span id=\"336\"><img width=\"353\" height=\"8\" alt=\"image\" src=\"Image_004.png\" id=\"337\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"338\"><br id=\"339\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading297\" class=\"heading297\"><a name=\"bookmark4\" id=\"298\" >Online Vcard Generator website as a CASE</a></h2>","pageStyleReducedContent":"<div id=\"contentheading297\" ><p  id=\"299\"><br id=\"300\"></p><p  id=\"301\">Vcard is one part of Microformat and semantic web. In one sentence semantic web make websites or web content for human first and machine second. Using Vcard we can make it possible to read our content by human so machine will not only read content as binary format or characters it can understand like people, address, age, email etc.</p><p  id=\"302\">I use Vcard generator as a case to demonstrate Umbraco Basic, it‟s a good practice for developer to make semantic web.</p><p  id=\"303\"><br id=\"304\"></p><p  id=\"305\">Scope of Vcard generator:</p><p  id=\"306\"><br id=\"307\"></p><p  id=\"308\">It will be basic but will contain core concept. By providing personal information like name, email, address, phone and image. It will generate Vcard based on personal information and will received attached Email. See visual diagram bellow Vcard can easily read by many applications for example Firefox browser extension “Operator”, Microsoft Outlook and other mobile devices.</p><p  id=\"309\"><br id=\"310\"></p><p  id=\"311\"><br id=\"312\"></p><p  id=\"313\"><span id=\"314\"><img width=\"516\" height=\"305\" alt=\"image\" src=\"Image_003.png\" id=\"315\"></span></p><p class=\"s9\"  id=\"316\">Websites: input <span  id=\"317\">First Name: Jivan Last Name: Thapa Title: Student Email:</span></p><p class=\"s10\"  id=\"318\">jeevan_2np@yahoo.com Phone No: 12345678 Address: Bispeparken xx KBH NV 2400</p><p class=\"s10\"  id=\"319\">Image:</p><p  id=\"320\"><br id=\"321\"></p><p class=\"s12\"  id=\"322\">Process in Server</p><p  id=\"323\"><br id=\"324\"></p><p  id=\"325\">… Generate Vcard</p><p  id=\"326\">.......</p><p  id=\"327\"><br id=\"328\"></p><p class=\"s12\"  id=\"329\">Send</p><p  id=\"330\"><br id=\"331\"></p><p  id=\"332\">Send email including Vcard Attach</p><p  id=\"333\"><br id=\"334\"></p><p  id=\"335\"><span id=\"336\"><img width=\"353\" height=\"8\" alt=\"image\" src=\"Image_004.png\" id=\"337\"></span></p><p  id=\"338\"><br id=\"339\"></p></div>","sub":[]},{"pageId":"13","pageLevel":0,"pageOrder":"13","pageParentId":"-1","pageName":"What I excluded from.","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading340\" class=\"heading340\"><a name=\"bookmark5\" id=\"341\" style=\"color: lime;\">What I excluded from.</a></h2>","pageContent":"<div id=\"contentheading340\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"342\"><br id=\"343\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"344\">There are many important things which are also part of while project, but I decided not to include here. Reason is these are not focused topic of this book.</p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"345\"><a name=\"a8\" id=\"346\">Visual parts:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"347\"><br id=\"348\"></p><ul id=\"l10\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"350\"><p style=\"display: inline;\" id=\"351\">Visual designs of websites are very important because these represent whole company, its identity, goal and target group. Without visual design it will be hard to communicate with target groups and marketing purpose.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"352\"><p style=\"display: inline;\" id=\"353\">Web design process is not single process there are many steps for example concept, scratch, web grid, prototype design, testing etc.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"354\"><p style=\"display: inline;\" id=\"355\">Even though these processes are important I decided not to include here because of not focused topic of this book.</p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"356\"><a name=\"a9\" id=\"357\">Programming languages:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"358\"><br id=\"359\"></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"360\"><p style=\"display: inline;\" id=\"361\">In this Umbraco CMS basic book I use C# language. I am not going to explain my code in depth here so reader should be able to understand C# code and use it when it necessary. For example Class, static class, abstract class, modifier, methods, References, Web services, operators, logic, type and namespaces.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"362\"><p style=\"display: inline;\" id=\"363\">Database is very important to store data. I am using sql server so it is necessary to know about basic sql server for example create account, setup permission, create database, backup and restore.</p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"364\"><a name=\"a10\" id=\"365\">Client side programming languages:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"366\"><br id=\"367\"></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"368\"><p style=\"display: inline;\" id=\"369\">It may necessary to understand about CSS, Jquery, JavaScript and cross browser problem. I am using CSS, client side programming languages to present content nicely and to control more at client sides. These are also important but I will not cover because it‟s an out of focused topic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"370\"><br id=\"371\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"372\"><a name=\"a11\" id=\"373\">Umbraco hosting:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"374\"><br id=\"375\"></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"376\"><p style=\"display: inline;\" id=\"377\">Once web site is complete it is necessary to host. In my personal word I say “local to live process”. I called first local because we develop websites locally and when its works and bug fixed than I move it to live server where end users are browsing websites.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"378\"><p style=\"display: inline;\" id=\"379\">To make Umbraco happy to run without any problem there are few requirements. Not all windows server hosting provider supports Umbraco CMS so it is also big topic. One major thing is if you are planning to buy hosting provides for Umbraco make sure hosting provides should have “plesk” features.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"380\"><p style=\"display: inline;\" id=\"381\">I also skip these parts but I will include in brief in “requirements topics”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"382\"><br id=\"383\"></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"384\"><a name=\"a12\" id=\"385\">Comparison of different CMS System</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"386\"><br id=\"387\"></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"388\"><p style=\"display: inline;\" id=\"389\">In a digital book, I did not mention about Umbraco CMS and others CMS. For example why do we need to choose Umbraco CMS? What are the advantages and disadvantages of using Umbraco CMS as compared to other CMS? Developer do not chose CMS accidently to build professional or clients web sites so almost all developers made comparison between different CMS system based on their or/and clients requirements before they go to use it. In general, how to choose right CMS for your web sites? Can be discuss as new whole topics and can be very big task if we go more dipper about choosing right CMS among 100 systems, its need to have concrete ideas in order to choose right CMS. I did not include in this report about choosing right CMS because my understanding or assumption is that you as a readers already decided to go with Umbraco CMS and ready to build websites using Umbraco CMS.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"390\"><a name=\"a13\" id=\"391\">Search Engine Optimization:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"392\"><br id=\"393\"></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"394\"><p style=\"display: inline;\" id=\"395\">Million of websites exist in world. If nobody uses your websites than what‟s a meaning of existing it? How people will find your websites among millions?</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"396\"><p style=\"display: inline;\" id=\"397\">Optimizing websites for search engine will help to find users about your websites. This can be very huge topic but I skipped here because of not focused topic in this project.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"398\"><br id=\"399\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"400\"><a name=\"a14\" id=\"401\">Umbraco different section:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"402\"><br id=\"403\"></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"404\"><p style=\"display: inline;\" id=\"405\">There are many different section or categories inside Umbraco CMS for example</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"406\"><p style=\"display: inline;\" id=\"407\">Language: this is used to make your site in more than one language.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 93%;text-align: justify;\" id=\"408\"><p style=\"display: inline;\" id=\"409\">Cache: performances are always accountable. Umbraco Cache section will provide cache items to better performance of websites.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"410\"><p style=\"display: inline;\" id=\"411\">Packages: this section contains list of installed packages, uninstall packages remove packages and create packages. Package is like “extension”, plug-in etc.</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"412\"><br id=\"413\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading340\" class=\"heading340\"><a name=\"bookmark5\" id=\"341\" >What I excluded from.</a></h2>","pageStyleReducedContent":"<div id=\"contentheading340\" ><p  id=\"342\"><br id=\"343\"></p><p  id=\"344\">There are many important things which are also part of while project, but I decided not to include here. Reason is these are not focused topic of this book.</p><h4  id=\"345\"><a name=\"a8\" id=\"346\">Visual parts:</a></h4><p  id=\"347\"><br id=\"348\"></p><ul id=\"l10\"><li  id=\"350\"><p  id=\"351\">Visual designs of websites are very important because these represent whole company, its identity, goal and target group. Without visual design it will be hard to communicate with target groups and marketing purpose.</p></li><li  id=\"352\"><p  id=\"353\">Web design process is not single process there are many steps for example concept, scratch, web grid, prototype design, testing etc.</p></li><li  id=\"354\"><p  id=\"355\">Even though these processes are important I decided not to include here because of not focused topic of this book.</p><h4  id=\"356\"><a name=\"a9\" id=\"357\">Programming languages:</a></h4><p  id=\"358\"><br id=\"359\"></p></li><li  id=\"360\"><p  id=\"361\">In this Umbraco CMS basic book I use C# language. I am not going to explain my code in depth here so reader should be able to understand C# code and use it when it necessary. For example Class, static class, abstract class, modifier, methods, References, Web services, operators, logic, type and namespaces.</p></li><li  id=\"362\"><p  id=\"363\">Database is very important to store data. I am using sql server so it is necessary to know about basic sql server for example create account, setup permission, create database, backup and restore.</p><h4  id=\"364\"><a name=\"a10\" id=\"365\">Client side programming languages:</a></h4><p  id=\"366\"><br id=\"367\"></p></li><li  id=\"368\"><p  id=\"369\">It may necessary to understand about CSS, Jquery, JavaScript and cross browser problem. I am using CSS, client side programming languages to present content nicely and to control more at client sides. These are also important but I will not cover because it‟s an out of focused topic.</p><p  id=\"370\"><br id=\"371\"></p><h4  id=\"372\"><a name=\"a11\" id=\"373\">Umbraco hosting:</a></h4><p  id=\"374\"><br id=\"375\"></p></li><li  id=\"376\"><p  id=\"377\">Once web site is complete it is necessary to host. In my personal word I say “local to live process”. I called first local because we develop websites locally and when its works and bug fixed than I move it to live server where end users are browsing websites.</p></li><li  id=\"378\"><p  id=\"379\">To make Umbraco happy to run without any problem there are few requirements. Not all windows server hosting provider supports Umbraco CMS so it is also big topic. One major thing is if you are planning to buy hosting provides for Umbraco make sure hosting provides should have “plesk” features.</p></li><li  id=\"380\"><p  id=\"381\">I also skip these parts but I will include in brief in “requirements topics”</p><p  id=\"382\"><br id=\"383\"></p><h4  id=\"384\"><a name=\"a12\" id=\"385\">Comparison of different CMS System</a></h4><p  id=\"386\"><br id=\"387\"></p></li><li  id=\"388\"><p  id=\"389\">In a digital book, I did not mention about Umbraco CMS and others CMS. For example why do we need to choose Umbraco CMS? What are the advantages and disadvantages of using Umbraco CMS as compared to other CMS? Developer do not chose CMS accidently to build professional or clients web sites so almost all developers made comparison between different CMS system based on their or/and clients requirements before they go to use it. In general, how to choose right CMS for your web sites? Can be discuss as new whole topics and can be very big task if we go more dipper about choosing right CMS among 100 systems, its need to have concrete ideas in order to choose right CMS. I did not include in this report about choosing right CMS because my understanding or assumption is that you as a readers already decided to go with Umbraco CMS and ready to build websites using Umbraco CMS.</p><h4  id=\"390\"><a name=\"a13\" id=\"391\">Search Engine Optimization:</a></h4><p  id=\"392\"><br id=\"393\"></p></li><li  id=\"394\"><p  id=\"395\">Million of websites exist in world. If nobody uses your websites than what‟s a meaning of existing it? How people will find your websites among millions?</p></li><li  id=\"396\"><p  id=\"397\">Optimizing websites for search engine will help to find users about your websites. This can be very huge topic but I skipped here because of not focused topic in this project.</p><p  id=\"398\"><br id=\"399\"></p><h4  id=\"400\"><a name=\"a14\" id=\"401\">Umbraco different section:</a></h4><p  id=\"402\"><br id=\"403\"></p></li><li  id=\"404\"><p  id=\"405\">There are many different section or categories inside Umbraco CMS for example</p></li><li  id=\"406\"><p  id=\"407\">Language: this is used to make your site in more than one language.</p></li><li  id=\"408\"><p  id=\"409\">Cache: performances are always accountable. Umbraco Cache section will provide cache items to better performance of websites.</p></li><li  id=\"410\"><p  id=\"411\">Packages: this section contains list of installed packages, uninstall packages remove packages and create packages. Package is like “extension”, plug-in etc.</p></li></ul><p  id=\"412\"><br id=\"413\"></p></div>","sub":[]},{"pageId":"21","pageLevel":0,"pageOrder":"21","pageParentId":"-1","pageName":"How I Structured Book.","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 13pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading414\" class=\"heading414\"><a name=\"bookmark6\" id=\"415\" style=\"color: lime;\">How I Structured Book.</a></h2>","pageContent":"<div id=\"contentheading414\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"416\"><br id=\"417\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"418\">Every people organized their stuff on their own style because it‟s a generation of customization. We customize things to fit our needs and satisfaction. When we customize things sometimes it makes difficult for other to understand. I am using some word here that can be understood in different meanings so here I explain what does it mean that if I use some common words.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"419\"><br id=\"420\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"421\">Frontend: it‟s all about visual presentation of content to end users where end user makes interaction and involved in different transaction.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"422\"><br id=\"423\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"424\"><a href=\"http://www.jeevanthapa.com/umbraco/\" class=\"a\" target=\"_blank\" id=\"425\">Backend: administration area where developer, Editor, Creator, Publisher and Administrator use to get access to Create, Delete, Update and Read using browser. Here browser is important means all person who have access to control panel of Websites via browser is Backend. In Umbraco backend can be found using domain name and “/Umbraco/” will redirect to backend where user must provide authentication. Example </a>www.jeevanthapa.com/umbraco/ will redirect to Backend.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"426\"><br id=\"427\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"428\">CodeInProject: This is new I created to fit in my context. Let say if I create custom class “image.cs” into visual studio project to add extra function or to extend XSLT, I say create “image.cs” in CodeInProject. Adding extra features to extend Umbraco websites using Class, Usercontrol, webservices etc are define as CodeInProject in my context and these are not possible to create using BackEnd of Umbraco sites. For example we can add .xslt file using Backend of Umbraco Sites but we can‟t create file like Test.cs using Backend.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"429\"><br id=\"430\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"431\">Security: extending Umbraco CMS using .NET is not only to add extra feature, it will also make Umbraco CMS venerable to hackers. So I add Security topic to add extra features by explaining how to secure extension from hackers, this topic will be only included in extension of Class, usercontrols and webservices. Here I only included Cross Site Script and SQL injections.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"432\"><br id=\"433\"></p><h4 style=\"padding-top: 10pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"434\"><a name=\"a15\" id=\"435\">Abbreviations:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"436\"><br id=\"437\"></p><p style=\"padding-top: 10pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"438\">I have used abbreviation in many places to reduce typing and spaces.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"439\"><br id=\"440\"></p><table style=\"border-collapse:collapse;margin-left:5.024pt\" cellspacing=\"0\" id=\"441\"><tbody id=\"442\"><tr style=\"height:20pt\" id=\"443\"><td style=\"width:182pt\" id=\"444\"><p class=\"s13\" style=\"padding-left: 10pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"445\">Short Form</p></td><td style=\"width:290pt\" id=\"446\"><p class=\"s13\" style=\"padding-left: 57pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"447\">Real Form</p></td></tr><tr style=\"height:26pt\" id=\"448\"><td style=\"width:182pt\" id=\"449\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"450\">CMS</p></td><td style=\"width:290pt\" id=\"451\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;text-indent: 0pt;text-align: left;\" id=\"452\">Content Management System</p></td></tr><tr style=\"height:26pt\" id=\"453\"><td style=\"width:182pt\" id=\"454\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"455\">XSS</p></td><td style=\"width:290pt\" id=\"456\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;text-indent: 0pt;text-align: left;\" id=\"457\">Cross Site Script</p></td></tr><tr style=\"height:26pt\" id=\"458\"><td style=\"width:182pt\" id=\"459\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"460\">DocType</p></td><td style=\"width:290pt\" id=\"461\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;text-indent: 0pt;text-align: left;\" id=\"462\">Document Type</p></td></tr><tr style=\"height:26pt\" id=\"463\"><td style=\"width:182pt\" id=\"464\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"465\">Regex</p></td><td style=\"width:290pt\" id=\"466\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;text-indent: 0pt;text-align: left;\" id=\"467\">Regular Expression</p></td></tr><tr style=\"height:26pt\" id=\"468\"><td style=\"width:182pt\" id=\"469\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"470\">Temp</p></td><td style=\"width:290pt\" id=\"471\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;text-indent: 0pt;text-align: left;\" id=\"472\">Template</p></td></tr><tr style=\"height:26pt\" id=\"473\"><td style=\"width:182pt\" id=\"474\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"475\">CSS</p></td><td style=\"width:290pt\" id=\"476\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;text-indent: 0pt;text-align: left;\" id=\"477\">Cascading Style Sheet</p></td></tr><tr style=\"height:26pt\" id=\"478\"><td style=\"width:182pt\" id=\"479\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"480\">SQL</p></td><td style=\"width:290pt\" id=\"481\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;text-indent: 0pt;text-align: left;\" id=\"482\">Structure Query Language</p></td></tr><tr style=\"height:26pt\" id=\"483\"><td style=\"width:182pt\" id=\"484\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"485\">DLL / dll</p></td><td style=\"width:290pt\" id=\"486\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;text-indent: 0pt;text-align: left;\" id=\"487\">Digital Link Library</p></td></tr><tr style=\"height:26pt\" id=\"488\"><td style=\"width:182pt\" id=\"489\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"490\">URL /url</p></td><td style=\"width:290pt\" id=\"491\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;text-indent: 0pt;text-align: left;\" id=\"492\">United resource locator</p></td></tr><tr style=\"height:26pt\" id=\"493\"><td style=\"width:182pt\" id=\"494\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"495\">http /https</p></td><td style=\"width:290pt\" id=\"496\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;text-indent: 0pt;text-align: left;\" id=\"497\">Hypertext Transfer Protocol / Secure</p></td></tr><tr style=\"height:42pt\" id=\"498\"><td style=\"width:182pt\" id=\"499\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"500\">object</p></td><td style=\"width:290pt\" id=\"501\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;padding-right: 9pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"502\">Umbraco object and each object have own task. For example template.</p></td></tr><tr style=\"height:58pt\" id=\"503\"><td style=\"width:182pt\" id=\"504\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"505\">Backend / back office</p></td><td style=\"width:290pt\" id=\"506\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;padding-right: 10pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"507\">Administrator control panel. Can be access using “domain name/umbraco”. It requires user id and password.</p></td></tr><tr style=\"height:36pt\" id=\"508\"><td style=\"width:182pt\" id=\"509\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"510\">Frontend</p></td><td style=\"width:290pt\" id=\"511\"><p class=\"s14\" style=\"padding-top: 5pt;padding-left: 57pt;padding-right: 9pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"512\">Front end where end user sees  or interact with website.</p></td></tr></tbody></table><p style=\"text-indent: 0pt;text-align: left;\" id=\"513\"><br id=\"514\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"515\"><a name=\"a16\" id=\"516\">CHAPTER 01: Introduction</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"517\"><br id=\"518\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"519\"><br id=\"520\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"521\"><span id=\"522\"><img width=\"509\" height=\"1\" alt=\"image\" src=\"Image_005.png\" id=\"523\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"524\"><br id=\"525\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading414\" class=\"heading414\"><a name=\"bookmark6\" id=\"415\" >How I Structured Book.</a></h2>","pageStyleReducedContent":"<div id=\"contentheading414\" ><p  id=\"416\"><br id=\"417\"></p><p  id=\"418\">Every people organized their stuff on their own style because it‟s a generation of customization. We customize things to fit our needs and satisfaction. When we customize things sometimes it makes difficult for other to understand. I am using some word here that can be understood in different meanings so here I explain what does it mean that if I use some common words.</p><p  id=\"419\"><br id=\"420\"></p><p  id=\"421\">Frontend: it‟s all about visual presentation of content to end users where end user makes interaction and involved in different transaction.</p><p  id=\"422\"><br id=\"423\"></p><p  id=\"424\"><a href=\"http://www.jeevanthapa.com/umbraco/\" class=\"a\" target=\"_blank\" id=\"425\">Backend: administration area where developer, Editor, Creator, Publisher and Administrator use to get access to Create, Delete, Update and Read using browser. Here browser is important means all person who have access to control panel of Websites via browser is Backend. In Umbraco backend can be found using domain name and “/Umbraco/” will redirect to backend where user must provide authentication. Example </a>www.jeevanthapa.com/umbraco/ will redirect to Backend.</p><p  id=\"426\"><br id=\"427\"></p><p  id=\"428\">CodeInProject: This is new I created to fit in my context. Let say if I create custom class “image.cs” into visual studio project to add extra function or to extend XSLT, I say create “image.cs” in CodeInProject. Adding extra features to extend Umbraco websites using Class, Usercontrol, webservices etc are define as CodeInProject in my context and these are not possible to create using BackEnd of Umbraco sites. For example we can add .xslt file using Backend of Umbraco Sites but we can‟t create file like Test.cs using Backend.</p><p  id=\"429\"><br id=\"430\"></p><p  id=\"431\">Security: extending Umbraco CMS using .NET is not only to add extra feature, it will also make Umbraco CMS venerable to hackers. So I add Security topic to add extra features by explaining how to secure extension from hackers, this topic will be only included in extension of Class, usercontrols and webservices. Here I only included Cross Site Script and SQL injections.</p><p  id=\"432\"><br id=\"433\"></p><h4  id=\"434\"><a name=\"a15\" id=\"435\">Abbreviations:</a></h4><p  id=\"436\"><br id=\"437\"></p><p  id=\"438\">I have used abbreviation in many places to reduce typing and spaces.</p><p  id=\"439\"><br id=\"440\"></p><table  cellspacing=\"0\" id=\"441\"><tbody id=\"442\"><tr  id=\"443\"><td  id=\"444\"><p class=\"s13\"  id=\"445\">Short Form</p></td><td  id=\"446\"><p class=\"s13\"  id=\"447\">Real Form</p></td></tr><tr  id=\"448\"><td  id=\"449\"><p class=\"s14\"  id=\"450\">CMS</p></td><td  id=\"451\"><p class=\"s14\"  id=\"452\">Content Management System</p></td></tr><tr  id=\"453\"><td  id=\"454\"><p class=\"s14\"  id=\"455\">XSS</p></td><td  id=\"456\"><p class=\"s14\"  id=\"457\">Cross Site Script</p></td></tr><tr  id=\"458\"><td  id=\"459\"><p class=\"s14\"  id=\"460\">DocType</p></td><td  id=\"461\"><p class=\"s14\"  id=\"462\">Document Type</p></td></tr><tr  id=\"463\"><td  id=\"464\"><p class=\"s14\"  id=\"465\">Regex</p></td><td  id=\"466\"><p class=\"s14\"  id=\"467\">Regular Expression</p></td></tr><tr  id=\"468\"><td  id=\"469\"><p class=\"s14\"  id=\"470\">Temp</p></td><td  id=\"471\"><p class=\"s14\"  id=\"472\">Template</p></td></tr><tr  id=\"473\"><td  id=\"474\"><p class=\"s14\"  id=\"475\">CSS</p></td><td  id=\"476\"><p class=\"s14\"  id=\"477\">Cascading Style Sheet</p></td></tr><tr  id=\"478\"><td  id=\"479\"><p class=\"s14\"  id=\"480\">SQL</p></td><td  id=\"481\"><p class=\"s14\"  id=\"482\">Structure Query Language</p></td></tr><tr  id=\"483\"><td  id=\"484\"><p class=\"s14\"  id=\"485\">DLL / dll</p></td><td  id=\"486\"><p class=\"s14\"  id=\"487\">Digital Link Library</p></td></tr><tr  id=\"488\"><td  id=\"489\"><p class=\"s14\"  id=\"490\">URL /url</p></td><td  id=\"491\"><p class=\"s14\"  id=\"492\">United resource locator</p></td></tr><tr  id=\"493\"><td  id=\"494\"><p class=\"s14\"  id=\"495\">http /https</p></td><td  id=\"496\"><p class=\"s14\"  id=\"497\">Hypertext Transfer Protocol / Secure</p></td></tr><tr  id=\"498\"><td  id=\"499\"><p class=\"s14\"  id=\"500\">object</p></td><td  id=\"501\"><p class=\"s14\"  id=\"502\">Umbraco object and each object have own task. For example template.</p></td></tr><tr  id=\"503\"><td  id=\"504\"><p class=\"s14\"  id=\"505\">Backend / back office</p></td><td  id=\"506\"><p class=\"s14\"  id=\"507\">Administrator control panel. Can be access using “domain name/umbraco”. It requires user id and password.</p></td></tr><tr  id=\"508\"><td  id=\"509\"><p class=\"s14\"  id=\"510\">Frontend</p></td><td  id=\"511\"><p class=\"s14\"  id=\"512\">Front end where end user sees  or interact with website.</p></td></tr></tbody></table><p  id=\"513\"><br id=\"514\"></p><h1  id=\"515\"><a name=\"a16\" id=\"516\">CHAPTER 01: Introduction</a></h1><p  id=\"517\"><br id=\"518\"></p><p  id=\"519\"><br id=\"520\"></p><p  id=\"521\"><span id=\"522\"><img width=\"509\" height=\"1\" alt=\"image\" src=\"Image_005.png\" id=\"523\"></span></p><p  id=\"524\"><br id=\"525\"></p></div>","sub":[]},{"pageId":"24","pageLevel":0,"pageOrder":"24","pageParentId":"-1","pageName":"Introduction Umbraco CMS","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading526\" class=\"heading526\"><a name=\"bookmark7\" id=\"527\" style=\"color: lime;\">Introduction Umbraco CMS</a></h2>","pageContent":"<div id=\"contentheading526\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"528\">Umbraco CMS is one of the CMS based on .NET languages. C# is one optional to use in Umbraco; I am also using C# here to extend Umbraco. Umbraco provides rich text editor service out of box it‟s a mostly common things for CMS applications. What‟s new thing that Umbraco can provide? Easy and fast answer is Document Type that‟s very important feature of Umbraco many developers are looking for that in CMS application and many developer choose Umbraco because of its out of box Document Type features. That is exactly same as Content Construction Kit if we compare between Drupal and Umbraco only difference is Drupal does not have out of box Content Construction Kit feature. Document Type allows developer to add custom fields to nodes using a browser. Example can be found in “Document Type” topic.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"529\">Extending Umbraco can be done using many languages for example we can use XSLT which use Xpath languages to move cursor back and forth, can also use Python languages, Can also use .NET user control and .NET custom control. Database can be use Mysql or Microsoft base database like mssql.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"530\">Presenting content in Umbraco CMS can be complex for first time users so I will focus more on it. Templates are use to present content to end users. CSS, JavaScript, Jquery can be use in Templates without any pain.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"531\">Running multiple websites on one Umbraco installation, we can host more than one websites using single Umbraco CMS installation means Umbraco CMS can be used to create multiple websites and no need to install each time for each websites. One installation will be enough to lunch multiple sites.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"532\">Umbraco generates XML file and those files contains all published items in websites. Using xslt or .NET custom class we can fetch content and render to templates to present content as HTML format, Umbraco is amazing software and fun to work with Umbraco. Let‟s get start.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"533\"><br id=\"534\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading526\" class=\"heading526\"><a name=\"bookmark7\" id=\"527\" >Introduction Umbraco CMS</a></h2>","pageStyleReducedContent":"<div id=\"contentheading526\" ><p  id=\"528\">Umbraco CMS is one of the CMS based on .NET languages. C# is one optional to use in Umbraco; I am also using C# here to extend Umbraco. Umbraco provides rich text editor service out of box it‟s a mostly common things for CMS applications. What‟s new thing that Umbraco can provide? Easy and fast answer is Document Type that‟s very important feature of Umbraco many developers are looking for that in CMS application and many developer choose Umbraco because of its out of box Document Type features. That is exactly same as Content Construction Kit if we compare between Drupal and Umbraco only difference is Drupal does not have out of box Content Construction Kit feature. Document Type allows developer to add custom fields to nodes using a browser. Example can be found in “Document Type” topic.</p><p  id=\"529\">Extending Umbraco can be done using many languages for example we can use XSLT which use Xpath languages to move cursor back and forth, can also use Python languages, Can also use .NET user control and .NET custom control. Database can be use Mysql or Microsoft base database like mssql.</p><p  id=\"530\">Presenting content in Umbraco CMS can be complex for first time users so I will focus more on it. Templates are use to present content to end users. CSS, JavaScript, Jquery can be use in Templates without any pain.</p><p  id=\"531\">Running multiple websites on one Umbraco installation, we can host more than one websites using single Umbraco CMS installation means Umbraco CMS can be used to create multiple websites and no need to install each time for each websites. One installation will be enough to lunch multiple sites.</p><p  id=\"532\">Umbraco generates XML file and those files contains all published items in websites. Using xslt or .NET custom class we can fetch content and render to templates to present content as HTML format, Umbraco is amazing software and fun to work with Umbraco. Let‟s get start.</p><p  id=\"533\"><br id=\"534\"></p></div>","sub":[]},{"pageId":"25","pageLevel":0,"pageOrder":"25","pageParentId":"-1","pageName":"How Umbraco Works?","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading535\" class=\"heading535\"><a name=\"bookmark8\" id=\"536\" style=\"color: lime;\">How Umbraco Works?</a></h2>","pageContent":"<div id=\"contentheading535\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 35pt;line-height: 114%;text-align: justify;\" id=\"537\">Core concept of Umbraco and its working principle are unique id and alias. Each object inside Umbraco CMS has unique identification and defined as NodeId. In general Umbraco CMS has its rules to crate NodeId. NodeId is defined as Integer in technical term and in general term it‟s a numbers like 1234 and can be also negative. All NodeId start with negative value is out of box items and assign by Umbraco in installation period or it‟s build in value.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"538\"><br id=\"539\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading540\" class=\"heading540\"><a name=\"bookmark9\" id=\"541\" style=\"color: green;\">Node Id:</a></h3><div id=\"contentheading540\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"542\">When we add object in Umbraco site for example document type, templates or content, article or even when we upload Image, files, and video etc will assign value by Umbraco as Node Id, until now node id is based on four digit numbers like xxxx and it‟s a unique and never repeated node id. Using node id we can easily control object, we can fetch object based on node id and perform additional work on that object. Note that NodeId will not change when we update object.</p></div><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading543\" class=\"heading543\"><a name=\"bookmark10\" id=\"544\" style=\"color: green;\">Alias:</a></h3><div id=\"contentheading543\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"545\">Alias is use with names. When we create object we provide name. Name is for the editor or for human. Alias is used to identify that object by programmer or by machine (Umbraco System). Umbraco do not recommend using space and symbols in alias.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"546\">Let‟s take example and be clear about Alias. If we create Macro name “Vcard Render” and alias “vcardRener”. Assume that “Vcard Render” macro will display input field like textbox for users to type name, email and other personal information. We need to use that macro in Templates to display textbox field because Umbraco only use templates to present content to end users. So we need to insert that macro into Templates in order to display input fields. In template we insert macro‟s alias; on runtime Umbraco will automatically insert content on templates to end users. This is very basic how Umbraco alias works.</p></div></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading535\" class=\"heading535\"><a name=\"bookmark8\" id=\"536\" >How Umbraco Works?</a></h2>","pageStyleReducedContent":"<div id=\"contentheading535\" ><p  id=\"537\">Core concept of Umbraco and its working principle are unique id and alias. Each object inside Umbraco CMS has unique identification and defined as NodeId. In general Umbraco CMS has its rules to crate NodeId. NodeId is defined as Integer in technical term and in general term it‟s a numbers like 1234 and can be also negative. All NodeId start with negative value is out of box items and assign by Umbraco in installation period or it‟s build in value.</p><p  id=\"538\"><br id=\"539\"></p><h3  id=\"heading540\" class=\"heading540\"><a name=\"bookmark9\" id=\"541\" >Node Id:</a></h3><div id=\"contentheading540\" ><p  id=\"542\">When we add object in Umbraco site for example document type, templates or content, article or even when we upload Image, files, and video etc will assign value by Umbraco as Node Id, until now node id is based on four digit numbers like xxxx and it‟s a unique and never repeated node id. Using node id we can easily control object, we can fetch object based on node id and perform additional work on that object. Note that NodeId will not change when we update object.</p></div><h3  id=\"heading543\" class=\"heading543\"><a name=\"bookmark10\" id=\"544\" >Alias:</a></h3><div id=\"contentheading543\" ><p  id=\"545\">Alias is use with names. When we create object we provide name. Name is for the editor or for human. Alias is used to identify that object by programmer or by machine (Umbraco System). Umbraco do not recommend using space and symbols in alias.</p><p  id=\"546\">Let‟s take example and be clear about Alias. If we create Macro name “Vcard Render” and alias “vcardRener”. Assume that “Vcard Render” macro will display input field like textbox for users to type name, email and other personal information. We need to use that macro in Templates to display textbox field because Umbraco only use templates to present content to end users. So we need to insert that macro into Templates in order to display input fields. In template we insert macro‟s alias; on runtime Umbraco will automatically insert content on templates to end users. This is very basic how Umbraco alias works.</p></div></div>","sub":[{"pageId":"26","pageLevel":1,"pageOrder":"26","pageParentId":"25","pageName":"Node Id:","endPointPath":"","pageHeading":"<h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading540\" class=\"heading540\"><a name=\"bookmark9\" id=\"541\" style=\"color: green;\">Node Id:</a></h3>","pageContent":"<div id=\"contentheading540\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"542\">When we add object in Umbraco site for example document type, templates or content, article or even when we upload Image, files, and video etc will assign value by Umbraco as Node Id, until now node id is based on four digit numbers like xxxx and it‟s a unique and never repeated node id. Using node id we can easily control object, we can fetch object based on node id and perform additional work on that object. Note that NodeId will not change when we update object.</p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading540\" class=\"heading540\"><a name=\"bookmark9\" id=\"541\" >Node Id:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading540\" ><p  id=\"542\">When we add object in Umbraco site for example document type, templates or content, article or even when we upload Image, files, and video etc will assign value by Umbraco as Node Id, until now node id is based on four digit numbers like xxxx and it‟s a unique and never repeated node id. Using node id we can easily control object, we can fetch object based on node id and perform additional work on that object. Note that NodeId will not change when we update object.</p></div>","sub":[]},{"pageId":"27","pageLevel":1,"pageOrder":"27","pageParentId":"25","pageName":"Alias:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading543\" class=\"heading543\"><a name=\"bookmark10\" id=\"544\" style=\"color: green;\">Alias:</a></h3>","pageContent":"<div id=\"contentheading543\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"545\">Alias is use with names. When we create object we provide name. Name is for the editor or for human. Alias is used to identify that object by programmer or by machine (Umbraco System). Umbraco do not recommend using space and symbols in alias.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"546\">Let‟s take example and be clear about Alias. If we create Macro name “Vcard Render” and alias “vcardRener”. Assume that “Vcard Render” macro will display input field like textbox for users to type name, email and other personal information. We need to use that macro in Templates to display textbox field because Umbraco only use templates to present content to end users. So we need to insert that macro into Templates in order to display input fields. In template we insert macro‟s alias; on runtime Umbraco will automatically insert content on templates to end users. This is very basic how Umbraco alias works.</p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading543\" class=\"heading543\"><a name=\"bookmark10\" id=\"544\" >Alias:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading543\" ><p  id=\"545\">Alias is use with names. When we create object we provide name. Name is for the editor or for human. Alias is used to identify that object by programmer or by machine (Umbraco System). Umbraco do not recommend using space and symbols in alias.</p><p  id=\"546\">Let‟s take example and be clear about Alias. If we create Macro name “Vcard Render” and alias “vcardRener”. Assume that “Vcard Render” macro will display input field like textbox for users to type name, email and other personal information. We need to use that macro in Templates to display textbox field because Umbraco only use templates to present content to end users. So we need to insert that macro into Templates in order to display input fields. In template we insert macro‟s alias; on runtime Umbraco will automatically insert content on templates to end users. This is very basic how Umbraco alias works.</p></div>","sub":[]}]},{"pageId":"28","pageLevel":0,"pageOrder":"28","pageParentId":"-1","pageName":"Basic Requirements:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading547\" class=\"heading547\"><a name=\"bookmark11\" id=\"548\" style=\"color: lime;\">Basic Requirements:</a></h2>","pageContent":"<div id=\"contentheading547\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"549\">Here I listed basic requirements that need to run and extend Umbraco cms.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"550\"><br id=\"551\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"552\">Server: <span class=\"p\" id=\"553\">IIS 7 or later version. You can download IIS7 or newer version in your windows 7 Machine and install to work with Umbraco locally. If you want to go live you have to buy server or windows web hosting where you can upload final Umbraco files.</span></h4><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"554\">Umbraco needs special file setup permission so when you buy server make sure they support Umbraco installation or ask if they have IT support to install Umbraco and made decision. Based on my experience never buy web spaces before considering several questions for example</p><ul id=\"l11\"><li style=\"padding-top: 9pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"556\"><p style=\"display: inline;\" id=\"557\">Does hosting provider have windows server?</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"558\"><p style=\"display: inline;\" id=\"559\">Does hosting provider have “Plesk” features; plesk is used to set up file permission?</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"560\"><p style=\"display: inline;\" id=\"561\">Is mssql or mysql database available?</p><p style=\"padding-top: 11pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"562\">If answer is “Yes” considers it is green signal to buy it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"563\"><br id=\"564\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"565\">Database: <span class=\"p\" id=\"566\">Umbraco cms need database to store data because its better way to mange content and Umbraco also needs database to store node id, alias or other object except files. Files are located at server hard drive. Umbraco is user friendly so you can choose mssql or mysql database. It supports any one of two databases and in most of case windows hosting provider have mssql database installed. I recommend using sql express edition for your local machine. You can download it from Microsoft official sites it‟s a free and try Umbraco locally first before deploying to live server.</span></h4><h4 style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"567\">Additional Software: <span class=\"p\" id=\"568\">by having windows operating system, IIS server, database will not be enough for Umbraco so needs more software to install. .NET framework version 4 and Ajax is necessary to run Umbraco. Web hosting provider already installed this software for you but you can ask them to verify it. For your local machine you have to install .NET Framework version 4 and Ajax before start Umbraco installation.</span></h4><h4 style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"569\">Visual Studio: <span class=\"p\" id=\"570\">It is great software ever for me as a programmer. It‟s very powerful IDE (integrated Development Environment) software that provides by Microsoft. It‟s quite expensive software and use to program all Microsoft based applications like console application, windows application, web application etc. for Umbraco cms project you can download from Microsoft as trail version and use it for 3 months. Three month will be enough to complete this project called “online Vcard” and for your later purposes you can buy it from Microsoft.</span></h4><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"571\">Visual studio is not necessary if you do not use .NET to extend Umbraco sites. But for my purpose I am going to show developers how to use .NET class to extend Umbraco so visual studio requires to create .NET class. If you are building basic websites Visual Studio may not be necessary because Umbraco has many features that can achieved by XSLT, XSLT can be edited inside Umbraco using BackEnd of Umbraco sites.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"572\">We can also use other open source software like notepad++ but these are simple text editor so it is very difficult to program in simple text editor. This software does not have features like visual studio.</p><p class=\"s8\" style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"573\">Which visual studio?</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"574\"><br id=\"575\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"576\">There are three different types of visual studio:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"577\"><br id=\"578\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"579\"><p style=\"display: inline;\" id=\"580\">Express</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"581\"><p style=\"display: inline;\" id=\"582\">Professional</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"583\"><p style=\"display: inline;\" id=\"584\">Ultimate</p></li></ul><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"585\">I recommend using visual Studio 2010 if you have, but if you have 2005 or 2008 it will be enough, no need to upgrade it just for this “Online Vcard Project”. If you are planning to download Visual Studio, I recommend downloading visual studio 2011 ultimate because it has great features.</p><p class=\"s8\" style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"586\">Get Visual Studio Free: <span class=\"p\" id=\"587\">you can use express edition for free provided by Microsoft, there is difference between Express and Ultimate visual studio. If you want to know difference you can easily go to official site and compare different edition of Visual Studio. If you do not want to buy visual studio Ultimate after 3 month of Trail Period you can easily download Express Edition without any cost and use it for free.</span></p><p class=\"s15\" style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"588\">References and Download <span class=\"s16\" id=\"589\">Taken date April 12, 2011 Umbraco system requirements</span></p><p class=\"s16\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"590\">http://our.umbraco.org/wiki/recommendations/recommended-reading-for-it-administrators/minimum-system- requirements</p><p class=\"s16\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"591\"><a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=9cfb2d51-5ff4-4491-b0e5-\" class=\"s17\" target=\"_blank\" id=\"592\">Download Ajax and .net framework 4 </a>http://www.microsoft.com/downloads/en/details.aspx?FamilyID=9cfb2d51-5ff4-4491-b0e5- b386f32c0992&amp;displaylang=en</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"593\"><a href=\"http://www.asp.net/ajaxlibrary/download.ashx\" class=\"s17\" target=\"_blank\" id=\"594\">Ajax latest version </a><a href=\"http://www.microsoft.com/express/Database/\" class=\"s17\" target=\"_blank\" id=\"595\">http://www.asp.net/ajaxlibrary/download.ashx sql express </a><a href=\"http://www.microsoft.com/visualstudio/en-us/try\" class=\"s17\" target=\"_blank\" id=\"596\">http://www.microsoft.com/express/Database/ Visual studio </a><a href=\"http://www.iis.net/download\" class=\"s17\" target=\"_blank\" id=\"597\">http://www.microsoft.com/visualstudio/en-us/try IIS server latest version http://www.iis.net/download</a></p><p class=\"s16\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"598\">Notepad ++</p><p class=\"s16\" style=\"padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"599\">http://notepad-plus-plus.org/download <a href=\"http://www.microsoft.com/express/Downloads/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: bold; text-decoration: none; font-size: 9pt;\" target=\"_blank\" id=\"600\">Download Free Express Edition </a><a href=\"http://www.microsoft.com/express/Downloads/\" class=\"s17\" target=\"_blank\" id=\"601\">http://www.microsoft.com/express/Downloads/</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"602\"><br id=\"603\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"604\"><a name=\"a17\" id=\"605\">Chapter 02: Installation</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"606\"><br id=\"607\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"608\"><br id=\"609\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"610\"><span id=\"611\"><img width=\"466\" height=\"1\" alt=\"image\" src=\"Image_006.png\" id=\"612\"></span></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading547\" class=\"heading547\"><a name=\"bookmark11\" id=\"548\" >Basic Requirements:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading547\" ><p  id=\"549\">Here I listed basic requirements that need to run and extend Umbraco cms.</p><p  id=\"550\"><br id=\"551\"></p><h4  id=\"552\">Server: <span class=\"p\" id=\"553\">IIS 7 or later version. You can download IIS7 or newer version in your windows 7 Machine and install to work with Umbraco locally. If you want to go live you have to buy server or windows web hosting where you can upload final Umbraco files.</span></h4><p  id=\"554\">Umbraco needs special file setup permission so when you buy server make sure they support Umbraco installation or ask if they have IT support to install Umbraco and made decision. Based on my experience never buy web spaces before considering several questions for example</p><ul id=\"l11\"><li  id=\"556\"><p  id=\"557\">Does hosting provider have windows server?</p></li><li  id=\"558\"><p  id=\"559\">Does hosting provider have “Plesk” features; plesk is used to set up file permission?</p></li><li  id=\"560\"><p  id=\"561\">Is mssql or mysql database available?</p><p  id=\"562\">If answer is “Yes” considers it is green signal to buy it.</p><p  id=\"563\"><br id=\"564\"></p><h4  id=\"565\">Database: <span class=\"p\" id=\"566\">Umbraco cms need database to store data because its better way to mange content and Umbraco also needs database to store node id, alias or other object except files. Files are located at server hard drive. Umbraco is user friendly so you can choose mssql or mysql database. It supports any one of two databases and in most of case windows hosting provider have mssql database installed. I recommend using sql express edition for your local machine. You can download it from Microsoft official sites it‟s a free and try Umbraco locally first before deploying to live server.</span></h4><h4  id=\"567\">Additional Software: <span class=\"p\" id=\"568\">by having windows operating system, IIS server, database will not be enough for Umbraco so needs more software to install. .NET framework version 4 and Ajax is necessary to run Umbraco. Web hosting provider already installed this software for you but you can ask them to verify it. For your local machine you have to install .NET Framework version 4 and Ajax before start Umbraco installation.</span></h4><h4  id=\"569\">Visual Studio: <span class=\"p\" id=\"570\">It is great software ever for me as a programmer. It‟s very powerful IDE (integrated Development Environment) software that provides by Microsoft. It‟s quite expensive software and use to program all Microsoft based applications like console application, windows application, web application etc. for Umbraco cms project you can download from Microsoft as trail version and use it for 3 months. Three month will be enough to complete this project called “online Vcard” and for your later purposes you can buy it from Microsoft.</span></h4><p  id=\"571\">Visual studio is not necessary if you do not use .NET to extend Umbraco sites. But for my purpose I am going to show developers how to use .NET class to extend Umbraco so visual studio requires to create .NET class. If you are building basic websites Visual Studio may not be necessary because Umbraco has many features that can achieved by XSLT, XSLT can be edited inside Umbraco using BackEnd of Umbraco sites.</p><p  id=\"572\">We can also use other open source software like notepad++ but these are simple text editor so it is very difficult to program in simple text editor. This software does not have features like visual studio.</p><p class=\"s8\"  id=\"573\">Which visual studio?</p><p  id=\"574\"><br id=\"575\"></p><p  id=\"576\">There are three different types of visual studio:</p><p  id=\"577\"><br id=\"578\"></p></li><li  id=\"579\"><p  id=\"580\">Express</p></li><li  id=\"581\"><p  id=\"582\">Professional</p></li><li  id=\"583\"><p  id=\"584\">Ultimate</p></li></ul><p  id=\"585\">I recommend using visual Studio 2010 if you have, but if you have 2005 or 2008 it will be enough, no need to upgrade it just for this “Online Vcard Project”. If you are planning to download Visual Studio, I recommend downloading visual studio 2011 ultimate because it has great features.</p><p class=\"s8\"  id=\"586\">Get Visual Studio Free: <span class=\"p\" id=\"587\">you can use express edition for free provided by Microsoft, there is difference between Express and Ultimate visual studio. If you want to know difference you can easily go to official site and compare different edition of Visual Studio. If you do not want to buy visual studio Ultimate after 3 month of Trail Period you can easily download Express Edition without any cost and use it for free.</span></p><p class=\"s15\"  id=\"588\">References and Download <span class=\"s16\" id=\"589\">Taken date April 12, 2011 Umbraco system requirements</span></p><p class=\"s16\"  id=\"590\">http://our.umbraco.org/wiki/recommendations/recommended-reading-for-it-administrators/minimum-system- requirements</p><p class=\"s16\"  id=\"591\"><a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=9cfb2d51-5ff4-4491-b0e5-\" class=\"s17\" target=\"_blank\" id=\"592\">Download Ajax and .net framework 4 </a>http://www.microsoft.com/downloads/en/details.aspx?FamilyID=9cfb2d51-5ff4-4491-b0e5- b386f32c0992&amp;displaylang=en</p><p  id=\"593\"><a href=\"http://www.asp.net/ajaxlibrary/download.ashx\" class=\"s17\" target=\"_blank\" id=\"594\">Ajax latest version </a><a href=\"http://www.microsoft.com/express/Database/\" class=\"s17\" target=\"_blank\" id=\"595\">http://www.asp.net/ajaxlibrary/download.ashx sql express </a><a href=\"http://www.microsoft.com/visualstudio/en-us/try\" class=\"s17\" target=\"_blank\" id=\"596\">http://www.microsoft.com/express/Database/ Visual studio </a><a href=\"http://www.iis.net/download\" class=\"s17\" target=\"_blank\" id=\"597\">http://www.microsoft.com/visualstudio/en-us/try IIS server latest version http://www.iis.net/download</a></p><p class=\"s16\"  id=\"598\">Notepad ++</p><p class=\"s16\"  id=\"599\">http://notepad-plus-plus.org/download <a href=\"http://www.microsoft.com/express/Downloads/\"  target=\"_blank\" id=\"600\">Download Free Express Edition </a><a href=\"http://www.microsoft.com/express/Downloads/\" class=\"s17\" target=\"_blank\" id=\"601\">http://www.microsoft.com/express/Downloads/</a></p><p  id=\"602\"><br id=\"603\"></p><h1  id=\"604\"><a name=\"a17\" id=\"605\">Chapter 02: Installation</a></h1><p  id=\"606\"><br id=\"607\"></p><p  id=\"608\"><br id=\"609\"></p><p  id=\"610\"><span id=\"611\"><img width=\"466\" height=\"1\" alt=\"image\" src=\"Image_006.png\" id=\"612\"></span></p></div>","sub":[]},{"pageId":"30","pageLevel":0,"pageOrder":"30","pageParentId":"-1","pageName":"Installation of Umbraco CMS","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading613\" class=\"heading613\"><a name=\"bookmark12\" id=\"614\" style=\"color: lime;\">Installation of Umbraco CMS</a></h2>","pageContent":"<div id=\"contentheading613\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"615\">There are several steps to install Umbraco CMS, most of steps are easy but needs to take carefully each steps. Here I briefly discuss about installation process. I already made video about “installation of Umbraco CMS in localhost” and uploaded to YouTube video. I strongly recommend to watch video<span class=\"s3\" id=\"616\">1 </span>first and come back later in this chapter to continue. Here basic steps are listed.</p><h3 style=\"padding-top: 10pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading617\" class=\"heading617\"><a name=\"bookmark13\" id=\"618\" style=\"color: green;\">Database</a><span class=\"h4\" id=\"619\">:</span></h3><div id=\"contentheading617\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 12pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"620\">Create Empty Database, you can give any name as you like for this purpose I gave name “umbracodb” and created user account name “root”. Make sure user should have database admin access otherwise Umbraco will not install properly.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"621\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"622\"><br id=\"623\"></p><ul id=\"l12\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"625\"><p style=\"display: inline;\" id=\"626\">Open Sql Server Management studio and login as “Windows Authentication”</p></li><li style=\"padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"627\"><p style=\"display: inline;\" id=\"628\">Right click on Database and click on “New Database”. Provide database name and click ok. <span class=\"s19\" id=\"629\">See Image: umbracodb.image</span></p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"630\"><p style=\"display: inline;\" id=\"631\">Expand “Security” on left side menu. Right click on Login and click on “New Login”</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"632\"><p style=\"display: inline;\" id=\"633\">Type login name and check “SQL server authentication” and provide password. Uncheck “Enforce password Policy” if you are new to Sql server and press OK. Windows will disappear. In my case I create login name “root” and password “root”</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"634\"><p style=\"display: inline;\" id=\"635\">Expand Security tree from left side menu until last child where you can see new login added <span class=\"s19\" id=\"636\">See Image: user.image </span>and click on that login name. it will open Login Properties</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"637\"><p style=\"display: inline;\" id=\"638\">Select “User Mapping” it will list all available database and check new database that you are going to use for Umbraco and in “Database Role Membership” checked on “db owner”, “dbladmin”, “datawrite” and “datareader”,.</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"639\"><p style=\"display: inline;\" id=\"640\">Disconnect current working database and try to connect using new user id and password. This time do not select “windows authentication”. You should be select “Sql Server Authentication” this will activate Login and Password input textbox. You must be able to login to database. If you get any error please repeat database setting process.</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"641\"><p style=\"display: inline;\" id=\"642\">If you success to log in using your new user id and password and database that assign to Umbraco is listed on right side menu than your database setup is ready for Umbraco.</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"643\"><p style=\"display: inline;\" id=\"644\">See screen shot for references</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"645\"><br id=\"646\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"647\"><span id=\"648\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_007.png\" id=\"649\"></span></p><p style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"650\"><a href=\"http://www.youtube.com/jeevan2np%23p/a/u/0/DMXw7aeSG54\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"651\">1 </a><a href=\"http://www.youtube.com/jeevan2np%23p/a/u/0/DMXw7aeSG54\" class=\"s11\" target=\"_blank\" id=\"652\">http://www.youtube.com/jeevan2np#p/a/u/0/DMXw7aeSG54</a></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"653\"><span id=\"654\"><img width=\"624\" height=\"367\" alt=\"image\" src=\"Image_008.png\" id=\"655\"></span></p><p class=\"s21\" style=\"padding-top: 4pt;padding-left: 112pt;text-indent: 0pt;text-align: left;\" id=\"656\">Umbracodb.image <span class=\"s22\" id=\"657\">User.image</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"658\"><br id=\"659\"></p><p style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"660\">Notes:</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 111%;text-align: justify;\" id=\"661\">Here I did not include about MySql<span class=\"s3\" id=\"662\">2 </span>Database. MySql server is free server and mostly used in Apache server. MySql Server is developed and maintained by Oracle Corporation. Most of PHP web application like Joomla<span class=\"s3\" id=\"663\">3 </span>CMS, Drupal <span class=\"s3\" id=\"664\">4</span>, Wordpress<span class=\"s3\" id=\"665\">5 </span>CMS use MySql server.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"666\"><a href=\"http://www.mysql.com/\" class=\"a\" target=\"_blank\" id=\"667\">Your case can be difference from here in that case you can installed Mysql database from official sites at </a>www.mysql.com. When you install Mysql Server please read documentation provided on official sites and follow each step carefully otherwise MySql database may not work as expected.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"668\">Creating user, database, setting database permission for user, changing password can be difference for MySql Database as instruction provided to Mssql database. If you decided to use MySql server for Umbraco CMS it‟s your responsibility to find out more details about MySql set up because here I will not conver MySql database.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"669\"><br id=\"670\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"671\"><span id=\"672\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_009.png\" id=\"673\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"674\"><a href=\"http://www.mysql.com/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"675\">2 </a><a href=\"http://www.mysql.com/\" class=\"s11\" target=\"_blank\" id=\"676\">http://www.mysql.com/</a></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"677\"><a href=\"http://www.joomla.org/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"678\">3 </a><a href=\"http://www.joomla.org/\" class=\"s11\" target=\"_blank\" id=\"679\">www.joomla.org</a></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"680\"><a href=\"http://www.drupal.org/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"681\">4 </a><a href=\"http://www.drupal.org/\" class=\"s11\" target=\"_blank\" id=\"682\">www.drupal.org</a></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"683\"><a href=\"http://www.wordpress.org/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"684\">5 </a><a href=\"http://www.wordpress.org/\" class=\"s11\" target=\"_blank\" id=\"685\">www.wordpress.org</a></p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading686\" class=\"heading686\"><a name=\"bookmark14\" id=\"687\" style=\"color: green;\">Directory</a><span class=\"p\" id=\"688\">:</span></h3><div id=\"contentheading686\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"689\"><br id=\"690\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"691\">Directory is location for physical files, all Umbraco files goes or placed inside domain name directory. I will define directory from two points of view one from server and one from local machine.</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"692\"><b id=\"693\">Server: </b>If you buy web hosting including domain and space. You can see there is “httpdocs”<span class=\"s3\" id=\"694\">6 </span>directory that is main directory for your website. All Umbraco files should be placed within main directory. Do not place Umbraco files inside sub directory because Umbraco does not support until version 4.7 and I can‟t say about later version until its release. All Umbraco files directory should be placed without</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"695\">renaming into root directory.</p><h4 style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"696\">Local Machine: <span class=\"p\" id=\"697\">I am installing Umbraco in local machine so that I will focus here more. First you need to Create Directory and give name “HowToUmbraco” in my case but you can give different name. Follow instructions.</span></h4></div></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"698\"><p style=\"display: inline;\" id=\"699\">Create Directory in hard disk.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"700\"><span id=\"701\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_010.png\" id=\"702\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"703\"><span id=\"704\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_011.png\" id=\"705\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"706\"><span id=\"707\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_012.png\" id=\"708\"></span></p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"709\"><p style=\"display: inline;\" id=\"710\">Right click on it, click on Properties Security Edit Add</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"711\"><p style=\"display: inline;\" id=\"712\">Type “Network Service” and press OK</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"713\"><p style=\"display: inline;\" id=\"714\">Select “Network service” and Checked “Modify”</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"715\"><p style=\"display: inline;\" id=\"716\">Press Apply and Press OK until it close property windows.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"717\"><span id=\"718\"><img width=\"358\" height=\"401\" alt=\"image\" src=\"Image_013.jpg\" id=\"719\"></span></p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"720\"><p style=\"display: inline;\" id=\"721\">Your Directory is ready to use for Umbraco websites.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"722\"><br id=\"723\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"724\"><br id=\"725\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"726\">Here I Created Directory “HowToUmbraco” in Drive D: and checked “Modify” file permission for “Network Service”</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"727\">Here I Created Directory “HowToUmbraco” in Drive D: and checked “Modify” file permission for “Network Service”</p><p style=\"padding-left: 286pt;text-indent: 0pt;text-align: left;\" id=\"728\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"729\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"730\"><br id=\"731\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"732\"><span id=\"733\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_014.png\" id=\"734\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"735\">6 <a href=\"http://www.dollar2host.com/\" class=\"s11\" target=\"_blank\" id=\"736\">“httpdoc” directory may not same name for all. It‟s based on my experienced with www.dollar2host.com</a></p><h3 style=\"padding-top: 3pt; padding-left: 7pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading737\" class=\"heading737\"><a name=\"bookmark15\" id=\"738\" style=\"color: green;\">Turn On IIS Service</a></h3><div id=\"contentheading737\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"739\">Here I assume that your machine is windows 7. To turn on IIS service follow instructions.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"740\"><br id=\"741\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"742\"><span id=\"743\"><img width=\"295\" height=\"389\" alt=\"image\" src=\"Image_015.jpg\" id=\"744\"></span></p><ul id=\"l13\"><li style=\"padding-top: 4pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"746\"><p style=\"display: inline;\" id=\"747\">Type “Turn Windows features on or off” in Search Box and press Enter</p><p style=\"padding-top: 10pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"748\">It will open new windows. Navigate Internet Information Service and expand its tree.</p></li><li style=\"padding-top: 10pt;padding-left: 242pt;text-indent: -7pt;text-align: left;\" id=\"749\"><p style=\"display: inline;\" id=\"750\">Navigate</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"751\"><br id=\"752\"></p><p style=\"padding-left: 271pt;text-indent: 0pt;text-align: left;\" id=\"753\">-World Wide Web Service</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"754\"><br id=\"755\"></p><p style=\"padding-left: 271pt;text-indent: 0pt;text-align: left;\" id=\"756\">-Application Development Feature</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"757\"><br id=\"758\"></p></li><li style=\"padding-left: 242pt;text-indent: -7pt;text-align: left;\" id=\"759\"><p style=\"display: inline;\" id=\"760\">Checked</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"761\"><br id=\"762\"></p><ul id=\"l14\"><li style=\"padding-left: 278pt;text-indent: -7pt;text-align: left;\" id=\"764\"><p style=\"display: inline;\" id=\"765\">NET Extensibility</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"766\"><br id=\"767\"></p></li><li style=\"padding-left: 278pt;text-indent: -7pt;text-align: left;\" id=\"768\"><p style=\"display: inline;\" id=\"769\">ASP.NET</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"770\"><br id=\"771\"></p></li><li style=\"padding-left: 278pt;text-indent: -7pt;text-align: left;\" id=\"772\"><p style=\"display: inline;\" id=\"773\">Server-Side Includes</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"774\"><br id=\"775\"></p></li></ul></li><li style=\"padding-left: 242pt;text-indent: -7pt;text-align: left;\" id=\"776\"><p style=\"display: inline;\" id=\"777\">Press OK</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"778\"><br id=\"779\"></p><p style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"780\">Wait until “Turn Windows Features On or Off” Close automatically.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"781\"><br id=\"782\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"783\"><span id=\"784\"><img width=\"256\" height=\"184\" alt=\"image\" src=\"Image_016.jpg\" id=\"785\"></span></p><p class=\"s8\" style=\"padding-top: 7pt;padding-left: 235pt;text-indent: 0pt;text-align: justify;\" id=\"786\">Test your IIS Server</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"787\"><br id=\"788\"></p><p style=\"padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"789\">Type “localhost” in your browser it will open default IIS websites (see left image) and also check using drive C:// “Inetpub” directory should be created by IIS Service. If there is a directory and</p><p style=\"padding-left: 235pt;text-indent: 0pt;line-height: 14pt;text-align: justify;\" id=\"790\">localhost returns default websites<span class=\"s3\" id=\"791\">7 </span>means</p><p style=\"padding-top: 2pt;padding-left: 235pt;text-indent: 0pt;text-align: justify;\" id=\"792\">IIS is ready to use.</p><p class=\"s21\" style=\"padding-top: 10pt;padding-left: 33pt;text-indent: 0pt;text-align: left;\" id=\"793\">Defaultwebsites.image</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"794\"><br id=\"795\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"796\"><span id=\"797\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_017.png\" id=\"798\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"799\">7 <span class=\"s10\" id=\"800\">See image defaultwebsites.image</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"801\"><br id=\"802\"></p><h3 style=\"padding-top: 4pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading803\" class=\"heading803\"><a name=\"bookmark16\" id=\"804\" style=\"color: green;\">IIS Set Up</a></h3><div id=\"contentheading803\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-bottom: 4pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"805\">Until now we just turn on IIS7 in local machine. Here I will explain about Application Pool and other relevant topic to IIS and Umbraco CMS. Let‟s open Internet Information Service (IIS) Manager. To open IIS manager type “IIS” in search box windows search result will show up “internet Information Service” and press OK. It will open IIS manager windows. See screen bellow</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"806\"><span id=\"807\"><img width=\"605\" height=\"347\" alt=\"image\" src=\"Image_018.jpg\" id=\"808\"></span></p><p style=\"padding-top: 7pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"809\">General Description of IIS Manager environment</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"810\"><br id=\"811\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"812\"><a name=\"a18\" id=\"813\">Connections</a><span class=\"p\" id=\"814\">:</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"815\"><br id=\"816\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"817\">List of all websites that created by users. By default there one website name is “Default Web Site” which is IIS created automatically when we Turn On Internet Information Service from “Turn windows features on or off” program.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"818\"><a name=\"a19\" id=\"819\">Application Pools:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"820\"><br id=\"821\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"822\">According to Microsoft, when you run IIS 6.0 in worker process isolation mode, you can separate different Web applications and Web sites into groups known as <i id=\"823\">application pools</i>. An <i id=\"824\">application pool </i>is a group of one or more URLs that are served by a worker process or set of worker processes. Any Web directory or virtual</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"825\">directory can be assigned to an application pool. For more details you can follow link provided in reference<span class=\"s3\" id=\"826\">8</span>.</p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"827\"><a name=\"a20\" id=\"828\">Sites:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"829\"><br id=\"830\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"831\">You can create new sites inside your local IIS manager. Here we are going to create new websites for our Vcard Project. Sites menu contains list of created sites into your local machine. You can edit, delete and create easily by right clicking on specific sites.</p><h4 style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"832\"><a name=\"a21\" id=\"833\">Create new site:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"834\"><br id=\"835\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"836\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"837\"><br id=\"838\"></p></div></li></ul></div></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"839\"><p style=\"display: inline;\" id=\"840\">Right click on Site menu on left side at communications. If you did not see “sites” expand left menu tree.</p></li><li style=\"padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"841\"><p style=\"display: inline;\" id=\"842\">Click on “Add Web Site”</p></li><li style=\"padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"843\"><p style=\"display: inline;\" id=\"844\">Provide valid information see captured screen for references.</p><ul id=\"l15\"><li style=\"padding-top: 11pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"846\"><p style=\"display: inline;\" id=\"847\">Site name “<span style=\" color: #538DD3;\" id=\"848\">howtoumbraco</span>” – you can give your own name if you like</p></li><li style=\"padding-top: 10pt;padding-left: 78pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"849\"><p style=\"display: inline;\" id=\"850\">“Application Pool” is created automatically but I recommend changing it so that click on “Select” button at right side. It will list all available application pool. Select “<span style=\" color: #538DD3;\" id=\"851\">ASP.NET v4.0</span>” for Umbraco 4.7 and press OK.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"852\"><br id=\"853\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"854\"><br id=\"855\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"856\"><span id=\"857\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_019.png\" id=\"858\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"859\"><a href=\"http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/67e39bd8-317e-4cf6-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"860\">8 </a>http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/67e39bd8-317e-4cf6- b675-6431d4425248.mspx?mfr=true</p></li><li style=\"padding-top: 3pt;padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"861\"><p style=\"display: inline;\" id=\"862\">Physical Path: this is important part here so click on browse button right side and locate directory where you created before for Umbraco installation. In my case “<span style=\" color: #538DD3;\" id=\"863\">HowToUmbraco</span>” directory in drive D:</p></li><li style=\"padding-top: 10pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"864\"><p style=\"display: inline;\" id=\"865\">Binding: I changed port number to 8080 you can leave default but I</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"866\"><span id=\"867\"><img width=\"322\" height=\"362\" alt=\"image\" src=\"Image_020.jpg\" id=\"868\"></span></p><p style=\"padding-left: 269pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"869\">recommend to change it. You can specify any port number if it‟s not used or occupied by other application like Skype. In my case Skype already use default port number <span style=\" color: #538DD3;\" id=\"870\">80 </span>so that I need to change it something else. So I change to <span style=\" color: #538DD3;\" id=\"871\">8080</span>. Remember that if you change port number you have to provide port number every time when you access your websites via browser.</p><p style=\"padding-top: 9pt;padding-left: 269pt;text-indent: 0pt;text-align: justify;\" id=\"872\">Press OK:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"873\"><br id=\"874\"></p><p style=\"padding-left: 269pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"875\">You have successfully create sites and assign application pool “Asp.net v4.0”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"876\"><br id=\"877\"></p><p class=\"s24\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"878\"><a name=\"bookmark17\" id=\"879\">TESTING IIS</a><span class=\"h4\" id=\"880\">:</span></p><p style=\"padding-top: 12pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"881\">It is necessary to test our site and setting we have done before, everything should work perfectly. To test newly created site follow these steps:</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"882\"><p style=\"display: inline;\" id=\"883\">Open Notepad</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"884\"><p style=\"display: inline;\" id=\"885\">Copy and paste that line of code without changing it. Copy code bellow</p><p class=\"s23\" style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"886\">&lt;% Response.write(\" welcome to 'How to Umbraco Basic'\") %&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"887\"><br id=\"888\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"889\"><p style=\"display: inline;\" id=\"890\">Click on Save. Now be very careful Naming is very important here. Give file name <span style=\" color: #538DD3;\" id=\"891\">DefaultTest </span>and end with <span style=\" color: #538DD3;\" id=\"892\">.aspx </span>without space so your file name must be “<span style=\" color: #538DD3;\" id=\"893\">DefaultTest.aspx</span>” without quote. Now save that file inside Umbraco installation directory in my case I saved <span style=\" color: #538DD3;\" id=\"894\">DefaultTest.aspx </span>file inside “<span style=\" color: #538DD3;\" id=\"895\">HowToUmbraco</span>” Directory.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"896\"><p style=\"display: inline;\" id=\"897\">Open Browser and type <span style=\" color: #538DD3;\" id=\"898\">localhost:8080/DefaultTest.aspx </span>here <span style=\" color: #538DD3;\" id=\"899\">8080 </span>is port number that I changed before, if you did not change port number “<span style=\" color: #538DD3;\" id=\"900\">localhost/DefaultTest.aspx</span>” will be enough.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"901\"><p style=\"display: inline;\" id=\"902\">If you can see <span style=\" color: #538DD3;\" id=\"903\">welcome to 'How to Umbraco Basic' </span>message in browser. That means your sites is working if you did not see that message or get some error please repeat Previous Chapter.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"904\"><br id=\"905\"></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"906\"><a name=\"a22\" id=\"907\">Modifying your Sites:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"908\"><br id=\"909\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"910\">If you like to modify your sites properties or other settings your can click on your sites and on middle and right side you can see more options available to edit. For example:</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"911\"><p style=\"display: inline;\" id=\"912\">Edit bindings, Permission and basic settings</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"913\"><p style=\"display: inline;\" id=\"914\">Advanced settings</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"915\"><p style=\"display: inline;\" id=\"916\">View application, add virtual directory</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"917\"><p style=\"display: inline;\" id=\"918\">Edit SMTP or Email setting, database connection strings, SSL, Handler Mappings etc.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"919\"><p style=\"display: inline;\" id=\"920\">For more details you can visit Microsoft official sites for IIS.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"921\"><br id=\"922\"></p><p class=\"s10\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"923\">References:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"924\"><br id=\"925\"></p><p class=\"s10\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"926\">IIS</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"927\"><br id=\"928\"></p><p class=\"s10\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"929\">Taken date April 13, 2011</p><p class=\"s10\" style=\"padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"930\"><a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=32c54c37-7530-4fc0-bd20-\" class=\"s11\" target=\"_blank\" id=\"931\">http://www.iis.net </a>http://www.microsoft.com/downloads/en/details.aspx?FamilyID=32c54c37-7530-4fc0-bd20- 177a3e5330b7</p><p class=\"s10\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"932\">Notepad is out of box software provided by Microsoft.</p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading933\" class=\"heading933\"><a name=\"bookmark18\" id=\"934\" style=\"color: green;\">Downloading Umbraco files:</a></h3><div id=\"contentheading933\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"935\">It‟s time to download Umbraco latest file from official site. Official site contains list of Umbraco release, most resent Umbraco release version is highly focused in download site. I recommend downloading latest version because every new release contains bug fix from previous version, added extra new features and improved better than previous release. Here you can argue that new version of Umbraco also contains new bugs and it may take longer time to fix because it‟s a new release. You are not wrong but my point is we all are here to learn new thing and challenge new problem, help others and get help from others so do not compromise to face new challenge and learn more, technology never becomes perfect, it‟s a process of learning from history, face new challenge in present and improve it better for future.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"936\">In my personal opinion I download one or two previous release then latest release version only for client websites because earlier version of release has known bugs and can be solved very fast because someone or other developer might be already faced or fixed such bugs. But in my local host or for my testing purpose I always download latest release because I always want to face new bugs that nobody discovered it and have a fun with that bugs. In this Vcard project I will download latest version of Umbraco release 4.7.</p></div><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading937\" class=\"heading937\"><a name=\"bookmark19\" id=\"938\" style=\"color: green;\">What to Download?</a></h3><div id=\"contentheading937\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s26\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"939\"><a href=\"http://umbraco.com/download\" class=\"a\" target=\"_blank\" id=\"940\">Now you get overview of downloading Umbraco. It‟s a good questions what to download? If you visit </a>http://umbraco.com/download <a href=\"http://umbraco.codeplex.com/releases/\" class=\"a\" target=\"_blank\" id=\"941\">sites to download, you can easily install using “Web Platform Installer”. Web platform Installer is Microsoft free software use to install program. Here I will not use “Web Platform Installer” because I want to show you more options. Visit Umbraco release or let‟s follow this link </a>http://umbraco.codeplex.com/releases/<span class=\"p\" id=\"942\">. This websites contains all Umbraco release version. On left menu side you can see current release version. Inside rectangle box you can see details of latest release version, for example Rating, Release date, update, Reviews, Number of Download etc. here look for Dev Status: if it‟s say stable it means it‟s a believe to be ready to use. On right side menu bar you can see pervious release of Umbraco. I said not to use Web Platform Installer to install Umbraco because it will install new release. If you would like to install other version then you need to browse codeplex for all releases.</span></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"943\">Let‟s back to main questions what to download? I would say first describe yourself and decide what to download. Here are three main categories so you need to choose one categories yourself based on your programming skills and .NET language skills.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"944\">Categories Basic <span class=\"p\" id=\"945\">– if you have basic knowledge of C#, object oriented program, MsSql database, if you know how to use usercontrol, webservices and classes to asp.net websites than I said its very basic to Umbraco so you can download Recommended Download by Umbraco sites. It‟s a binaries file.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"946\"><br id=\"947\"></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"948\">Categories Tester <span class=\"p\" id=\"949\">- if you have advanced level of C#, Object Oriented program knowledge and if you do not want to use mssql database but want to test Umbraco than you are as a tester. Please download “Umbraco x.x.x WebDeploy NET n.n” here x.x.x is Umbraco Release version and n.n is .NET frame work version. Until this book release its “Umbraco 4.7.0 WebDeploy NET 4.0” so download that files and test Umbraco without using MSSQL database.</span></h4><h4 style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"950\">Categories Advanced <a href=\"http://umbraco.codeplex.com/SourceControl/list/changesets\" class=\"a\" target=\"_blank\" id=\"951\">– If you can analyze other‟s c# code and have knowledge of Object Oriented Program, database and other programming language then you can download Source code from here </a><span style=\" color: #365F91;\" id=\"952\">http://umbraco.codeplex.com/SourceControl/list/changesets </span><span class=\"p\" id=\"953\">and have a fun with source code.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"954\"><br id=\"955\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"956\"><span id=\"957\"><img width=\"529\" height=\"331\" alt=\"image\" src=\"Image_021.jpg\" id=\"958\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"959\"><br id=\"960\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"961\">My personal opinion: I download Binary files for client websites development and I download source code files for learning purpose. I strongly recommend you to download source code because using source code files we can easily debug and see how Umbraco works. It‟s a good way to learn Umbraco. For Vcard project I download binary files, binary files are recommended by Umbraco official.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"962\"><br id=\"963\"></p></div><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading964\" class=\"heading964\"><a name=\"bookmark20\" id=\"965\" style=\"color: green;\">Unzip ZIP format</a></h3><div id=\"contentheading964\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"966\">Umbraco downloaded files are compressed in ZIP format, I guess you already worked with zip format; one important thing for Umbraco zip file before extract is to unblock it. Make sure you unblock zip file before extract.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"967\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"968\"><br id=\"969\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"970\"><p style=\"display: inline;\" id=\"971\">Right click on Umbraco files that you just downloaded and click on Properties</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"972\"><p style=\"display: inline;\" id=\"973\">Click On “Unblock” and press OK</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"974\"><p style=\"display: inline;\" id=\"975\">Extract files by Right click on zip files and click on “Extract All”</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"976\"><p style=\"display: inline;\" id=\"977\">Your extractor can be difference from I have one. But purpose is to extract all files.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"978\"><br id=\"979\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"980\"><span id=\"981\"><img width=\"485\" height=\"456\" alt=\"image\" src=\"Image_022.png\" id=\"982\"></span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"983\"><p style=\"display: inline;\" id=\"984\">Copy all extracted files, do not copy “build” directory<span class=\"s3\" id=\"985\">9</span>. Go inside “build” directory and copy all files from there.</p></li><li style=\"padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"986\"><p style=\"display: inline;\" id=\"987\">Paste all files inside “HowToUmbraco” directory if you follow me. Otherwise paste all Umbraco extracted files to your directory where you have decided to use. If you get confused go back to “Directory” topic and follow each step.</p></li><li style=\"padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"988\"><p style=\"display: inline;\" id=\"989\">If you followed me your “HowToUmbraco” directory must look like this see screen</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"990\"><span id=\"991\"><img width=\"316\" height=\"501\" alt=\"image\" src=\"Image_023.png\" id=\"992\"></span></p><p class=\"s27\" style=\"padding-top: 10pt;padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"993\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"994\"><br id=\"995\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"996\">If yours file structure is same as above captured image then you are ready to install Umbraco.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"997\"><br id=\"998\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"999\"><span id=\"1000\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_024.png\" id=\"1001\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1002\">9 <span class=\"s10\" id=\"1003\">You can also copy “build” directory in your case, if you want to follow me copy directory and files that have inside build directory.</span></p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading1004\" class=\"heading1004\"><a name=\"bookmark21\" id=\"1005\" style=\"color: green;\">Install Umbraco step by step guide</a></h3><div id=\"contentheading1004\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"1006\">To install Umbraco Follow these process Instruction:</p></div></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1007\"><p style=\"display: inline;\" id=\"1008\">Browser you websites using browser and type localhost:8080</p></li><li style=\"padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"1009\"><p style=\"display: inline;\" id=\"1010\">Here 8080 is port number if you did not change your port number just type localhost</p></li><li style=\"padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;line-height: 106%;text-align: justify;\" id=\"1011\"><p style=\"display: inline;\" id=\"1012\">You  must  see  Umbraco  welcome  page  click  <span id=\"1013\"><img width=\"100\" height=\"29\" alt=\"image\" src=\"Image_025.jpg\" id=\"1014\"></span><span class=\"s28\" id=\"1015\">    </span>on “Lets get Started”</p></li><li style=\"padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"1016\"><p style=\"display: inline;\" id=\"1017\">Even its free open source CMS you need to follow rules to use Umbraco read license, term and conditions. More details can be found on official websites of Umbraco, Accept the license for Umbraco CMS. To accept license click “Accept and continue”</p></li><li style=\"padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1018\"><p style=\"display: inline;\" id=\"1019\">You are now in step 3. This step is more fun.</p></li><li style=\"padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"1020\"><p style=\"display: inline;\" id=\"1021\">By providing not enough file permission to “Network service” or “application pool” in Umbraco installation directory will thrown out notification message “files permission are not ready” in such case you will not see this step 3, go back to file permission setting and come back later. If everything is ok you can see more option here</p><p class=\"s27\" style=\"padding-top: 10pt;padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"1022\">-     <span id=\"1023\"><img width=\"375\" height=\"90\" alt=\"image\" src=\"Image_026.jpg\" id=\"1024\"></span></p></li><li style=\"padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"1025\"><p style=\"display: inline;\" id=\"1026\">Four options are here and all four options have on radio button. Why it‟s in radio button, reason is Radio button allows to choose only one option at a time, in Umbraco it is not possible<span class=\"s3\" id=\"1027\">10 </span>to use two different databases at a same time that‟s why they have radio button to make sure to choose one database.</p></li></ul><ul id=\"l16\"><li style=\"padding-top: 10pt;padding-left: 78pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1029\"><p style=\"display: inline;\" id=\"1030\">If you want to follow me until now click on first one “I …. Have a blank Sql server. <span class=\"s19\" id=\"1031\">Also see “What to Download?” topics page 25 </span>“</p></li><li style=\"padding-top: 11pt;padding-left: 78pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1032\"><p style=\"display: inline;\" id=\"1033\">If you are planning to test Umbraco select second option “I want to use SQl CE4,….” It does not require database. <span class=\"s19\" id=\"1034\">see “Categories Tester?” page 26</span></p></li><li style=\"padding-top: 10pt;padding-left: 78pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1035\"><p style=\"display: inline;\" id=\"1036\">If you are advanced user select third option this will allows developer to type connection string. <span class=\"s19\" id=\"1037\">Also see “Categories Advanced” page 26</span></p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"1038\"><br id=\"1039\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1040\"><span id=\"1041\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_027.png\" id=\"1042\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1043\">10 <span class=\"s10\" id=\"1044\">It is possible to use more than one database by extending umbraco using .net class. It is not possible to use multiple database during installation period.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1045\"><br id=\"1046\"></p><ul id=\"l17\"><li style=\"padding-top: 4pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"1048\"><p style=\"display: inline;\" id=\"1049\">if you need help click on last one.</p></li><li style=\"padding-top: 11pt;padding-left: 60pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"1050\"><p style=\"display: inline;\" id=\"1051\">I click on first one so Umbraco provides more option to select database type. I am using mssql, so I am selecting Microsoft SQL server.</p></li><li style=\"padding-top: 11pt;padding-left: 60pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"1052\"><p style=\"display: inline;\" id=\"1053\">Your case can be deference if you plan to use MySql server than you need to find yourself how to connect to Mysql server, I am not going to include here.</p></li><li style=\"padding-top: 10pt;padding-left: 60pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"1054\"><p style=\"display: inline;\" id=\"1055\">After click on first option or choice it will provide more input fields for sql connection details. See captured screen for reference your case can be deference. If you are following me it will be same as in captured screen bellow.</p></li><li style=\"padding-top: 10pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"1056\"><p style=\"display: inline;\" id=\"1057\">Here is description</p><ul id=\"l18\"><li style=\"padding-top: 11pt;padding-left: 96pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1059\"><p style=\"display: inline;\" id=\"1060\">Server= location of sql server, in mycase its .\\sqlepress, you can also use remote server database if you have for example server=”www.example.com\\sqlexpress”</p></li><li style=\"padding-top: 10pt;padding-left: 96pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1061\"><p style=\"display: inline;\" id=\"1062\">Database name: Name of database that we created for Umbraco cms in database topic</p></li><li style=\"padding-top: 10pt;padding-left: 96pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1063\"><p style=\"display: inline;\" id=\"1064\">Username: user that has access on database that we created for Umbraco</p></li><li style=\"padding-top: 9pt;padding-left: 96pt;text-indent: -18pt;text-align: left;\" id=\"1065\"><p style=\"display: inline;\" id=\"1066\">Password: password that assign to user to login sql server</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"1067\"><span id=\"1068\"><img width=\"465\" height=\"355\" alt=\"image\" src=\"Image_028.jpg\" id=\"1069\"></span></p><p style=\"padding-top: 2pt;text-indent: 0pt;text-align: right;\" id=\"1070\">database.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1071\"><br id=\"1072\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1073\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1074\"><br id=\"1075\"></p><ul id=\"l19\"><li style=\"padding-top: 4pt;padding-left: 24pt;text-indent: -18pt;text-align: left;\" id=\"1077\"><p style=\"display: inline;\" id=\"1078\">Press “Install”</p></li><li style=\"padding-top: 11pt;padding-left: 24pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"1079\"><p style=\"display: inline;\" id=\"1080\">If server location, database name, username and password are correct then it will take only few minute to setup database for Umbraco, during this process Umbraco show up progress bar. If Umbraco show up any error or notice. Correct error based on error message provided by Umbraco and continue to install Umbraco</p></li><li style=\"padding-top: 10pt;padding-left: 24pt;text-indent: -18pt;text-align: left;\" id=\"1081\"><p style=\"display: inline;\" id=\"1082\">Press “Continue” now you are in step 4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1083\"><span id=\"1084\"><img width=\"322\" height=\"317\" alt=\"image\" src=\"Image_029.jpg\" id=\"1085\"></span></p></li><li style=\"padding-top: 11pt;padding-left: 24pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"1086\"><p style=\"display: inline;\" id=\"1087\">Step 4 is for Create user; here you have to provide User information. That user will be supper administrator and have elevator access or root level of access to Umbraco Backend.</p><ul id=\"l20\"><li style=\"padding-top: 10pt;padding-left: 60pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"1089\"><p style=\"display: inline;\" id=\"1090\">Name: name for supper administrator account</p></li><li style=\"padding-top: 10pt;padding-left: 60pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"1091\"><p style=\"display: inline;\" id=\"1092\">Email: email of supper administrator account</p></li><li style=\"padding-top: 11pt;padding-left: 60pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"1093\"><p style=\"display: inline;\" id=\"1094\">Username: user name use to identify user.</p></li><li style=\"padding-top: 11pt;padding-left: 60pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"1095\"><p style=\"display: inline;\" id=\"1096\">Password: secrete code to gain access</p></li><li style=\"padding-top: 11pt;padding-left: 60pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"1097\"><p style=\"display: inline;\" id=\"1098\">See captured screen as a reference.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1099\"><br id=\"1100\"></p><p class=\"s29\" style=\"padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"1101\">o</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 27pt;text-indent: -21pt;text-align: left;\" id=\"1102\"><p style=\"display: inline;\" id=\"1103\">Click “Create user”</p><p style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"1104\">Step 5: select starter kits.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1105\"><br id=\"1106\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1107\"><span id=\"1108\"><img width=\"585\" height=\"232\" alt=\"image\" src=\"Image_030.jpg\" id=\"1109\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1110\"><br id=\"1111\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1112\">You can choose any one for your sites. It will install selected starter kits. It contains Templates, xslt, css and other extra files based on selected starter kits. This is good way to learn for new Umbraco developer. By installing out of box starter kits will provide guidance to new user about how templates, add XSLT, Document types, Macro, CSS etc works in Umbraco. By analyzing starter kits help developer to learn quickly and get familiar with environments.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1113\">I will start from scratch that‟s why I am not going to install any starter kits but you can install if you want. I will click last one “no thanks”. It will not install anything do not worry I will create later on. If you want to follow me click on “No thanks” and Click “Yes”.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"1114\"><b id=\"1115\">Final step: </b>you are done now click on “Set up your new websites” it will redirect to administrator control panel that is Backend of Umbraco sites<span class=\"s3\" id=\"1116\">11</span>.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1117\"><br id=\"1118\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1119\"><span id=\"1120\"><img width=\"601\" height=\"76\" alt=\"image\" src=\"Image_031.jpg\" id=\"1121\"></span></p><p style=\"padding-top: 12pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1122\">Note: if you browse you sites you will see Umbraco notice “Looks like there's still work to do”. It‟s because we did not set up our Umbraco sites. I will show step by step guide to set up.</p><h4 style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"1123\"><a name=\"a23\" id=\"1124\">Note: to install starter kits, it should be connected to internet. Being offline may not work to install starter kits.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1125\"><br id=\"1126\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1127\"><br id=\"1128\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1129\"><span id=\"1130\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_032.png\" id=\"1131\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1132\">11 <span class=\"s10\" id=\"1133\">Also called back office.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1134\"><span id=\"1135\"><img width=\"602\" height=\"441\" alt=\"image\" src=\"Image_033.png\" id=\"1136\"></span></p><h2 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading1137\" class=\"heading1137\"><a name=\"bookmark22\" id=\"1138\" style=\"color: lime;\">Back End Working Environment</a></h2><div id=\"contentheading1137\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 7pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"1139\">1 2 3 4 5</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1140\"><br id=\"1141\"></p><p style=\"padding-top: 4pt;padding-left: 106pt;text-indent: 0pt;text-align: left;\" id=\"1142\">6 8 9 10</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1143\"><br id=\"1144\"></p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: right;\" id=\"1145\">13</p><p style=\"padding-left: 75pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1146\">7</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1147\"><br id=\"1148\"></p><p style=\"padding-top: 4pt;padding-left: 86pt;text-indent: 0pt;text-align: left;\" id=\"1149\">11</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1150\"><br id=\"1151\"></p><p style=\"padding-top: 4pt;padding-left: 106pt;text-indent: 0pt;text-align: left;\" id=\"1152\">12</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1153\"><br id=\"1154\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1155\"><br id=\"1156\"></p><ol id=\"l21\"><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1158\"><p style=\"display: inline;\" id=\"1159\">Create: it‟s dynamic, will change based on Section item see number 12.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1160\"><br id=\"1161\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1162\"><p style=\"display: inline;\" id=\"1163\">Search: type text to search content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1164\"><br id=\"1165\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1166\"><p style=\"display: inline;\" id=\"1167\">About: To view Umbraco installed version, licensed and other information.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1168\"><br id=\"1169\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1170\"><p style=\"display: inline;\" id=\"1171\">Help: external link, will open Wiki page about Umbraco</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1172\"><br id=\"1173\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1174\"><p style=\"display: inline;\" id=\"1175\">Logout: click to log out. It will contain login user name</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1176\"><br id=\"1177\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1178\"><p style=\"display: inline;\" id=\"1179\">Content: it‟s a dynamic, will changed based on Section Items see number 12</p></li><li style=\"padding-top: 10pt;padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1180\"><p style=\"display: inline;\" id=\"1181\">Secondary items or child items of Main Items.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1182\"><br id=\"1183\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1184\"><p style=\"display: inline;\" id=\"1185\">Get Started: Umbraco provides information, news and external links</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1186\"><br id=\"1187\"></p></li><li style=\"padding-left: 41pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"1188\"><p style=\"display: inline;\" id=\"1189\">Latest edits: list latest change you have made on you site. 10)Change Password: change admin password. Password is hashed</p></li></ol><ol id=\"l22\"><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1191\"><p style=\"display: inline;\" id=\"1192\">Section: Main menu items, we can add custom section. Not covered here</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1193\"><br id=\"1194\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1195\"><p style=\"display: inline;\" id=\"1196\">Section Items: Items inside section. Sub Menu part of Section Menu. Mostly used in developing Umbraco, creating content and other</p></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"1197\"><br id=\"1198\"></p><p style=\"padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1199\">administrator purpose. Umbraco come up with six default section items Content, Media, User, Settings, Developer and Members.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1200\">Content: here editor create articles, edit, upload image. It‟s not technical stuff</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1201\"><br id=\"1202\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1203\">Media: it contains Media items. Image, Video, Audio is mostly Media items. Uploaded files go inside Media section. Using .net control developer can easily use others Directory to store files on their needs and requirements.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1204\">User: contains list of Users. All registered user are listed under User. Here you can set up user id, password, Email, permission and other personal information.</p><ul id=\"l23\"><li style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 18pt;text-align: left;\" id=\"1206\"><p style=\"display: inline;\" id=\"1207\">Users</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1208\"><p style=\"display: inline;\" id=\"1209\">User types</p></li><li style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 18pt;line-height: 178%;text-align: left;\" id=\"1210\"><p style=\"display: inline;\" id=\"1211\">User Permission Members: it contains</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1212\"><p style=\"display: inline;\" id=\"1213\">Members</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1214\"><p style=\"display: inline;\" id=\"1215\">Member Groups</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1216\"><p style=\"display: inline;\" id=\"1217\">Member types</p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"1218\">Settings: widely used in this “how to Umbraco”. Setting used to set up umbraco site. It contains</p></li><li style=\"padding-top: 9pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1219\"><p style=\"display: inline;\" id=\"1220\">Document Type</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1221\"><p style=\"display: inline;\" id=\"1222\">Templates</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1223\"><p style=\"display: inline;\" id=\"1224\">Style Sheet</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1225\"><p style=\"display: inline;\" id=\"1226\">Scripts</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1227\"><p style=\"display: inline;\" id=\"1228\">Dictionary</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1229\"><p style=\"display: inline;\" id=\"1230\">Language</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1231\"><p style=\"display: inline;\" id=\"1232\">Media types</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1233\"><br id=\"1234\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1235\">Developer: it contains all technical stuff.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1236\"><br id=\"1237\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1238\"><p style=\"display: inline;\" id=\"1239\">Cache browser</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1240\"><p style=\"display: inline;\" id=\"1241\">Data Types</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1242\"><p style=\"display: inline;\" id=\"1243\">Macro</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1244\"><p style=\"display: inline;\" id=\"1245\">Packages</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1246\"><p style=\"display: inline;\" id=\"1247\">Scripting Files</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1248\"><p style=\"display: inline;\" id=\"1249\">Xslt Files</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"1250\"><br id=\"1251\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1252\"><a name=\"a24\" id=\"1253\">Chapter 03: Document Type</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"1254\"><br id=\"1255\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1256\"><br id=\"1257\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1258\"><span id=\"1259\"><img width=\"529\" height=\"1\" alt=\"image\" src=\"Image_034.png\" id=\"1260\"></span></p></div><h2 style=\"padding-top: 4pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1261\" class=\"heading1261\"><a name=\"bookmark23\" id=\"1262\" style=\"color: lime;\">Document Type:</a></h2><div id=\"contentheading1261\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1263\">Document type is a core feature<span class=\"s3\" id=\"1264\">12 </span>of Umbraco cms; it is out of box document type feature. If you already work with Drupal CMS, you might be working with CCK (Content Construction Kit), Document Type is exactly same purpose as CCK that allows you to create fields.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1265\">Document type is a group of fields, that controls fields and fields are used to input data by content creator or editor while creating content on Umbraco sites. Content is second step after Document Type so that Document type structures the input fields, creates environment to add or create new content and facilitate content creating services to Editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1266\"><br id=\"1267\"></p></div><h2 style=\"padding-top: 8pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1268\" class=\"heading1268\"><a name=\"bookmark24\" id=\"1269\" style=\"color: lime;\">Document Type for Developers:</a></h2><div id=\"contentheading1268\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1270\">Developer creates document type based on groups of data that needs to be saved to and provides rich service to manage data and customize input fields.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1271\">You may still not clear what document type is so I am going to give one example as vcard case. Vcard websites I called “Semic Provider” has many fields like</p><ul id=\"l24\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1273\"><p style=\"display: inline;\" id=\"1274\">Logo</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1275\"><p style=\"display: inline;\" id=\"1276\">Title of Websites “Semic Provider” and</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1277\"><p style=\"display: inline;\" id=\"1278\">Slogan “Where content is understood by human and machine”.</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1279\">As a developer I want to provide a service to client so s/he can upload Logo, edit title of websites and slogan. Developer could do hard coding text into templates to display logo, title of websites and slogan but client can‟t change it later if s/he decided to change it. Client wants cms because s/he wants to control content without having knowledge of technical stuff like editing templates so as a developer we should provide more control over content. Logo, Title of Website and slogan are not same for all time; they can be changed later by client. To solve that problem we need to create Document type.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1280\">Document type is not single subject it‟s more complex for new Umbraco developer. I am going to look more details about document types. It contains Properties, Info, Structure and Tabs.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"1281\">Properties<span class=\"p\" id=\"1282\">: it‟s an input field that you create in document type, has more properties</span></h4></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1283\"><p style=\"display: inline;\" id=\"1284\">Name: name of your input field</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1285\"><p style=\"display: inline;\" id=\"1286\">Alias: alias used to retrieve value or fetch value that properties have</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1287\"><p style=\"display: inline;\" id=\"1288\">Type: input type for example , Text box, upload, Button, check box etc. these are based on Data Type</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1289\"><p style=\"display: inline;\" id=\"1290\">Tab- by default properties is assign to generic properties but you can assign to your custom tabs</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1291\"><br id=\"1292\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1293\"><span id=\"1294\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_035.png\" id=\"1295\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1296\"><a href=\"http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"1297\">12 </a>http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder- introduction/document-types official video about Document Type introduction</p><h4 style=\"padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1298\">Tabs<span class=\"p\" id=\"1299\">: Tabs is name of group for example name, age, address and email properties of person can be group together with tabs “personal Details” so in Tabs we create “Personal Details” and in Property tab we assign name, age, address and email properties to “Personal Details” tab. Tab and Tabs should not be confuse. Tabs, Properties, Structure and Info have save level inside Document Type tree and tab is child of Properties.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1300\"><br id=\"1301\"></p><h4 style=\"padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1302\">Structure<span class=\"p\" id=\"1303\">: Document type can have parent or child document Type here you check what‟s should be parent or child document type is allowed</span></h4><h4 style=\"padding-top: 10pt;padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1304\">Info<span class=\"p\" id=\"1305\">: it‟s not that much important as Properties, Tabs and Structure. Here you can assign template and other general setting or get more information about Document Type. More available settings inside Info are listed below. </span><span class=\"s10\" id=\"1306\">These are taken from official Umbraco sites. Please visit references.</span></h4><ul id=\"l25\"><li style=\"padding-left: 46pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1308\"><p style=\"display: inline;\" id=\"1309\">Name: name of Document Type</p></li><li style=\"padding-top: 2pt;padding-left: 46pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1310\"><p style=\"display: inline;\" id=\"1311\">Alias: alias of Document Type, use by Umbraco and developer when they work with Umbraco API and CodeInProject.</p></li><li style=\"padding-left: 46pt;text-indent: -18pt;text-align: left;\" id=\"1312\"><p style=\"display: inline;\" id=\"1313\">Thumbnail: Thumb image of Document Type displayed on create page dialog.</p></li><li style=\"padding-top: 2pt;padding-left: 46pt;text-indent: -18pt;text-align: left;\" id=\"1314\"><p style=\"display: inline;\" id=\"1315\">Icon: Icon of Document Type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1316\"><br id=\"1317\"></p></li><li style=\"padding-left: 46pt;text-indent: -18pt;text-align: left;\" id=\"1318\"><p style=\"display: inline;\" id=\"1319\">Description: Description of Document Type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1320\"><br id=\"1321\"></p></li><li style=\"padding-left: 46pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1322\"><p style=\"display: inline;\" id=\"1323\">Allowed Template. It is use to present data to end uses. If you fetch data using Xslt you can make document type without templates but Content based on that document type will not be able to provide preview mode if there is no associated template. One Document Type can have more than one template.</p></li><li style=\"padding-top: 10pt;padding-left: 46pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1324\"><p style=\"display: inline;\" id=\"1325\">Default Templates: that is a default template of document type. And used by Document Type</p></li></ul></li></ul><p class=\"s30\" style=\"padding-top: 9pt;padding-left: 10pt;text-indent: 0pt;text-align: justify;\" id=\"1326\"><a name=\"bookmark25\" id=\"1327\">Visual Diagram</a><span class=\"s31\" id=\"1328\">13 </span>for Document Type<span class=\"h3\" id=\"1329\">:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1330\"><br id=\"1331\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1332\"><span id=\"1333\"><img width=\"607\" height=\"165\" alt=\"image\" src=\"Image_036.png\" id=\"1334\"></span></p><p class=\"s32\" style=\"padding-top: 4pt;padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1335\">Document Type <span class=\"s10\" id=\"1336\">Name: </span><span class=\"s33\" id=\"1337\">Properties:</span></p><p class=\"s34\" style=\"padding-left: 13pt;text-indent: 18pt;line-height: 111%;text-align: left;\" id=\"1338\">- <span class=\"s35\" id=\"1339\">Alias: </span><span class=\"s33\" id=\"1340\">Tabs:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1341\"><br id=\"1342\"></p><h4 style=\"padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1343\">Create Content <span class=\"s36\" id=\"1344\">Properties and Tabs </span><span class=\"p\" id=\"1345\">of Document type</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1346\"><br id=\"1347\"></p><h4 style=\"padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"1348\"><a name=\"a25\" id=\"1349\">Templates</a><span class=\"p\" id=\"1350\">:</span></h4><p class=\"s23\" style=\"padding-top: 2pt;padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1351\">Alias <span style=\" color: #000;\" id=\"1352\">of Document Type‟s Properties</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1353\"><br id=\"1354\"></p><h4 style=\"padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1355\"><a name=\"a26\" id=\"1356\">Presentation of Content</a></h4><p style=\"padding-left: 13pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"1357\">End Users</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1358\"><br id=\"1359\"></p><p style=\"padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1360\"><span id=\"1361\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_037.png\" id=\"1362\"></span></p><p class=\"s3\" style=\"padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 120%;text-align: left;\" id=\"1363\">13 <span class=\"s10\" id=\"1364\">These diagrams are my own concept and may be other developer argues with Diagrams. There is no official diagram for Document Type.</span></p><p class=\"s10\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"1365\">References taken dates April 14, 2011</p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1366\">Diagram show, first create Document Type, second create Content based on Document Type Properties, use Alias of Document Type‟s properties and display data to End users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1367\"><br id=\"1368\"></p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1369\"><a name=\"a27\" id=\"1370\">Practical: let’s create Document Type for “Sites Setting”</a></h4><h3 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1371\"><a name=\"bookmark26\" id=\"1372\">Document Type Generic Properties: </a><span id=\"1373\"><img width=\"294\" height=\"22\" alt=\"image\" src=\"Image_038.jpg\" id=\"1374\"></span></h3><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1375\">Instruction:</p><ul id=\"l26\"><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1377\"><p style=\"display: inline;\" id=\"1378\">open Backend of Umbraco sites (your site /Umbraco/) in my case localhost:8080/umbraco/</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1379\"><p style=\"display: inline;\" id=\"1380\">Provide login credentials user id and password (my case “admin” “root” login and password respectively)</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1381\"><p style=\"display: inline;\" id=\"1382\">Click Setting on Section at bottom left corner, it will list all available features on Setting on top left corner. Expand Document Type</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1383\"><p style=\"display: inline;\" id=\"1384\">If you follow me Document Type must be empty so nothing will happen it‟s because I decided not to install any starter kits. Now I will create new document Type</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1385\"><p style=\"display: inline;\" id=\"1386\">Right Click on Document Type and Click “Create”. New windows popup.</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1387\"><p style=\"display: inline;\" id=\"1388\">Master Document Type: select none…</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1389\"><p style=\"display: inline;\" id=\"1390\">Name: name for Document Type I choose “Web Site Global Setting” but you can choose different if you want. Its name of document type.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1391\"><p style=\"display: inline;\" id=\"1392\">By Default “Create matching templates” is checked so leave default, it will create matching templates and we will use that templates as master templates.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1393\"><p style=\"display: inline;\" id=\"1394\">Press “Create” Button</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1395\"><p style=\"display: inline;\" id=\"1396\">Now Umbraco created new document Type and provide more option to input.</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1397\"><p style=\"display: inline;\" id=\"1398\">Click “Web site global Setting” to open document type. It will open four properties Info, Structure, Generic Properties and Tabs</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1399\"><p style=\"display: inline;\" id=\"1400\">Info: if you want to follow me provide these information</p><ul id=\"l27\"><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 108%;text-align: left;\" id=\"1402\"><p class=\"s8\" style=\"display: inline;\" id=\"1403\">Name <span class=\"p\" id=\"1404\">and </span>Alias <span class=\"p\" id=\"1405\">is not recommended to change because it will effect whole system</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1406\"><p class=\"s8\" style=\"display: inline;\" id=\"1407\">Icon<span class=\"p\" id=\"1408\">: Setting Agent. Select from dropdown</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1409\"><p class=\"s8\" style=\"display: inline;\" id=\"1410\">Thumbnail<span class=\"p\" id=\"1411\">: developer.png select from dropdown</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 108%;text-align: left;\" id=\"1412\"><p class=\"s8\" style=\"display: inline;\" id=\"1413\">Description<span class=\"p\" id=\"1414\">: “Manage your websites. Here you can set up your global sites. Example change logo, slogan etc.”</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1415\"><p class=\"s8\" style=\"display: inline;\" id=\"1416\">Allowed templates <span class=\"p\" id=\"1417\">and </span>Default Templates <span class=\"p\" id=\"1418\">leave default do not change it.</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1419\"><h4 style=\"display: inline;\" id=\"1420\"><a name=\"a28\" id=\"1421\">Remember to save before jump to next property</a><span class=\"p\" id=\"1422\">.</span></h4></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1423\"><p style=\"display: inline;\" id=\"1424\">You must see balloon success message at bottom right corner if anything goes wrong it will show up balloon message with error details.</p></li></ul></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1425\"><p style=\"display: inline;\" id=\"1426\">Structure: leave Default</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1427\"><p style=\"display: inline;\" id=\"1428\">Tabs: do not create for this document type</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1429\"><p style=\"display: inline;\" id=\"1430\">Generic Properties: click on Generic Properties. It‟s a most important in document Type. Click on “Add New Property”.</p></li><li style=\"padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1431\"><p style=\"display: inline;\" id=\"1432\">It will expand fields to input data, if you want to follow me provide these information without quotes</p><ul id=\"l28\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"1434\"><p class=\"s8\" style=\"display: inline;\" id=\"1435\">Name<span class=\"p\" id=\"1436\">: “Site Name”</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1437\"><p class=\"s8\" style=\"display: inline;\" id=\"1438\">Alias<span class=\"p\" id=\"1439\">: Leave Default, Umbraco will generate for you</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1440\"><p class=\"s8\" style=\"display: inline;\" id=\"1441\">Type<span class=\"p\" id=\"1442\">: Textstring , select from Drop down menu</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1443\"><p class=\"s8\" style=\"display: inline;\" id=\"1444\">Tab<span class=\"p\" id=\"1445\">: Leave Default</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1446\"><p class=\"s8\" style=\"display: inline;\" id=\"1447\">Mandator<span class=\"p\" id=\"1448\">: checked, means, it should not be empty</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1449\"><p class=\"s8\" style=\"display: inline;\" id=\"1450\">Validation<span class=\"p\" id=\"1451\">: for now leave empty</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1452\"><p class=\"s8\" style=\"display: inline;\" id=\"1453\">Description<span class=\"p\" id=\"1454\">: “Your Site Name”</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1455\"><h4 style=\"display: inline;\" id=\"1456\"><a name=\"a29\" id=\"1457\">Remember to save before jump to next properties</a><span class=\"p\" id=\"1458\">.</span></h4></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"1459\"><p style=\"display: inline;\" id=\"1460\">You can see balloon “success message” at bottom right corner if anything goes wrong it will show up balloon message with error details, correct error based on error message and Save again.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1461\">See captured screen as references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1462\"><br id=\"1463\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1464\"><br id=\"1465\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1466\">Document</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1467\">Save</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1468\">Document Type</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1469\">Add New Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1470\">Document</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1471\">Save</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1472\">Document Type</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1473\">Add New Property</p><p class=\"s10\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: left;\" id=\"1474\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1475\"> </span><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1476\"> </span>\t\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1477\"><br id=\"1478\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1479\"><span id=\"1480\"><img width=\"602\" height=\"546\" alt=\"image\" src=\"Image_039.png\" id=\"1481\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1482\">Delete</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1483\">Delete</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1484\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1485\">Settings</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1486\">Settings</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1487\"></p><p style=\"padding-top: 4pt;padding-left: 265pt;text-indent: -154pt;line-height: 113%;text-align: justify;\" id=\"1488\">Drop Down Menu <span class=\"s37\" id=\"1489\">Expand </span><span class=\"s10\" id=\"1490\">collapse Property</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1491\"><br id=\"1492\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1493\">Drag and Drop</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1494\">Drag and Drop</p><p style=\"padding-left: 130pt;text-indent: 0pt;text-align: left;\" id=\"1495\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1496\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1497\"><br id=\"1498\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1499\"><br id=\"1500\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 150%;text-align: left;\" id=\"1501\">Drag and Drop: <span class=\"p\" id=\"1502\">To sort property order, Umbraco automatically saves sorted order. </span>Delete: <span class=\"p\" id=\"1503\">To delete Property Type, if you delete property type it will delete all content relevant to that particular Property Type</span></h4><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1504\">Expand collapse Icon. <span class=\"p\" id=\"1505\">It will allows to expand or Collapse property Menu</span></h4><h4 style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1506\">Add New Property: <span class=\"p\" id=\"1507\">To Add new property</span></h4><h4 style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1508\">DropDown Menu: <span class=\"p\" id=\"1509\">to select value from Types or assign property to Tabs.</span></h4><p style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1510\">You must save manually after change; Umbraco does not automatically save for you.</p><h4 style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1511\">Alias<span class=\"p\" id=\"1512\">: alias is case sensitive and if you modify alias you may lose data if you are not sure how alias works. It‟s better not to change it in case you have to do so please make sure update in other parts of Umbraco system when you used that alias to fetch data. Alias is used to fetch data by Umbraco.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1513\"><br id=\"1514\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1515\">Type<span class=\"p\" id=\"1516\">: there are many types out of box available, for example, Rich text editors, True/False, Textstring, Upload, all are called Data Type I will discuss later. Changing type will lost data in content editing page but will still remain on database unless you save content after type changed. It‟s better not to change so make decision before you decide what type should be used.</span></h4><p style=\"padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"1517\">Some tips: if you want simple text editor select simple text editor, Textstring allows only to type text, Rich text editor will allows more rich features to content editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1518\"><br id=\"1519\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1520\"><a name=\"a30\" id=\"1521\">Note:</a></h4><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1522\">Repeat Same Process for <i id=\"1523\">Name</i>: “Slogan”, <i id=\"1524\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1525\">Type</i>: Textstring, <i id=\"1526\">Mandatory</i>: Checked, <i id=\"1527\">Description</i>: “Slogan here”</h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1528\"><br id=\"1529\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1530\">Repeat Same Process for <i id=\"1531\">Name</i>: “Logo”, <i id=\"1532\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1533\">Type</i>: Upload, <i id=\"1534\">Mandatory</i>: leave default, <i id=\"1535\">Description</i>: “Upload logo here”.</h4><h4 style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1536\"><a name=\"a31\" id=\"1537\">Notes: Type: upload allows content Creator to upload Image or files while create content, Type: Textstring allows to type text in input text field.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1538\"><br id=\"1539\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1540\">Let‟s see our final web grid how it look likes and create more Document Type for Semic website. See captured screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1541\"><br id=\"1542\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1543\">1</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1544\">2</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1545\">1</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1546\">2</p><p class=\"s10\" style=\"padding-left: 91pt;text-indent: 0pt;text-align: left;\" id=\"1547\">\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1548\"><br id=\"1549\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1550\">3</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1551\">3</p><p style=\"padding-left: 172pt;text-indent: 0pt;text-align: left;\" id=\"1552\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1553\"><br id=\"1554\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1555\"><br id=\"1556\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1557\">4</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1558\">4</p><p style=\"padding-left: 405pt;text-indent: 0pt;text-align: left;\" id=\"1559\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1560\"><br id=\"1561\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1562\">5</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1563\">5</p><p style=\"padding-left: 255pt;text-indent: 0pt;text-align: left;\" id=\"1564\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1565\"><br id=\"1566\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1567\"><span id=\"1568\"><img width=\"616\" height=\"384\" alt=\"image\" src=\"Image_040.png\" id=\"1569\"></span></p><ol id=\"l29\"><li style=\"padding-top: 4pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1571\"><p style=\"display: inline;\" id=\"1572\">Logo</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1573\"><p style=\"display: inline;\" id=\"1574\">Title</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1575\"><p style=\"display: inline;\" id=\"1576\">Slogan</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1577\"><p style=\"display: inline;\" id=\"1578\">Navigation Bar</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1579\"><p style=\"display: inline;\" id=\"1580\">Body</p></li></ol><h3 style=\"padding-top: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1581\" class=\"heading1581\"><a name=\"bookmark27\" id=\"1582\" style=\"color: green;\">Document Type “Tabs</a><span class=\"s3\" id=\"1583\">” </span><span id=\"1584\"><img width=\"400\" height=\"25\" alt=\"image\" src=\"Image_041.jpg\" id=\"1585\"></span></h3><div id=\"contentheading1581\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 18pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1586\">Here we just finished document type for global settings, but little document type is still remaining, take a look at navigation bar. There is title of Article like “News”, “Solution”, “Semic” and “Contact”. Now it‟s time to create Document type for these articles. I will introduce input pattern here, Input Pattern is fields or value that needs to provide when Editor creates content (Article) on Content page.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1587\">Input Pattern is “Title” and “Body”. Title is a title of article that shows up in navigation bar, Body is text or description of Title that show up when user click on particular title in navigation bar. For example if user clicks on “News” Title it will show up Description of News, in my case it will show up recent news details. Here “news”, “Solution” and “Semic” have only two Input Pattern title and Body, it means we can create many article with different title and body on same input pattern. So let‟s create one Document Type that can implement Two Input Pattern. Now let‟s create new document type “General Content” and also check matching templates and Press OK. If you want to follow me repeat same process as above to add new properties</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1588\">Add following properties into “General Content”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1589\"><br id=\"1590\"></p></div></li></ul></li><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1591\"><p class=\"s8\" style=\"display: inline;\" id=\"1592\">Before Adding Following Properties. Create first Two Tabs “Title” and “Description”.</p></li><li style=\"padding-bottom: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1593\"><p class=\"s8\" style=\"display: inline;\" id=\"1594\">Type Tab name and Press “New tab” it will create new tab</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1595\"><span id=\"1596\"><img width=\"472\" height=\"167\" alt=\"image\" src=\"Image_042.jpg\" id=\"1597\"></span></p><ul id=\"l30\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1599\"><p class=\"s8\" style=\"display: inline;\" id=\"1600\">Name: name of Tabs you created</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1601\"><p class=\"s8\" style=\"display: inline;\" id=\"1602\">Sort order: ordering number of tabs, lower sort order number will appear at top of the grater sort order number in “Generic Properties”</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1603\"><p class=\"s8\" style=\"display: inline;\" id=\"1604\">Delete: To delete tabs, related property will automatically assign to Generic Properties if tabs is deleted.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1605\"><br id=\"1606\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1607\"><p style=\"display: inline;\" id=\"1608\">Name: “Content <i id=\"1609\">Title”</i>, Alias: Use Default, Type: <i id=\"1610\">Textstring</i>, Tab, use Default, Mandator: <i id=\"1611\">checked</i>, Description: <i id=\"1612\">Article Title</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"1613\"><p style=\"display: inline;\" id=\"1614\">Name: “Content <i id=\"1615\">Body”</i>, Alias, Use Default, Type: <i id=\"1616\">Rich Text Editor</i>, Tab, use Default, Mandator: <i id=\"1617\">checked</i>, Description: <i id=\"1618\">Body text here for Article</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1619\"><p style=\"display: inline;\" id=\"1620\">Name: “<i id=\"1621\">Use in Navigation”</i>, Alias, Use Default, Type: <i id=\"1622\">True/False</i>, Tab, use Default, Mandatory: <i id=\"1623\">checked</i>, Description: <i id=\"1624\">Checked to show content in Navigation bar.</i></p><p style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"1625\">-</p><p class=\"s8\" style=\"padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1626\">See captured screen as references for Document type “Tabs”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1627\"><br id=\"1628\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1629\">Name of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1630\">Alias of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1631\">Type of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1632\">Name of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1633\">Alias of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1634\">Type of Property</p><p style=\"padding-left: 19pt;text-indent: 0pt;text-align: left;\" id=\"1635\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1636\"> </span><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1637\"> </span><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1638\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1639\"><br id=\"1640\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1641\"><span id=\"1642\"><img width=\"534\" height=\"404\" alt=\"image\" src=\"Image_043.png\" id=\"1643\"></span></p><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1644\" class=\"heading1644\"><a name=\"bookmark28\" id=\"1645\" style=\"color: green;\">Document Type Structure: </a><span id=\"1646\"><img width=\"345\" height=\"27\" alt=\"image\" src=\"Image_044.jpg\" id=\"1647\"></span></h3><div id=\"contentheading1644\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 12pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1648\">It‟s a little bit tricky, news items are added each time if there is new things happen, so we need to create two Document Types. One Document Type is for News Container and another for news article. News Container is like a container that contains news article.</p><p class=\"s39\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1649\">Purpose: <span class=\"p\" id=\"1650\">Umbraco developer can set up hierarchy structure so it will limit or prevent from creating non relevant content to content editor. For example I want only news items inside News Container, we want to mange content or data. I don‟t want to create any content that is not news items inside News container, to achieve that goal I can set up structure to News Container Document Type so it will only allows to create child content only relevant to news article. Let‟s begin to create Two Document Type “News Container” and “News Article”</span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1651\">Instruction: process is similar to create News Container Document Type as above mentioned.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1652\">Document Type “News Container”</p></div></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1653\"><p style=\"display: inline;\" id=\"1654\">Create, Document Type “News Container”</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1655\"><p style=\"display: inline;\" id=\"1656\">Name: “<i id=\"1657\">News Items”</i>, Alias: Use Default, Type: <i id=\"1658\">Label</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1659\">it’s a news container”.</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1660\"><p class=\"s8\" style=\"display: inline;\" id=\"1661\">Remember to Save</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1662\">Document Type “News Article”</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1663\"><p style=\"display: inline;\" id=\"1664\">Create Document Type “News Article”</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1665\"><p style=\"display: inline;\" id=\"1666\">Name: <i id=\"1667\">News Title</i>, Alias: Use Default, Type: <i id=\"1668\">Textstring</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1669\">News Title”.</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1670\"><p class=\"s8\" style=\"display: inline;\" id=\"1671\">Remember to Save</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1672\"><p style=\"display: inline;\" id=\"1673\">Name: “<i id=\"1674\">News Body”</i>, Alias: Use Default, Type: <i id=\"1675\">simple Editor</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1676\">news details”.</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1677\"><p class=\"s8\" style=\"display: inline;\" id=\"1678\">Remember to Save</p><p class=\"s8\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1679\">Let’s set up structure Open “Structure” of Document Type “News Container” as checked document type you want to set up as child nodetypes. In my case “News Article” see screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1680\"><br id=\"1681\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1682\"><span id=\"1683\"><img width=\"413\" height=\"243\" alt=\"image\" src=\"Image_045.png\" id=\"1684\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1685\"><br id=\"1686\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1687\"><a name=\"a32\" id=\"1688\">Creating Child Document Type</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1689\"><br id=\"1690\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1691\">There are two ways of creating child Document Type.</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1692\">First Ways. If you remember that we selected none “Master Document Type” when we created document type for global Setting, News Container and General Content. If you want to create child document type you can select desire master document type while you are creating Document Type first time.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1693\">Second Way: second way to create child document type is Right click on Document Type that you want to use as master Document Type and Click on “Create”. This is another way to create child document type.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1694\">Purpose: creating child document type allows Developer to reuse properties that have in master document type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1695\"><br id=\"1696\"></p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1697\">Notes: Do not forget to play around all types of Child Document type, Structure, Info, Properties, Tabs, Validation and different Data Types or Type etc.</p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading1698\" class=\"heading1698\"><a name=\"bookmark29\" id=\"1699\" style=\"color: green;\">Document Type API:</a></h3><div id=\"contentheading1698\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 35pt;line-height: 114%;text-align: justify;\" id=\"1700\">We are creating document type manually by right click on Document Type using backend of Umbraco site. It‟s also technical stuff and you need to know Umbraco stuff to set up, if you want to be a Umbraco developer in future, you should not look on top to ocean, you have to go more deep until bottom of ocean. Umbraco CMS will convert all your manual work in programming language and execute code. Let‟s look what‟s happening inside Umbraco when you manually create document type, how it‟s working and get basic Umbraco API knowledge.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1701\">Umbraco has namespace “<span class=\"s40\" id=\"1702\">umbraco.cms.businesslogic.web‛ </span>that contains los of Class. Here I will discuss DocumentType only.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1703\"><br id=\"1704\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1705\"><p class=\"s41\" style=\"display: inline;\" id=\"1706\">Manual Work: “Create”</p><ul id=\"l31\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"1708\"><p class=\"s40\" style=\"display: inline;\" id=\"1709\">When you right click on Document Type and press ‚Create‛. You have to provide Document Type Name.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"1710\"><p class=\"s40\" style=\"display: inline;\" id=\"1711\">At that time Umbraco execute MakeNew() methods on server that methods are responsible to create Document Type that will effect on Database. <span style=\" color: #2B91AE;\" id=\"1712\">DocumentType</span>.MakeNew(<span style=\" color: #2B91AE;\" id=\"1713\">User</span>, docTypename).Save();</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"1714\"><p class=\"s40\" style=\"display: inline;\" id=\"1715\">User will be automatically assigned by Umbraco based on your backend login information, Note that not all uses have access to create document type. docTypename is Name of Document Type you provided first time. Save() is void methods, it will save Document Type to database. Saving to database means to make data available next time to use.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1716\"><br id=\"1717\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1718\"><p class=\"s41\" style=\"display: inline;\" id=\"1719\">Manual Work: “Add New Property”</p><ul id=\"l32\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"1721\"><p class=\"s40\" style=\"display: inline;\" id=\"1722\">Add new property will execute AddPropertyType(<span style=\" color: #2B91AE;\" id=\"1723\">DataTypeDefinition</span>, name, description) methods. Three parameters DataTypeDefinition, name and description and there is also more overloads on that methods.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"1724\"><p class=\"s40\" style=\"display: inline;\" id=\"1725\">DataTypeDefinition – Data Type you selected, Umbraco only use Id of Data Type. When you select data type, Umbraco automatically take id of data type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1726\"><br id=\"1727\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1728\"><p class=\"s41\" style=\"display: inline;\" id=\"1729\">Manual Work: “New Tab”</p><ul id=\"l33\"><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"1731\"><p class=\"s40\" style=\"display: inline;\" id=\"1732\">Umbraco execute AddVirtualTab(tabName) to add new tab, tabName is name of tab you provided.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1733\"><p class=\"s42\" style=\"display: inline;\" id=\"1734\">DocumentType</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1735\"><p class=\"s40\" style=\"display: inline;\" id=\"1736\">dt.AddVirtualTab(tabName);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1737\"><br id=\"1738\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1739\"><p class=\"s43\" style=\"display: inline;\" id=\"1740\"><a name=\"a33\" id=\"1741\">Setting Tabs on Generic Properties.</a></p><ul id=\"l34\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"1743\"><p class=\"s40\" style=\"display: inline;\" id=\"1744\">When you select tab to organize you preoperty Umbraco will assign tabs on that Property.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1745\"><p class=\"s42\" style=\"display: inline;\" id=\"1746\">DocumentType <span style=\" color: #000;\" id=\"1747\">dt;</span></p></li><li style=\"padding-top: 3pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1748\"><p class=\"s40\" style=\"display: inline;\" id=\"1749\">dt.SetTabOnPropertyType(PropertyType, <span style=\" color: #2B91AE;\" id=\"1750\">Tab </span>Id);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"1751\"><p class=\"s40\" style=\"display: inline;\" id=\"1752\">here property Type is type of new property and Tab Id is node id of Tabs you created, all Names are for visual representation of data and id or aliad is for machine or Umbraco system to represent object.</p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"1753\">-</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1754\"><p class=\"s43\" style=\"display: inline;\" id=\"1755\"><a name=\"a34\" id=\"1756\">Manual Work “Delete”</a></p><ul id=\"l35\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1758\"><p class=\"s40\" style=\"display: inline;\" id=\"1759\">If you would like to delete Document Type you will right click on document type and press ‚Delete‛.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1760\"><p class=\"s40\" style=\"display: inline;\" id=\"1761\">Umbraco will execute Delete() methods to delete document type.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1762\"><p class=\"s40\" style=\"display: inline;\" id=\"1763\">Here is an example</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1764\"><p class=\"s42\" style=\"display: inline;\" id=\"1765\">DocumentType<span style=\" color: #000;\" id=\"1766\">.GetByAlias(docAlias).delete();</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1767\"><p class=\"s40\" style=\"display: inline;\" id=\"1768\">First call GetByAlias() method to select document type by alias, also you can select document type by Id.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1769\"><p class=\"s40\" style=\"display: inline;\" id=\"1770\">Second Call Delete() method to delete Document,</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1771\"><p class=\"s40\" style=\"display: inline;\" id=\"1772\">This time you don’t need to save. Because Delete will delete selected document type from Database as well.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"1773\"><p class=\"s40\" style=\"display: inline;\" id=\"1774\">Whatever you made change on Umbraco, you have to press Save icon <span id=\"1775\"><img width=\"27\" height=\"26\" alt=\"image\" src=\"Image_046.jpg\" id=\"1776\"></span><span class=\"s28\" id=\"1777\">    </span>to save your work. That will execute Void methods Save().</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1778\"><br id=\"1779\"></p><p class=\"s40\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1780\">More Document Type API:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1781\"><br id=\"1782\"></p><p class=\"s40\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1783\">Here is more API listed, for full list of API, you need to download source code or decompile DLL files that provided by Umbraco binary.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1784\"><br id=\"1785\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1786\"><p class=\"s40\" style=\"display: inline;\" id=\"1787\">getVirtualTabs</p><ul id=\"l36\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1789\"><p class=\"s40\" style=\"display: inline;\" id=\"1790\">returns list of available tabs on document type</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1791\"><p class=\"s40\" style=\"display: inline;\" id=\"1792\">HasTemplate()</p><ul id=\"l37\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1794\"><p class=\"s40\" style=\"display: inline;\" id=\"1795\">Return bool value ,true if document type has template</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1796\"><p class=\"s40\" style=\"display: inline;\" id=\"1797\">allowedTemplates</p><ul id=\"l38\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1799\"><p class=\"s40\" style=\"display: inline;\" id=\"1800\">return List of Allowed templates.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1801\"><p class=\"s40\" style=\"display: inline;\" id=\"1802\">PropertyTypes</p><ul id=\"l39\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1804\"><p class=\"s40\" style=\"display: inline;\" id=\"1805\">Return list of Property types.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1806\"><p class=\"s40\" style=\"display: inline;\" id=\"1807\">HasChildren</p><ul id=\"l40\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1809\"><p class=\"s40\" style=\"display: inline;\" id=\"1810\">Return Bool Value, True if Document type has children document type.</p></li></ul></li></ul><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1811\">These are few mostly used API. To change value using API you can use visual studio. If field has “Set” methods you can change value using API.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1812\">Example:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1813\"><br id=\"1814\"></p><p class=\"s40\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 200%;text-align: left;\" id=\"1815\"><span style=\" color: #2B91AE;\" id=\"1816\">DocumentType</span>.GetByAlias(<span style=\" color: #A21515;\" id=\"1817\">\"NewsContainer\"</span>).Alias = <span style=\" color: #A21515;\" id=\"1818\">\"newNewsContainer\"</span>; It will change alias of News Container to ‘newNewsContainer’.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1819\"><br id=\"1820\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1821\"><a name=\"a35\" id=\"1822\">Chapter 04: Content</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"1823\"><br id=\"1824\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1825\"><br id=\"1826\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1827\"><span id=\"1828\"><img width=\"385\" height=\"1\" alt=\"image\" src=\"Image_047.png\" id=\"1829\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1830\"><br id=\"1831\"></p></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1832\" class=\"heading1832\"><a name=\"bookmark30\" id=\"1833\" style=\"color: lime;\">Content:</a></h2><div id=\"contentheading1832\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1834\">Content is one of the Section menu item in umbraco. Backend user will have access to content area. It contains articles or data that created by Editor based on document type. Lets Familiar with Envornment of Content if you Right Click over Content you can see different options. See captured screen bellow</p><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1835\">Create<span class=\"p\" id=\"1836\">: To create new content</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1837\"><br id=\"1838\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1839\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1840\">Republish Entire Sites: <span class=\"p\" id=\"1841\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1842\">Reload nodes: <span class=\"p\" id=\"1843\">To clear cache on server side, client sites and recreate new cache.</span></h4><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1844\">Create<span class=\"p\" id=\"1845\">: To create new content</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1846\"><br id=\"1847\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1848\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1849\">Republish Entire Sites: <span class=\"p\" id=\"1850\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1851\">Reload nodes: <span class=\"p\" id=\"1852\">To clear cache on server side, client sites and recreate new cache.</span></h4><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1853\"><span id=\"1854\"><img width=\"254\" height=\"407\" alt=\"image\" src=\"Image_048.jpg\" id=\"1855\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1856\"><br id=\"1857\"></p><h3 style=\"padding-top: 12pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1858\" class=\"heading1858\"><a name=\"bookmark31\" id=\"1859\" style=\"color: green;\">Creating Content:</a></h3><div id=\"contentheading1858\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1860\">It‟s a very simple process, if you click on Create it will show up new windows promoting you to type name of content and selecting option of Document Type in drop down list. After clicked on “Create” will create content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1861\"><span id=\"1862\"><img width=\"179\" height=\"196\" alt=\"image\" src=\"Image_049.jpg\" id=\"1863\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1864\">Name: name of content and it‟s not the title of article that will show up in end users. It‟s a name of content and only used in Content section, it will not show up to end users.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1865\">It‟s time to create Content for Vcard “SemicProvider” sites. First let‟s start with creating content for global settings<span class=\"s19\" id=\"1866\">. I will show you only for global settings, for rest of content you can repeat similar process.</span></p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1867\">Instruction: Right click on Content and Click on “Create” provide following information</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1868\">Name: “Setting sites”</p><p class=\"s8\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1869\">Document Type: select “Web Site Global Settings” from drop down list.</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1870\">Press “Create”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1871\"><br id=\"1872\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1873\">It will ask more information based on document type. Provide following info and press “Save” button. See highlighted color text. See captured screen “Image content”</p><p class=\"s19\" style=\"padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"1874\">Image: Content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1875\"><br id=\"1876\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1877\"><span id=\"1878\"><img width=\"547\" height=\"552\" alt=\"image\" src=\"Image_050.png\" id=\"1879\"></span></p><p class=\"s45\" style=\"padding-top: 4pt;padding-left: 92pt;text-indent: 0pt;text-align: left;\" id=\"1880\">Save Content <span class=\"p\" id=\"1881\">Save and Publish</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1882\"><br id=\"1883\"></p><p style=\"padding-left: 39pt;text-indent: 0pt;text-align: left;\" id=\"1884\">Preview</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1885\"><br id=\"1886\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1887\">Content Name</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1888\">Content Name</p><p style=\"padding-left: 348pt;text-indent: 0pt;text-align: left;\" id=\"1889\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1890\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1891\"><br id=\"1892\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1893\"><br id=\"1894\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1895\">Node Id of Content</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1896\">Node Id of Content</p><p style=\"padding-left: 348pt;text-indent: 0pt;text-align: left;\" id=\"1897\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1898\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1899\"><br id=\"1900\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1901\">Present Content to End</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1902\">Present Content to End</p><p style=\"padding-left: 350pt;text-indent: 0pt;text-align: left;\" id=\"1903\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1904\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1905\"><br id=\"1906\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1907\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1908\">Image content</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1909\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1910\">Image content</span></p><p style=\"padding-left: 4pt;text-indent: 0pt;text-align: left;\" id=\"1911\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1912\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1913\"><br id=\"1914\"></p><p style=\"padding-top: 11pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1915\">Did you remember Site Name, Slogan and Logo were created at Document Type “Web site global settings”? We added type properties Textstring for Site name and Slogan and type:Upload for Logo. Here in Content page we can type site name and slogan because we selected type:Textstring and we can upload image in logo because we selected type:Upload in Document Type “Web Site Global Settings”. Now I hope you understand concept of Document Type and relation between Content and Document Type:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1916\"><br id=\"1917\"></p><p class=\"s8\" style=\"padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1918\">Notes: Create content for “Developer”, “Solution” and “Semic” using document type “General Content”. It’s a same process as we created just now. After that you will be more familiar with Creating Content in Umbraco sites and relation of Document Type and content. Let’s See next image relations between content and Document Type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1919\"><span id=\"1920\"><img width=\"573\" height=\"427\" alt=\"image\" src=\"Image_051.png\" id=\"1921\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1922\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1923\">Content</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1924\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1925\">Content</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1926\"></p></div><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1927\" class=\"heading1927\"><a name=\"bookmark32\" id=\"1928\" style=\"color: green;\">Relations between Document Type and Content</a></h3><div id=\"contentheading1927\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"1929\"><br id=\"1930\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1931\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1932\">Document Type</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1933\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1934\">Document Type</span></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1935\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1936\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1937\"><br id=\"1938\"></p><p class=\"s10\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1939\"><span style=\" color: #F00;\" id=\"1940\">Red Long-dash arrow</span>: Name of Properties <span style=\" color: #00AF50;\" id=\"1941\">Green arrow</span>: Type of Properties</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1942\"><br id=\"1943\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1944\">To understand relation between Document Type and Content may be difficult for first time but when you practice more it will be easy to understand. See two images above and follow red and green arrow telling relation between Document Type and Content.</p><p class=\"s4\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"1945\">Delete Document Type<span class=\"s8\" id=\"1946\">: </span><span class=\"p\" id=\"1947\">if you delete Document Type all associated content will be also deleted from websites, it‟s not possible to undo or restore Document Type in case delete.</span></p><p class=\"s4\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1948\">Update Document Type Properties: <span class=\"p\" id=\"1949\">you can change document type property for example you can change property type from type Simple Editor to type Rich Text Editor, data will not be lost because both are related type, both editor allows editor to edit text as simple or rich text environment. When you change type from type Textstring to type Label or type Upload, in that case all content modified after document type property has changed will lost previous data because type are not similar. So changing property type may cost data lost.</span></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1950\">Delete Content: <span class=\"p\" id=\"1951\">you can delete content. Deleted items will moved to Recycle Bin so if you accidently delete any content no need to feel panic you can easily restore from Recycle bin directory.</span></h4></div><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1952\" class=\"heading1952\"><a name=\"bookmark33\" id=\"1953\" style=\"color: green;\">Explore content Properties:</a></h3><div id=\"contentheading1952\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-bottom: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1954\">There is more option for content that we created on Content section based on document type. Let‟s right click on “Setting site” content and explore more options. See captured screen.</p><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1955\">Create<span class=\"p\" id=\"1956\">: Create new child article example News Container.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1957\">Edit in Canvas: <span class=\"p\" id=\"1958\">will allows editor to edit content in Frontend using browser.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1959\">Delete<span class=\"p\" id=\"1960\">: Move content to Recycle Bin</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 122%;text-align: left;\" id=\"1961\">Move<span class=\"p\" id=\"1962\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1963\">: Copy content, Copy will not delete content</span></h4><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1964\">from old location</p><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1965\">Sort<span class=\"p\" id=\"1966\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1967\">Rollback<span class=\"p\" id=\"1968\">: allows to rollback content based on previous changed,</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1969\">Manage Hostnames: <span class=\"p\" id=\"1970\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1971\">Permission: <span class=\"p\" id=\"1972\">set up permission</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1973\">Publich Access: <span class=\"p\" id=\"1974\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1975\">Audit Trill<span class=\"p\" id=\"1976\">: list of history of content</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1977\">Notifications<span class=\"p\" id=\"1978\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1979\">Send to Translation: <span class=\"p\" id=\"1980\">used for multiple languages</span></h4><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1981\">Create<span class=\"p\" id=\"1982\">: Create new child article example News Container.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1983\">Edit in Canvas: <span class=\"p\" id=\"1984\">will allows editor to edit content in Frontend using browser.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1985\">Delete<span class=\"p\" id=\"1986\">: Move content to Recycle Bin</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 122%;text-align: left;\" id=\"1987\">Move<span class=\"p\" id=\"1988\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1989\">: Copy content, Copy will not delete content</span></h4><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1990\">from old location</p><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1991\">Sort<span class=\"p\" id=\"1992\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1993\">Rollback<span class=\"p\" id=\"1994\">: allows to rollback content based on previous changed,</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1995\">Manage Hostnames: <span class=\"p\" id=\"1996\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1997\">Permission: <span class=\"p\" id=\"1998\">set up permission</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1999\">Publich Access: <span class=\"p\" id=\"2000\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2001\">Audit Trill<span class=\"p\" id=\"2002\">: list of history of content</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"2003\">Notifications<span class=\"p\" id=\"2004\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2005\">Send to Translation: <span class=\"p\" id=\"2006\">used for multiple languages</span></h4><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2007\"><span id=\"2008\"><img width=\"180\" height=\"528\" alt=\"image\" src=\"Image_052.jpg\" id=\"2009\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2010\"><br id=\"2011\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2012\">Notes:</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2013\">I am not going to create content for other document types because creating</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2014\">content is same for all document type just you need to select different document type when you create content. You can easily follow my process to create content for other document type.</p><p style=\"padding-left: 5pt;text-indent: 35pt;line-height: 114%;text-align: justify;\" id=\"2015\">Creating News Container and News Article are a bit different. First Create Article on “News Container” after that right click on just created content (“News Container” Document type content), then create news article. You can see Document Type “News Article” is only option to choose if you followed me. That is Allowed child nodetypes that we set up in Document Type “Structure” property of “News Container” Document Type.</p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2016\">I have created more content for Semic Provider site. You can see captured screen and compare with your version.</p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2017\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\" style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2018\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\" style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2019\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2020\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2021\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\" style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2022\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\" style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2023\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2024\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2025\"><span id=\"2026\"><img width=\"298\" height=\"400\" alt=\"image\" src=\"Image_053.jpg\" id=\"2027\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2028\"><br id=\"2029\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2030\">We are just working in backend part of Semic Provider site. If you preview article you see empty page. No content its because we have not touch any Templates yet, templates are responsible to output content or to present data to end users. I will discuss later or about templates. When you preview your content Umbraco will insert red strip with white color text “Preview Mode-click to end” on top right cornner of browser. Umbraco provides notification to you about your are viewing on Preview Mode. To exit click browser will close automatically.</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2031\"><span id=\"2032\"><img width=\"424\" height=\"230\" alt=\"image\" src=\"Image_054.jpg\" id=\"2033\"></span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2034\">For now you can‟t preview you data because associated templates are empty.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2035\"><br id=\"2036\"></p><p class=\"s49\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2037\"><a name=\"bookmark34\" id=\"2038\">Content API:</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2039\"><br id=\"2040\"></p><p class=\"s50\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2041\">In Umbraco code Content is understood by Document so that creating content in Umbraco Backend means executing Document code in Umbraco Core code inside server. Core code is programming language written in C# language. Content API is very important, if you want to create content using API, for example if you move sites from another websites to Umbraco CMS site, probably you want to get all data or content from old site as archive. If there is 1000 of articles in old site, it‟s not good idea to import content manually. You have to think some sort of automatic process to import content. Here is basic API for Umbraco Content.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2042\"><span style=\" color: #00F;\" id=\"2043\">namespace </span>umbraco.cms.businesslogic.web contains Document Class. Creating Content means Executing <span style=\" color: #2B91AE;\" id=\"2044\">Document</span>.MakeNew() methods of Document Class.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2045\">MakeNew() takes four parameters</p><ul id=\"l41\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2047\"><p class=\"s52\" style=\"display: inline;\" id=\"2048\">1<span class=\"s54\" id=\"2049\">st </span>parameter String Title: its title of Content, that title shown in Content Tree.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2050\"><p class=\"s52\" style=\"display: inline;\" id=\"2051\">2<span class=\"s54\" id=\"2052\">nd </span>Parameter DocumentType: Document Type, when you select document</p><p class=\"s52\" style=\"padding-left: 41pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2053\">type Umbraco will automatically use that document type.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: justify;\" id=\"2054\"><p class=\"s52\" style=\"display: inline;\" id=\"2055\">3<span class=\"s54\" id=\"2056\">rd</span><span class=\"s55\" id=\"2057\"> </span>parameter User: Umbraco does not allow to crate content without valid and has access user. When you logged in Umbraco automatically take your login user and use to create document.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2058\"><p class=\"s52\" style=\"display: inline;\" id=\"2059\">4<span class=\"s54\" id=\"2060\">th </span>parameter parent id: it’s a hierarchy of content. If you want to</p><p class=\"s52\" style=\"padding-left: 41pt;text-indent: 0pt;text-align: justify;\" id=\"2061\">create content at root level you must provide parent id -1. In Semic Provider content ‘News Article’ is child of ‘news container’ in that case all news article’s content’s parent id is Node id of ‚news Container‛. Its means if you provide -1 as parent id, Content will be created at root level. If you provide node id of content, it will create content as child of provided node id content.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2062\"><p class=\"s52\" style=\"display: inline;\" id=\"2063\">Example:</p><ul id=\"l42\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2065\"><p class=\"s52\" style=\"display: inline;\" id=\"2066\">Document dt = Document.MakeNew(‚Developer‛,GeneralContent, User(0), -1);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2067\"><p class=\"s52\" style=\"display: inline;\" id=\"2068\">dt.Publish();</p><ul id=\"l43\"><li style=\"padding-left: 113pt;text-indent: -18pt;text-align: justify;\" id=\"2070\"><p class=\"s52\" style=\"display: inline;\" id=\"2071\">Description: Create document name ‚Developer‛ on Document Type ‚GeneralContent‛. Use user 0. 0 is admin user id and always exist on Umbraco system. -1 will create Document at Root level.</p></li><li style=\"padding-left: 113pt;text-indent: -18pt;text-align: justify;\" id=\"2072\"><p class=\"s52\" style=\"display: inline;\" id=\"2073\">Publish() method should be invoke to publish content or when you press Publish icon Umbraco execute publish() method</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2074\"><br id=\"2075\"></p></li></ul></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2076\"><p class=\"s50\" style=\"display: inline;\" id=\"2077\">Delete(): Delete method executed when you delete content.</p></li></ul><ul id=\"l44\"><li style=\"padding-left: 113pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2079\"><p class=\"s53\" style=\"display: inline;\" id=\"2080\"><span class=\"s50\" id=\"2081\">Example: </span>Document <span style=\" color: #000;\" id=\"2082\">dt = </span><span style=\" color: #00F;\" id=\"2083\">new </span>Document<span style=\" color: #000;\" id=\"2084\">(id);</span></p></li></ul><p class=\"s52\" style=\"padding-left: 185pt;text-indent: 0pt;text-align: left;\" id=\"2085\">dt.delete(); id is node id of content.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2086\">Delete() method will move content to Recycle Bin.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2087\"><br id=\"2088\"></p><p class=\"s50\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2089\">That is very basic of Umbraco API for Creating Content. For more details you can look inside umbraco.cms.businesslogic.web.document namespace. I strongly recommend looking source code and analyzing codes.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2090\"><br id=\"2091\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2092\"><a name=\"a36\" id=\"2093\">Chapter 05: Templates</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2094\"><br id=\"2095\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2096\"><br id=\"2097\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2098\"><span id=\"2099\"><img width=\"432\" height=\"1\" alt=\"image\" src=\"Image_055.png\" id=\"2100\"></span></p></div></div><h2 style=\"padding-top: 4pt; padding-left: 7pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2101\" class=\"heading2101\"><a name=\"bookmark35\" id=\"2102\" style=\"color: lime;\">Templates:</a></h2><div id=\"contentheading2101\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2103\">Purpose of templates is to present data to client or end users. Umbraco cms make totally separate visual presentation and content, to proof that concept you can preview any content we created before, we don‟t see any content on web it‟s just blank web page because we have not touch template means content is totally separated from visual presentation. Using templates we can present data or content to end users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2104\"><br id=\"2105\"></p><h4 style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2106\">Templates are user friendly: <span class=\"p\" id=\"2107\">The way you write code in template is same way as you write html code. You start with doc type deceleration, html, head, and body. No difference I will show you later. Only difference is to fetch data and insert into templates, fetching data can be done in different ways using alias, alias is created by Umbraco in Document Type creation period, use user control to fetch data, use xslt and xpath to fetch data using marco or use Razor Engine. I will focus in XSLT to fetch data from xml, use macro to render data to templates and present to end users.</span></h4><p style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2108\">CSS: the way we use css is not difference other than using in normal html page. It‟s very simple and you can copy your normal css text from text editor and paste to Umbraco CSS editing environment page. It will work as expected without any problem. Two ways are there to use CSS. One way is create css using Umbraco service or Create CSS file separate into normal text editor and place into “css” directory. You can also create your custom directory and use that, directory is not important; important is linking style sheet to templates. Linking style sheet is same as you use in normal html page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2109\"><span id=\"2110\"><img width=\"584\" height=\"298\" alt=\"image\" src=\"Image_056.png\" id=\"2111\"></span></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2112\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\"/&gt; that is use to link document is style.css file exist inside css directory.No worries Umbraco will also show you path you can copy path to href easily. Lets look captured screen.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2113\"><br id=\"2114\"></p><p class=\"s10\" style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2115\">Name: name of style sheet.</p><p class=\"s35\" style=\"padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2116\">Start writing your CSS code here</p><p class=\"s9\" style=\"padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2117\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"<span style=\" color: #538DD3;\" id=\"2118\">css/style.css</span>\"/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2119\"><br id=\"2120\"></p><p class=\"s10\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2121\">Note: I will not cover CSS explanation in howtoumbraco basic. Style.css will be available in CD.</p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2122\" class=\"heading2122\"><a name=\"bookmark36\" id=\"2123\" style=\"color: green;\">Template working Environment</a></h3><div id=\"contentheading2122\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"2124\"><br id=\"2125\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2126\"><span id=\"2127\"><img width=\"602\" height=\"326\" alt=\"image\" src=\"Image_057.png\" id=\"2128\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 124pt;text-indent: 0pt;text-align: left;\" id=\"2129\">1 2 3 4 5 6 7 8 9</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2130\"><br id=\"2131\"></p><ol id=\"l45\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"2133\"><p style=\"display: inline;\" id=\"2134\">Save button, whatever you made change on template, you need to press Save button to save your work.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2135\"><p style=\"display: inline;\" id=\"2136\">Insert Umbraco page field: use to insert page field. Using page field document type alias is used here to insert data into template. Umbraco will fetch and insert content on the fly. Alias that we had in document type are necessary in order to fetch content. By click on icon will list all page alias available to insert.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2137\"><span id=\"2138\"><img width=\"331\" height=\"271\" alt=\"image\" src=\"Image_058.jpg\" id=\"2139\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2140\">I am going to show one example: instruction: click on empty area at line 3 and Click on “Insert Umbraco Page field” number 2 icon. You can see new windows open with input options.</p><ul id=\"l46\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2142\"><p style=\"display: inline;\" id=\"2143\">Choose field: here you can get list of alias that you created at document type. If you want to follow me select “contentBody” from</p><p style=\"padding-left: 77pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2144\">dropdown list and press insert. It will insert filed. See captured screen bellow</p><p class=\"s29\" style=\"padding-left: 59pt;text-indent: 0pt;text-align: left;\" id=\"2145\">o  <span id=\"2146\"><img width=\"482\" height=\"73\" alt=\"image\" src=\"Image_059.jpg\" id=\"2147\"></span></p></li><li style=\"padding-top: 3pt;padding-left: 83pt;text-indent: -21pt;text-align: left;\" id=\"2148\"><p style=\"display: inline;\" id=\"2149\"><span class=\"s56\" id=\"2150\">&lt;</span><span style=\" color: #E26C09;\" id=\"2151\">umbraco:Item </span>field<span class=\"s56\" id=\"2152\">=</span>\"<span style=\" color: #76923B;\" id=\"2153\">contentBody</span>\" runat<span class=\"s56\" id=\"2154\">=</span>\"<span style=\" color: #76923B;\" id=\"2155\">server</span>\"<span class=\"s56\" id=\"2156\">&gt;&lt;/</span><span style=\" color: #E26C09;\" id=\"2157\">umbraco:Item</span><span class=\"s56\" id=\"2158\">&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2159\"><span id=\"2160\"><img width=\"597\" height=\"217\" alt=\"image\" src=\"Image_060.png\" id=\"2161\"></span></p></li><li style=\"padding-top: 2pt;padding-left: 80pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2162\"><p class=\"s58\" style=\"display: inline;\" id=\"2163\">&lt;Umbraco:Item runat=”server”&gt; &lt;/Umbraco:item&gt; will executed by Umbraco cms. In my case filed=”contentBody”, here Content that provided in Document type “General Content‟s property „Content Body‟ ” by editor on Content page will be inserted on the fly. So user will see content body data on web page. for more clear see diagram.</p></li></ul><h4 style=\"padding-left: 300pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2164\">Document Type: <span class=\"p\" id=\"2165\">General Content</span></h4><h4 style=\"padding-left: 300pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2166\">Tab: <span class=\"p\" id=\"2167\">Description </span>Property Name: <span class=\"p\" id=\"2168\">Content Body</span></h4><h4 style=\"padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2169\"><a name=\"a37\" id=\"2170\">Property Alias:</a></h4><p style=\"padding-top: 2pt;padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2171\">contentBody</p><h4 style=\"padding-top: 2pt;padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2172\">Type: <span class=\"p\" id=\"2173\">Richtext editor</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2174\"><br id=\"2175\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2176\"><span id=\"2177\"><img width=\"562\" height=\"111\" alt=\"image\" src=\"Image_061.png\" id=\"2178\"></span></p><h4 style=\"padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2179\">Content: <span class=\"p\" id=\"2180\">Home </span>Description: <span class=\"p\" id=\"2181\">welcome to semic provider.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2182\"><br id=\"2183\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2184\"><span id=\"2185\"><img width=\"475\" height=\"153\" alt=\"image\" src=\"Image_062.png\" id=\"2186\"></span></p><h4 style=\"padding-top: 10pt;padding-left: 192pt;text-indent: 0pt;text-align: center;\" id=\"2187\">Field: <span class=\"p\" id=\"2188\">contentBody</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2189\"><br id=\"2190\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2191\"><span id=\"2192\"><img width=\"561\" height=\"158\" alt=\"image\" src=\"Image_063.png\" id=\"2193\"></span></p><h4 style=\"padding-top: 10pt;padding-left: 19pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2194\">Preview of Content Home: <span class=\"p\" id=\"2195\">Now Umbraco fetching content to Web sites.</span></h4><p style=\"padding-left: 19pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2196\">1084.aspx where 1084 is node id of content Home.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2197\"><br id=\"2198\"></p><p class=\"s4\" style=\"padding-top: 4pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2199\">We created document type “General Content”, added new property “Content Body” with alias “contentBody” and type “Richtext editor”. In Content we add content on Richtext environment. In Template we use alias “contentBody” to fetch data that added on content using Richtext environment. It’s a core concept of Umbraco for templates.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2200\"><br id=\"2201\"></p></li><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2202\"><p style=\"display: inline;\" id=\"2203\">Insert Dictionary Field: Similar as Umbrcao page filed but it is used to insert Dictionary Items. Not covered in this “Howtoumbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2204\"><br id=\"2205\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2206\"><p style=\"display: inline;\" id=\"2207\">Insert Macro: it‟s a mostly used in templates and I will cover this Macro Chapter. Macro is very important chapter. Developer should not miss about Macro.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2208\"><br id=\"2209\"></p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2210\"><p style=\"display: inline;\" id=\"2211\">Insert Content Area Placeholder: We can easily create child templates in Umbraco, child has access to parents generic properties. Umbraco templates have great features “Inheritance Character” that child template can inject data to Parent template using “Insert Content Area Placeholder”, first you create Placeholder in parent template and in child template you insert content area. If you want follow me I want to use “Web Sites Global Settings” templates as Master templates or parent templates. Parent templates can have placeholder to inject data from child templates. Now let‟s insert Content area Placeholder at “Web Sites Global Settings” templates.</p><ul id=\"l47\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2213\"><p style=\"display: inline;\" id=\"2214\">Instruction:</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2215\"><p style=\"display: inline;\" id=\"2216\">Open “Web Site Global Setting” Template</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2217\"><p style=\"display: inline;\" id=\"2218\">First Click on any place at working environment where you would like to insert content Place holder. Crusher should blink now, Click on “Insert Content area Placeholder” it will open new windows now type placeholder name “ContentBody” and Press Insert. See captured screen highlighted code are just added.</p><p class=\"s29\" style=\"padding-left: 5pt;text-indent: 53pt;line-height: 118%;text-align: left;\" id=\"2219\">o <span id=\"2220\"><img width=\"416\" height=\"162\" alt=\"image\" src=\"Image_064.jpg\" id=\"2221\"></span><span class=\"s28\" id=\"2222\"> </span><span class=\"p\" id=\"2223\"> Inheritance Properties: </span><span class=\"s10\" id=\"2224\">Umbraco template support inheritance properties so we can easily share global setting in sites for example. Navigation bar, heading, logo and web layout are global setting that will remain same look and feel for different content. “Web Sites Global Settings” template contains such global settings. Now I want to inject content from child templates on that place holder “ContentBody” I just created above. To inject data from child template first I have to assign child template. Click on General Content Template, in Master template change from “none” to “Web Site Global Settings” and Save “General Content” template. You can see General Content Templates now moved from root level to child template of “Web site Global Settings” Template. See captured screen</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2225\"><br id=\"2226\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2227\"><span id=\"2228\"><img width=\"496\" height=\"147\" alt=\"image\" src=\"Image_065.jpg\" id=\"2229\"></span></p><p style=\"padding-top: 11pt;padding-left: 23pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2230\">-</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2231\"><p style=\"display: inline;\" id=\"2232\">Insert content Area: if parents‟ templates have content area placeholder, using insert content area we can insert content area placeholder at child templates. In my case general content is child of “Web Site Global Setting” template. Lets Insert Content area by clicking of “Insert Content Area” icon, select “ContentBody” placeholder and press insert. If you like to cancel, just press cancel. Umbraco content placeholder “ContentBody” inserted after Content place holder “ContentPlaceHolderDefault”. This content place holder is created default by Umbraco. Delete “ContentPlaceHolderDefault” from Template “General content” and Move Umbraco field “contentBody” inside content Placeholder “ContentBody”. Remember to save. If you follow me “General Content” Template code should be like bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2233\"><br id=\"2234\"></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2235\"><span class=\"s59\" style=\" background-color: #FF0;\" id=\"2236\">&lt;%</span><span class=\"s60\" id=\"2237\">@ </span><span class=\"s61\" id=\"2238\">Master </span><span class=\"s62\" id=\"2239\">Language</span><span class=\"s60\" id=\"2240\">=\"C#\" </span><span class=\"s62\" id=\"2241\">MasterPageFile</span><span class=\"s60\" id=\"2242\">=\"~/masterpages/WebSiteGlobalSettings.master\" </span><span class=\"s62\" id=\"2243\">AutoEventWireup</span><span class=\"s60\" id=\"2244\">=\"true\" </span><span class=\"s59\" style=\" background-color: #FF0;\" id=\"2245\">%&gt;</span></p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2246\">&lt;<span style=\" color: #800000;\" id=\"2247\">asp</span>:<span style=\" color: #800000;\" id=\"2248\">Content </span><span style=\" color: #F00;\" id=\"2249\">ID</span>=\"Content2\" <span style=\" color: #F00;\" id=\"2250\">ContentPlaceHolderId</span>=\"ContentBody\" <span style=\" color: #F00;\" id=\"2251\">runat</span>=\"server\"&gt;</p><p class=\"s63\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2252\">&lt;!-- Insert \"ContentBody\" markup here --&gt;</p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2253\">&lt;<span style=\" color: #800000;\" id=\"2254\">umbraco</span>:<span style=\" color: #800000;\" id=\"2255\">Item </span><span style=\" color: #F00;\" id=\"2256\">ID</span>=\"Item1\" <span style=\" color: #F00;\" id=\"2257\">field</span>=\"contentBody\" <span style=\" color: #F00;\" id=\"2258\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"2259\">umbraco</span>:<span style=\" color: #800000;\" id=\"2260\">Item</span>&gt;</p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2261\">&lt;/<span style=\" color: #800000;\" id=\"2262\">asp</span>:<span style=\" color: #800000;\" id=\"2263\">Content</span>&gt;</p><p style=\"padding-top: 10pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2264\">- Remember to preview your content after changed in your template<span style=\" color: #00F;\" id=\"2265\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2266\"><br id=\"2267\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2268\"><p style=\"display: inline;\" id=\"2269\">Insert Inline Razor Macro: Razor engine is used if you don‟t want to use Xslt to fetch data from xml file. Not covered in this “HowtoUmbraco Basic”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2270\"><br id=\"2271\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2272\"><p style=\"display: inline;\" id=\"2273\">Help: it will open documentation. Remember to read it if you need help.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2274\"><br id=\"2275\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2276\"><p style=\"display: inline;\" id=\"2277\">Working „Environment or area: Here you add all your template coding.</p></li></ol><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2278\">Template &lt;%@ Master Language= \"C#\" MasterPageFile= \"</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2279\">~/umbraco/masterpages/default.master\" AutoEventWireup=\"true\" %&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2280\"><br id=\"2281\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2282\">Description: all templates are inherited by default.master template, it‟s a Umbraco default master template.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2283\"><br id=\"2284\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2285\">Content Placeholder: all your html code should go inside Content place holder. If you want to follow me copy and paste code bellow in “Web Site Global Settings” Templates. Note: I am not going to explain code because here nothing new just added html tags. You can look yourself.</p></div><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2286\" class=\"heading2286\"><a name=\"bookmark37\" id=\"2287\" style=\"color: green;\">“Web Site Global Settings” Templates:</a></h3><div id=\"contentheading2286\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2288\">Note: if you are copying code from here, do not copy <span class=\"s56\" id=\"2289\">&lt;</span>%@ Master Language<span class=\"s56\" id=\"2290\">=</span>\"C#\" MasterPageFile<span class=\"s56\" id=\"2291\">=</span>\"~/umbraco/masterpages/default.master\" AutoEventWireup<span class=\"s56\" id=\"2292\">=</span>\"true\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2293\">%<span class=\"s56\" id=\"2294\">&gt;</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"2295\">line because Umbraco will insert that line automatically in that case Umbraco CMS throw out yellow screen of death with Error message “ <b id=\"2296\">Parser Error Message: </b>There can be only one 'master' directive.” To solve this problem make sure there is only one master page template exist on that template. If you want to follow me your “Web Site Global Settings” template code should looks like bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2297\"><br id=\"2298\"></p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2299\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"2300\">&lt;%</span><span class=\"s66\" id=\"2301\">@ </span><span class=\"s67\" id=\"2302\">Master </span><span class=\"s68\" id=\"2303\">Language</span><span class=\"s66\" id=\"2304\">=\"C#\" </span><span class=\"s68\" id=\"2305\">MasterPageFile</span><span class=\"s66\" id=\"2306\">=\"~/umbraco/masterpages/default.master\" </span><span class=\"s68\" id=\"2307\">AutoEventWireup</span><span class=\"s66\" id=\"2308\">=\"true\" </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"2309\">%&gt;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2310\"><span style=\" color: #800000;\" id=\"2311\">asp</span>:<span style=\" color: #800000;\" id=\"2312\">Content </span><span style=\" color: #F00;\" id=\"2313\">ContentPlaceHolderID</span>=\"ContentPlaceHolderDefault\" <span style=\" color: #F00;\" id=\"2314\">runat</span>=\"server\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2315\">&lt;<span style=\" color: #800000;\" id=\"2316\">html</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2317\">&lt;<span style=\" color: #800000;\" id=\"2318\">head</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2319\">&lt;<span style=\" color: #800000;\" id=\"2320\">link </span><span style=\" color: #F00;\" id=\"2321\">rel</span>=\"stylesheet\" <span style=\" color: #F00;\" id=\"2322\">type</span>=\"text/css\" <span style=\" color: #F00;\" id=\"2323\">href</span>=\"css/style.css\"/&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2324\">&lt;/<span style=\" color: #800000;\" id=\"2325\">head</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2326\">&lt;<span style=\" color: #800000;\" id=\"2327\">body</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2328\">&lt;<span style=\" color: #800000;\" id=\"2329\">div </span><span style=\" color: #F00;\" id=\"2330\">class</span>=\"head\"&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2331\">&lt;<span style=\" color: #800000;\" id=\"2332\">div </span><span style=\" color: #F00;\" id=\"2333\">class</span>=\"top\"&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2334\">&lt;<span style=\" color: #800000;\" id=\"2335\">div </span><span style=\" color: #F00;\" id=\"2336\">class</span>=\"title\"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2337\"><br id=\"2338\"></p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2339\">&lt;/<span style=\" color: #800000;\" id=\"2340\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"2341\">&lt;/<span style=\" color: #800000;\" id=\"2342\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"2343\">&lt;/<span style=\" color: #800000;\" id=\"2344\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2345\">&lt;<span style=\" color: #800000;\" id=\"2346\">div </span><span style=\" color: #F00;\" id=\"2347\">class</span>=\"navi\"&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2348\">&lt;<span style=\" color: #800000;\" id=\"2349\">div </span><span style=\" color: #F00;\" id=\"2350\">class</span>=\"navigation\"&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2351\">&lt;/<span style=\" color: #800000;\" id=\"2352\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2353\">&lt;/<span style=\" color: #800000;\" id=\"2354\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2355\">&lt;<span style=\" color: #800000;\" id=\"2356\">div </span><span style=\" color: #F00;\" id=\"2357\">class</span>=\"middle\"&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"2358\">&lt;<span style=\" color: #800000;\" id=\"2359\">div </span><span style=\" color: #F00;\" id=\"2360\">class</span>=\"content\" &gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2361\">&lt;<span style=\" color: #800000;\" id=\"2362\">asp</span>:<span style=\" color: #800000;\" id=\"2363\">ContentPlaceHolder </span><span style=\" color: #F00;\" id=\"2364\">Id</span>=\"ContentBody\" <span style=\" color: #F00;\" id=\"2365\">runat</span>=\"server\"&gt;</p><p class=\"s69\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2366\">&lt;!-- Insert default \"ContentBody\" markup here --&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2367\">&lt;/<span style=\" color: #800000;\" id=\"2368\">asp</span>:<span style=\" color: #800000;\" id=\"2369\">ContentPlaceHolder</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2370\">&lt;/<span style=\" color: #800000;\" id=\"2371\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2372\">&lt;/<span style=\" color: #800000;\" id=\"2373\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2374\">&lt;/<span style=\" color: #800000;\" id=\"2375\">body</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2376\">&lt;/<span style=\" color: #800000;\" id=\"2377\">html</span>&gt; &lt;/<span style=\" color: #800000;\" id=\"2378\">asp</span>:<span style=\" color: #800000;\" id=\"2379\">Content</span>&gt;</p></div><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2380\" class=\"heading2380\"><a name=\"bookmark38\" id=\"2381\" style=\"color: green;\">Template API:</a></h3><div id=\"contentheading2380\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2382\">Template API can be found using namespace <span class=\"s66\" id=\"2383\">using </span><span class=\"s70\" id=\"2384\">umbraco.cms.businesslogic.template;</span></p><ul id=\"l48\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"2386\"><p style=\"display: inline;\" id=\"2387\">Manual work Create Template:</p><ul id=\"l49\"><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2389\"><p style=\"display: inline;\" id=\"2390\">That manual work will execute <span style=\" color: #2B91AE;\" id=\"2391\">Template</span>.MakeNew(name, u);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2392\"><p style=\"display: inline;\" id=\"2393\">Name: name of Template</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"2394\"><p style=\"display: inline;\" id=\"2395\">U is user. Umbraco will automatically assign user when you logged in backend. If you want to create Template using API you should provide valid user, user should have access to create Template otherwise Umbraco will throughout exception.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: justify;\" id=\"2396\"><p style=\"display: inline;\" id=\"2397\">Manual work Delete</p><ul id=\"l50\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2399\"><p style=\"display: inline;\" id=\"2400\">It will execute Template.Delete() void methods.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2401\"><p style=\"display: inline;\" id=\"2402\">It‟s not possible to restore deleted templates.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: justify;\" id=\"2403\"><p style=\"display: inline;\" id=\"2404\">Setting master Template:</p><ul id=\"l51\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2406\"><p style=\"display: inline;\" id=\"2407\">Umbraco will execute Template. MasterTemplate = Template.Id;</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2408\"><p style=\"display: inline;\" id=\"2409\">Where Template.Id is node id of parent Template.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: justify;\" id=\"2410\"><p style=\"display: inline;\" id=\"2411\">Save:</p><ul id=\"l52\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"2413\"><p style=\"display: inline;\" id=\"2414\">Save button will execute Save() methods to save work. It will effect to Database see captured screen bellow as reference. I will not explain here but its not difficult to understand if you know basic knowledge of Sql server and Database.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2415\"><br id=\"2416\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2417\"><span id=\"2418\"><img width=\"616\" height=\"325\" alt=\"image\" src=\"Image_066.png\" id=\"2419\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2420\"><br id=\"2421\"></p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2422\">These results are from Database name „umbracodb‟ table „cmsTemplate‟. In your case database name can be deference as compared to mine.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2423\"><br id=\"2424\"></p><p class=\"s10\" style=\"padding-left: 23pt;text-indent: 0pt;text-align: justify;\" id=\"2425\">Notice:</p><p class=\"s10\" style=\"padding-top: 1pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2426\">I am not using anymore “insert page field” ways to fetch data in templates because if I fetch data using document type alias it will fetch data only if template are checked in Document type allowed templates. If templates are not associated with document type, Data will not be fetching using “Insert Page field” technique so that I am going to continue to fetch data using Xslt and use macro to render content to templates<span class=\"p\" id=\"2427\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2428\"><br id=\"2429\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2430\"><a name=\"a38\" id=\"2431\">Chapter 06: XSLT</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2432\"><br id=\"2433\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2434\"><br id=\"2435\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2436\"><span id=\"2437\"><img width=\"330\" height=\"1\" alt=\"image\" src=\"Image_067.png\" id=\"2438\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2439\"><br id=\"2440\"></p><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2441\" class=\"heading2441\"><a name=\"bookmark39\" id=\"2442\" style=\"color: lime;\">XSLT:</a></h2><div id=\"contentheading2441\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2443\">Xslt provides fast data fetching processing from xml file. All published content in your site are structured in xml format by Umbraco system. Xslt is the way to transfer xml data to html format, Xslt and Xpath are used together to provide rich service. Xpath is used to move pointer back and forth to crawl content in xml file or to move pointer from one node to another node. My assumption is you already familiar with Xslt and Xpath, I will directly going to show creating and using Xslt.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2444\"><br id=\"2445\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2446\"><a name=\"a39\" id=\"2447\">Using XSLT:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2448\"><br id=\"2449\"></p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2450\">Xslt transfer xml to html, using Xslt we are fetching data from xml and passing to template in Umbraco site. We need to create associated macro first, link that macro with Xslt and Use that macro in Template. Here macro works as bridge between Xslt and Template. Umbraco is user friendly so you don‟t have to worry about macro. Each time you check “Create Macro” when you create new Xslt, Umbraco will automatically generate Macro for you.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2451\"><br id=\"2452\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2453\"><span id=\"2454\"><img width=\"333\" height=\"495\" alt=\"image\" src=\"Image_068.png\" id=\"2455\"></span></p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2456\">Let‟s starts to work with Xslt Instruction:</p></div></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2457\"><p style=\"display: inline;\" id=\"2458\">Click “Developer” in Sections menu. “XSLT Files” menu is available inside Developer menu items. See captured screen: “Xslt.jpg”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2459\"><p style=\"display: inline;\" id=\"2460\">Right click on “XSLT Files” and Click “Create”. Umbraco open new windows: if you want to follow me provide these information</p><ul id=\"l53\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2462\"><p style=\"display: inline;\" id=\"2463\">Name: “GlobalSetting”</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2464\"><p style=\"display: inline;\" id=\"2465\">Choose a Template: Clean</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2466\"><p style=\"display: inline;\" id=\"2467\">Checked: Create Macro</p></li></ul></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2468\"><p style=\"display: inline;\" id=\"2469\">Press “Create” see captured screen bellow “XsltCreate.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2470\"><br id=\"2471\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2472\">“GlobalSetting.xslt” file must be created inside XSLT file menu at Developer section.</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2473\">Purpose of creating Globalsetting.xslt is to fetch Site name, site title and logo.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2474\"><br id=\"2475\"></p><p style=\"padding-left: 5pt;text-indent: 33pt;text-align: left;\" id=\"2476\">Xslt.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2477\"><br id=\"2478\"></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2479\">XsltCreate.jpg</p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2480\"><a name=\"bookmark40\" id=\"2481\">Xslt working environments:</a></h3><p style=\"text-indent: 0pt;text-align: left;\" id=\"2482\"><br id=\"2483\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2484\"><span id=\"2485\"><img width=\"616\" height=\"467\" alt=\"image\" src=\"Image_069.png\" id=\"2486\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"2487\">1 2 3 4 5 <span class=\"s72\" id=\"2488\">6 </span><span class=\"s73\" id=\"2489\">7</span></p><p class=\"s38\" style=\"padding-top: 9pt;padding-left: 78pt;text-indent: 0pt;text-align: center;\" id=\"2490\">8</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2491\"><br id=\"2492\"></p><p class=\"s38\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"2493\">9</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2494\"><br id=\"2495\"></p><p class=\"s38\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"2496\">A</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2497\"><br id=\"2498\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2499\"><br id=\"2500\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2501\">Image: xsltEnvironment.jpg</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2502\">Image: xsltEnvironment.jpg</p><p style=\"padding-left: 257pt;text-indent: 0pt;text-align: left;\" id=\"2503\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"2504\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2505\"><br id=\"2506\"></p><ol id=\"l54\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2508\"><p style=\"display: inline;\" id=\"2509\">Coding area: here you can type Xslt code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2510\"><br id=\"2511\"></p><ol id=\"l55\"><li style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2513\"><h4 style=\"display: inline;\" id=\"2514\">Save <span class=\"p\" id=\"2515\">Button To save work after changed</span></h4></li><li style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2516\"><h4 style=\"display: inline;\" id=\"2517\">Insert xslt:value of <span class=\"p\" id=\"2518\">: use to insert xslt value, you can also select prevalue. 3- </span>Insert xslt:variable : <span class=\"p\" id=\"2519\">use to insert xslt variable</span></h4></li></ol></li></ol><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2520\">4- <b id=\"2521\">Insert xslt:if </b>: use to insert condition statement if 5- <b id=\"2522\">Insert xslt:for-each : </b>use for looping purpose</p><ol id=\"l56\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2524\"><h4 style=\"display: inline;\" id=\"2525\">Insert xslt:choose : <span class=\"p\" id=\"2526\">use to insert choose condition statement</span></h4></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2527\"><h4 style=\"display: inline;\" id=\"2528\">Visualize Xslt: <span class=\"p\" id=\"2529\">it‟s a big feature in Umbraco. Using visualizes Xslt you can see what output will be made by your Xslt Code on templates. You can also choose different Content and see what will be output.</span></h4></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2530\"><h4 style=\"display: inline;\" id=\"2531\">Name <span class=\"p\" id=\"2532\">of xslt file</span></h4></li><li style=\"padding-top: 2pt;padding-left: 23pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2533\"><h4 style=\"display: inline;\" id=\"2534\">Skip testing: <span class=\"p\" id=\"2535\">if you checked on Skip Testing, Umbraco will not validate your Xslt code so you will not see any error message.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2536\"><br id=\"2537\"></p><h4 style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2538\"><a name=\"a40\" id=\"2539\">Coding Area:</a></h4></li></ol></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2540\"><p style=\"display: inline;\" id=\"2541\">It starts with xml deceleration and version, it is using xml version 1.0 and encoding utf-8. <span class=\"s19\" id=\"2542\">See at line 1 Image: xsltEnvironment.jpg</span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2543\"><p style=\"display: inline;\" id=\"2544\">You define replacement text yourself at Xslt using DTD<span class=\"s3\" id=\"2545\">14</span>. To use that features you have to have DTD schema knowledge. By default Umbraco inserted one entity.</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2546\">&lt;!DOCTYPE xsl:stylesheet [&lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2547\">here Enitity nbsp can be used anywhere in xslt. On execution time Umbraco replace nbsp with text „&amp;#x00A0;‟ that we defined at DOCTYPE Entity. <span class=\"s19\" id=\"2548\">See line 2 at Image xsltEnvironment.jpg</span></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2549\"><p style=\"display: inline;\" id=\"2550\">Stylesheet Declaration: You can extend Xslt further more using .NET Class libraries. In some cases Xslt may not enough to fetch data in such cases you can extend Xslt. You need to add your Xslt extension here in order to use it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2551\"><br id=\"2552\"></p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2553\"><a name=\"bookmark41\" id=\"2554\">.NET Class Registration</a></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2555\">Adding Assembly to Umbraco sites:</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2556\"><a name=\"a41\" id=\"2557\">Open ~/config/xsltExtensions.config file, here you add Assembly first.</a></p><p class=\"s76\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2558\">&lt;ext assembly=\"assemblyName\" type=\"assemblyName.namespace.type\" alias=\"custom\"&gt;</p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: justify;\" id=\"2559\">Assembly <b id=\"2560\">= location of your files</b></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2561\">Type <b id=\"2562\">= namespace name</b></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2563\"><a name=\"a42\" id=\"2564\">Alias </a><b id=\"2565\">= you use that alias at Xslt to refer assembly.</b></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2566\"><br id=\"2567\"></p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2568\">Add alias in xslt stylesheet.</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2569\"><a name=\"a43\" id=\"2570\">Xmlns:LocalName = alias from xsltExtesion registration LocalName is used inside Xslt templates</a></p><p class=\"s75\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2571\">Alias = alias that you define when you registered assembly name at</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2572\">~/config/xsltExtesion.config file</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2573\">Now you are ready to use .NET Class library in Xslt.</p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2574\">exclude-result-prefixes=\"Assembly Alias”</p><p class=\"s77\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2575\">Use exclude to prevent Xslt from outputting namespace name.</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2576\">Note: ~ means your Umbraco root installation directory level.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2577\"><p class=\"s64\" style=\"display: inline;\" id=\"2578\">&lt;<span style=\" color: #2B91AE;\" id=\"2579\">xsl:output </span><span style=\" color: #F00;\" id=\"2580\">method</span>=<span style=\" color: #000;\" id=\"2581\">\"</span>xml<span style=\" color: #000;\" id=\"2582\">\" </span><span style=\" color: #F00;\" id=\"2583\">omit-xml-declaration</span>=<span style=\" color: #000;\" id=\"2584\">\"</span>yes<span style=\" color: #000;\" id=\"2585\">\"</span>/&gt;</p><p class=\"s75\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2586\"><a name=\"a44\" id=\"2587\">It will omit xml deceleration output</a></p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2588\">Let‟s start to work with Umbraco Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2589\"><p class=\"s64\" style=\"display: inline;\" id=\"2590\">&lt;<span style=\" color: #2B91AE;\" id=\"2591\">xsl:param </span><span style=\" color: #F00;\" id=\"2592\">name</span>=<span style=\" color: #000;\" id=\"2593\">\"</span>currentPage<span style=\" color: #000;\" id=\"2594\">\"</span>/&gt;</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2595\"><p style=\"display: inline;\" id=\"2596\">It‟s a very use full param in Umbraco. Umbraco will insert current page data. Current page means page that Templates, Content and Document Type using specific Xslt file in other words currentPage means current page. Value of currentPage depends on article or Content you are visiting now. Let‟s try to output currentPage value and see what will be output.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2597\"><p class=\"s78\" style=\"display: inline;\" id=\"2598\">Template Match</p><p class=\"s78\" style=\"padding-left: 113pt;text-indent: 0pt;line-height: 12pt;text-align: center;\" id=\"2599\">&lt;<span style=\" color: #2B91AE;\" id=\"2600\">xsl:template </span><span style=\" color: #F00;\" id=\"2601\">match</span>=<span style=\" color: #000;\" id=\"2602\">\"</span>/<span style=\" color: #000;\" id=\"2603\">\"</span>&gt;</p><p class=\"s78\" style=\"padding-left: 150pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2604\">&lt;<span style=\" color: #2B91AE;\" id=\"2605\">xsl:copy-of </span><span style=\" color: #F00;\" id=\"2606\">select</span>=<span style=\" color: #000;\" id=\"2607\">\"</span>$currentPage<span style=\" color: #000;\" id=\"2608\">\" </span>/&gt;</p><p class=\"s78\" style=\"padding-left: 114pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2609\">&lt;/<span style=\" color: #2B91AE;\" id=\"2610\">xsl:template</span>&gt;</p><p class=\"s82\" style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"2611\">o <span class=\"s78\" id=\"2612\">All your logic or html output you code between opening and closing tags of &lt;xsl:template&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2613\"><br id=\"2614\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2615\"><span id=\"2616\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_070.png\" id=\"2617\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2618\">14 <span class=\"s10\" id=\"2619\">Document Type Definition</span></p></li><li style=\"padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2620\"><p class=\"s78\" style=\"display: inline;\" id=\"2621\">Here we use xsl:copy-of select=‛$currentPage‛ to output current page data.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2622\"><br id=\"2623\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2624\"><p class=\"s78\" style=\"display: inline;\" id=\"2625\">To see outp<span class=\"p\" id=\"2626\">ut value use “visualize Xslt” button at top-right corner of Edit xsl working environment. Make sure you choose first Content using “Choose…” menu. Select Content after press “Visualize XSLT” button. You should see some data if content has some data. See captured screen bellow.</span></p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2627\"><br id=\"2628\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2629\"><span id=\"2630\"><img width=\"544\" height=\"332\" alt=\"image\" src=\"Image_071.png\" id=\"2631\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"2632\">A B C</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 13pt;text-align: right;\" id=\"2633\">G</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2634\"><br id=\"2635\"></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2636\">D</p><p class=\"s38\" style=\"padding-top: 9pt;text-indent: 0pt;text-align: right;\" id=\"2637\">E</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2638\"><br id=\"2639\"></p><p class=\"s38\" style=\"padding-top: 12pt;padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"2640\">F</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2641\"><br id=\"2642\"></p><ol id=\"l57\"><ol id=\"l58\"><li style=\"padding-top: 4pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"2645\"><p style=\"display: inline;\" id=\"2646\">Title of Content: first time it must be empty.</p></li><li style=\"padding-top: 2pt;padding-left: 60pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2647\"><p style=\"display: inline;\" id=\"2648\">Delete: To delete selected Content. It will not delete content from Content Section, it will only delete from Visualize Xslt service.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2649\"><p style=\"display: inline;\" id=\"2650\">Choose..: you can easily change or alter Content to visualize XSLT and see different output based on XSLT code.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2651\"><p style=\"display: inline;\" id=\"2652\">Visualize Xslt Button: Press to visualize XSLT</p></li><li style=\"padding-top: 2pt;padding-left: 60pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2653\"><p style=\"display: inline;\" id=\"2654\">Encode: Checked if you want to see xml formatted data, uncheck to see only content.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2655\"><p style=\"display: inline;\" id=\"2656\">Output of XSLT: it‟s a result; it‟s an output of your Xslt code, its output currentPage value. Same value will insert into templates.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2657\"><p style=\"display: inline;\" id=\"2658\">Press “x” to close Visualize XSLT service.</p></li></ol></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"2659\"><br id=\"2660\"></p><p class=\"s83 heading2661\" style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2661\"><a name=\"bookmark42\" id=\"2662\" style=\"color: blue;\">Xml File umbraco.config</a></p><div id=\"contentheading2661\" style=\"border: 5px solid rgb(0, 0, 255);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2663\">I mentioned Xslt use to fetch data from xml file. You must wonder about what xml file? Where is that xml file? Why it‟s in xml file? And more questions.</p><ul id=\"l59\"><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2665\"><p style=\"display: inline;\" id=\"2666\">Umbraco generates Umbraco.config temporary file it‟s structured in xml format, every time when you made change on content or document type. Umbraco remind you to publish content. It means, when you made change on content Umbraco made change only on Database. Umbraco does not fetch data from database to present data to end users unless you extend it using other programming language. One reason is it is slow process to fetch data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2667\"><br id=\"2668\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2669\">from database as compared to fetching data from xml file. Database may store in separate machine or separate location in server that need to travel data that cause slower process. Umbraco use great idea generating temporary xml files, that xml files cached in memory. Using temporary xml file it‟s dramatically faster to fetch data using Xslt. To see temporary xml generated file you need to locate directory “App_Data” in website root level and find umbraco.config file. “~/App_data/umbraco.config”</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2670\"><p style=\"display: inline;\" id=\"2671\">Open umbraco.config file using Note pad or other software, if you open with Visual studio it will easy to navigate. See captured screen. Your version can be difference.</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2672\"><br id=\"2673\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2674\"><br id=\"2675\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2676\"><span id=\"2677\"><img width=\"616\" height=\"512\" alt=\"image\" src=\"Image_072.png\" id=\"2678\"></span></p><p style=\"padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"2679\">Image: Umbracoconfig.jpg</p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2680\"><a name=\"bookmark43\" id=\"2681\">Relationship between Document Type and Umbraco.config Xml</a></h3><p class=\"s19\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2682\">See Image: Umbracoconfig.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2683\"><br id=\"2684\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2685\">Line 1: <span class=\"p\" id=\"2686\">xml declaration</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2687\"><br id=\"2688\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2689\">Line 2 to line 10: <span class=\"p\" id=\"2690\">DTD schema information</span></h4><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"2691\">Line 13: <span class=\"p\" id=\"2692\">Umbraco Root Element. All Elements go inside root node. Root is parent element for all.</span></h4><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2693\">Line 14: <span class=\"p\" id=\"2694\">Umbraco starts generating xml elements and attributes based on our document type and content. Did you notice Alias that used in Document type is Elements here?</span></h4><ul id=\"l60\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2696\"><p style=\"display: inline;\" id=\"2697\">GeneralContent is alias of Document Type “General Content”. All attributes inside “GeneralContent” element are inserted by Umbraco automatically.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2698\"><p style=\"display: inline;\" id=\"2699\">Now let‟s look child element of “GeneralContent” Element. Two more element “contentTitle” and “contentBody” also created. If you notice that we added two new property “contentTitle” and “contentBody” in Document Type “General Content”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"2700\"><p style=\"display: inline;\" id=\"2701\">Here in umbraco.config xml these new property structured as child of Document Type element tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2702\"><p style=\"display: inline;\" id=\"2703\">Probably you need time to understand, you have to go back to Document Type, see carefully all alias. Come back to umbraco.config xml file and analyze yourself that helps you to understand better.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2704\"><br id=\"2705\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2706\">Line 14: attributes: Umbraco generates few attributes automatically. Most attributes are self explanatory so easier to understand. I feel some attributes need to describe here for Umbraco New developers.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2707\"><p class=\"s32\" style=\"display: inline;\" id=\"2708\">id <span class=\"s10\" id=\"2709\">: it‟s a node id of content each content has different node id</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2710\"><br id=\"2711\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2712\"><p class=\"s32\" style=\"display: inline;\" id=\"2713\">parentID<span class=\"s10\" id=\"2714\">: node id of parent element. If you notice in Content API chapter we pass parent id -1 value. Means create content at root level in content but actually it means create content as child of root element. Umbraco assign root element id = -1 see line 13 Image: “Umbracoconfig.jpg;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2715\"><br id=\"2716\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2717\"><p class=\"s32\" style=\"display: inline;\" id=\"2718\">level<span class=\"s10\" id=\"2719\">: level of content. 1 means at root level if you create child content it will be level 2</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2720\"><br id=\"2721\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2722\"><p class=\"s32\" style=\"display: inline;\" id=\"2723\">nodeName<span class=\"s10\" id=\"2724\">: It‟s not a contentTitle that you provide on document type content title property. it‟s a title of Content that appear at Content Tree Section.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2725\"><br id=\"2726\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2727\"><p class=\"s32\" style=\"display: inline;\" id=\"2728\">urlName<span class=\"s10\" id=\"2729\">: name of url, content access using urlName. Example /home.aspx will load contain id 1084. See line 14 Image: “Umbracoconfig.jpg;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2730\"><br id=\"2731\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2732\"><p class=\"s32\" style=\"display: inline;\" id=\"2733\">nodeType<span class=\"s10\" id=\"2734\">: node id of Document Type</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2735\"><p class=\"s32\" style=\"display: inline;\" id=\"2736\">How do you know Document Type Node id?</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2737\"><br id=\"2738\"></p><p class=\"s10\" style=\"padding-left: 59pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2739\">It‟s a tricky. Just mouse over Document Type at left bottom of browser , browser show JavaScript link like this “javascript:openNodeType(1054);” number between () is node id of Document Type.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2740\"><p class=\"s10\" style=\"display: inline;\" id=\"2741\"><b id=\"2742\">creatorID</b>: id of users who created content. 0 means administrator and always exist in Umbraco user, it has root level of access<span class=\"s20\" id=\"2743\">15</span>.</p></li></ul></div></div><h3 style=\"padding-top: 10pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2744\" class=\"heading2744\"><a name=\"bookmark44\" id=\"2745\" style=\"color: green;\">Fetching data:</a></h3><div id=\"contentheading2744\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"2746\">Let‟s take real example for Semic provider site and be clear about use of Xslt. Semic provider has logo, title and slogan as global items. For global items<span class=\"s3\" id=\"2747\">16</span>, we need to fetch value from siteName, slogan and logo element <span class=\"s19\" id=\"2748\">see line at 26, 27 and 28 respectively at Image:Umbracoconfig.jpg”</span>. Open GlobalSetting.xslt file and add highlighted code into GlobalSetting.xslt. See captured screen and Save Xslt.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2749\"><br id=\"2750\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2751\"><span id=\"2752\"><img width=\"616\" height=\"342\" alt=\"image\" src=\"Image_073.jpg\" id=\"2753\"></span></p><p style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2754\">All html tags are not important, only important is highlighted line. Description:</p><ul id=\"l61\"><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2756\"><p class=\"s78\" style=\"display: inline;\" id=\"2757\">&lt;<span style=\" color: #800000;\" id=\"2758\">xsl</span>:<span style=\" color: #800000;\" id=\"2759\">variable </span><span style=\" color: #F00;\" id=\"2760\">name</span>=\"items\" <span style=\" color: #F00;\" id=\"2761\">select</span>=\"$currentPage/ancestor-or-self::*</p><p class=\"s78\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2762\">/WebSiteGlobalSettings \"/&gt;</p><ul id=\"l62\"><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: justify;\" id=\"2764\"><p class=\"s81\" style=\"display: inline;\" id=\"2765\">Here $ represent variable in XSLT. variable name items will hold data from ‚WebSitesGlobalSettings‛ Element see line at 25 Image: <span class=\"s10\" id=\"2766\">“Umbracoconfig.jpg” page no: xx</span></p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2767\"><p class=\"s81\" style=\"display: inline;\" id=\"2768\">currentPage will select current page.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2769\"><p class=\"s81\" style=\"display: inline;\" id=\"2770\">ancestor-or-self:: move pointer back until root level.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2771\"><p class=\"s81\" style=\"display: inline;\" id=\"2772\">* select all that match</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2773\"><p class=\"s81\" style=\"display: inline;\" id=\"2774\">/ move one step further to child element.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2775\"><p class=\"s81\" style=\"display: inline;\" id=\"2776\">WebsitesGlobalSettings is element name.</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2777\"><p class=\"s78\" style=\"display: inline;\" id=\"2778\">&lt;<span style=\" color: #800000;\" id=\"2779\">xsl</span>:<span style=\" color: #800000;\" id=\"2780\">variable </span><span style=\" color: #F00;\" id=\"2781\">name</span>=\"logo\" <span style=\" color: #F00;\" id=\"2782\">select</span>=\"$items/logo\"/&gt;</p><ul id=\"l63\"><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2784\"><p class=\"s81\" style=\"display: inline;\" id=\"2785\">$items/logo will select logo element and hold data</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2786\"><p class=\"s78\" style=\"display: inline;\" id=\"2787\">&lt;<span style=\" color: #800000;\" id=\"2788\">xsl</span>:<span style=\" color: #800000;\" id=\"2789\">value-of </span><span style=\" color: #F00;\" id=\"2790\">select</span>=\"$items/slogan\"/&gt;</p><ul id=\"l64\"><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2792\"><p class=\"s81\" style=\"display: inline;\" id=\"2793\">$items/slogan: select value from slogan element</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2794\"><p class=\"s78\" style=\"display: inline;\" id=\"2795\">&lt;<span style=\" color: #800000;\" id=\"2796\">img </span><span style=\" color: #F00;\" id=\"2797\">src</span>=\"{$logo}\" <span style=\" color: #F00;\" id=\"2798\">alt</span>=\"semic provider logo; visual identity\"/&gt;</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: justify;\" id=\"2799\"><p class=\"s78\" style=\"display: inline;\" id=\"2800\">Insert value of logo variable. Using $ and followed by name means use of variable, encapsulated data with {}. {} means code inside {} will executed on server by Umbraco CMS.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2801\"><br id=\"2802\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2803\"><span id=\"2804\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_074.png\" id=\"2805\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2806\">15 <span class=\"s10\" id=\"2807\">Root level of access: access that can CRUD ; C-create, R-read, U-update, D-delete</span></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2808\">16 <span class=\"s10\" id=\"2809\">Items those are common for all. For example logo, website name.</span></p><p class=\"s78\" style=\"padding-top: 3pt;padding-left: 31pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2810\"><span class=\"s10\" id=\"2811\">- </span>&lt;<span style=\" color: #800000;\" id=\"2812\">xsl</span>:<span style=\" color: #800000;\" id=\"2813\">value-of </span><span style=\" color: #F00;\" id=\"2814\">select</span>=\"$items/siteName\"/&gt;</p><p class=\"s85\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2815\">o <span class=\"s81\" id=\"2816\">This line will select value of siteName element and output.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2817\"><br id=\"2818\"></p><p class=\"s41\" style=\"padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2819\"><a name=\"bookmark45\" id=\"2820\">Note: alt tag in img element is not compulsory but I strongly recommend having alt tag. It will help for web accessibility and SEO.</a></p><p class=\"s86\" style=\"padding-top: 9pt;padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2821\"><a name=\"a45\" id=\"2822\">Xslt for Navigation:</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2823\"><br id=\"2824\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2825\"><span id=\"2826\"><img width=\"581\" height=\"261\" alt=\"image\" src=\"Image_075.png\" id=\"2827\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2828\"><br id=\"2829\"></p><p style=\"padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2830\">This is another Xslt for Navigation bar. Create new Xslt. Provide name navigation and Checked Create Macro. Copy highlighted text. Note that html is not that much important these are for CSS and layout purpose.</p><p style=\"padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2831\">Description:</p><ul id=\"l65\"><li style=\"padding-top: 1pt;padding-left: 49pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2833\"><p style=\"display: inline;\" id=\"2834\">[string(useInNavigation) = '1'] condition match means select all GeneralContent Element from ~/App_Data/umbraco.config file where useInNavigation checked boxed should be checked. Remember that we added new property at “General Content” Document Type. If editor wants to use general content in navigation bar. Editor should Checked mark on “useInNavigation” when s/he creates content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2835\"><br id=\"2836\"></p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"2837\"><p style=\"display: inline;\" id=\"2838\">Nice Url: umbraco.library:NiceUrl(@id)</p><ul id=\"l66\"><li style=\"padding-top: 11pt;padding-left: 85pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"2840\"><p style=\"display: inline;\" id=\"2841\">NiceUrl(@node id) will generate user friendly nice Url. Remember that urlName are used example: home.aspx</p></li><li style=\"padding-top: 11pt;padding-left: 85pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2842\"><p style=\"display: inline;\" id=\"2843\">@id: it‟s an attribute of selected element at ~/App_Data/umbraco.config xml file. In my case it‟s a node id of content based on “General Content” document type. @ sysmbole represent get value from attributes. See Xslt, Xpath and xml for details.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2844\"><br id=\"2845\"></p><ul id=\"l67\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2847\"><p class=\"s56\" style=\"display: inline;\" id=\"2848\">&lt;<span class=\"p\" id=\"2849\">xsl:value-of select</span>=<span class=\"p\" id=\"2850\">\"contentTitle\"</span>/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2851\"><br id=\"2852\"></p><ul id=\"l68\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2854\"><p class=\"s56\" style=\"display: inline;\" id=\"2855\">Select value from contentTitle element</p></li></ul></li><li style=\"padding-top: 9pt;padding-left: 44pt;text-indent: -21pt;text-align: left;\" id=\"2856\"><p class=\"s56\" style=\"display: inline;\" id=\"2857\">&lt;<span class=\"p\" id=\"2858\">xsl:for-each select</span>=<span class=\"p\" id=\"2859\">\"$items\"</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2860\"><br id=\"2861\"></p><ul id=\"l69\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2863\"><p class=\"s56\" style=\"display: inline;\" id=\"2864\">Used to loop all existing content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2865\"><br id=\"2866\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2867\"><p class=\"s56\" style=\"display: inline;\" id=\"2868\">&lt;<span class=\"p\" id=\"2869\">xsl:if test</span>=<span class=\"p\" id=\"2870\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2871\"><br id=\"2872\"></p><ul id=\"l70\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 106%;text-align: left;\" id=\"2874\"><p class=\"s56\" style=\"display: inline;\" id=\"2875\">Here &amp;gt; means greater than. Test: means execute block of code only if result is more than zero. If items are less than zero no need to loop items.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2876\"><br id=\"2877\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2878\"><a name=\"a46\" id=\"2879\">Note: there is missing code in captured screen means missing code are generated by Umbraco Default and removed from here to reduce space.</a></h4><p class=\"s86\" style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2880\"><a name=\"bookmark46\" id=\"2881\">New Xslt file for News List items.</a></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"2882\">It will be exercise for you I create NewsList.xslt file, here I just include captured screen without description try to describe yourself. It‟s not big but need to knowledge of Xpath. Main purpose of this Xslt is to fetch content from 2<span class=\"s3\" id=\"2883\">nd </span>level menu contain. It will fetch News articles from ~/App_data/umbraco.config xml file. Captured screen are bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2884\"><br id=\"2885\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2886\"><span id=\"2887\"><img width=\"475\" height=\"383\" alt=\"image\" src=\"Image_076.jpg\" id=\"2888\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2889\"><br id=\"2890\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2891\"><a name=\"a47\" id=\"2892\">Chapter 07: Macro</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2893\"><br id=\"2894\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2895\"><br id=\"2896\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2897\"><span id=\"2898\"><img width=\"350\" height=\"1\" alt=\"image\" src=\"Image_077.png\" id=\"2899\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2900\"><br id=\"2901\"></p><h2 style=\"padding-top: 13pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2902\" class=\"heading2902\"><a name=\"bookmark47\" id=\"2903\" style=\"color: lime;\">Macro:</a></h2><div id=\"contentheading2902\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2904\">Marco is use as bridge between xslt, user control or other languages and templates, using macro we can render content or data from data source to templates and templates are responsible to present data to end users. Macro is very important part in Umbraco.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2905\"><span id=\"2906\"><img width=\"616\" height=\"437\" alt=\"image\" src=\"Image_078.png\" id=\"2907\"></span></p><h3 style=\"padding-top: 10pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" style=\"color: green;\">Macro working Environments:</a></h3><div id=\"contentheading2908\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s45\" style=\"padding-top: 8pt;padding-left: 119pt;text-indent: 0pt;text-align: left;\" id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2912\"><br id=\"2913\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2914\">C</p><p style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2915\">D</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2916\"><br id=\"2917\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2918\">E</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2919\"><br id=\"2920\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2921\">F</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2922\"><br id=\"2923\"></p><p style=\"padding-top: 10pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2924\">G</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2925\"><br id=\"2926\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2927\">H</p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: center;\" id=\"2928\">I</p><p style=\"padding-top: 4pt;padding-left: 314pt;text-indent: 0pt;text-align: left;\" id=\"2929\">J</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2930\"><br id=\"2931\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"2932\">K</p><p style=\"padding-top: 6pt;padding-left: 144pt;text-indent: 0pt;text-align: center;\" id=\"2933\">L</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2934\"><br id=\"2935\"></p><p style=\"padding-top: 4pt;padding-left: 145pt;text-indent: 0pt;text-align: center;\" id=\"2936\">M</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2937\"><br id=\"2938\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2939\"><br id=\"2940\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2943\"><p style=\"display: inline;\" id=\"2944\">Save button to save your work or settings</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2945\"><p style=\"display: inline;\" id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p style=\"padding-top: 3pt;padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2949\"><p style=\"display: inline;\" id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2951\"><p style=\"display: inline;\" id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2953\"><p style=\"display: inline;\" id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2955\"><p style=\"display: inline;\" id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2959\"><p style=\"display: inline;\" id=\"2960\">Show preview fetch data on Content Editor.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2961\"><p style=\"display: inline;\" id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2963\"><p style=\"display: inline;\" id=\"2964\">Cached per page: cached page based on requested page</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2965\"><p style=\"display: inline;\" id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2967\"><br id=\"2968\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2971\"><br id=\"2972\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2984\"><p class=\"s8\" style=\"display: inline;\" id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"2987\"><p class=\"s8\" style=\"display: inline;\" id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2989\"><p class=\"s8\" style=\"display: inline;\" id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2991\"><br id=\"2992\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" style=\"color: green;\">Using Macro into templates:</a></h3><div id=\"contentheading2994\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2996\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3000\"><p style=\"display: inline;\" id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3002\"><p style=\"display: inline;\" id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3004\"><p style=\"display: inline;\" id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3007\"><p style=\"display: inline;\" id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"3009\"><p style=\"display: inline;\" id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 262pt;text-align: left;\" id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li style=\"padding-top: 15pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3015\"><p class=\"s8\" style=\"display: inline;\" id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3018\"><br id=\"3019\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3020\"><p class=\"s8\" style=\"display: inline;\" id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3023\"><br id=\"3024\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3025\"><p class=\"s8\" style=\"display: inline;\" id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3028\"><br id=\"3029\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3030\"><p class=\"s8\" style=\"display: inline;\" id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3033\"><br id=\"3034\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3 style=\"padding-top: 9pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" style=\"color: green;\">Instruction to Insert Macro in Content Area:</a></h3></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3038\"><p style=\"display: inline;\" id=\"3039\">Open content “News”</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3040\"><p style=\"display: inline;\" id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3042\"><p style=\"display: inline;\" id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3045\"><p style=\"display: inline;\" id=\"3046\">Select Marco and Press Insert.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3047\"><br id=\"3048\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li style=\"padding-top: 4pt;padding-left: 76pt;text-indent: -18pt;text-align: left;\" id=\"3057\"><p style=\"display: inline;\" id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li style=\"padding-bottom: 2pt;padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3059\"><p style=\"display: inline;\" id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3065\"><br id=\"3066\"></p></li><li style=\"padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3067\"><p style=\"display: inline;\" id=\"3068\">All red dotted area denotes Macro areas.</p></li><li style=\"padding-top: 2pt;padding-left: 40pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"3069\"><p style=\"display: inline;\" id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3071\"><p style=\"display: inline;\" id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3073\"><br id=\"3074\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3075\"><br id=\"3076\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" style=\"color: green;\">Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"3079\"><br id=\"3080\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3081\"><p class=\"s42\" style=\"display: inline;\" id=\"3082\">Macro <span style=\" color: #000;\" id=\"3083\">macro = </span>Macro<span style=\" color: #000;\" id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3086\"><p class=\"s40\" style=\"display: inline;\" id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3088\"><p class=\"s40\" style=\"display: inline;\" id=\"3089\">macro.UseInEditor = <span style=\" color: #00F;\" id=\"3090\">true</span>;</p><ul id=\"l77\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3092\"><p class=\"s40\" style=\"display: inline;\" id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3094\"><p class=\"s40\" style=\"display: inline;\" id=\"3095\">macro.RenderContent = <span style=\" color: #00F;\" id=\"3096\">true</span>;</p><ul id=\"l78\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3098\"><p class=\"s40\" style=\"display: inline;\" id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3100\"><p class=\"s40\" style=\"display: inline;\" id=\"3101\">macro.Xslt = <span style=\" color: #A21515;\" id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3103\"><p class=\"s40\" style=\"display: inline;\" id=\"3104\">provide location of xslt file to use.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3105\"><p class=\"s40\" style=\"display: inline;\" id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3107\"><p class=\"s40\" style=\"display: inline;\" id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3110\"><br id=\"3111\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3112\">Chapter 08:</h1><h1 style=\"padding-top: 14pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3113\">Extending Umbraco CMS</h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"3114\"><br id=\"3115\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3116\"><br id=\"3117\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p style=\"padding-top: 9pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3125\">User control</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3126\">.NET Class Library Razor Engine XSLT</p><p style=\"padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3127\">Python</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3129\">Python is also not covered in this book.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3130\"><br id=\"3131\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" style=\"color: green;\">User Control:</a></h3><div id=\"contentheading3132\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3138\"><p style=\"display: inline;\" id=\"3139\">Add New User Control</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3140\"><p style=\"display: inline;\" id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3145\"><p style=\"display: inline;\" id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"3147\"><br id=\"3148\"></p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3149\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3150\"><br id=\"3151\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3152\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3153\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3154\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3155\">Save to Database</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3156\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3157\"><br id=\"3158\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3159\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3160\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3161\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3162\">Save to Database</p><p class=\"s10\" style=\"padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"3163\">\t\t</p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" style=\"color: green;\">Before start coding:</a></h3><div id=\"contentheading3164\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 108%;text-align: left;\" id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: justify;\" id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3182\"><br id=\"3183\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: justify;\" id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3202\"><br id=\"3203\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3207\">JavaScript.jpg </p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3208\">JavaScript.jpg </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3209\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3212\"><br id=\"3213\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3216\"><br id=\"3217\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"3225\"><p style=\"display: inline;\" id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"3227\"><p style=\"display: inline;\" id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3229\"><p style=\"display: inline;\" id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3231\"><p style=\"display: inline;\" id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3233\"><p style=\"display: inline;\" id=\"3234\">“Regex” means Regular Expression.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3235\"><br id=\"3236\"></p><h4 style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3239\"><br id=\"3240\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3246\"><br id=\"3247\"></p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3251\"><br id=\"3252\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3257\"><br id=\"3258\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3268\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3269\">Name: Email:</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3270\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3271\">Name: Email:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3272\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3273\">Generate Vcard</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3274\">Generate Vcard</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3275\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3276\">Press Submit</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3277\">Press Submit</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3278\"></p><p style=\"padding-top: 4pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3279\">Validate submitted Data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3280\"><br id=\"3281\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3282\"><br id=\"3283\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3284\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3285\">Sent By Email</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3286\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3287\">Sent By Email</p><p class=\"s10\" style=\"padding-left: 152pt;text-indent: 0pt;text-align: left;\" id=\"3288\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"3289\"> </span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3290\"><br id=\"3291\"></p><p style=\"padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3293\"><br id=\"3294\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3297\"><p style=\"display: inline;\" id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3300\"><p style=\"display: inline;\" id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3302\"><p style=\"display: inline;\" id=\"3303\">Create Upload button for Image or Photo</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3304\"><p style=\"display: inline;\" id=\"3305\">Create Button</p><ul id=\"l82\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3307\"><p style=\"display: inline;\" id=\"3308\">To submit data</p><h4 style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3311\"><p style=\"display: inline;\" id=\"3312\">Create Class</p><ul id=\"l83\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3314\"><p style=\"display: inline;\" id=\"3315\">To save data to Database</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3316\"><p style=\"display: inline;\" id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 54pt;text-align: left;\" id=\"3319\"><p style=\"display: inline;\" id=\"3320\">Validate input methods</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3321\"><p style=\"display: inline;\" id=\"3322\">Go Generate Vcard</p></li><li style=\"padding-left: 6pt;text-indent: 54pt;line-height: 107%;text-align: left;\" id=\"3323\"><p style=\"display: inline;\" id=\"3324\">Send Email Store Data to Database</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3325\"><br id=\"3326\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" style=\"color: green;\">Let’s Begin to code:</a></h3><div id=\"contentheading3332\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3335\"><p style=\"display: inline;\" id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3337\"><p style=\"display: inline;\" id=\"3338\">File -&gt; New --&gt; Project</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3339\"><p style=\"display: inline;\" id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3342\"><p style=\"display: inline;\" id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3344\"><p style=\"display: inline;\" id=\"3345\">Name: Vcard Generator</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3346\"><p style=\"display: inline;\" id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3348\"><p style=\"display: inline;\" id=\"3349\">Solution name: leave default, if you want you can change</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3350\"><p style=\"display: inline;\" id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"3353\"><p style=\"display: inline;\" id=\"3354\">It will Create new directory</p></li></ul></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3355\"><p style=\"display: inline;\" id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"3357\"><br id=\"3358\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3368\">It will open new windows</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3374\"><br id=\"3375\"></p><p style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;line-height: 158%;text-align: left;\" id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p style=\"padding-top: 8pt;text-indent: 0pt;text-align: right;\" id=\"3381\">Vcardcontrol.jp</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3382\"><br id=\"3383\"></p><p class=\"s27\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3384\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3385\"><br id=\"3386\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3387\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3388\"><br id=\"3389\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3390\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3391\"><br id=\"3392\"></p></div></div></div></div></div></li><li style=\"padding-left: 24pt;text-indent: -18pt;text-align: left;\" id=\"3393\"><p style=\"display: inline;\" id=\"3394\">It must create three files end with “.ascx”, “ascx.cs” and “ascx.designer.cs”.</p></li><li style=\"padding-top: 11pt;padding-left: 24pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"3395\"><p style=\"display: inline;\" id=\"3396\">Open VcardGenerator.ascx and Create Textbox, Button, Required Field validate and Custom Validate. See captured screen bellow</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"3397\"><br id=\"3398\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3399\"><span id=\"3400\"><img width=\"553\" height=\"493\" alt=\"image\" src=\"Image_095.png\" id=\"3401\"></span></p><p style=\"padding-top: 4pt;padding-left: 304pt;text-indent: 0pt;text-align: left;\" id=\"3402\">Add: Validation</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3403\"><br id=\"3404\"></p><p style=\"padding-top: 4pt;padding-left: 302pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3405\">Add: RequiredFieldValidator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3406\"><br id=\"3407\"></p><p style=\"padding-top: 4pt;padding-left: 295pt;text-indent: 0pt;text-align: left;\" id=\"3408\">Add: CustomValidator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3409\"><br id=\"3410\"></p><p style=\"padding-left: 295pt;text-indent: 0pt;text-align: left;\" id=\"3411\">* All are CustomValidator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3412\"><br id=\"3413\"></p><p style=\"padding-top: 4pt;padding-left: 306pt;text-indent: 0pt;text-align: left;\" id=\"3414\">Add: Eight TextBox</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3415\"><br id=\"3416\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3417\"><br id=\"3418\"></p><p style=\"padding-left: 306pt;text-indent: 0pt;text-align: left;\" id=\"3419\">Add: FileUpload</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3420\"><br id=\"3421\"></p><p style=\"padding-top: 10pt;padding-left: 306pt;text-indent: 0pt;text-align: left;\" id=\"3422\">Add: Add Buttom</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3423\"><br id=\"3424\"></p><p class=\"s27\" style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"3425\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3426\"><br id=\"3427\"></p><p style=\"padding-left: 74pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3428\">You are Visiting Design View. Click Source to view source Code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3429\"><br id=\"3430\"></p><p style=\"padding-top: 4pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"3431\">I placed in table format; you can remove these table formats using div if you like.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3432\"><br id=\"3433\"></p><ul id=\"l87\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"3435\"><p style=\"display: inline;\" id=\"3436\">ValidationSummary: Validation Summary is used to provide users validation summary, if there is any validation fail, it will show up list of validation error message, error message are customizable.</p><p class=\"s90\" style=\"padding-top: 10pt;padding-left: 23pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3437\">&lt;<span style=\" color: #800000;\" id=\"3438\">asp</span>:<span style=\" color: #800000;\" id=\"3439\">ValidationSummary </span><span style=\" color: #F00;\" id=\"3440\">ID</span>=\"ValidationSummary\" <span style=\" color: #F00;\" id=\"3441\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3442\">ForeColor</span>=\"#FF6666\" /&gt;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3443\"><p style=\"display: inline;\" id=\"3444\">Make sure you have runat=”server”, otherwise code does not execute at server.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3445\"><p style=\"display: inline;\" id=\"3446\">Add: TextBox</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3447\"><p class=\"s90\" style=\"display: inline;\" id=\"3448\">&lt;<span style=\" color: #800000;\" id=\"3449\">asp</span>:<span style=\" color: #800000;\" id=\"3450\">TextBox </span><span style=\" color: #F00;\" id=\"3451\">ID</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3452\">runat</span>=server&gt;&lt;/<span style=\" color: #800000;\" id=\"3453\">asp</span>:<span style=\" color: #800000;\" id=\"3454\">TextBox</span>&gt;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3455\"><p style=\"display: inline;\" id=\"3456\">This is example for textbox Name. Repeat same process for Street, PostalCode, City, Country, Phone, Email and WebSite.</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"3457\"><p style=\"display: inline;\" id=\"3458\">Each Textbox should have unique id so if you choose id that is self- explanatory it‟s easier to refer later on for example choose Textbox id “TextboxEmail” for email input textbox.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3459\"><p style=\"display: inline;\" id=\"3460\">Add: Required Filed Validator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3461\"><br id=\"3462\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3463\">In Vcard website Name an Email must provide so we need to add Required Field Validator. Go to Toolbox <span class=\"s89\" id=\"3464\"></span><span class=\"s28\" id=\"3465\"> </span>Validation <span class=\"s89\" id=\"3466\"></span><span class=\"s28\" id=\"3467\"> </span>click on “RequiredFieldValidator”</p><p class=\"s90\" style=\"padding-left: 7pt;text-indent: -2pt;text-align: left;\" id=\"3468\">&lt;<span style=\" color: #800000;\" id=\"3469\">asp</span>:<span style=\" color: #800000;\" id=\"3470\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"3471\">ID</span>=\"RequiredFieldValidatorName\" <span style=\" color: #F00;\" id=\"3472\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3473\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3474\">ErrorMessage</span>=\"Name Required\"&gt; &lt;/<span style=\" color: #800000;\" id=\"3475\">asp</span>:<span style=\" color: #800000;\" id=\"3476\">RequiredFieldValidator</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3477\"><br id=\"3478\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3479\"><p class=\"s91\" style=\"display: inline;\" id=\"3480\"><span class=\"p\" id=\"3481\">RequiredFieldValidator start and end with </span>asp<span style=\" color: #00F;\" id=\"3482\">:</span>RequiredFieldValidator tags.</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"3483\"><p style=\"display: inline;\" id=\"3484\">Important thing in RequiredFiledValidator is “ContorlToValidate”, here ControlToValidate is equal to “TextBoxName”. Please look carefully “TextBoxName” is the id of Input “TextBox” that we created for Name Input Data that means we are now making Input Filed Name is required Field. ErrorMessage is the message that will appear if client tries to send empty data.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3485\"><p style=\"display: inline;\" id=\"3486\">Repeat same process “RequiredFieldValidator” for Email as well.</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3487\"><p style=\"display: inline;\" id=\"3488\">Add: Custom Validator:</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3489\"><p style=\"display: inline;\" id=\"3490\">input field should be validate on server side. To add custom validator,</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3491\"><p style=\"display: inline;\" id=\"3492\">Go to Toolbox <span class=\"s89\" id=\"3493\"></span><span class=\"s28\" id=\"3494\"> </span>Validation <span class=\"s89\" id=\"3495\"></span><span class=\"s28\" id=\"3496\"> </span>click on “CustomValidation”</p><p class=\"s90\" style=\"padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3497\">&lt;<span style=\" color: #800000;\" id=\"3498\">asp</span>:<span style=\" color: #800000;\" id=\"3499\">CustomValidator </span><span style=\" color: #F00;\" id=\"3500\">ID</span>=\"CustomValidatorName\" <span style=\" color: #F00;\" id=\"3501\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3502\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3503\">ErrorMessage</span>=\"Name is not Valid\" <span style=\" color: #F00;\" id=\"3504\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3505\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3506\">asp</span>:<span style=\" color: #800000;\" id=\"3507\">CustomValidator</span>&gt;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"3508\"><p class=\"s91\" style=\"display: inline;\" id=\"3509\"><span class=\"p\" id=\"3510\">Custom Validator start and end with </span>asp<span style=\" color: #00F;\" id=\"3511\">:</span>CustomValidator tags.</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3512\"><p style=\"display: inline;\" id=\"3513\">controlToValidate=”TextBoxName” is we are validating Input TextBox Name.</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"3514\"><p style=\"display: inline;\" id=\"3515\">ErrorMessage. Message show up in Validation Summary list if input data is not valid.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"3516\"><p class=\"s91\" style=\"display: inline;\" id=\"3517\"><span class=\"p\" id=\"3518\">* text or character between </span>asp<span style=\" color: #00F;\" id=\"3519\">:</span>CustomValidator <span style=\" color: #000;\" id=\"3520\">start and end tags will show up where you placed </span>asp<span style=\" color: #00F;\" id=\"3521\">:</span>CustomValidator <span style=\" color: #000;\" id=\"3522\">tags if Data is not Valid.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 108%;text-align: justify;\" id=\"3523\"><p class=\"s92\" style=\"display: inline;\" id=\"3524\">Onservervalidate <span style=\" color: #00F;\" id=\"3525\">here we specify which methods should we run or is relevant. it is linking methods called “CustomValidatorName_ServerValidate” this method must be create at code page. Explained later one.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3526\"><p class=\"s92\" style=\"display: inline;\" id=\"3527\">Repeat similar process for Email, street, postal code, country, city, phone, email and website.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3528\"><p class=\"s92\" style=\"display: inline;\" id=\"3529\">For references see code at next page.</p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3530\">VcardControl.ascx</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3531\"><br id=\"3532\"></p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3533\">&lt;<span style=\" color: #800000;\" id=\"3534\">form </span><span style=\" color: #F00;\" id=\"3535\">id</span>=\"FormVcard\" <span style=\" color: #F00;\" id=\"3536\">runat</span>=\"server\"&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3537\">&lt;<span style=\" color: #800000;\" id=\"3538\">div </span><span style=\" color: #F00;\" id=\"3539\">class</span>=\"errorMessage\"&gt; &lt;<span style=\" color: #800000;\" id=\"3540\">asp</span>:<span style=\" color: #800000;\" id=\"3541\">Label </span><span style=\" color: #F00;\" id=\"3542\">ID</span>=\"LabelNotice\" <span style=\" color: #F00;\" id=\"3543\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3544\">Text</span>=\"\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3545\">asp</span>:<span style=\" color: #800000;\" id=\"3546\">Label</span>&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3547\">&lt;<span style=\" color: #800000;\" id=\"3548\">asp</span>:<span style=\" color: #800000;\" id=\"3549\">ValidationSummary </span><span style=\" color: #F00;\" id=\"3550\">ID</span>=\"ValidationSummary\" <span style=\" color: #F00;\" id=\"3551\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3552\">ForeColor</span>=\"#FF6666\" /&gt;&lt;/<span style=\" color: #800000;\" id=\"3553\">div</span>&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3554\">&lt;<span style=\" color: #800000;\" id=\"3555\">table </span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3556\">&lt;<span style=\" color: #800000;\" id=\"3557\">tr </span><span style=\" color: #F00;\" id=\"3558\">class</span>=\"name\"&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3559\">&lt;<span style=\" color: #800000;\" id=\"3560\">td</span>&gt; <span style=\" color: #000;\" id=\"3561\">Name: </span>&lt;/<span style=\" color: #800000;\" id=\"3562\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3563\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3564\">asp</span>:<span style=\" color: #800000;\" id=\"3565\">TextBox </span><span style=\" color: #F00;\" id=\"3566\">ID</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3567\">runat</span>=server&gt;&lt;/<span style=\" color: #800000;\" id=\"3568\">asp</span>:<span style=\" color: #800000;\" id=\"3569\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3570\">&lt;<span style=\" color: #800000;\" id=\"3571\">asp</span>:<span style=\" color: #800000;\" id=\"3572\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"3573\">ID</span>=\"RequiredFieldValidatorName\" <span style=\" color: #F00;\" id=\"3574\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3575\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3576\">ErrorMessage</span>=\"Name Required\" <span style=\" color: #F00;\" id=\"3577\">Font-Size</span>=\"Small\"</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3578\"><span style=\" color: #F00;\" id=\"3579\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3580\">asp</span>:<span style=\" color: #800000;\" id=\"3581\">RequiredFieldValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3582\">&lt;<span style=\" color: #800000;\" id=\"3583\">asp</span>:<span style=\" color: #800000;\" id=\"3584\">CustomValidator </span><span style=\" color: #F00;\" id=\"3585\">ID</span>=\"CustomValidatorName\" <span style=\" color: #F00;\" id=\"3586\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3587\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3588\">ErrorMessage</span>=\"Name is not Valid\" <span style=\" color: #F00;\" id=\"3589\">ForeColor</span>=\"#CC0000\"</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3590\"><span style=\" color: #F00;\" id=\"3591\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3592\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3593\">asp</span>:<span style=\" color: #800000;\" id=\"3594\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3595\">&lt;/<span style=\" color: #800000;\" id=\"3596\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3597\">&lt;/<span style=\" color: #800000;\" id=\"3598\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3599\">&lt;<span style=\" color: #800000;\" id=\"3600\">tr </span><span style=\" color: #F00;\" id=\"3601\">class</span>=\"street\"&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3602\">&lt;<span style=\" color: #800000;\" id=\"3603\">td</span>&gt; <span style=\" color: #000;\" id=\"3604\">Street:</span>&lt;/<span style=\" color: #800000;\" id=\"3605\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3606\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3607\">asp</span>:<span style=\" color: #800000;\" id=\"3608\">TextBox </span><span style=\" color: #F00;\" id=\"3609\">ID</span>=\"TextBoxStreet\" <span style=\" color: #F00;\" id=\"3610\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3611\">asp</span>:<span style=\" color: #800000;\" id=\"3612\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3613\">&lt;/<span style=\" color: #800000;\" id=\"3614\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3615\">&lt;/<span style=\" color: #800000;\" id=\"3616\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3617\">&lt;<span style=\" color: #800000;\" id=\"3618\">tr </span><span style=\" color: #F00;\" id=\"3619\">class</span>=\"postalCode\"&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 22pt;text-align: left;\" id=\"3620\">&lt;<span style=\" color: #800000;\" id=\"3621\">td</span>&gt; <span style=\" color: #000;\" id=\"3622\">PostalCode:</span>&lt;/<span style=\" color: #800000;\" id=\"3623\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3624\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3625\">asp</span>:<span style=\" color: #800000;\" id=\"3626\">TextBox </span><span style=\" color: #F00;\" id=\"3627\">ID</span>=\"TextBoxPostalCode\" <span style=\" color: #F00;\" id=\"3628\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3629\">asp</span>:<span style=\" color: #800000;\" id=\"3630\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 22pt;text-align: justify;\" id=\"3631\">&lt;<span style=\" color: #800000;\" id=\"3632\">asp</span>:<span style=\" color: #800000;\" id=\"3633\">CustomValidator </span><span style=\" color: #F00;\" id=\"3634\">ID</span>=\"CustomValidatorPostalCode\" <span style=\" color: #F00;\" id=\"3635\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3636\">Font-Size</span>=\"Small\" <span style=\" color: #F00;\" id=\"3637\">ErrorMessage</span>=\"Postal Code 4 digit\" <span style=\" color: #F00;\" id=\"3638\">ControlToValidate</span>=\"TextBoxPostalCode\" <span style=\" color: #F00;\" id=\"3639\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3640\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3641\">asp</span>:<span style=\" color: #800000;\" id=\"3642\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3643\">&lt;/<span style=\" color: #800000;\" id=\"3644\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3645\">&lt;/<span style=\" color: #800000;\" id=\"3646\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3647\">&lt;<span style=\" color: #800000;\" id=\"3648\">tr </span><span style=\" color: #F00;\" id=\"3649\">class</span>=\"city\"&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3650\">&lt;<span style=\" color: #800000;\" id=\"3651\">td</span>&gt; <span style=\" color: #000;\" id=\"3652\">City:</span>&lt;/<span style=\" color: #800000;\" id=\"3653\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3654\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3655\">asp</span>:<span style=\" color: #800000;\" id=\"3656\">TextBox </span><span style=\" color: #F00;\" id=\"3657\">ID</span>=\"TextBoxCity\" <span style=\" color: #F00;\" id=\"3658\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3659\">asp</span>:<span style=\" color: #800000;\" id=\"3660\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3661\">&lt;/<span style=\" color: #800000;\" id=\"3662\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3663\">&lt;<span style=\" color: #800000;\" id=\"3664\">tr </span><span style=\" color: #F00;\" id=\"3665\">class</span>=\"country\"&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3666\">&lt;<span style=\" color: #800000;\" id=\"3667\">td</span>&gt; <span style=\" color: #000;\" id=\"3668\">Country:</span>&lt;/<span style=\" color: #800000;\" id=\"3669\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3670\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3671\">asp</span>:<span style=\" color: #800000;\" id=\"3672\">TextBox </span><span style=\" color: #F00;\" id=\"3673\">ID</span>=\"TextBoxCountry\" <span style=\" color: #F00;\" id=\"3674\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3675\">asp</span>:<span style=\" color: #800000;\" id=\"3676\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3677\">&lt;<span style=\" color: #800000;\" id=\"3678\">asp</span>:<span style=\" color: #800000;\" id=\"3679\">CustomValidator </span><span style=\" color: #F00;\" id=\"3680\">ID</span>=\"CustomValidatorCountry\" <span style=\" color: #F00;\" id=\"3681\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3682\">Font-Size</span>=\"Small\" <span style=\" color: #F00;\" id=\"3683\">ErrorMessage</span>=\"Country Not Valid\" <span style=\" color: #F00;\" id=\"3684\">ControlToValidate</span>=\"TextBoxCountry\"</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3685\"><span style=\" color: #F00;\" id=\"3686\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3687\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3688\">asp</span>:<span style=\" color: #800000;\" id=\"3689\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3690\">&lt;/<span style=\" color: #800000;\" id=\"3691\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3692\">&lt;/<span style=\" color: #800000;\" id=\"3693\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3694\">&lt;<span style=\" color: #800000;\" id=\"3695\">tr </span><span style=\" color: #F00;\" id=\"3696\">class</span>=\"phone\"&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 22pt;text-align: left;\" id=\"3697\">&lt;<span style=\" color: #800000;\" id=\"3698\">td</span>&gt; <span style=\" color: #000;\" id=\"3699\">Phone:</span><span style=\" color: #F00;\" id=\"3700\">&amp;nbsp; </span><span style=\" color: #000;\" id=\"3701\">+45</span>&lt;/<span style=\" color: #800000;\" id=\"3702\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3703\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3704\">asp</span>:<span style=\" color: #800000;\" id=\"3705\">TextBox </span><span style=\" color: #F00;\" id=\"3706\">ID</span>=\"TextBoxPhone\" <span style=\" color: #F00;\" id=\"3707\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3708\">asp</span>:<span style=\" color: #800000;\" id=\"3709\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3710\">&lt;<span style=\" color: #800000;\" id=\"3711\">asp</span>:<span style=\" color: #800000;\" id=\"3712\">CustomValidator </span><span style=\" color: #F00;\" id=\"3713\">ID</span>=\"CustomValidatorPhone\" <span style=\" color: #F00;\" id=\"3714\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3715\">Font-Size</span>=\"Small\" <span style=\" color: #F00;\" id=\"3716\">ErrorMessage</span>=\"Phone must be 8 digit, Without +45 \" <span style=\" color: #F00;\" id=\"3717\">ControlToValidate</span>=\"TextBoxPhone\"</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3718\"><span style=\" color: #F00;\" id=\"3719\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3720\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3721\">asp</span>:<span style=\" color: #800000;\" id=\"3722\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3723\">&lt;/<span style=\" color: #800000;\" id=\"3724\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3725\">&lt;/<span style=\" color: #800000;\" id=\"3726\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3727\">&lt;<span style=\" color: #800000;\" id=\"3728\">tr </span><span style=\" color: #F00;\" id=\"3729\">class</span>=\"email\"&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3730\">&lt;<span style=\" color: #800000;\" id=\"3731\">td</span>&gt; <span style=\" color: #000;\" id=\"3732\">Email: </span>&lt;/<span style=\" color: #800000;\" id=\"3733\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3734\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3735\">asp</span>:<span style=\" color: #800000;\" id=\"3736\">TextBox </span><span style=\" color: #F00;\" id=\"3737\">ID</span>=\"TextBoxEmail\" <span style=\" color: #F00;\" id=\"3738\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3739\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3740\">asp</span>:<span style=\" color: #800000;\" id=\"3741\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3742\">&lt;<span style=\" color: #800000;\" id=\"3743\">asp</span>:<span style=\" color: #800000;\" id=\"3744\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"3745\">ID</span>=\"RequiredFieldValidatorEmail\" <span style=\" color: #F00;\" id=\"3746\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3747\">Font-Size</span>=\"Small\" <span style=\" color: #F00;\" id=\"3748\">ErrorMessage</span>=\"Email Required\" <span style=\" color: #F00;\" id=\"3749\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span style=\" color: #000;\" id=\"3750\">Email</span></p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3751\"><span style=\" color: #000;\" id=\"3752\">Required</span>&lt;/<span style=\" color: #800000;\" id=\"3753\">asp</span>:<span style=\" color: #800000;\" id=\"3754\">RequiredFieldValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3755\">&lt;<span style=\" color: #800000;\" id=\"3756\">asp</span>:<span style=\" color: #800000;\" id=\"3757\">CustomValidator </span><span style=\" color: #F00;\" id=\"3758\">ID</span>=\"CustomValidatorEmail\" <span style=\" color: #F00;\" id=\"3759\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3760\">Font-Size</span>=\"Small\" <span style=\" color: #F00;\" id=\"3761\">ErrorMessage</span>=\"Email Not Valid\" <span style=\" color: #F00;\" id=\"3762\">ControlToValidate</span>=\"TextBoxEmail\" <span style=\" color: #F00;\" id=\"3763\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3764\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3765\">asp</span>:<span style=\" color: #800000;\" id=\"3766\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3767\">&lt;/<span style=\" color: #800000;\" id=\"3768\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3769\">&lt;/<span style=\" color: #800000;\" id=\"3770\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3771\">&lt;<span style=\" color: #800000;\" id=\"3772\">tr </span><span style=\" color: #F00;\" id=\"3773\">class</span>=\"website\"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3774\"><br id=\"3775\"></p><p class=\"s94\" style=\"padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3776\">&lt;<span style=\" color: #800000;\" id=\"3777\">td</span>&gt; <span style=\" color: #000;\" id=\"3778\">WebSite:</span>&lt;/<span style=\" color: #800000;\" id=\"3779\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3780\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3781\">asp</span>:<span style=\" color: #800000;\" id=\"3782\">TextBox </span><span style=\" color: #F00;\" id=\"3783\">ID</span>=\"TextBoxWebsite\" <span style=\" color: #F00;\" id=\"3784\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3785\">asp</span>:<span style=\" color: #800000;\" id=\"3786\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3787\">&lt;<span style=\" color: #800000;\" id=\"3788\">asp</span>:<span style=\" color: #800000;\" id=\"3789\">CustomValidator </span><span style=\" color: #F00;\" id=\"3790\">ID</span>=\"CustomValidatorWebSite\" <span style=\" color: #F00;\" id=\"3791\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3792\">ErrorMessage</span>=\"Website not valid\" <span style=\" color: #F00;\" id=\"3793\">ControlToValidate</span>=\"TextBoxWebsite\" <span style=\" color: #F00;\" id=\"3794\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3795\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3796\">asp</span>:<span style=\" color: #800000;\" id=\"3797\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3798\">&lt;/<span style=\" color: #800000;\" id=\"3799\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"3800\">&lt;/<span style=\" color: #800000;\" id=\"3801\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3802\">&lt;<span style=\" color: #800000;\" id=\"3803\">tr </span><span style=\" color: #F00;\" id=\"3804\">class</span>=\"photo\"&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3805\">&lt;<span style=\" color: #800000;\" id=\"3806\">td</span>&gt; <span style=\" color: #000;\" id=\"3807\">Photo:</span>&lt;/<span style=\" color: #800000;\" id=\"3808\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3809\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3810\">asp</span>:<span style=\" color: #800000;\" id=\"3811\">FileUpload </span><span style=\" color: #F00;\" id=\"3812\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"3813\">runat</span>=\"server\" /&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3814\">&lt;/<span style=\" color: #800000;\" id=\"3815\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3816\">&lt;/<span style=\" color: #800000;\" id=\"3817\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3818\">&lt;<span style=\" color: #800000;\" id=\"3819\">tr </span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3820\">&lt;<span style=\" color: #800000;\" id=\"3821\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"3822\"><span style=\" color: #F00;\" id=\"3823\">&amp;nbsp;</span>&lt;/<span style=\" color: #800000;\" id=\"3824\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3825\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3826\">asp</span>:<span style=\" color: #800000;\" id=\"3827\">Button </span><span style=\" color: #F00;\" id=\"3828\">ID</span>=\"ButtonCreate\" <span style=\" color: #F00;\" id=\"3829\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3830\">Text</span>=\"Create\" <span style=\" color: #F00;\" id=\"3831\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span style=\" color: #800000;\" id=\"3832\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 15pt;text-indent: 0pt;text-align: center;\" id=\"3833\">&lt;/<span style=\" color: #800000;\" id=\"3834\">tr</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3835\"><br id=\"3836\"></p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3837\">&lt;/<span style=\" color: #800000;\" id=\"3838\">table</span>&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3839\">&lt;/<span style=\" color: #800000;\" id=\"3840\">form</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3841\"><br id=\"3842\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"3843\">If you want to follow me, copy above code and paste it into your User Control Design View.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3844\">General description of “VcardControl.ascx” if you are new to ASP.NET user control</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3845\"><br id=\"3846\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3847\">Description: It start with form tags, you must include runat=”server” because we want to execute code at server side. And I added div class that used for style sheet and I used table to nicely format input fields.</p><p class=\"s90\" style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3848\"><span style=\" color: #800000;\" id=\"3849\">&lt;asp</span>:<span style=\" color: #800000;\" id=\"3850\">Label </span><span style=\" color: #F00;\" id=\"3851\">ID</span>=\"LabelNotice\" <span style=\" color: #F00;\" id=\"3852\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3853\">Text</span>=\"\"&gt; it‟s a label that will use to show up conformation message to end users or client.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3854\"><br id=\"3855\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3856\"><p class=\"s90\" style=\"display: inline;\" id=\"3857\">&lt;table&gt; is starting table</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3858\"><p class=\"s90\" style=\"display: inline;\" id=\"3859\">&lt;tr&gt; it‟s a table row. One row contains multiple data cells so that we can use multiple &lt;td&gt; between opening and closing tags of table row &lt;tr&gt;. TD stands for “Table Data”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3860\"><p class=\"s90\" style=\"display: inline;\" id=\"3861\">&amp;nbsp; means white space.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3862\"><p class=\"s90\" style=\"display: inline;\" id=\"3863\">Closing tags of table row, table and form tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3864\"><p class=\"s90\" style=\"display: inline;\" id=\"3865\">All tags contain forward slash “/” means closing tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3866\"><p class=\"s90\" style=\"display: inline;\" id=\"3867\">Example &lt;/tr&gt; &lt;/td&gt;, &lt;/table&gt; tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3868\"><p class=\"s92\" style=\"display: inline;\" id=\"3869\">Onclick is events that will executed when user clicks on Button. In our Vcard we crate button id “ButtonCreate” and called “ButtonCreat_Click” methods that is in code behind page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3870\"><br id=\"3871\"></p><p class=\"s93\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3872\">Code behind Page “<span class=\"p\" id=\"3873\">VcardControl.ascx.cs” page.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3874\"><br id=\"3875\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3876\">To open code behind page you can double click on button. For example let‟s double click at CustomValidator for Name. It will create “<span class=\"s90\" id=\"3877\">CustomValidatorName_ServerValidate</span>” methods at code behind page and links automatically at design view for you. Or you can manually add methods to code behind page and link manually at Design view. See captured screen bellow of code behind page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3878\"><br id=\"3879\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3880\"><span id=\"3881\"><img width=\"616\" height=\"331\" alt=\"image\" src=\"Image_096.png\" id=\"3882\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3883\"><br id=\"3884\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3885\"><p style=\"display: inline;\" id=\"3886\">Using is used to references other namespace</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3887\"><p class=\"s8\" style=\"display: inline;\" id=\"3888\">Namespace <span class=\"p\" id=\"3889\">“VCardGenerator” namespace name.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3890\"><p class=\"s8\" style=\"display: inline;\" id=\"3891\">Public <span class=\"p\" id=\"3892\">means public, available from outside</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3893\"><p class=\"s8\" style=\"display: inline;\" id=\"3894\">Colon <span class=\"p\" id=\"3895\">“:” means left side of class is inherited from right side of class</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3896\"><p class=\"s8\" style=\"display: inline;\" id=\"3897\">Partial Class<span class=\"p\" id=\"3898\">: it‟s not a single class; C# compiler will group all the partial classes together and treat as a single class.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3899\"><p class=\"s8\" style=\"display: inline;\" id=\"3900\">VcardControl <span class=\"p\" id=\"3901\">is name of class and it is inheritance from System.Web.Ui.Usercontrol</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3902\"><p class=\"s8\" style=\"display: inline;\" id=\"3903\">Protected <span class=\"p\" id=\"3904\">means, member is accessible within its class and by derived classes.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3905\"><p class=\"s8\" style=\"display: inline;\" id=\"3906\">Void<span class=\"p\" id=\"3907\">: it means do not return anything, just execute block of code that inside open curly and close curly brackets.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3908\"><p class=\"s8\" style=\"display: inline;\" id=\"3909\">Page Load<span class=\"p\" id=\"3910\">: it‟s a method that executed when page load at server, All code inside Page_Load will executed automatically when page loads.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"3911\"><p style=\"display: inline;\" id=\"3912\">Be care full you should not write your code outside open and close curly brackets of Class. You have to place your code inside open and close curly brackets of Class. In our case “VcardControl class”, otherwise C# compiler will failed.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3913\"><br id=\"3914\"></p><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3915\" class=\"heading3915\"><a name=\"bookmark56\" id=\"3916\" style=\"color: green;\">CustomValidator for Name:</a></h3><div id=\"contentheading3915\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 35pt;text-align: justify;\" id=\"3917\">Let‟s Create CustomValidator for Name, Open Design View “VcardControl.ascx” and double click on CustomValidator that link to Name Textbox. If you follow me your code behind page should looks like this</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3918\"><br id=\"3919\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3920\"><span id=\"3921\"><img width=\"626\" height=\"120\" alt=\"image\" src=\"Image_097.png\" id=\"3922\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3923\"><br id=\"3924\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3925\"><p style=\"display: inline;\" id=\"3926\">Above captured screen is part of “VcardContro.ascx”</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3927\"><p style=\"display: inline;\" id=\"3928\">See second line of code, its TextBox and has id “TextBoxName”</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3929\"><p style=\"display: inline;\" id=\"3930\">See seventh line of code, ControlToValidate =”TextBoxName” . it means CustomValidator is linked to TextboxName.</p></li><li style=\"padding-left: 5pt;text-indent: 18pt;text-align: left;\" id=\"3931\"><p style=\"display: inline;\" id=\"3932\">See last line of onservervalidate=”CustomValidatorName_ServerValidate” onservervalidate is important, in above case it‟s equal to “CustomValidator_ServerValidate”. It must be same name methods that you specify between double quote in your code behind page. Let‟s create methods “CustomValidatorName_ServerValidate”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3933\"><br id=\"3934\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3935\"><span style=\" color: #00F;\" id=\"3936\">protected void </span>CustomValidatorName_ServerValidate(<span style=\" color: #00F;\" id=\"3937\">object </span>source, <span style=\" color: #2B91AE;\" id=\"3938\">ServerValidateEventArgs </span>args)</p><p class=\"s93\" style=\"padding-left: 26pt;text-indent: 0pt;text-align: left;\" id=\"3939\">{</p><p class=\"s93\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"3940\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s93\" style=\"padding-left: 26pt;text-indent: 0pt;text-align: left;\" id=\"3941\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3942\"><br id=\"3943\"></p></li><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3944\"><p style=\"display: inline;\" id=\"3945\">This is simple validation, here I get serverValidateEventArgs and stored in variable args.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3946\"><p style=\"display: inline;\" id=\"3947\">I called bool methods IsValid, if provided value‟s length is greater than zero it will set validate value equal to true otherwise it will set up false.</p></li><li style=\"padding-bottom: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3948\"><p style=\"display: inline;\" id=\"3949\">Here I pass values to RemoveSpeicalCharacter() methods because I want to replace all special character to secure websites.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3950\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"3951\">RemoveSpeicalCharacter() methods</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3952\">public string <span style=\" color: #000;\" id=\"3953\">RemoveSpecialCharacter(</span>string <span style=\" color: #000;\" id=\"3954\">input)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"3955\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3956\"><span style=\" color: #00F;\" id=\"3957\">return </span><span style=\" color: #2B91AE;\" id=\"3958\">Regex</span>.Replace(input, <span style=\" color: #A21515;\" id=\"3959\">\"[^0-9a-zA-Z. ]+\"</span>, <span style=\" color: #A21515;\" id=\"3960\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3961\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3962\"><br id=\"3963\"></p><ul id=\"l88\"><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3965\"><p style=\"display: inline;\" id=\"3966\">It is written in Regular expression.</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3967\"><p style=\"display: inline;\" id=\"3968\">Regex is regular expression can be use using Regex.</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"3969\"><p style=\"display: inline;\" id=\"3970\">Make sure to add <span class=\"s66\" id=\"3971\">using </span><span class=\"s70\" id=\"3972\">System.Text.RegularExpression before Namespace starts.</span></p></li></ul><p class=\"s27\" style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"3973\">-    <span class=\"p\" id=\"3974\">RemoveSpeicalCharacter() Method take one parameter string, it removes all character but not from 0 to 9 digits, from A to Z upper and lower case characters and period.</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3975\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"3976\">RemoveSpeicalCharacter() methods</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3977\">public string <span style=\" color: #000;\" id=\"3978\">RemoveSpecialCharacter(</span>string <span style=\" color: #000;\" id=\"3979\">input)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"3980\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3981\"><span style=\" color: #00F;\" id=\"3982\">return </span><span style=\" color: #2B91AE;\" id=\"3983\">Regex</span>.Replace(input, <span style=\" color: #A21515;\" id=\"3984\">\"[^0-9a-zA-Z. ]+\"</span>, <span style=\" color: #A21515;\" id=\"3985\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3986\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3987\"><br id=\"3988\"></p><ul id=\"l89\"><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3990\"><p style=\"display: inline;\" id=\"3991\">It is written in Regular expression.</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3992\"><p style=\"display: inline;\" id=\"3993\">Regex is regular expression can be use using Regex.</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"3994\"><p style=\"display: inline;\" id=\"3995\">Make sure to add <span class=\"s66\" id=\"3996\">using </span><span class=\"s70\" id=\"3997\">System.Text.RegularExpression before Namespace starts.</span></p></li></ul><p class=\"s27\" style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"3998\">-    <span class=\"p\" id=\"3999\">RemoveSpeicalCharacter() Method take one parameter string, it removes all character but not from 0 to 9 digits, from A to Z upper and lower case characters and period.</span></p><p style=\"padding-left: 33pt;text-indent: 0pt;text-align: left;\" id=\"4000\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4001\"> </span></p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4002\" class=\"heading4002\"><a name=\"bookmark57\" id=\"4003\" style=\"color: green;\">Email Validation:</a></h3></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"4004\"><p style=\"display: inline;\" id=\"4005\">Email Validation:</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4006\"><p style=\"display: inline;\" id=\"4007\">I created methods ValidateEmail()<span class=\"s3\" id=\"4008\">25</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4009\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4010\">ValidateEmail </span><span class=\"s97\" style=\" background-color: #FF0;\" id=\"4011\">() methods:</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4012\">public bool <span style=\" color: #000;\" id=\"4013\">ValidateEmail(</span>string <span style=\" color: #000;\" id=\"4014\">email)</span></p><p class=\"s70\" style=\"padding-left: 22pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4015\">{ <span style=\" color: #00F;\" id=\"4016\">return </span><span style=\" color: #2B91AE;\" id=\"4017\">Regex</span>.IsMatch(email,</p><p class=\"s99\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4018\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4019\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span style=\" color: #000;\" id=\"4020\">+</span></p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 67pt;text-align: left;\" id=\"4021\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA- Z]\\.)+[a-zA-Z]{2,6}))$\"<span style=\" color: #000;\" id=\"4022\">); }</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4023\"><br id=\"4024\"></p><ul id=\"l90\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4026\"><p style=\"display: inline;\" id=\"4027\">This method has one parameter email; here input string email is compared with pattern. Pattern is “valid email character id” + “@” + “Domain or sub Domain name”. And finally returns true if pattern is match otherwise return false.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4028\"><p style=\"display: inline;\" id=\"4029\">Example:</p><ul id=\"l91\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4031\"><p class=\"s8\" style=\"display: inline;\" id=\"4032\">Jeevan_2np@yahoo.com <span class=\"p\" id=\"4033\">will return true</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 94%;text-align: left;\" id=\"4034\"><p class=\"s8\" style=\"display: inline;\" id=\"4035\">Jeevan_2np.at.the.rate.yahoo.com <span class=\"p\" id=\"4036\">will return false- because “@” is missing here. Email id must contain “@” symbol</span></p></li></ul></li></ul><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4037\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4038\">ValidateEmail </span><span class=\"s97\" style=\" background-color: #FF0;\" id=\"4039\">() methods:</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4040\">public bool <span style=\" color: #000;\" id=\"4041\">ValidateEmail(</span>string <span style=\" color: #000;\" id=\"4042\">email)</span></p><p class=\"s70\" style=\"padding-left: 22pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4043\">{ <span style=\" color: #00F;\" id=\"4044\">return </span><span style=\" color: #2B91AE;\" id=\"4045\">Regex</span>.IsMatch(email,</p><p class=\"s99\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4046\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4047\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span style=\" color: #000;\" id=\"4048\">+</span></p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 67pt;text-align: left;\" id=\"4049\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA- Z]\\.)+[a-zA-Z]{2,6}))$\"<span style=\" color: #000;\" id=\"4050\">); }</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4051\"><br id=\"4052\"></p><ul id=\"l92\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4054\"><p style=\"display: inline;\" id=\"4055\">This method has one parameter email; here input string email is compared with pattern. Pattern is “valid email character id” + “@” + “Domain or sub Domain name”. And finally returns true if pattern is match otherwise return false.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4056\"><p style=\"display: inline;\" id=\"4057\">Example:</p><ul id=\"l93\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4059\"><p class=\"s8\" style=\"display: inline;\" id=\"4060\">Jeevan_2np@yahoo.com <span class=\"p\" id=\"4061\">will return true</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 94%;text-align: left;\" id=\"4062\"><p class=\"s8\" style=\"display: inline;\" id=\"4063\">Jeevan_2np.at.the.rate.yahoo.com <span class=\"p\" id=\"4064\">will return false- because “@” is missing here. Email id must contain “@” symbol</span></p></li></ul></li></ul><p style=\"padding-left: 32pt;text-indent: 0pt;text-align: left;\" id=\"4065\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4066\"> </span></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"4067\"><p class=\"s93\" style=\"display: inline;\" id=\"4068\">Here is CustomEmailValidator Methods</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4069\"><br id=\"4070\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4071\"><span style=\" color: #00F;\" id=\"4072\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"4073\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4074\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4075\">{ args.IsValid = ValidateEmail(args.Value.ToString()); }</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4076\"><br id=\"4077\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4078\">Description: <span class=\"p\" id=\"4079\">args.Value.ToString() is holding value that user typed in Email input Textbox in Browser, passing that value to ValidateEmail() method will decide whether passing value is in valid email format or not. If it is valid it will set args.IsValid = true, if it is not valid it will set args.IsValid = false;</span></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4080\"><span style=\" color: #00F;\" id=\"4081\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"4082\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4083\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4084\">{ args.IsValid = ValidateEmail(args.Value.ToString()); }</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4085\"><br id=\"4086\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4087\">Description: <span class=\"p\" id=\"4088\">args.Value.ToString() is holding value that user typed in Email input Textbox in Browser, passing that value to ValidateEmail() method will decide whether passing value is in valid email format or not. If it is valid it will set args.IsValid = true, if it is not valid it will set args.IsValid = false;</span></p><p style=\"padding-left: 32pt;text-indent: 0pt;text-align: left;\" id=\"4089\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4090\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4091\"><br id=\"4092\"></p><h3 style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4093\" class=\"heading4093\"><a name=\"bookmark58\" id=\"4094\" style=\"color: green;\">Phone Validation:</a></h3><div id=\"contentheading4093\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"4095\"><br id=\"4096\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4097\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4098\">CustomValidatorPhone_ServerValidate:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4099\"><br id=\"4100\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4101\"><span style=\" color: #00F;\" id=\"4102\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"4103\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4104\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4105\">{</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4106\">if <span style=\" color: #000;\" id=\"4107\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4108\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4109\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4110\">}</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4111\">else</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4112\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4113\">args.IsValid = <span style=\" color: #00F;\" id=\"4114\">true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4115\">}</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4116\">}</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4117\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4118\">CustomValidatorPhone_ServerValidate:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4119\"><br id=\"4120\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4121\"><span style=\" color: #00F;\" id=\"4122\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"4123\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4124\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4125\">{</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4126\">if <span style=\" color: #000;\" id=\"4127\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4128\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4129\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4130\">}</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4131\">else</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4132\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4133\">args.IsValid = <span style=\" color: #00F;\" id=\"4134\">true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4135\">}</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4136\">}</p><p style=\"padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"4137\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4138\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4139\"><br id=\"4140\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4141\"><br id=\"4142\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4143\"><span id=\"4144\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_098.png\" id=\"4145\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"4146\">25 <a href=\"http://msdn.microsoft.com/en-us/library/01escwtf.aspx\" class=\"s11\" target=\"_blank\" id=\"4147\">Methods originally created by http://msdn.microsoft.com/en-us/library/01escwtf.aspx</a></p><p class=\"s93\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4148\">Description: “CustomValidatorPhone_ServerValidate”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4149\"><br id=\"4150\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4151\">First we check if user typed some value in Phone Number text box or not. If user typed some character on input text box its length must be greater than zero. If input value is great than zero, we need to validate whether it is valid phone number or not. We pass value to ValidatePhone() methods, ValidatePhone() method return true or false. If it is valid args.IsValid value is set to true, if not value is set to false.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4152\"><br id=\"4153\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4154\">Else statement execute if input value is empty or less than zero character length. It means user do not want to provide phone number on their Vcard so that args.IsValid is set to true.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4155\"><br id=\"4156\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4157\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4158\">ValidatePhone() methods:</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4159\">public bool <span style=\" color: #000;\" id=\"4160\">ValidatePhone(</span>string <span style=\" color: #000;\" id=\"4161\">input)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4162\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4163\"><span style=\" color: #00F;\" id=\"4164\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"4165\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"4166\">Regex </span>num = <span style=\" color: #00F;\" id=\"4167\">new </span><span style=\" color: #2B91AE;\" id=\"4168\">Regex</span>(<span style=\" color: #A21515;\" id=\"4169\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4170\">return <span style=\" color: #000;\" id=\"4171\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4172\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4173\">Description:</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4174\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span style=\" color: #00F;\" id=\"4175\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4176\">9 digits, it will return false because it’s not valid phone number.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4177\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4178\">ValidatePhone() methods:</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4179\">public bool <span style=\" color: #000;\" id=\"4180\">ValidatePhone(</span>string <span style=\" color: #000;\" id=\"4181\">input)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4182\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4183\"><span style=\" color: #00F;\" id=\"4184\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"4185\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"4186\">Regex </span>num = <span style=\" color: #00F;\" id=\"4187\">new </span><span style=\" color: #2B91AE;\" id=\"4188\">Regex</span>(<span style=\" color: #A21515;\" id=\"4189\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4190\">return <span style=\" color: #000;\" id=\"4191\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4192\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4193\">Description:</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4194\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span style=\" color: #00F;\" id=\"4195\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4196\">9 digits, it will return false because it’s not valid phone number.</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4197\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4198\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4199\"><br id=\"4200\"></p><p class=\"s100\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4201\">Validation for rest of Input Fields Street, PostalCode, City, Country, and Website are listed at appendix as complete code or putting all code together “Vcardcontrol.ascx.cs” page title. Please check appendix page for more details.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4202\"><br id=\"4203\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4204\"><a name=\"a59\" id=\"4205\">Create Button Events.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"4206\"><br id=\"4207\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4208\">End user submits data by clicking Create Button; here we have to do all processing steps. I have listed steps that need to do after end user clicks on “Create Button”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4209\"><br id=\"4210\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4211\"><p class=\"s93\" style=\"display: inline;\" id=\"4212\">Step 1: Hold or Store submitted data in a variable</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4213\"><br id=\"4214\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4215\"><p class=\"s93\" style=\"display: inline;\" id=\"4216\">Step 2: Validate and Remove special characters from submitted data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4217\"><br id=\"4218\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4219\"><p class=\"s93\" style=\"display: inline;\" id=\"4220\">Step 3: Upload Image to server and save it in server location if user choose image files.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4221\"><br id=\"4222\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4223\"><p class=\"s93\" style=\"display: inline;\" id=\"4224\">Step 4: Generate Vcard on the fly</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4225\"><br id=\"4226\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4227\"><p class=\"s93\" style=\"display: inline;\" id=\"4228\">Step 5: Send attach Email with Vcard</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4229\"><br id=\"4230\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4231\"><p class=\"s93\" style=\"display: inline;\" id=\"4232\">Step 6: Store data to Database for later use.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4233\"><br id=\"4234\"></p><p class=\"s93\" style=\"padding-left: 23pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"4235\">Step 2 is already done for Email, Name and Phone. Rest of validation and remove special character are available at appendix page as complete code so that please check out appendix page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4236\"><br id=\"4237\"></p><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4238\" class=\"heading4238\"><a name=\"bookmark59\" id=\"4239\" style=\"color: green;\">Step 1: Hold or Store Submitted Data</a></h3><div id=\"contentheading4238\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4240\">-it‟s a very easy. See example for holding or retrieving value for Name from client side. <span style=\" color: #00F;\" id=\"4241\">string </span>name = RemoveSpecialCharacter(TextBoxName.Text); I have created string variable name, name is equal to TextBoxName.Text, here TextBoxName is id of TextBoxName and .Text means text value from input textbox. I passed text value from input textbox to method “RemoveSpecialCharacter()” to remove special character. At the end string name will be equal to data or value that user typed in textbox other then special characters.</p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"4242\">Repeat same process for rest of input data. See example as references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4243\"><br id=\"4244\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4245\"><br id=\"4246\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4247\">string <span style=\" color: #000;\" id=\"4248\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"4249\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"4250\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"4251\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4252\">string <span style=\" color: #000;\" id=\"4253\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4254\">string <span style=\" color: #000;\" id=\"4255\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"4256\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4257\"><br id=\"4258\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4259\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4260\">string <span style=\" color: #000;\" id=\"4261\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"4262\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"4263\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"4264\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4265\">string <span style=\" color: #000;\" id=\"4266\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4267\">string <span style=\" color: #000;\" id=\"4268\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"4269\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4270\"><br id=\"4271\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4272\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4273\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4274\"> </span></p></div><h3 style=\"padding-top: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4275\" class=\"heading4275\"><a name=\"bookmark60\" id=\"4276\" style=\"color: green;\">Step 2: Validate Data</a></h3><div id=\"contentheading4275\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4277\">Double click on “Create” button, visual studio will automatically add event and open code behind page. If you follow me it must be looks like bellow</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4278\"><br id=\"4279\"></p><p class=\"s93\" style=\"padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"4280\"><span style=\" color: #00F;\" id=\"4281\">protected void </span>ButtonCreate_Click(<span style=\" color: #00F;\" id=\"4282\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"4283\">EventArgs </span>e)</p><p class=\"s93\" style=\"padding-left: 26pt;text-indent: 0pt;text-align: left;\" id=\"4284\">{</p><p class=\"s90\" style=\"padding-left: 36pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4285\">if <span style=\" color: #000;\" id=\"4286\">(Page.IsValid)</span></p><p class=\"s93\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"4287\">{ // processing code goes here…….. }</p><p class=\"s93\" style=\"padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"4288\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4289\"><br id=\"4290\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4291\">Visual studio creates ButtonCreate_Click() method events automatically. I added if(Page.IsValid) statement. It is very important to check all validation must be true, Page.IsValid will check whether page is valid or not.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4292\"><br id=\"4293\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4294\">For example</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4295\"><span style=\" color: #00F;\" id=\"4296\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"4297\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4298\">ServerValidateEventArgs </span>args)</p><p style=\"padding-left: 17pt;text-indent: 0pt;text-align: left;\" id=\"4299\"><span class=\"s70\" id=\"4300\">{ </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4301\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4302\">; }</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4303\"><br id=\"4304\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4305\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4306\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span style=\" color: #00F;\" id=\"4307\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4308\">For example</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4309\"><span style=\" color: #00F;\" id=\"4310\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"4311\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4312\">ServerValidateEventArgs </span>args)</p><p style=\"padding-left: 17pt;text-indent: 0pt;text-align: left;\" id=\"4313\"><span class=\"s70\" id=\"4314\">{ </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4315\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4316\">; }</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4317\"><br id=\"4318\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4319\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4320\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span style=\" color: #00F;\" id=\"4321\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p style=\"padding-left: 4pt;text-indent: 0pt;text-align: left;\" id=\"4322\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4323\"> </span></p><p class=\"s93\" style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4324\">If there is any validation fails or has false value, error message will show up at error summary and will not execute if(Page.IsValid) {} block of code.</p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"4325\"><p class=\"s93\" style=\"display: inline;\" id=\"4326\">Note: Double back slash inside code is used to comments in c# programming language.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4327\"><br id=\"4328\"></p><h3 style=\"padding-top: 12pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4329\" class=\"heading4329\"><a name=\"bookmark61\" id=\"4330\" style=\"color: green;\">Step 3- Image Upload and Save to Server:</a></h3><div id=\"contentheading4329\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-bottom: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4331\">In Vcard, user is allowed to have Vcard with image, in order to generate vcard with image user should able to upload image using browse button. Add Upload Button, make Id is naming convention so upload button will be easy to recognize on code behind page. if you added Button it must look like bellow.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4332\">VcardControl.ascx</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4333\">&lt;<span style=\" color: #800000;\" id=\"4334\">asp</span>:<span style=\" color: #800000;\" id=\"4335\">FileUpload </span><span style=\" color: #F00;\" id=\"4336\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"4337\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4338\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4339\">VcardControl.ascx</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4340\">&lt;<span style=\" color: #800000;\" id=\"4341\">asp</span>:<span style=\" color: #800000;\" id=\"4342\">FileUpload </span><span style=\" color: #F00;\" id=\"4343\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"4344\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4345\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4346\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4347\"> </span></p><p class=\"s93\" style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 2pt;line-height: 117%;text-align: justify;\" id=\"4348\">In code behind page: using posted.saveas() methods, image will be uploaded to server. See code bellow as references. Your logic can be difference.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4349\"><br id=\"4350\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4351\"><span id=\"4352\"><img width=\"598\" height=\"588\" alt=\"image\" src=\"Image_099.png\" id=\"4353\"></span></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4354\">if <span style=\" color: #000;\" id=\"4355\">(FileUploadPhoto.PostedFile != </span>null <span style=\" color: #000;\" id=\"4356\">&amp;&amp; FileUploadPhoto.PostedFile.ContentLength</span></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4357\">&gt; 0)</p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4358\">{ <span style=\" color: #00F;\" id=\"4359\">string </span>guid = id.ToString(<span style=\" color: #A21515;\" id=\"4360\">\"N\"</span>);</p><p class=\"s70\" style=\"padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"4361\"><span style=\" color: #00F;\" id=\"4362\">string </span>imageDirectory = Server.MapPath(<span style=\" color: #A21515;\" id=\"4363\">\"vcardimage\"</span>); <span style=\" color: #00F;\" id=\"4364\">if </span>(<span style=\" color: #2B91AE;\" id=\"4365\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\" style=\"padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"4366\">{</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4367\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4368\">Server.MapPath(<span style=\" color: #A21515;\" id=\"4369\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4370\">}</p><p class=\"s66\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4371\">else</p><p class=\"s70\" style=\"padding-left: 68pt;text-indent: 0pt;text-align: left;\" id=\"4372\">{ <span style=\" color: #2B91AE;\" id=\"4373\">Directory</span>.CreateDirectory(Server.MapPath(<span style=\" color: #A21515;\" id=\"4374\">\"vcardimage\"</span>));</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4375\"><br id=\"4376\"></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4377\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span style=\" color: #A21515;\" id=\"4378\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"4379\">}</p><p class=\"s70\" style=\"padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"4380\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4381\"><br id=\"4382\"></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4383\">Description:</p><ul id=\"l94\"><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4385\"><p class=\"s70\" style=\"display: inline;\" id=\"4386\">Fist we ensure that user browse or select file and Content Length of file is greater than zero that can be achieve by using FileUploadPhoto.PostedFile != <span style=\" color: #00F;\" id=\"4387\">null (means posted files should not equal to null or empy) and </span>FileUploadPhoto.PostedFile.ContentLength &gt; 0 means length of file should be greater than zero. if file name and content length is greater than zero we go to next step.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4388\"><br id=\"4389\"></p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4390\"><p class=\"s70\" style=\"display: inline;\" id=\"4391\">Second: we make new guid, its unique id that system generates automatically, in theory guid is never be same or do not match each other. You may have raise questions here why do we need guid? We need because when user upload files we do not know what file name user has, if two user upload different file but same image file name and file type, system will overwride old files. To prevent from this we add extra string to file name so that file name will not be same even user upload more than one files on same name and file format.</p></li></ul></div></li></ul><p class=\"s101\" style=\"padding-left: 88pt;text-indent: -18pt;text-align: left;\" id=\"4392\">o <span class=\"s70\" id=\"4393\">To get guid id we should call Guid id = Guid.NewGuid(); and string guid = id.ToString(\"N\"); ‚N‛ means guid will formatted without ‚-‚ symbol. By default guid looks like in that format 0000-0000-0000. Using ‚N‛ will remove ‚-‚so that guid will be in format of 123456.</span></p><ul id=\"l95\"><li style=\"padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4395\"><p class=\"s70\" style=\"display: inline;\" id=\"4396\">Third: we check whether directory ‚vcardimage‛ exist or not. It is very important to make sure there must be directory to save files in Vcard case, all images goes insides ‚vcardimage‛ directory. You can choose different name if you like. If directory exist we save file</p><ul id=\"l96\"><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4398\"><p class=\"s98\" style=\"display: inline;\" id=\"4399\">Directory<span style=\" color: #000;\" id=\"4400\">.Exists(directory name) will check whether passed director exist or not.</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4401\"><p class=\"s70\" style=\"display: inline;\" id=\"4402\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\" style=\"padding-left: 82pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4403\">Server.MapPath(<span style=\" color: #A21515;\" id=\"4404\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4405\"><p class=\"s70\" style=\"display: inline;\" id=\"4406\">PostedFile.SaveAs() methods used to save posted file. Posted files means user submitted page to server by clicking buttons.</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4407\"><p class=\"s70\" style=\"display: inline;\" id=\"4408\">FileUploadPhoto is id of asp:FileUpload that we created at design view or at VcardControl.ascx page</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4409\"><p class=\"s70\" style=\"display: inline;\" id=\"4410\">Forth: if director does not exist ‚else‛ statement code will be executed so we create directory first and save image after that.</p><ul id=\"l97\"><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4412\"><p class=\"s98\" style=\"display: inline;\" id=\"4413\">Directory<span style=\" color: #000;\" id=\"4414\">.CreateDirectory(directory name) methods is used to make directory.</span></p></li></ul></li></ul><ul id=\"l98\"><li style=\"padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4416\"><p class=\"s70\" style=\"display: inline;\" id=\"4417\">Third: we check whether directory ‚vcardimage‛ exist or not. It is very important to make sure there must be directory to save files in Vcard case, all images goes insides ‚vcardimage‛ directory. You can choose different name if you like. If directory exist we save file</p><ul id=\"l99\"><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4419\"><p class=\"s98\" style=\"display: inline;\" id=\"4420\">Directory<span style=\" color: #000;\" id=\"4421\">.Exists(directory name) will check whether passed director exist or not.</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4422\"><p class=\"s70\" style=\"display: inline;\" id=\"4423\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\" style=\"padding-left: 82pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4424\">Server.MapPath(<span style=\" color: #A21515;\" id=\"4425\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4426\"><p class=\"s70\" style=\"display: inline;\" id=\"4427\">PostedFile.SaveAs() methods used to save posted file. Posted files means user submitted page to server by clicking buttons.</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4428\"><p class=\"s70\" style=\"display: inline;\" id=\"4429\">FileUploadPhoto is id of asp:FileUpload that we created at design view or at VcardControl.ascx page</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4430\"><p class=\"s70\" style=\"display: inline;\" id=\"4431\">Forth: if director does not exist ‚else‛ statement code will be executed so we create directory first and save image after that.</p><ul id=\"l100\"><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4433\"><p class=\"s98\" style=\"display: inline;\" id=\"4434\">Directory<span style=\" color: #000;\" id=\"4435\">.CreateDirectory(directory name) methods is used to make directory.</span></p></li></ul></li></ul><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4436\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4437\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4438\"><br id=\"4439\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4440\"><br id=\"4441\"></p><h3 style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4442\" class=\"heading4442\"><a name=\"bookmark62\" id=\"4443\" style=\"color: green;\">Step 4: Generate Vcard:</a></h3><div id=\"contentheading4442\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"4444\"><span id=\"4445\"><img width=\"606\" height=\"395\" alt=\"image\" src=\"Image_100.png\" id=\"4446\"></span></p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 35pt;line-height: 112%;text-align: justify;\" id=\"4447\">Now we have required information, validation and image. It‟s time to generate Vcard. Writing Vcard is no difference from writing file and adding text line to file. See bellow code as reference. Only difference is structure and data. If you want to know more about Vcard structure you can visit microformat official web sites at microformat.org. Also see references<span class=\"s3\" id=\"4448\">26</span>. Your idea may be difference than mine idea.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4449\"><br id=\"4450\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4451\"><br id=\"4452\"></p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4453\"><span class=\"p\" id=\"4454\">Methods Name: GenerateVcard() Parameters: </span>string <span style=\" color: #000;\" id=\"4455\">firstName, </span>string</p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4456\">streetAddress, <span style=\" color: #00F;\" id=\"4457\">string </span>zip, <span style=\" color: #00F;\" id=\"4458\">string </span>city, <span style=\" color: #00F;\" id=\"4459\">string </span>country, <span style=\" color: #00F;\" id=\"4460\">string </span>email, <span style=\" color: #00F;\" id=\"4461\">string </span>phone, <span style=\" color: #00F;\" id=\"4462\">string </span>web and <span style=\" color: #00F;\" id=\"4463\">string </span>image</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4464\"><span class=\"p\" id=\"4465\">Methods Name: GenerateVcard() Parameters: </span>string <span style=\" color: #000;\" id=\"4466\">firstName, </span>string</p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4467\">streetAddress, <span style=\" color: #00F;\" id=\"4468\">string </span>zip, <span style=\" color: #00F;\" id=\"4469\">string </span>city, <span style=\" color: #00F;\" id=\"4470\">string </span>country, <span style=\" color: #00F;\" id=\"4471\">string </span>email, <span style=\" color: #00F;\" id=\"4472\">string </span>phone, <span style=\" color: #00F;\" id=\"4473\">string </span>web and <span style=\" color: #00F;\" id=\"4474\">string </span>image</p><p style=\"padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"4475\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4476\"><br id=\"4477\"></p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4478\">Code:</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4479\">var <span style=\" color: #000;\" id=\"4480\">vcardStringBuilder = </span>new <span style=\" color: #2B91AE;\" id=\"4481\">StringBuilder</span><span style=\" color: #000;\" id=\"4482\">();</span></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4483\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4484\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4485\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4486\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"4487\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"4488\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"4489\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"4490\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"4491\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4492\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4493\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4494\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4495\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4496\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"4497\">\":\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"4498\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4499\">);</p><p class=\"s70\" style=\"text-indent: 73pt;text-align: left;\" id=\"4500\">vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"4501\">string</span>.Empty); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4502\">\"END:VCARD\"</span>);</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4503\">return <span style=\" color: #000;\" id=\"4504\">vcardStringBuilder.ToString();</span></p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4505\">Code:</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4506\">var <span style=\" color: #000;\" id=\"4507\">vcardStringBuilder = </span>new <span style=\" color: #2B91AE;\" id=\"4508\">StringBuilder</span><span style=\" color: #000;\" id=\"4509\">();</span></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4510\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4511\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4512\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4513\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"4514\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"4515\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"4516\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"4517\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"4518\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4519\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4520\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4521\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4522\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4523\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"4524\">\":\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"4525\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4526\">);</p><p class=\"s70\" style=\"text-indent: 73pt;text-align: left;\" id=\"4527\">vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"4528\">string</span>.Empty); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4529\">\"END:VCARD\"</span>);</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4530\">return <span style=\" color: #000;\" id=\"4531\">vcardStringBuilder.ToString();</span></p><p class=\"s10\" style=\"padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"4532\">\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4533\"><br id=\"4534\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4535\"><br id=\"4536\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4537\"><span id=\"4538\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_101.png\" id=\"4539\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"4540\"><a href=\"http://en.wikipedia.org/wiki/VCard\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"4541\">26 </a>http://en.wikipedia.org/wiki/VCard for vcard example</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4542\"><br id=\"4543\"></p><p style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4544\">Methods Name: GenerateVcard() Description:</p><ul id=\"l101\"><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4546\"><p style=\"display: inline;\" id=\"4547\">Start writing with line “<span class=\"s99\" id=\"4548\">BEGIN:VCARD</span><span class=\"s70\" id=\"4549\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li style=\"padding-top: 2pt;padding-left: 35pt;text-indent: -17pt;line-height: 14pt;text-align: left;\" id=\"4550\"><p class=\"s70\" style=\"display: inline;\" id=\"4551\">I append rest of information after ‚<span style=\" color: #A21515;\" id=\"4552\">BEGIN:VCARD</span>‛ before ‚<span style=\" color: #A21515;\" id=\"4553\">END:VCARD</span><span class=\"p\" id=\"4554\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li style=\"padding-left: 35pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4555\"><p class=\"s70\" style=\"display: inline;\" id=\"4556\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4557\"><p class=\"s70\" style=\"display: inline;\" id=\"4558\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4559\">o</p><p class=\"s70\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4560\">{</p><p style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4561\">Methods Name: GenerateVcard() Description:</p><ul id=\"l102\"><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4563\"><p style=\"display: inline;\" id=\"4564\">Start writing with line “<span class=\"s99\" id=\"4565\">BEGIN:VCARD</span><span class=\"s70\" id=\"4566\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li style=\"padding-top: 2pt;padding-left: 35pt;text-indent: -17pt;line-height: 14pt;text-align: left;\" id=\"4567\"><p class=\"s70\" style=\"display: inline;\" id=\"4568\">I append rest of information after ‚<span style=\" color: #A21515;\" id=\"4569\">BEGIN:VCARD</span>‛ before ‚<span style=\" color: #A21515;\" id=\"4570\">END:VCARD</span><span class=\"p\" id=\"4571\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li style=\"padding-left: 35pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4572\"><p class=\"s70\" style=\"display: inline;\" id=\"4573\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4574\"><p class=\"s70\" style=\"display: inline;\" id=\"4575\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4576\">o</p><p class=\"s70\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4577\">{</p><p style=\"padding-left: 13pt;text-indent: 0pt;text-align: left;\" id=\"4578\"></p><p class=\"s101\" style=\"text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4579\">o</p><p class=\"s101\" style=\"text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4580\">o</p><p style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4581\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4582\"><br id=\"4583\"></p><ul id=\"l103\"><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 10pt;text-align: left;\" id=\"4585\"><p class=\"s70\" style=\"display: inline;\" id=\"4586\">Make sure to specify ‚<span style=\" color: #A21515;\" id=\"4587\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4588\">actual image string.</p><ul id=\"l104\"><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4590\"><p class=\"s70\" style=\"display: inline;\" id=\"4591\">Here PHOTO: used to indicate Vcard contains image</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4592\"><p class=\"s70\" style=\"display: inline;\" id=\"4593\">Encoding: types of encode, in our case Base64</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4594\"><p class=\"s70\" style=\"display: inline;\" id=\"4595\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4596\"><p class=\"s70\" style=\"display: inline;\" id=\"4597\">Finally Vcard is return in format of String for further process.</p></li></ul><ul id=\"l105\"><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 10pt;text-align: left;\" id=\"4599\"><p class=\"s70\" style=\"display: inline;\" id=\"4600\">Make sure to specify ‚<span style=\" color: #A21515;\" id=\"4601\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4602\">actual image string.</p><ul id=\"l106\"><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4604\"><p class=\"s70\" style=\"display: inline;\" id=\"4605\">Here PHOTO: used to indicate Vcard contains image</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4606\"><p class=\"s70\" style=\"display: inline;\" id=\"4607\">Encoding: types of encode, in our case Base64</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4608\"><p class=\"s70\" style=\"display: inline;\" id=\"4609\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4610\"><p class=\"s70\" style=\"display: inline;\" id=\"4611\">Finally Vcard is return in format of String for further process.</p></li></ul><p style=\"padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"4612\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4613\"><br id=\"4614\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4615\"><span id=\"4616\"><img width=\"606\" height=\"362\" alt=\"image\" src=\"Image_102.png\" id=\"4617\"></span></p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4618\">public byte<span style=\" color: #000;\" id=\"4619\">[] ReadImage(</span>string <span style=\" color: #000;\" id=\"4620\">image)</span></p><p class=\"s66\" style=\"padding-left: 21pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4621\">return <span style=\" color: #2B91AE;\" id=\"4622\">File</span><span style=\" color: #000;\" id=\"4623\">.ReadAllBytes(image); }</span></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"4624\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span style=\" color: #2B91AE;\" id=\"4625\">Convert</span>.ToBase64String() methods.</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4626\">public byte<span style=\" color: #000;\" id=\"4627\">[] ReadImage(</span>string <span style=\" color: #000;\" id=\"4628\">image)</span></p><p class=\"s66\" style=\"padding-left: 21pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4629\">return <span style=\" color: #2B91AE;\" id=\"4630\">File</span><span style=\" color: #000;\" id=\"4631\">.ReadAllBytes(image); }</span></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"4632\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span style=\" color: #2B91AE;\" id=\"4633\">Convert</span>.ToBase64String() methods.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4634\"></p></div><h3 style=\"padding-top: 4pt; padding-left: 8pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4635\" class=\"heading4635\"><a name=\"bookmark63\" id=\"4636\" style=\"color: green;\">Step 5: Send attach Email with Vcard</a></h3><div id=\"contentheading4635\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4637\">After generating Vcard, Vcard needs to be delivered by Email attachment. Take a look bellow code how to send email using SMTP. I use gmx<span class=\"s3\" id=\"4638\">27 </span>as an example.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4639\"><br id=\"4640\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4641\">private void <span style=\" color: #000;\" id=\"4642\">SendVcard(</span>string <span style=\" color: #000;\" id=\"4643\">subject, </span>string <span style=\" color: #000;\" id=\"4644\">body, </span>string <span style=\" color: #000;\" id=\"4645\">email, </span>string <span style=\" color: #000;\" id=\"4646\">file)</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: -41pt;text-align: left;\" id=\"4647\">{ <span style=\" color: #00F;\" id=\"4648\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4649\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #2B91AE;\" id=\"4650\">MemoryStream </span>stream = <span style=\" color: #00F;\" id=\"4651\">new </span><span style=\" color: #2B91AE;\" id=\"4652\">MemoryStream</span>(byteArray); <span style=\" color: #2B91AE;\" id=\"4653\">MailMessage </span>message = <span style=\" color: #00F;\" id=\"4654\">new </span><span style=\" color: #2B91AE;\" id=\"4655\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4656\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4657\">message.From = <span style=\" color: #00F;\" id=\"4658\">new </span><span style=\" color: #2B91AE;\" id=\"4659\">MailAddress</span>(<span style=\" color: #A21515;\" id=\"4660\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4661\">SmtpClient <span style=\" color: #000;\" id=\"4662\">client = </span><span style=\" color: #00F;\" id=\"4663\">new </span>SmtpClient<span style=\" color: #000;\" id=\"4664\">();</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4665\"><span style=\" color: #2B91AE;\" id=\"4666\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4667\">new </span><span style=\" color: #2B91AE;\" id=\"4668\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4669\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4670\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\" style=\"padding-left: 193pt;text-indent: -102pt;text-align: left;\" id=\"4671\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span style=\" color: #00F;\" id=\"4672\">new</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 24pt;text-align: left;\" id=\"4673\"><span style=\" color: #2B91AE;\" id=\"4674\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"4675\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"4676\">\" password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"4677\">true</span>;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4678\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4679\">}</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4680\">Sender id= replace with your sender id</p><ul id=\"l107\"><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4682\"><p class=\"s70\" style=\"display: inline;\" id=\"4683\">User id = replace with real user id that has access to use SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4684\"><p class=\"s70\" style=\"display: inline;\" id=\"4685\">Password = replace with real valid password to access SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4686\"><p class=\"s70\" style=\"display: inline;\" id=\"4687\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4688\">private void <span style=\" color: #000;\" id=\"4689\">SendVcard(</span>string <span style=\" color: #000;\" id=\"4690\">subject, </span>string <span style=\" color: #000;\" id=\"4691\">body, </span>string <span style=\" color: #000;\" id=\"4692\">email, </span>string <span style=\" color: #000;\" id=\"4693\">file)</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: -41pt;text-align: left;\" id=\"4694\">{ <span style=\" color: #00F;\" id=\"4695\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4696\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #2B91AE;\" id=\"4697\">MemoryStream </span>stream = <span style=\" color: #00F;\" id=\"4698\">new </span><span style=\" color: #2B91AE;\" id=\"4699\">MemoryStream</span>(byteArray); <span style=\" color: #2B91AE;\" id=\"4700\">MailMessage </span>message = <span style=\" color: #00F;\" id=\"4701\">new </span><span style=\" color: #2B91AE;\" id=\"4702\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4703\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4704\">message.From = <span style=\" color: #00F;\" id=\"4705\">new </span><span style=\" color: #2B91AE;\" id=\"4706\">MailAddress</span>(<span style=\" color: #A21515;\" id=\"4707\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4708\">SmtpClient <span style=\" color: #000;\" id=\"4709\">client = </span><span style=\" color: #00F;\" id=\"4710\">new </span>SmtpClient<span style=\" color: #000;\" id=\"4711\">();</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4712\"><span style=\" color: #2B91AE;\" id=\"4713\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4714\">new </span><span style=\" color: #2B91AE;\" id=\"4715\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4716\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4717\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\" style=\"padding-left: 193pt;text-indent: -102pt;text-align: left;\" id=\"4718\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span style=\" color: #00F;\" id=\"4719\">new</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 24pt;text-align: left;\" id=\"4720\"><span style=\" color: #2B91AE;\" id=\"4721\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"4722\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"4723\">\" password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"4724\">true</span>;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4725\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4726\">}</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4727\">Sender id= replace with your sender id</p><ul id=\"l108\"><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4729\"><p class=\"s70\" style=\"display: inline;\" id=\"4730\">User id = replace with real user id that has access to use SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4731\"><p class=\"s70\" style=\"display: inline;\" id=\"4732\">Password = replace with real valid password to access SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4733\"><p class=\"s70\" style=\"display: inline;\" id=\"4734\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4735\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4736\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4737\"><br id=\"4738\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4739\"><span id=\"4740\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_103.png\" id=\"4741\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4742\"><a href=\"http://www.gmx.com/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"4743\">27 </a><span style=\" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 10pt;\" id=\"4744\">www.gmx.com </span>is free smtp provider as gmail.com, yahoo.com and hotmail.com need upgrade to use their smtp service using API.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4745\"><br id=\"4746\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"4747\">Description:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4748\"><br id=\"4749\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 10pt;text-align: left;\" id=\"4750\">Description: <span style=\" color: #000;\" id=\"4751\">input </span>string <span style=\" color: #000;\" id=\"4752\">subject, </span>string <span style=\" color: #000;\" id=\"4753\">body, </span>string <span style=\" color: #000;\" id=\"4754\">email and </span>string <span style=\" color: #000;\" id=\"4755\">file are parameters, required to send email.</span></p><ul id=\"l109\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4757\"><p class=\"s70\" style=\"display: inline;\" id=\"4758\"><span style=\" color: #00F;\" id=\"4759\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4760\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l110\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4762\"><p class=\"s70\" style=\"display: inline;\" id=\"4763\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4764\"><p class=\"s70\" style=\"display: inline;\" id=\"4765\">MemoryStream is used to write bytes into memory</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4766\"><p class=\"s98\" style=\"display: inline;\" id=\"4767\">MailMessage <span style=\" color: #000;\" id=\"4768\">message = </span><span style=\" color: #00F;\" id=\"4769\">new </span>MailMessage<span style=\" color: #000;\" id=\"4770\">();</span></p><ul id=\"l111\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4772\"><p class=\"s98\" style=\"display: inline;\" id=\"4773\">instantiate MailMessage</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4774\"><p class=\"s70\" style=\"display: inline;\" id=\"4775\">added receiver address, subject, sender</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4776\"><p class=\"s70\" style=\"display: inline;\" id=\"4777\">using Attachment we can attach files into email</p><ul id=\"l112\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4779\"><p class=\"s70\" style=\"display: inline;\" id=\"4780\"><span style=\" color: #2B91AE;\" id=\"4781\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4782\">new </span><span style=\" color: #2B91AE;\" id=\"4783\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4784\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4785\"><p class=\"s70\" style=\"display: inline;\" id=\"4786\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4787\"><p class=\"s70\" style=\"display: inline;\" id=\"4788\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 10pt;text-align: left;\" id=\"4789\">Description: <span style=\" color: #000;\" id=\"4790\">input </span>string <span style=\" color: #000;\" id=\"4791\">subject, </span>string <span style=\" color: #000;\" id=\"4792\">body, </span>string <span style=\" color: #000;\" id=\"4793\">email and </span>string <span style=\" color: #000;\" id=\"4794\">file are parameters, required to send email.</span></p><ul id=\"l113\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4796\"><p class=\"s70\" style=\"display: inline;\" id=\"4797\"><span style=\" color: #00F;\" id=\"4798\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4799\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l114\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4801\"><p class=\"s70\" style=\"display: inline;\" id=\"4802\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4803\"><p class=\"s70\" style=\"display: inline;\" id=\"4804\">MemoryStream is used to write bytes into memory</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4805\"><p class=\"s98\" style=\"display: inline;\" id=\"4806\">MailMessage <span style=\" color: #000;\" id=\"4807\">message = </span><span style=\" color: #00F;\" id=\"4808\">new </span>MailMessage<span style=\" color: #000;\" id=\"4809\">();</span></p><ul id=\"l115\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4811\"><p class=\"s98\" style=\"display: inline;\" id=\"4812\">instantiate MailMessage</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4813\"><p class=\"s70\" style=\"display: inline;\" id=\"4814\">added receiver address, subject, sender</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4815\"><p class=\"s70\" style=\"display: inline;\" id=\"4816\">using Attachment we can attach files into email</p><ul id=\"l116\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4818\"><p class=\"s70\" style=\"display: inline;\" id=\"4819\"><span style=\" color: #2B91AE;\" id=\"4820\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4821\">new </span><span style=\" color: #2B91AE;\" id=\"4822\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4823\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4824\"><p class=\"s70\" style=\"display: inline;\" id=\"4825\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4826\"><p class=\"s70\" style=\"display: inline;\" id=\"4827\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4828\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4829\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4830\"><br id=\"4831\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"4832\">Here Vcard is sent to Email address, it make sure that email address should be valid and right person, but it also cause user may need to check spam email.</p></div><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4833\" class=\"heading4833\"><a name=\"bookmark64\" id=\"4834\" style=\"color: green;\">What if server or SMTP fails to send email?</a></h3><div id=\"contentheading4833\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"4835\">Lets create option for incase SMTP fails to send email. See code bellow</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4836\"><br id=\"4837\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4838\"><br id=\"4839\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4840\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4841\">/// <span style=\" color: #008000;\" id=\"4842\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4843\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4844\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"4845\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"4846\">public void </span><span style=\" color: #000;\" id=\"4847\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"4848\">byte </span><span style=\" color: #000;\" id=\"4849\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4850\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4851\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"4852\">true</span>;</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 5pt;text-align: left;\" id=\"4853\">Response.ContentType = <span style=\" color: #A21515;\" id=\"4854\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"4855\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"4856\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"4857\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"4858\">);</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4859\">Response.Charset = <span style=\" color: #A21515;\" id=\"4860\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4861\">HttpContext<span style=\" color: #000;\" id=\"4862\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4863\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4864\"><br id=\"4865\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4866\">Description: I will describe very shortly.</p><ul id=\"l117\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4868\"><p class=\"s70\" style=\"display: inline;\" id=\"4869\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4870\"><p class=\"s70\" style=\"display: inline;\" id=\"4871\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4872\"><p class=\"s70\" style=\"display: inline;\" id=\"4873\">clear any content if there is any by calling Clear() methods.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4874\"><p class=\"s70\" style=\"display: inline;\" id=\"4875\">Set buffer true</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4876\"><p class=\"s70\" style=\"display: inline;\" id=\"4877\">Content type is Vcard</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4878\"><p class=\"s70\" style=\"display: inline;\" id=\"4879\">Add headers and File name</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4880\"><p class=\"s70\" style=\"display: inline;\" id=\"4881\">Start writing Vcard by using BinaryWriter() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4882\"><p class=\"s70\" style=\"display: inline;\" id=\"4883\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4884\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4885\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4886\">/// <span style=\" color: #008000;\" id=\"4887\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4888\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4889\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"4890\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"4891\">public void </span><span style=\" color: #000;\" id=\"4892\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"4893\">byte </span><span style=\" color: #000;\" id=\"4894\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4895\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4896\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"4897\">true</span>;</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 5pt;text-align: left;\" id=\"4898\">Response.ContentType = <span style=\" color: #A21515;\" id=\"4899\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"4900\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"4901\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"4902\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"4903\">);</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4904\">Response.Charset = <span style=\" color: #A21515;\" id=\"4905\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4906\">HttpContext<span style=\" color: #000;\" id=\"4907\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4908\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4909\"><br id=\"4910\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4911\">Description: I will describe very shortly.</p><ul id=\"l118\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4913\"><p class=\"s70\" style=\"display: inline;\" id=\"4914\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4915\"><p class=\"s70\" style=\"display: inline;\" id=\"4916\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4917\"><p class=\"s70\" style=\"display: inline;\" id=\"4918\">clear any content if there is any by calling Clear() methods.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4919\"><p class=\"s70\" style=\"display: inline;\" id=\"4920\">Set buffer true</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4921\"><p class=\"s70\" style=\"display: inline;\" id=\"4922\">Content type is Vcard</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4923\"><p class=\"s70\" style=\"display: inline;\" id=\"4924\">Add headers and File name</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4925\"><p class=\"s70\" style=\"display: inline;\" id=\"4926\">Start writing Vcard by using BinaryWriter() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4927\"><p class=\"s70\" style=\"display: inline;\" id=\"4928\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4929\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4930\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4931\"> </span></p></div><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4932\" class=\"heading4932\"><a name=\"bookmark65\" id=\"4933\" style=\"color: green;\">Step 6: Store data to Database for later use</a></h3><div id=\"contentheading4932\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4934\">In this step we will store Vcard data into Database for later use. To store data, first we need to ensure that table and fields are exits into database. Here is over view of logic how I am going to do this job done.</p><ol id=\"l119\"><li style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 18pt;text-align: left;\" id=\"4936\"><p style=\"display: inline;\" id=\"4937\">Create table and fields into Database</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4938\"><br id=\"4939\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"4940\"><p style=\"display: inline;\" id=\"4941\">Check table before insert data.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4942\"><br id=\"4943\"></p></li><li style=\"padding-left: 6pt;text-indent: 18pt;line-height: 175%;text-align: left;\" id=\"4944\"><p style=\"display: inline;\" id=\"4945\">Insert data into table and fields using Umbraco system Create Table and Fields into Database<span class=\"s3\" id=\"4946\">28</span></p></li></ol><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4947\">There are many way to create table and fields into database. You may create using Sql Server Management Studio or you can create using C# code. Here I will explain sustainable way to program.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4948\"><br id=\"4949\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4950\"><span id=\"4951\"><img width=\"617\" height=\"475\" alt=\"image\" src=\"Image_104.png\" id=\"4952\"></span></p><p class=\"s10\" style=\"padding-top: 4pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4953\">Creating Table and Fields:</p><p class=\"s78\" style=\"padding-top: 1pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4954\">string <span style=\" color: #000;\" id=\"4955\">queryString = </span><span style=\" color: #A21515;\" id=\"4956\">@\" CREATE TABLE [vcardimage](</span></p><p class=\"s106\" style=\"padding-left: 148pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"4957\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s106\" style=\"padding-left: 148pt;text-indent: 5pt;text-align: left;\" id=\"4958\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s106\" style=\"padding-left: 148pt;text-indent: 0pt;text-align: left;\" id=\"4959\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"4960\">;</span></p><p class=\"s81\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4961\">I have created queryString first. CREATE TABLE [ table name ] is used to create table. Fields are added inside open and close brackets.</p><ul id=\"l120\"><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4963\"><p class=\"s106\" style=\"display: inline;\" id=\"4964\">[id] [int] IDENTITY(1,1) NOT NULL <span style=\" color: #000;\" id=\"4965\">means: [id] is field name, [int] short form of integer is its property, (1,1) means increase automatically by +1, NOT NULL means field id should not be null it must contains data.</span></p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4966\"><p class=\"s106\" style=\"display: inline;\" id=\"4967\">[name] [nvarchar] (250) NULL, [name]: field name is name, its property is nvarchar and (250) means its maximum capacity, Null means name field may be null or empty</p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4968\"><p class=\"s81\" style=\"display: inline;\" id=\"4969\">Street, country, phone, email, website and imageguid are similar as Name field</p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4970\"><p class=\"s81\" style=\"display: inline;\" id=\"4971\">postalCode and DateTime has different properties int (integer) and Datetime respectively.</p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4972\"><p class=\"s81\" style=\"display: inline;\" id=\"4973\">For more details check Sql query languages.</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"4974\"><br id=\"4975\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4976\"><br id=\"4977\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4978\"><span id=\"4979\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_105.png\" id=\"4980\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4981\">28 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"4982\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4983\">%E2%80%93-comments</p><p class=\"s19\" style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4984\">Note: Given creating table and fields example are only for MsSql database, if you using MySql database code may be difference<span class=\"p\" id=\"4985\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4986\"><br id=\"4987\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4988\">Executing queryString:</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4989\">Follow the steps:</p><ul id=\"l121\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4991\"><p style=\"display: inline;\" id=\"4992\">Create sql command object</p><ul id=\"l122\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4994\"><p class=\"s98\" style=\"display: inline;\" id=\"4995\"><span class=\"p\" id=\"4996\">using </span>SqlCommand <span style=\" color: #000;\" id=\"4997\">command = </span><span style=\" color: #00F;\" id=\"4998\">new </span>SqlCommand<span style=\" color: #000;\" id=\"4999\">(queryString, connection)</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5000\"><p class=\"s70\" style=\"display: inline;\" id=\"5001\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5002\"><p class=\"s70\" style=\"display: inline;\" id=\"5003\">To reuse Umbraco connection string use folling code</p><ul id=\"l123\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5005\"><p class=\"s98\" style=\"display: inline;\" id=\"5006\">SqlConnection <span style=\" color: #000;\" id=\"5007\">connection = </span><span style=\" color: #00F;\" id=\"5008\">new </span>SqlConnection<span style=\" color: #000;\" id=\"5009\">(</span>GlobalSettings<span style=\" color: #000;\" id=\"5010\">.DbDSN);</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5011\"><p class=\"s70\" style=\"display: inline;\" id=\"5012\">Make sure to add reference <span style=\" color: #00F;\" id=\"5013\">using </span>umbraco before use <span style=\" color: #2B91AE;\" id=\"5014\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5015\"><p class=\"s70\" style=\"display: inline;\" id=\"5016\">Open database connection using connection.Open();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5017\"><p class=\"s70\" style=\"display: inline;\" id=\"5018\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5019\"><p class=\"s70\" style=\"display: inline;\" id=\"5020\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"5021\"><p class=\"s70\" style=\"display: inline;\" id=\"5022\">connection.Close();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"5023\"><p class=\"s70\" style=\"display: inline;\" id=\"5024\">Finally close connection by calling Close() methods.</p></li></ul><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5025\">Executing queryString:</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5026\">Follow the steps:</p><ul id=\"l124\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"5028\"><p style=\"display: inline;\" id=\"5029\">Create sql command object</p><ul id=\"l125\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"5031\"><p class=\"s98\" style=\"display: inline;\" id=\"5032\"><span class=\"p\" id=\"5033\">using </span>SqlCommand <span style=\" color: #000;\" id=\"5034\">command = </span><span style=\" color: #00F;\" id=\"5035\">new </span>SqlCommand<span style=\" color: #000;\" id=\"5036\">(queryString, connection)</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5037\"><p class=\"s70\" style=\"display: inline;\" id=\"5038\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5039\"><p class=\"s70\" style=\"display: inline;\" id=\"5040\">To reuse Umbraco connection string use folling code</p><ul id=\"l126\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5042\"><p class=\"s98\" style=\"display: inline;\" id=\"5043\">SqlConnection <span style=\" color: #000;\" id=\"5044\">connection = </span><span style=\" color: #00F;\" id=\"5045\">new </span>SqlConnection<span style=\" color: #000;\" id=\"5046\">(</span>GlobalSettings<span style=\" color: #000;\" id=\"5047\">.DbDSN);</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5048\"><p class=\"s70\" style=\"display: inline;\" id=\"5049\">Make sure to add reference <span style=\" color: #00F;\" id=\"5050\">using </span>umbraco before use <span style=\" color: #2B91AE;\" id=\"5051\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5052\"><p class=\"s70\" style=\"display: inline;\" id=\"5053\">Open database connection using connection.Open();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5054\"><p class=\"s70\" style=\"display: inline;\" id=\"5055\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5056\"><p class=\"s70\" style=\"display: inline;\" id=\"5057\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"5058\"><p class=\"s70\" style=\"display: inline;\" id=\"5059\">connection.Close();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"5060\"><p class=\"s70\" style=\"display: inline;\" id=\"5061\">Finally close connection by calling Close() methods.</p></li></ul><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5062\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5063\"> </span></p><p class=\"s93\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5064\">Code all in one for CreateTable methods</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5065\"><br id=\"5066\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5067\"><span id=\"5068\"><img width=\"621\" height=\"478\" alt=\"image\" src=\"Image_106.png\" id=\"5069\"></span></p><p class=\"s107\" style=\"padding-top: 3pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"5070\">private static bool <span style=\" color: #000;\" id=\"5071\">CreateTable(</span>string <span style=\" color: #000;\" id=\"5072\">tableName)</span></p><p class=\"s108\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5073\">{</p><p class=\"s107\" style=\"padding-left: 74pt;text-indent: 0pt;text-align: left;\" id=\"5074\">try</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;text-align: left;\" id=\"5075\">{</p><p style=\"padding-top: 9pt;padding-left: 15pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5076\">Never forget to put code block inside try{} catch{}.</p><p class=\"s109\" style=\"padding-left: 15pt;text-indent: 79pt;text-align: left;\" id=\"5077\">SqlConnection <span style=\" color: #000;\" id=\"5078\">connection = </span><span style=\" color: #00F;\" id=\"5079\">new </span>SqlConnection<span style=\" color: #000;\" id=\"5080\">(</span>GlobalSettings<span style=\" color: #000;\" id=\"5081\">.DbDSN);</span></p><p class=\"s107\" style=\"padding-left: 94pt;text-indent: 0pt;text-align: left;\" id=\"5082\">string <span style=\" color: #000;\" id=\"5083\">queryString =</span></p><p class=\"s110\" style=\"padding-left: 114pt;text-indent: 0pt;text-align: left;\" id=\"5084\">@\" CREATE TABLE [vcardimage](</p><p class=\"s110\" style=\"padding-left: 134pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5085\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s110\" style=\"padding-left: 134pt;text-indent: 4pt;text-align: left;\" id=\"5086\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s110\" style=\"padding-left: 134pt;text-indent: 0pt;text-align: left;\" id=\"5087\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"5088\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5089\"><br id=\"5090\"></p><p class=\"s109\" style=\"padding-left: 15pt;text-indent: 44pt;text-align: left;\" id=\"5091\">SqlCommand <span style=\" color: #000;\" id=\"5092\">command = </span><span style=\" color: #00F;\" id=\"5093\">new </span>SqlCommand<span style=\" color: #000;\" id=\"5094\">(queryString, connection);</span></p><p class=\"s108\" style=\"padding-left: 94pt;text-indent: 0pt;text-align: left;\" id=\"5095\">connection.Open(); command.ExecuteNonQuery(); connection.Close(); <span style=\" color: #00F;\" id=\"5096\">return true</span>;</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5097\">}</p><p class=\"s107\" style=\"padding-left: 74pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5098\">catch</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;text-align: left;\" id=\"5099\">{</p><p class=\"s107\" style=\"padding-left: 94pt;text-indent: 0pt;text-align: left;\" id=\"5100\">return false<span style=\" color: #000;\" id=\"5101\">;</span></p><p style=\"padding-top: 5pt;padding-left: 15pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5102\">First it will try to execute code if there is nothing wrong it will return true. It means table and fields successfully created. If there is anything wrong while executing code it will catch those errors and return false. False means table and fields did not create successfully.</p><p style=\"padding-top: 10pt;padding-left: 15pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5103\">Using Try {} Catch{} page does not break on yellow dead screen if something</p><p style=\"padding-left: 15pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"5104\">goes wrong.</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"5105\">}</p><p class=\"s108\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5106\">}</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5107\"><a name=\"a60\" id=\"5108\">Check Table exist:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5109\"><br id=\"5110\"></p><p class=\"s93\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5111\">Using Umbraco system we can easily check table name see code bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5112\"><br id=\"5113\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5114\">CheckTable() methods.</p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5115\">private static bool <span style=\" color: #000;\" id=\"5116\">CheckTable(</span>string <span style=\" color: #000;\" id=\"5117\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5118\">{</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 0pt;text-align: left;\" id=\"5119\"><span style=\" color: #2B91AE;\" id=\"5120\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"5121\">new </span><span style=\" color: #2B91AE;\" id=\"5122\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"5123\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"5124\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5125\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5126\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5127\"><br id=\"5128\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5129\">Make sure to add reference: <span style=\" color: #00F;\" id=\"5130\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5131\">CheckTable() methods.</p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5132\">private static bool <span style=\" color: #000;\" id=\"5133\">CheckTable(</span>string <span style=\" color: #000;\" id=\"5134\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5135\">{</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 0pt;text-align: left;\" id=\"5136\"><span style=\" color: #2B91AE;\" id=\"5137\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"5138\">new </span><span style=\" color: #2B91AE;\" id=\"5139\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"5140\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"5141\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5142\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5143\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5144\"><br id=\"5145\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5146\">Make sure to add reference: <span style=\" color: #00F;\" id=\"5147\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"5148\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5149\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5150\"><br id=\"5151\"></p><p class=\"s93\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5152\">Intert Data:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5153\"><br id=\"5154\"></p><p class=\"s93\" style=\"padding-top: 2pt;text-indent: 0pt;text-align: left;\" id=\"5155\">database. see code bellow.</p><p class=\"s93\" style=\"padding-top: 2pt;text-indent: 0pt;text-align: left;\" id=\"5156\">database. see code bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5157\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5158\"><span id=\"5159\"><img width=\"628\" height=\"517\" alt=\"image\" src=\"Image_107.png\" id=\"5160\"></span></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5161\">InsertTable() Methods:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5162\"><br id=\"5163\"></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5164\">public static bool <span style=\" color: #000;\" id=\"5165\">InsertTable(</span>string <span style=\" color: #000;\" id=\"5166\">name, </span>string <span style=\" color: #000;\" id=\"5167\">street, </span>string <span style=\" color: #000;\" id=\"5168\">postalcode, </span>string <span style=\" color: #000;\" id=\"5169\">country, </span>string <span style=\" color: #000;\" id=\"5170\">phone, </span>string <span style=\" color: #000;\" id=\"5171\">email, </span>string <span style=\" color: #000;\" id=\"5172\">website, </span>string <span style=\" color: #000;\" id=\"5173\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5174\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: -5pt;text-align: left;\" id=\"5175\"><span style=\" color: #00F;\" id=\"5176\">string </span>tableName = <span style=\" color: #A21515;\" id=\"5177\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"5178\">try</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5179\">{</p><p class=\"s66\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5180\">if <span style=\" color: #000;\" id=\"5181\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5182\">{CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5183\">ISqlHelper <span style=\" color: #000;\" id=\"5184\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"5185\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 104pt;text-align: left;\" id=\"5186\">@\"insert into \"<span style=\" color: #000;\" id=\"5187\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"5188\">+</span></p><p class=\"s99\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5189\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5190\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"5191\">,</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5192\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5193\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5194\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5195\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5196\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5197\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5198\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5199\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5200\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5201\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"5202\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"5203\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5204\">}</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5205\"><span style=\" color: #00F;\" id=\"5206\">catch</span>(<span style=\" color: #2B91AE;\" id=\"5207\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5208\">{</p><p class=\"s66\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5209\">return false<span style=\" color: #000;\" id=\"5210\">;</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5211\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5212\"><br id=\"5213\"></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5214\">}</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5215\">InsertTable() Methods:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5216\"><br id=\"5217\"></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5218\">public static bool <span style=\" color: #000;\" id=\"5219\">InsertTable(</span>string <span style=\" color: #000;\" id=\"5220\">name, </span>string <span style=\" color: #000;\" id=\"5221\">street, </span>string <span style=\" color: #000;\" id=\"5222\">postalcode, </span>string <span style=\" color: #000;\" id=\"5223\">country, </span>string <span style=\" color: #000;\" id=\"5224\">phone, </span>string <span style=\" color: #000;\" id=\"5225\">email, </span>string <span style=\" color: #000;\" id=\"5226\">website, </span>string <span style=\" color: #000;\" id=\"5227\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5228\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: -5pt;text-align: left;\" id=\"5229\"><span style=\" color: #00F;\" id=\"5230\">string </span>tableName = <span style=\" color: #A21515;\" id=\"5231\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"5232\">try</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5233\">{</p><p class=\"s66\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5234\">if <span style=\" color: #000;\" id=\"5235\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5236\">{CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5237\">ISqlHelper <span style=\" color: #000;\" id=\"5238\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"5239\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 104pt;text-align: left;\" id=\"5240\">@\"insert into \"<span style=\" color: #000;\" id=\"5241\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"5242\">+</span></p><p class=\"s99\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5243\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5244\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"5245\">,</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5246\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5247\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5248\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5249\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5250\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5251\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5252\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5253\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5254\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5255\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"5256\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"5257\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5258\">}</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5259\"><span style=\" color: #00F;\" id=\"5260\">catch</span>(<span style=\" color: #2B91AE;\" id=\"5261\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5262\">{</p><p class=\"s66\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5263\">return false<span style=\" color: #000;\" id=\"5264\">;</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5265\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5266\"><br id=\"5267\"></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5268\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5269\"></p><p class=\"s93\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5270\">If there is no table exist, we can create table using Create<span class=\"s111\" id=\"5271\">29 </span>Table() methods<span class=\"s111\" id=\"5272\">30</span>, it‟s time to insert data into</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5273\"><br id=\"5274\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"5275\"><span id=\"5276\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_108.png\" id=\"5277\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5278\">29 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"5279\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5280\">%E2%80%93-comments</p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"5281\">30 <span class=\"s10\" id=\"5282\">See createTable() methods on previous chapter.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5283\"><br id=\"5284\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5285\">Description of <span class=\"s70\" id=\"5286\">InsertTable() Methods:</span></p><ul id=\"l127\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5288\"><p class=\"s70\" style=\"display: inline;\" id=\"5289\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5290\"><p class=\"s70\" style=\"display: inline;\" id=\"5291\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5292\"><p class=\"s70\" style=\"display: inline;\" id=\"5293\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5294\"><p class=\"s70\" style=\"display: inline;\" id=\"5295\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5296\"><p class=\"s70\" style=\"display: inline;\" id=\"5297\">Forth if not return false. Something happen wrong.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5298\"><p class=\"s70\" style=\"display: inline;\" id=\"5299\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5300\">Note: make sure to reference <span style=\" color: #00F;\" id=\"5301\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5302\">Description of <span class=\"s70\" id=\"5303\">InsertTable() Methods:</span></p><ul id=\"l128\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5305\"><p class=\"s70\" style=\"display: inline;\" id=\"5306\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5307\"><p class=\"s70\" style=\"display: inline;\" id=\"5308\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5309\"><p class=\"s70\" style=\"display: inline;\" id=\"5310\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5311\"><p class=\"s70\" style=\"display: inline;\" id=\"5312\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5313\"><p class=\"s70\" style=\"display: inline;\" id=\"5314\">Forth if not return false. Something happen wrong.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5315\"><p class=\"s70\" style=\"display: inline;\" id=\"5316\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5317\">Note: make sure to reference <span style=\" color: #00F;\" id=\"5318\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5319\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5320\"> </span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5321\">Putting all code together.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5322\"><br id=\"5323\"></p><p style=\"padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"5324\"><span class=\"s112\" style=\" background-color: #FF0;\" id=\"5325\">VcardControl.ascx.cs</span></p><p style=\"padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"5326\"><span class=\"s112\" style=\" background-color: #FF0;\" id=\"5327\">For complete code, please visit appendix page and find page title “VcardControl.ascx.cs”.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5328\"><br id=\"5329\"></p></div><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5330\" class=\"heading5330\"><a name=\"bookmark66\" id=\"5331\" style=\"color: green;\">Implement User Control:</a></h3><div id=\"contentheading5330\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5332\">Until now we just finish creating usercontrol in Visual studio, its time to publish visual studio project, publishing visual studio project generate different types of files but we only need two types of files. Dot (.) dll file and .ascx file. Dll and .ascx (usercontrol) files should be copied into Umbraco site. <u id=\"5333\">DLL file goes inside bin directory of Umbraco site and .ascx file goes to “Usercontrol” directory of Umbraco sites</u>. Follow the steps</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5334\"><br id=\"5335\"></p><ul id=\"l129\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5337\"><p class=\"s93\" style=\"display: inline;\" id=\"5338\">First publish visual project</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5339\"><br id=\"5340\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5341\"><p class=\"s93\" style=\"display: inline;\" id=\"5342\">To publish project go to Build <span class=\"s114\" id=\"5343\"></span><span class=\"s115\" id=\"5344\"> </span>Publish + your visual project name</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5345\"><br id=\"5346\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5347\"><p class=\"s93\" style=\"display: inline;\" id=\"5348\">In my case publish VcardGenerator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5349\"><br id=\"5350\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5351\"><p class=\"s93\" style=\"display: inline;\" id=\"5352\">See captured screen for references</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"5353\"><br id=\"5354\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5355\"><span id=\"5356\"><img width=\"585\" height=\"266\" alt=\"image\" src=\"Image_109.png\" id=\"5357\"></span></p><p style=\"padding-top: 4pt;padding-left: 282pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5358\">Select “File System” from</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5359\"><br id=\"5360\"></p><p class=\"s10\" style=\"padding-top: 11pt;padding-left: 289pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5361\">Browse desire location to publish web site, in my case VcardPublish <span class=\"p\" id=\"5362\">directory in Desktop.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5363\"><br id=\"5364\"></p><p class=\"s116\" style=\"padding-top: 3pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"5365\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5366\"><br id=\"5367\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5368\"><span id=\"5369\"><img width=\"148\" height=\"66\" alt=\"image\" src=\"Image_110.png\" id=\"5370\"></span></p><p style=\"padding-top: 4pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"5371\">Press</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5372\"><br id=\"5373\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5374\"><br id=\"5375\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5376\">Let‟s open published items director. In my case “VcardPublish” directory it must contain at least one directory “bin” and one user control “VcardControl” see “VcardPublish.jpg” and “VcardPublish.bin.jpg” image bellow</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5377\"><br id=\"5378\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5379\"><span id=\"5380\"><img width=\"560\" height=\"640\" alt=\"image\" src=\"Image_111.png\" id=\"5381\"></span></p><p class=\"s88\" style=\"padding-top: 4pt;padding-left: 12pt;text-indent: 0pt;text-align: left;\" id=\"5382\">VcardPublish.jpg    </p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: right;\" id=\"5383\">directory</p><p class=\"s16\" style=\"padding-left: 8pt;text-indent: -8pt;line-height: 12pt;text-align: right;\" id=\"5384\">I placed cms.dll,</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: right;\" id=\"5385\">directory</p><p class=\"s16\" style=\"padding-left: 8pt;text-indent: -8pt;line-height: 12pt;text-align: right;\" id=\"5386\">I placed cms.dll,</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5387\"></p><p style=\"padding-top: 7pt;padding-left: 204pt;text-indent: 0pt;text-align: left;\" id=\"5388\">VcardPublish.bin.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5389\"><br id=\"5390\"></p><p style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5391\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5392\">VcardPublish.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;text-align: left;\" id=\"5393\">It contains</p><p style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5394\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5395\">VcardPublish.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;text-align: left;\" id=\"5396\">It contains</p><p style=\"padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5397\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5398\"><br id=\"5399\"></p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5400\">called “ref”</p><p class=\"s16\" style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"5401\">umbraco.dll,</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5402\">called “ref”</p><p class=\"s16\" style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"5403\">umbraco.dll,</p><p style=\"padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5404\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5405\"><br id=\"5406\"></p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5407\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p style=\"padding-top: 6pt;text-indent: 0pt;text-align: left;\" id=\"5408\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5409\">VcardPublish.bin.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5410\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 112%;text-align: left;\" id=\"5411\">be copied into Umbraco directory.</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5412\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p style=\"padding-top: 6pt;text-indent: 0pt;text-align: left;\" id=\"5413\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5414\">VcardPublish.bin.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5415\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 112%;text-align: left;\" id=\"5416\">be copied into Umbraco directory.</p><p style=\"padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5417\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5418\"><br id=\"5419\"></p><p style=\"padding-top: 4pt;padding-left: 142pt;text-indent: 0pt;text-align: left;\" id=\"5420\"><span class=\"s118\" style=\" background-color: #C0C0C0;\" id=\"5421\">UmbracoWebDirectory.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5422\"><br id=\"5423\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5424\"><br id=\"5425\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5426\">- <b id=\"5427\">Asp.net User Control files should goes inside “usercontrols” directory</b></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5428\"><br id=\"5429\"></p><p class=\"s100\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5430\">- VCardGenerator.DLL file goes inside “Bin” Directory see images “<span class=\"h4\" id=\"5431\">VcardPublish.jpg”,</span></p><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5432\"><a name=\"a61\" id=\"5433\">“VcardPublish.bin.jpg” and “UmbracoWebDirectory.jpg”.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5434\"><br id=\"5435\"></p><h3 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"5436\"><a name=\"bookmark67\" id=\"5437\">Create Macro to use User Control.</a></h3><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"5438\">Copying Asp.net User Control to “usercontrol” directory and relevant DLL file into “bin” directory is not enough to use User Control, using User Control to Asp.net and using User Control to Umbraco site is different. In Umbraco site we can use User Control creating associated Marco. See image “vcard.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5439\"><br id=\"5440\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5441\"><span id=\"5442\"><img width=\"590\" height=\"384\" alt=\"image\" src=\"Image_112.png\" id=\"5443\"></span></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5444\">Select</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5445\"><br id=\"5446\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5447\">Check “Use in</p><p class=\"s88\" style=\"padding-top: 6pt;padding-left: 217pt;text-indent: 0pt;text-align: center;\" id=\"5448\">Vcard.jpg                 </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5449\"><br id=\"5450\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5451\"><br id=\"5452\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5453\">I created User Control “vcard”, selected User Control “VcardControl.ascx” Umbraco automatically add directory “usercontrol” and I checked “use in Editor”. Checked in “use in editor” will make macro available to use in Content Rich text editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5454\"><br id=\"5455\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"5456\">Let‟s create content and insert Vcard macro in content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5457\"><br id=\"5458\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"5459\">Open Umbraco back end also called Umbraco Back Office. Go to Section “Content” click “Create New. Choose “General Content” Document Type. Click “Description” Tab and navigate Insert Macro near insert image icon</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5460\"><br id=\"5461\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5462\"><span id=\"5463\"><img width=\"604\" height=\"218\" alt=\"image\" src=\"Image_113.png\" id=\"5464\"></span></p><p class=\"s45\" style=\"padding-top: 4pt;padding-left: 143pt;text-indent: 0pt;text-align: left;\" id=\"5465\">Description <span class=\"p\" id=\"5466\">Insert Macro</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5467\"><br id=\"5468\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5469\">Select <b id=\"5470\">Vcard</b></p><p style=\"padding-top: 2pt;text-indent: 0pt;text-align: right;\" id=\"5471\">from Drop down</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5472\"><br id=\"5473\"></p><p style=\"padding-top: 10pt;padding-left: 99pt;text-indent: 0pt;text-align: left;\" id=\"5474\">Press OK</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5475\"><br id=\"5476\"></p><p class=\"s93\" style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"5477\">After pressing OK Button, you must see macro inserted into content; it looks like red dotted boarder line. See image bellow for reference.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5478\"><br id=\"5479\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5480\"><span id=\"5481\"><img width=\"309\" height=\"114\" alt=\"image\" src=\"Image_114.png\" id=\"5482\"></span></p><p class=\"s119\" style=\"padding-top: 1pt;padding-left: 121pt;text-indent: 0pt;text-align: left;\" id=\"5483\">Vcardcontent.jpg       </p><p class=\"s119\" style=\"padding-top: 1pt;padding-left: 121pt;text-indent: 0pt;text-align: left;\" id=\"5484\">Vcardcontent.jpg       </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5485\"></p><p class=\"s93\" style=\"padding-top: 4pt;padding-left: 247pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5486\">A macro area is highlighted. See image “vcardcontent.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5487\"><br id=\"5488\"></p><p class=\"s100\" style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5489\">Lets Preview Vcard Content by clicking Preview Icon:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5490\"><br id=\"5491\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5492\">If you are following me, preview must look like this.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5493\"><br id=\"5494\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5495\"><span id=\"5496\"><img width=\"606\" height=\"704\" alt=\"image\" src=\"Image_115.png\" id=\"5497\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5498\"><span id=\"5499\"><img width=\"277\" height=\"342\" alt=\"image\" src=\"Image_116.png\" id=\"5500\"></span></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"5501\">1</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5502\"><br id=\"5503\"></p><p style=\"padding-top: 11pt;padding-left: 2pt;text-indent: 0pt;text-align: center;\" id=\"5504\">2</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5505\"><br id=\"5506\"></p><p style=\"padding-left: 175pt;text-indent: 0pt;text-align: left;\" id=\"5507\">3 4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5508\"><br id=\"5509\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5510\">5</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5511\"><br id=\"5512\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5513\"><br id=\"5514\"></p><p style=\"text-indent: 0pt;text-align: right;\" id=\"5515\">6</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5516\"><br id=\"5517\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5518\"><br id=\"5519\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5520\"><br id=\"5521\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5522\"><br id=\"5523\"></p><p style=\"text-indent: 0pt;text-align: center;\" id=\"5524\">7</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5525\"><br id=\"5526\"></p><p style=\"text-indent: 0pt;text-align: center;\" id=\"5527\">7</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5528\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5529\"><br id=\"5530\"></p><ul id=\"l130\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5532\"><p class=\"s120\" style=\"display: inline;\" id=\"5533\">- <span class=\"s121\" id=\"5534\">107 - </span>| <span class=\"s122\" id=\"5535\">W r i t t e n B y J i v a</span></p></li></ul><ol id=\"l131\"><li style=\"padding-top: 10pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"5537\"><p style=\"display: inline;\" id=\"5538\">Red strip: preview mode</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5539\"><br id=\"5540\"></p><p class=\"s122\" style=\"text-indent: 0pt;text-align: left;\" id=\"5541\">n T h a p a</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5542\"><br id=\"5543\"></p><p class=\"s122\" style=\"text-indent: 0pt;text-align: left;\" id=\"5544\">n T h a p a</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5545\"></p></li><li style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"5546\"><p style=\"display: inline;\" id=\"5547\">Vcard navigation bar show up 3- Input text box, Image upload,</p></li></ol><p style=\"padding-left: 43pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"5548\">Create button environments</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5549\"><br id=\"5550\"></p><ol id=\"l132\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5552\"><p style=\"display: inline;\" id=\"5553\">Error Summary. Press “Create” button without typing. It show up required field errors</p></li><li style=\"padding-top: 10pt;padding-left: 25pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"5554\"><p style=\"display: inline;\" id=\"5555\">Name: required error message 6- Email: Required error message</p></li></ol><ol id=\"l133\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5557\"><p style=\"display: inline;\" id=\"5558\">Validation: email validation works. I tried to input “jeevan_2np at yahoo.com” email id, which does not contain</p><p style=\"padding-left: 43pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5559\">@ character, validation is not pass, it show up error message.</p><h2 style=\"padding-top: 3pt; padding-left: 20pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5560\" class=\"heading5560\"><a name=\"bookmark68\" id=\"5561\" style=\"color: lime;\">Extending Xslt Using .NET Class</a></h2><div id=\"contentheading5560\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 20pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5562\">In many cases Xslt may not be enough to fetch data or to process data in that case you can easily extend XSLT using .NET Class. Here I show how to use it, In Vcard website, people may interested to see recent Vcard. Name and address are fetched using .NET Class to extend XSLT.</p><p style=\"padding-top: 10pt;padding-left: 20pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5563\">Let‟s add Class. If you followed me, add new class in Visual studio VCardGenerator solution where we created User Controls. I choose class name “RecentVcard” and press Add. See captured screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5564\"><br id=\"5565\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5566\"><span id=\"5567\"><img width=\"652\" height=\"689\" alt=\"image\" src=\"Image_117.png\" id=\"5568\"></span></p><ol id=\"l134\"><li style=\"padding-top: 4pt;padding-left: 367pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5570\"><p style=\"display: inline;\" id=\"5571\">Recently added Class “RecentVcard.cs”</p></li><li style=\"padding-top: 10pt;padding-left: 367pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5572\"><p style=\"display: inline;\" id=\"5573\">I added two references, umbraco.DataLayer and Umbraco.</p></li><li style=\"padding-top: 10pt;padding-left: 367pt;text-indent: -18pt;text-align: right;\" id=\"5574\"><p style=\"display: inline;\" id=\"5575\">Method Name</p></li></ol></div></li></ol><p class=\"s45\" style=\"text-indent: 0pt;text-align: right;\" id=\"5576\">2 <span class=\"s123\" id=\"5577\">1 </span><span class=\"p\" id=\"5578\">GetVcardData().</span></p><p class=\"s27\" style=\"padding-top: 9pt;text-indent: 0pt;line-height: 12pt;text-align: right;\" id=\"5579\"><a name=\"a62\" id=\"5580\">- </a><span class=\"h4\" id=\"5581\">GetVcardData()</span></p><p class=\"s124\" style=\"padding-left: 202pt;text-indent: 0pt;line-height: 18pt;text-align: left;\" id=\"5582\">3 <b id=\"5583\">method is going to</b></p><h4 style=\"padding-top: 2pt;padding-left: 367pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5584\">use in XSLT so that it must be public access modifier and Static method declaration<span class=\"p\" id=\"5585\">.</span></h4><p class=\"s93\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 117%;text-align: left;\" id=\"5586\">Requirements: when you extend .NET Class you should have some basic knowledge which I did not cover here. My assumption is you already know basic things about</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5587\"><br id=\"5588\"></p><ol id=\"l135\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5590\"><p class=\"s93\" style=\"display: inline;\" id=\"5591\">Adding References, in my case I am using Umbraco system to fetch data; you need to add Umbraco.DataLayer and Umraco references in your Visual Project.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5592\"><br id=\"5593\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5594\"><p class=\"s93\" style=\"display: inline;\" id=\"5595\">Know how to select data from MsSql and sorting data (ascending or descending)</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5596\"><br id=\"5597\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"5598\"><p class=\"s93\" style=\"display: inline;\" id=\"5599\">In Vcard web Recent Vcard will be selected top 10 lists from database and should be order by latest Vcard should be at top.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5600\"><br id=\"5601\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5602\"><p class=\"s93\" style=\"display: inline;\" id=\"5603\">Looping. You should know how to loop data using while or foreach.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5604\"><br id=\"5605\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"5606\"><p class=\"s93\" style=\"display: inline;\" id=\"5607\">Know about static methods and where to use it. If you want to use methods in XSLT it must be declear as static and public access modifier.</p></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"5608\"><br id=\"5609\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5610\">Code inside GetVcardData() method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5611\"><br id=\"5612\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"5613\">I am going use ISqlHelper class provided by Umbraco to fetch data from Database, but you can fetch using asp.net way if you like. Here I show you to fetch data from Database using Umbraco. See code bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5614\"><br id=\"5615\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5616\"><span id=\"5617\"><img width=\"603\" height=\"521\" alt=\"image\" src=\"Image_118.png\" id=\"5618\"></span></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 13pt;text-indent: 0pt;text-align: left;\" id=\"5619\">public static string <span style=\" color: #000;\" id=\"5620\">GetVcardData()</span></p><p class=\"s70\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5621\">{</p><p class=\"s98\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5622\">ISqlHelper <span style=\" color: #000;\" id=\"5623\">getVcard = </span>DataLayerHelper<span style=\" color: #000;\" id=\"5624\">.CreateSqlHelper(</span>GlobalSettings<span style=\" color: #000;\" id=\"5625\">.DbDSN);</span></p><p class=\"s98\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5626\">IRecordsReader <span style=\" color: #000;\" id=\"5627\">read = getVcard.ExecuteReader(</span><span style=\" color: #A21515;\" id=\"5628\">@\"select top 10 id, name, country</span></p><p class=\"s99\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5629\">from vcardimage where id &gt; @id order by id desc\"<span style=\" color: #000;\" id=\"5630\">, getVcard.CreateParameter(</span>\"@id\"<span style=\" color: #000;\" id=\"5631\">, </span>\"0\"<span style=\" color: #000;\" id=\"5632\">));</span></p><p class=\"s70\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5633\"><span style=\" color: #00F;\" id=\"5634\">string </span>data = <span style=\" color: #A21515;\" id=\"5635\">\"\"</span>; <span style=\" color: #00F;\" id=\"5636\">while </span>(read.Read())</p><p class=\"s70\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5637\">{</p><p class=\"s70\" style=\"padding-left: 85pt;text-indent: 0pt;text-align: left;\" id=\"5638\">data += <span style=\" color: #A21515;\" id=\"5639\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span style=\" color: #A21515;\" id=\"5640\">\"name\"</span>) +</p><p class=\"s99\" style=\"padding-left: 86pt;text-indent: 0pt;text-align: left;\" id=\"5641\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span style=\" color: #000;\" id=\"5642\">+ read.GetString(</span>\"country\"<span style=\" color: #000;\" id=\"5643\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span style=\" color: #000;\" id=\"5644\">;</span></p><p class=\"s70\" style=\"padding-left: 76pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5645\">}</p><p class=\"s99\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5646\"><span style=\" color: #00F;\" id=\"5647\">return </span>\"&lt;ul&gt;\" <span style=\" color: #000;\" id=\"5648\">+ data + </span>\"&lt;/ul\"<span style=\" color: #000;\" id=\"5649\">;</span></p><p class=\"s70\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5650\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5651\"><br id=\"5652\"></p><p class=\"s40\" style=\"padding-top: 2pt;padding-left: 13pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"5653\">Description:</p><ul id=\"l136\"><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"5655\"><p class=\"s40\" style=\"display: inline;\" id=\"5656\">ISqlHelper object used to connect to database, GlobalSettings.DbDSN is use to retrieve database connection string from web.config file.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: justify;\" id=\"5657\"><p class=\"s40\" style=\"display: inline;\" id=\"5658\">IRecorderReader object contains method ExecuteReader(). ExecuteReater() has two parameters, first parameters is query string and second is parameters.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"5659\"><p class=\"s40\" style=\"display: inline;\" id=\"5660\">‚Select to 10 id, name, country‛ means select id, name and country from table name vcardimage and order by desc (desending) order.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"5661\"><p class=\"s40\" style=\"display: inline;\" id=\"5662\">I use while loop to loop data.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"5663\"><p class=\"s40\" style=\"display: inline;\" id=\"5664\">By calling GetString() methods Umbraco retrieve data as</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"5665\"><span id=\"5666\"><img width=\"648\" height=\"422\" alt=\"image\" src=\"Image_119.png\" id=\"5667\"></span></p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5668\"><span class=\"p\" id=\"5669\">If you are following me, RecentVcard class should looks like bellow, see captured screen. Now you need to publish your website. Go to </span>Build <span class=\"s89\" id=\"5670\"></span><span class=\"s28\" id=\"5671\"> </span>Publish VCardGenerator<span class=\"p\" id=\"5672\">. Select </span>Publish Method <span class=\"s89\" id=\"5673\"></span><span class=\"s28\" id=\"5674\"> </span>file System<span class=\"p\" id=\"5675\">. Select </span>Target Location <span class=\"p\" id=\"5676\">and press “</span>Publish<span class=\"p\" id=\"5677\">” button. It should generate </span>VCardControl.dll <span class=\"p\" id=\"5678\">file inside “Bin” Directory of your published directory. Copy that </span>VCardControl.dll <span class=\"p\" id=\"5679\">file to Umbraco website “</span>Bin<span class=\"p\" id=\"5680\">” Directory. If you are following me, you should already copied </span>VCardControl.dll <span class=\"p\" id=\"5681\">file into Umbraco website “</span>Bin<span class=\"p\" id=\"5682\">” Directory during User Control topics. You should replace old </span>VCardControl.dll <span class=\"p\" id=\"5683\">file with new </span>VCardControl.dll <span class=\"p\" id=\"5684\">file. We can register our </span>RecentVcard <span class=\"p\" id=\"5685\">class into Umbraco website </span>xsltExtensions.config <span class=\"p\" id=\"5686\">file.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5687\"><br id=\"5688\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5689\"><br id=\"5690\"></p><p class=\"s88\" style=\"padding-left: 63pt;text-indent: 0pt;text-align: left;\" id=\"5691\">RecentVcard     </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5692\"><br id=\"5693\"></p><p class=\"s88\" style=\"padding-left: 63pt;text-indent: 0pt;text-align: left;\" id=\"5694\">RecentVcard     </p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"5695\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5696\"><br id=\"5697\"></p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: justify;\" id=\"5698\">Overview of <i id=\"5699\">VCardGenerator </i>visual studio solution</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5700\"><br id=\"5701\"></p><ul id=\"l137\"><li style=\"padding-left: 44pt;text-indent: -18pt;text-align: left;\" id=\"5703\"><p style=\"display: inline;\" id=\"5704\">One user Control “VcardControl.ascx” use to generate Vcard</p></li><li style=\"padding-top: 11pt;padding-left: 44pt;text-indent: -18pt;text-align: left;\" id=\"5705\"><p style=\"display: inline;\" id=\"5706\">One Class “RecentVcard.cs” use to fetch data from Database</p></li><li style=\"padding-top: 11pt;padding-left: 44pt;text-indent: -18pt;text-align: left;\" id=\"5707\"><p style=\"display: inline;\" id=\"5708\">Added two references</p></li></ul><ol id=\"l138\"><li style=\"padding-top: 11pt;padding-left: 80pt;text-indent: -18pt;text-align: left;\" id=\"5710\"><p style=\"display: inline;\" id=\"5711\">Umbraco.DataLayer</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5712\"><br id=\"5713\"></p></li><li style=\"padding-left: 80pt;text-indent: -18pt;text-align: left;\" id=\"5714\"><p style=\"display: inline;\" id=\"5715\">Umbraco</p></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"5716\"><br id=\"5717\"></p><p style=\"padding-left: 62pt;text-indent: 0pt;text-align: left;\" id=\"5718\">See code line 5 and 6 in RecentVcard Class.</p><h3 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5719\"><a name=\"bookmark69\" id=\"5720\">Registering .NET Class on config file</a></h3><p style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 35pt;line-height: 112%;text-align: justify;\" id=\"5721\"><i id=\"5722\">RecentVcard </i>class returns latest ten list of recent vcard from database, before to use <i id=\"5723\">RecentVcard </i>class, Umbraco requires registering first. We can use <i id=\"5724\">RecentVcard </i>class only after registering <i id=\"5725\">RecentVard </i>class into Umbraco <i id=\"5726\">xsltExtensions.config </i>file. <i id=\"5727\">xsltExtesion.config </i>file is xml file which can be found inside “config” directory in Umbraco website. Go To “config” directory and open <i id=\"5728\">xsltExtension.config </i>file. You can either use visual studio or other software program, I am using Notepad ++<span class=\"s3\" id=\"5729\">31 </span>open source software. See captured screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5730\"><span id=\"5731\"><img width=\"644\" height=\"678\" alt=\"image\" src=\"Image_120.png\" id=\"5732\"></span></p><p style=\"padding-top: 2pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"5733\"><span class=\"s125\" id=\"5734\">1 </span><span class=\"s126\" style=\" background-color: #FF0;\" id=\"5735\">xsltExtension.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5736\"><br id=\"5737\"></p><p style=\"padding-top: 4pt;padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5738\">2</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5739\"><br id=\"5740\"></p><p class=\"s127\" style=\"padding-top: 4pt;padding-left: 48pt;text-indent: 0pt;text-align: center;\" id=\"5741\">5                                                                     <span class=\"p\" id=\"5742\">3                 4</span></p><ol id=\"l139\"><li style=\"padding-top: 9pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5744\"><p style=\"display: inline;\" id=\"5745\">File location of xsltExtensions.config</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5746\"><p style=\"display: inline;\" id=\"5747\">Assembly name “VcardGenerator”</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5748\"><p style=\"display: inline;\" id=\"5749\">Type = first one before dot is Namespace</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5750\"><p style=\"display: inline;\" id=\"5751\">Type = second after dot is Class name</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5752\"><p style=\"display: inline;\" id=\"5753\">Alias : it is use in Xslt to refer assembly</p></li></ol><h4 style=\"padding-top: 2pt;padding-left: 138pt;text-indent: 0pt;text-align: left;\" id=\"5754\"><a name=\"a63\" id=\"5755\">Did you get confuse?</a></h4><h4 style=\"padding-top: 2pt;padding-left: 138pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5756\">See image bellow “VCardGenerator.extension.jpg” and match number.</h4><p style=\"padding-left: 138pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"5757\">Make changed in your xsltExtensions.config file as mine see image xsltExtension.jpg if you want to follow me.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5758\"><br id=\"5759\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5760\">2</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5761\"><br id=\"5762\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;\" id=\"5763\">3 4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5764\"><br id=\"5765\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;\" id=\"5766\">4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5767\"><br id=\"5768\"></p><p style=\"padding-top: 4pt;padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5769\"><a name=\"a64\" id=\"5770\"><span class=\"s128\" style=\" background-color: #FF0;\" id=\"5771\">VCardGenerator.extension.jpg</span></a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5772\"><br id=\"5773\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"5774\"><span id=\"5775\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_121.png\" id=\"5776\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5777\"><a href=\"http://notepad-plus-plus.org/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"5778\">31 </a><a href=\"http://notepad-plus-plus.org/\" class=\"s11\" target=\"_blank\" id=\"5779\">http://notepad-plus-plus.org/</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5780\"><br id=\"5781\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5782\"><br id=\"5783\"></p><p style=\"padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5784\">After made change on xsltExtensions.config file, make sure to save changed.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5785\"><br id=\"5786\"></p><h4 style=\"padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5787\"><a name=\"a65\" id=\"5788\">Extending XSLT using .net Class Practice</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5789\"><br id=\"5790\"></p><p style=\"padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5791\">We have now VCardGenerator.dll file inside “Bin” directory and we also registered our Class on “xsltExtentions.config” file. Remember alias we specified at “xsltExtensions.config” file. If you are following me, alias is “recentvcard”.</p><h4 style=\"padding-top: 10pt;padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5792\"><a name=\"a66\" id=\"5793\">Create Xslt:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5794\"><br id=\"5795\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5796\"><span id=\"5797\"><img width=\"332\" height=\"203\" alt=\"image\" src=\"Image_122.jpg\" id=\"5798\"></span></p><p style=\"padding-top: 4pt;padding-left: 263pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5799\">I have created new xslt for Recent Vcard, see captured screen left. Go to backend part of umbraco website, Select <span class=\"s89\" id=\"5800\"></span><span class=\"s28\" id=\"5801\"> </span>Developer <span class=\"s89\" id=\"5802\"></span><span class=\"s28\" id=\"5803\"> </span>XSLT Files <span class=\"s89\" id=\"5804\"></span><span class=\"s28\" id=\"5805\"> </span>Right Click and click on “Create”.</p><p style=\"padding-top: 10pt;padding-left: 263pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"5806\">Filename: “ RecentVcard” Choose a Template: “Clean”</p><p style=\"padding-left: 21pt;text-indent: 242pt;line-height: 114%;text-align: left;\" id=\"5807\">Checked: “Create Macro” by checked in Umbraco will create matching macro for us automatically,</p><p style=\"padding-top: 9pt;padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5808\">Press <span class=\"s89\" id=\"5809\"></span><span class=\"s28\" id=\"5810\"> </span><i id=\"5811\">Create </i>Button.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5812\"><br id=\"5813\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5814\"><span id=\"5815\"><img width=\"419\" height=\"109\" alt=\"image\" src=\"Image_123.png\" id=\"5816\"></span></p><p class=\"s8\" style=\"padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5817\">Open “RecentVcard.xslt”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5818\"><br id=\"5819\"></p><p style=\"padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5820\">We can registered .net class inside xsl:stylesheet, using xslns. See the captured screen right. See highlighted area on</p><p style=\"padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5821\">right image, if you already worked with Xslt you may know xmlns. Xmlns is xml namespace for a document. After colon you provide namespace name, I choose “recentVcard”. You can choose different if you want. Use urn colon alias that you specified at xsltExtensions.config” see “xsltExtension.jpg” image, I my case alias is “recentvcard”. URN is Uniform Resource Name.</p><p style=\"padding-top: 9pt;padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5822\">public static method inside .NET class can be access using xml namespace in XSLT. In RecentVcard Class has one static public methods called <i id=\"5823\">GetVcardData()</i>. To access that public method we can use namespace colon and method name. If there are any parameters, we can easily pass. See example bellow how I accessed GetVcardData() method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5824\"><br id=\"5825\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5826\"><br id=\"5827\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5828\"><span id=\"5829\"><img width=\"623\" height=\"17\" alt=\"image\" src=\"Image_124.jpg\" id=\"5830\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5831\"><br id=\"5832\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5833\"><span id=\"5834\"><img width=\"638\" height=\"217\" alt=\"image\" src=\"Image_125.png\" id=\"5835\"></span></p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"5836\">Use xml namespace Specify method after</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5837\">Tips: xml namespace and methods are separated by colon</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5838\">Tips: xml namespace and methods are separated by colon</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5839\"></p><p style=\"padding-top: 2pt;padding-left: 165pt;text-indent: 0pt;text-align: left;\" id=\"5840\">colon.</p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5841\">Use disable-out-escaping= “yes”. It means that do not escape special character because method GetVcardData() returns html tags, ul, li, span tags.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5842\"><br id=\"5843\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5844\"><br id=\"5845\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5846\"><span id=\"5847\"><img width=\"610\" height=\"431\" alt=\"image\" src=\"Image_126.jpg\" id=\"5848\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5849\">Code all in one:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5850\"><br id=\"5851\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5852\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"5853\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5854\"><br id=\"5855\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5856\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5857\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"5858\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5859\"><br id=\"5860\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5861\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5862\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5863\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5864\"><br id=\"5865\"></p></div><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5866\" class=\"heading5866\"><a name=\"bookmark70\" id=\"5867\" style=\"color: green;\">Modify Macro:</a></h3><div id=\"contentheading5866\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5868\">Once you have XSLT, you can insert Xslt into templates, in my case I am going to insert into Content. So we need to check “Use in editor” option. Go to <span class=\"s89\" id=\"5869\"></span>Macros <span class=\"s89\" id=\"5870\"></span><span class=\"s28\" id=\"5871\"> </span>Open “Recent Vcard” <span class=\"s89\" id=\"5872\"></span><span class=\"s28\" id=\"5873\"> </span>checked on “Use in Editor” and Remember to “S<i id=\"5874\">ave”</i>. See captured screen bellow for references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5875\"><br id=\"5876\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5877\"><span id=\"5878\"><img width=\"638\" height=\"535\" alt=\"image\" src=\"Image_127.png\" id=\"5879\"></span></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"5880\">By selecting “Use in editor” makes macro available to use in content section.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5881\"><span id=\"5882\"><img width=\"386\" height=\"271\" alt=\"image\" src=\"Image_128.jpg\" id=\"5883\"></span></p><h4 style=\"padding-top: 4pt;padding-left: 22pt;text-indent: 0pt;text-align: left;\" id=\"5884\"><a name=\"a67\" id=\"5885\">Create Content: “Recent Vcard”</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5886\"><br id=\"5887\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5888\">Go to Content Section <span class=\"s89\" id=\"5889\"></span><span class=\"s28\" id=\"5890\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5891\"></span><span class=\"s28\" id=\"5892\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5893\">Go to Content Section <span class=\"s89\" id=\"5894\"></span><span class=\"s28\" id=\"5895\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5896\"></span><span class=\"s28\" id=\"5897\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p style=\"padding-left: 243pt;text-indent: 0pt;text-align: left;\" id=\"5898\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5899\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5900\"><br id=\"5901\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5902\"><span id=\"5903\"><img width=\"634\" height=\"231\" alt=\"image\" src=\"Image_129.png\" id=\"5904\"></span></p><p style=\"padding-left: 34pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5905\">It should create Content “Recent Vcard” and visible at left side menu. Provide following information. “Content Title”: Recent Card and checked in use in Navigation so that “Recent Vcard” will show up in navigation bar</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5906\"><br id=\"5907\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5908\"><span id=\"5909\"><img width=\"648\" height=\"298\" alt=\"image\" src=\"Image_130.png\" id=\"5910\"></span></p><p style=\"padding-top: 4pt;padding-left: 188pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5911\">Click on Tab“Description” and Insert Macro on content area. Select Marco “Recent Vcard”, after inserting Macro “RecentVcard”. Click on Tab “Preoperties” Select Template “General Content” and Press “Save and Publish Icon”. Create few Vcard and check. It should show up on web site.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5912\"><br id=\"5913\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5914\">Preview content by click on preview icon.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5915\"><br id=\"5916\"></p><p style=\"padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5917\">If you are following me, Vcard website should look like bellow captured screen.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5918\"><br id=\"5919\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5920\"><span id=\"5921\"><img width=\"638\" height=\"274\" alt=\"image\" src=\"Image_131.png\" id=\"5922\"></span></p><h2 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5923\" class=\"heading5923\"><a name=\"bookmark71\" id=\"5924\" style=\"color: lime;\">Page not Found Error:</a></h2><div id=\"contentheading5923\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5925\">It is nice to replace default Umbraco error HTTP handler, there are many error handler 500, 404 and 403 etc. 404 error are page not found error, due to some reason, accidental file deletion, dead links and user request not existing page causes HTTP 404 errors. Umbraco handles 404 errors by showing its default error message. We can easily override 404 errors with custom page. First let‟s see Umbraco default error 404 page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5926\"><br id=\"5927\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5928\"><span id=\"5929\"><img width=\"638\" height=\"414\" alt=\"image\" src=\"Image_132.png\" id=\"5930\"></span></p><p style=\"padding-top: 11pt;padding-left: 49pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5931\">I requested not existing page /test.aspx page, which was not exist. Umbraco handle 404 error. See highlighted text, it explain well, what to do. Sometimes it may not enough so need to extra work or needs to add extra code in web.config file.</p><h3 style=\"padding-top: 7pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5932\" class=\"heading5932\"><a name=\"bookmark72\" id=\"5933\" style=\"color: green;\">Create Custom 404 error page.</a></h3><div id=\"contentheading5932\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5934\">I am creating simple 404 error page. If you want to follow me go <span class=\"s89\" id=\"5935\"></span>Content <span class=\"s89\" id=\"5936\"></span><span class=\"s28\" id=\"5937\"> </span>Right click and click on “Create”. Name: “Page not Found” and Select “General Content” Document Type. Do not check “Use in Navigation” because I don‟t want to show this page into navigation. This page should be displayed only if 404 errors occur. Go to Tab “Title” provide content title “Page Not Found”, Go to Tab “Description” and type “Requested page not found, temporarily unavailable or an out-of-date bookmark/favorite” Go to Tab “Properties” Template <span class=\"s89\" id=\"5938\"></span><span class=\"s28\" id=\"5939\"> </span>“General Content”. Finally press “Save and Publish Icon”. Hold a second on Properties tab and look id of content because Umbraco needs content id. See “pagenotfound.jpg” image as references. Each content item gets unique id. We need to specify unique id of items into umbracoSettings.config files.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5940\"><br id=\"5941\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5942\"><span id=\"5943\"><img width=\"609\" height=\"373\" alt=\"image\" src=\"Image_133.png\" id=\"5944\"></span></p><p style=\"padding-top: 11pt;padding-left: 292pt;text-indent: 0pt;text-align: left;\" id=\"5945\">pagenotfound.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5946\"><br id=\"5947\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5948\"><br id=\"5949\"></p><p style=\"padding-left: 342pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5950\">In my case node id or unique id for content “Page not found” is 1098. You may have different node or unique id</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5951\"><br id=\"5952\"></p></div><h3 style=\"padding-top: 4pt; padding-left: 11pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5953\" class=\"heading5953\"><a name=\"bookmark73\" id=\"5954\" style=\"color: green;\">Modifying umbracoSettings.config file:</a></h3><div id=\"contentheading5953\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 54pt;line-height: 115%;text-align: left;\" id=\"5955\">umbracoSettings.config file can be found inside “config” directory, open umbracoSettings.config file using notepad or other program. It‟s xml document, find</p><p style=\"padding-left: 11pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5956\">&lt;errors&gt; elements inside umbracoSettings.config. <i id=\"5957\">errors </i>element contain child <i id=\"5958\">error404 </i>element. Set its value to node id of content, in my case 1098 and Save umbracoSettings.config file. See captured screen bellow for references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5959\"><br id=\"5960\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5961\"><br id=\"5962\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5963\"><span id=\"5964\"><img width=\"317\" height=\"147\" alt=\"image\" src=\"Image_134.png\" id=\"5965\"></span></p><p class=\"s10\" style=\"padding-left: 211pt;text-indent: 0pt;text-align: left;\" id=\"5966\">Umbraco <span class=\"p\" id=\"5967\">error404.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5968\"><br id=\"5969\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5970\"><span id=\"5971\"><img width=\"594\" height=\"317\" alt=\"image\" src=\"Image_135.png\" id=\"5972\"></span></p><p class=\"s64\" style=\"padding-top: 4pt;padding-left: 102pt;text-indent: 0pt;text-align: left;\" id=\"5973\"><span style=\" color: #000;\" id=\"5974\">Note: in some cases Umbraco 404 error may override by IIS (internet Information Service) or IIS may not hand over 404 error to Umbraco to handle in such case 404 error page will end up with ugly yellow dead screen page. To prevent from this we can specify by telling IIS not to handle, instead hand over all 404 error to Asp.net web site in our case Umbraco site by adding few lines of code into web.config file. Web.config file can be found in root directory of Umbraco System. Find system.webserver elements and add new element </span>&lt;<span style=\" color: #A21515;\" id=\"5975\">httpErrors </span><span style=\" color: #F00;\" id=\"5976\">existingResponse</span>=<span style=\" color: #000;\" id=\"5977\">\"</span>PassThrough<span style=\" color: #000;\" id=\"5978\">\" </span>/&gt; <span style=\" color: #000;\" id=\"5979\">inside system.webserver elements. Using existingRespone= “passThrough” means IIS does not override custom errors.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5980\"><br id=\"5981\"></p></div></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5982\" class=\"heading5982\"><a name=\"bookmark74\" id=\"5983\" style=\"color: lime;\">Conclusion:</a></h2><div id=\"contentheading5982\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"5984\"><br id=\"5985\"></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5986\">Learning process is not difficult if we start from basic, every complex system begins with basic and simple structure. Here I provided basic concept of Umbraco using examples rather than theory. I use Vcard as a case to demonstrate practical examples of basic concept of Umbraco. Vcard was virtual website it does not exist on live but concept that I used in Vcard was easy to understand how to start building Umbraco website from scratch. I started to show installation of Umbraco cms, most of new developer faces many problems to install. Developing Umbraco site from empty Umbraco installation is great challenge to new developer but it‟s a way to learn Umbraco from inside, I started to build Vcard site from scratch, empty Umbraco installation. Creating DocumentType, Template and Content is core of Umbraco CMS. If you reading books from beginning without skipping chapter you should be able to understand connection between DocumentType, Template and Content. I provided information about fetching data from xml using xslt and extending xslt using</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5987\">.net class provided basic concept of how to extend Umbraco. All these concepts and examples can be used for your own purpose and needs. You are familiar with how to fetch and insert data from database to Umbraco and Umbraco to Database, extending Umbraco using Xslt, user control and .net class. In last chapter I provided how to solve umbraco 404 error default page problem with custom 404 errors page in case you get errors. I also touch about security on website which will provide knowledge to secure Umbraco site even though security is not basic on Umbraco sites.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5988\"><br id=\"5989\"></p></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading5990\" class=\"heading5990\"><a name=\"bookmark75\" id=\"5991\" style=\"color: lime;\">References:</a></h2><div id=\"contentheading5990\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"5992\">Taken date: May-17-2011 Xslt and Xpath</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5993\"><a href=\"http://www.w3schools.com/xsl/\" id=\"5994\">http://www.w3schools.com/xsl/</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5995\"><br id=\"5996\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5997\">Umbraco to Database and Database to Umbraco</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5998\"><br id=\"5999\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"6000\">http://our.umbraco.org/forum/developers/api-questions/12248-Get-value-from-base- into-database</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"6001\">http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205--- comments</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"6002\"><a href=\"http://our.umbraco.org/wiki\" class=\"a\" target=\"_blank\" id=\"6003\">Wiki </a><a href=\"http://our.umbraco.org/wiki\" target=\"_blank\" id=\"6004\">http://our.umbraco.org/wiki</a></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"6005\">http://our.umbraco.org/wiki/recommendations/recommended-reading-for-net- developers</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6006\"><br id=\"6007\"></p></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading6008\" class=\"heading6008\"><a name=\"bookmark76\" id=\"6009\" style=\"color: lime;\">Extra files:</a></h2><div id=\"contentheading6008\" style=\"border: 5px solid rgb(0, 255, 0);\"><h3 style=\"padding-top: 12pt; padding-bottom: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading6010\" class=\"heading6010\"><a name=\"bookmark77\" id=\"6011\" style=\"color: green;\">Web grid.</a></h3><div id=\"contentheading6010\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"6012\"><span id=\"6013\"><img width=\"599\" height=\"371\" alt=\"image\" src=\"Image_136.jpg\" id=\"6014\"></span></p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6015\"><a name=\"bookmark78\" id=\"6016\">File “VcardControl.ascx”</a></h3><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6017\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"6018\">&lt;%</span><span class=\"s66\" id=\"6019\">@ </span><span class=\"s67\" id=\"6020\">Control </span><span class=\"s68\" id=\"6021\">Language</span><span class=\"s66\" id=\"6022\">=\"C#\" </span><span class=\"s68\" id=\"6023\">AutoEventWireup</span><span class=\"s66\" id=\"6024\">=\"true\" </span><span class=\"s68\" id=\"6025\">CodeBehind</span><span class=\"s66\" id=\"6026\">=\"VcardControl.ascx.cs\" </span><span class=\"s68\" id=\"6027\">Inherits</span><span class=\"s66\" id=\"6028\">=\"VCardGenerator.VcardControl\" </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"6029\">%&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6030\"><br id=\"6031\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6032\">&lt;<span style=\" color: #800000;\" id=\"6033\">form </span><span style=\" color: #F00;\" id=\"6034\">id</span>=\"FormVcard\" <span style=\" color: #F00;\" id=\"6035\">runat</span>=\"server\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6036\">&lt;<span style=\" color: #800000;\" id=\"6037\">div </span><span style=\" color: #F00;\" id=\"6038\">class</span>=\"errorMessage\"&gt;</p><p class=\"s66\" style=\"padding-left: 19pt;text-indent: 0pt;text-align: center;\" id=\"6039\">&lt;<span style=\" color: #800000;\" id=\"6040\">asp</span>:<span style=\" color: #800000;\" id=\"6041\">Label </span><span style=\" color: #F00;\" id=\"6042\">ID</span>=\"LabelNotice\" <span style=\" color: #F00;\" id=\"6043\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6044\">Text</span>=\"\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6045\">asp</span>:<span style=\" color: #800000;\" id=\"6046\">Label</span>&gt;</p><p class=\"s66\" style=\"padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"6047\">&lt;<span style=\" color: #800000;\" id=\"6048\">asp</span>:<span style=\" color: #800000;\" id=\"6049\">ValidationSummary </span><span style=\" color: #F00;\" id=\"6050\">ID</span>=\"ValidationSummary\" <span style=\" color: #F00;\" id=\"6051\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6052\">ForeColor</span>=\"#FF6666\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6053\">/&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6054\">&lt;/<span style=\" color: #800000;\" id=\"6055\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6056\">&lt;<span style=\" color: #800000;\" id=\"6057\">table </span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6058\">&lt;<span style=\" color: #800000;\" id=\"6059\">tr </span><span style=\" color: #F00;\" id=\"6060\">class</span>=\"name\"&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6061\">&lt;<span style=\" color: #800000;\" id=\"6062\">td</span>&gt; <span style=\" color: #000;\" id=\"6063\">Name: </span>&lt;/<span style=\" color: #800000;\" id=\"6064\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6065\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6066\">asp</span>:<span style=\" color: #800000;\" id=\"6067\">TextBox </span><span style=\" color: #F00;\" id=\"6068\">ID</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6069\">runat</span>=server&gt;&lt;/<span style=\" color: #800000;\" id=\"6070\">asp</span>:<span style=\" color: #800000;\" id=\"6071\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6072\">&lt;<span style=\" color: #800000;\" id=\"6073\">asp</span>:<span style=\" color: #800000;\" id=\"6074\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"6075\">ID</span>=\"RequiredFieldValidatorName\" <span style=\" color: #F00;\" id=\"6076\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6077\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6078\">ErrorMessage</span>=\"Name Required\" <span style=\" color: #F00;\" id=\"6079\">Font-</span></p><p class=\"s68\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6080\">Size<span style=\" color: #00F;\" id=\"6081\">=\"Small\"</span></p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6082\"><span style=\" color: #F00;\" id=\"6083\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6084\">asp</span>:<span style=\" color: #800000;\" id=\"6085\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6086\">&lt;<span style=\" color: #800000;\" id=\"6087\">asp</span>:<span style=\" color: #800000;\" id=\"6088\">CustomValidator </span><span style=\" color: #F00;\" id=\"6089\">ID</span>=\"CustomValidatorName\" <span style=\" color: #F00;\" id=\"6090\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6091\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6092\">ErrorMessage</span>=\"Name is not Valid\" <span style=\" color: #F00;\" id=\"6093\">ForeColor</span>=\"#CC0000\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6094\"><span style=\" color: #F00;\" id=\"6095\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6096\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6097\">asp</span>:<span style=\" color: #800000;\" id=\"6098\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6099\">&lt;/<span style=\" color: #800000;\" id=\"6100\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6101\">&lt;/<span style=\" color: #800000;\" id=\"6102\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6103\">&lt;<span style=\" color: #800000;\" id=\"6104\">tr </span><span style=\" color: #F00;\" id=\"6105\">class</span>=\"street\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6106\">&lt;<span style=\" color: #800000;\" id=\"6107\">td</span>&gt; <span style=\" color: #000;\" id=\"6108\">Street:</span>&lt;/<span style=\" color: #800000;\" id=\"6109\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6110\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6111\">asp</span>:<span style=\" color: #800000;\" id=\"6112\">TextBox </span><span style=\" color: #F00;\" id=\"6113\">ID</span>=\"TextBoxStreet\" <span style=\" color: #F00;\" id=\"6114\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6115\">asp</span>:<span style=\" color: #800000;\" id=\"6116\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6117\">&lt;/<span style=\" color: #800000;\" id=\"6118\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6119\">&lt;/<span style=\" color: #800000;\" id=\"6120\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6121\">&lt;<span style=\" color: #800000;\" id=\"6122\">tr </span><span style=\" color: #F00;\" id=\"6123\">class</span>=\"postalCode\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6124\">&lt;<span style=\" color: #800000;\" id=\"6125\">td</span>&gt; <span style=\" color: #000;\" id=\"6126\">PostalCode:</span>&lt;/<span style=\" color: #800000;\" id=\"6127\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6128\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6129\">asp</span>:<span style=\" color: #800000;\" id=\"6130\">TextBox </span><span style=\" color: #F00;\" id=\"6131\">ID</span>=\"TextBoxPostalCode\" <span style=\" color: #F00;\" id=\"6132\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6133\">asp</span>:<span style=\" color: #800000;\" id=\"6134\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6135\">&lt;<span style=\" color: #800000;\" id=\"6136\">asp</span>:<span style=\" color: #800000;\" id=\"6137\">CustomValidator </span><span style=\" color: #F00;\" id=\"6138\">ID</span>=\"CustomValidatorPostalCode\" <span style=\" color: #F00;\" id=\"6139\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6140\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6141\">ErrorMessage<span style=\" color: #00F;\" id=\"6142\">=\"Postal Code 4 digit\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6143\">=\"TextBoxPostalCode\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6144\"><br id=\"6145\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6146\"><span style=\" color: #F00;\" id=\"6147\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6148\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6149\">asp</span>:<span style=\" color: #800000;\" id=\"6150\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6151\">&lt;/<span style=\" color: #800000;\" id=\"6152\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6153\">&lt;/<span style=\" color: #800000;\" id=\"6154\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6155\">&lt;<span style=\" color: #800000;\" id=\"6156\">tr </span><span style=\" color: #F00;\" id=\"6157\">class</span>=\"city\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6158\">&lt;<span style=\" color: #800000;\" id=\"6159\">td</span>&gt; <span style=\" color: #000;\" id=\"6160\">City:</span>&lt;/<span style=\" color: #800000;\" id=\"6161\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6162\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6163\">asp</span>:<span style=\" color: #800000;\" id=\"6164\">TextBox </span><span style=\" color: #F00;\" id=\"6165\">ID</span>=\"TextBoxCity\" <span style=\" color: #F00;\" id=\"6166\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6167\">asp</span>:<span style=\" color: #800000;\" id=\"6168\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6169\">&lt;/<span style=\" color: #800000;\" id=\"6170\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6171\">&lt;<span style=\" color: #800000;\" id=\"6172\">tr </span><span style=\" color: #F00;\" id=\"6173\">class</span>=\"country\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6174\">&lt;<span style=\" color: #800000;\" id=\"6175\">td</span>&gt; <span style=\" color: #000;\" id=\"6176\">Country:</span>&lt;/<span style=\" color: #800000;\" id=\"6177\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6178\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6179\">asp</span>:<span style=\" color: #800000;\" id=\"6180\">TextBox </span><span style=\" color: #F00;\" id=\"6181\">ID</span>=\"TextBoxCountry\" <span style=\" color: #F00;\" id=\"6182\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6183\">asp</span>:<span style=\" color: #800000;\" id=\"6184\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6185\">&lt;<span style=\" color: #800000;\" id=\"6186\">asp</span>:<span style=\" color: #800000;\" id=\"6187\">CustomValidator </span><span style=\" color: #F00;\" id=\"6188\">ID</span>=\"CustomValidatorCountry\" <span style=\" color: #F00;\" id=\"6189\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6190\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6191\">ErrorMessage<span style=\" color: #00F;\" id=\"6192\">=\"Country Not Valid\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6193\">=\"TextBoxCountry\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6194\"><br id=\"6195\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6196\"><span style=\" color: #F00;\" id=\"6197\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6198\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6199\">asp</span>:<span style=\" color: #800000;\" id=\"6200\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6201\">&lt;/<span style=\" color: #800000;\" id=\"6202\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6203\">&lt;/<span style=\" color: #800000;\" id=\"6204\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6205\">&lt;<span style=\" color: #800000;\" id=\"6206\">tr </span><span style=\" color: #F00;\" id=\"6207\">class</span>=\"phone\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6208\">&lt;<span style=\" color: #800000;\" id=\"6209\">td</span>&gt; <span style=\" color: #000;\" id=\"6210\">Phone:</span><span style=\" color: #F00;\" id=\"6211\">&amp;nbsp; </span><span style=\" color: #000;\" id=\"6212\">+45</span>&lt;/<span style=\" color: #800000;\" id=\"6213\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6214\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6215\">asp</span>:<span style=\" color: #800000;\" id=\"6216\">TextBox </span><span style=\" color: #F00;\" id=\"6217\">ID</span>=\"TextBoxPhone\" <span style=\" color: #F00;\" id=\"6218\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6219\">asp</span>:<span style=\" color: #800000;\" id=\"6220\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6221\">&lt;<span style=\" color: #800000;\" id=\"6222\">asp</span>:<span style=\" color: #800000;\" id=\"6223\">CustomValidator </span><span style=\" color: #F00;\" id=\"6224\">ID</span>=\"CustomValidatorPhone\" <span style=\" color: #F00;\" id=\"6225\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6226\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6227\">ErrorMessage<span style=\" color: #00F;\" id=\"6228\">=\"Phone must be 8 digit, Without +45 \" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6229\">=\"TextBoxPhone\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6230\"><br id=\"6231\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6232\"><span style=\" color: #F00;\" id=\"6233\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6234\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6235\">asp</span>:<span style=\" color: #800000;\" id=\"6236\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6237\">&lt;/<span style=\" color: #800000;\" id=\"6238\">td</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6239\"><br id=\"6240\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6241\">&lt;/<span style=\" color: #800000;\" id=\"6242\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6243\">&lt;<span style=\" color: #800000;\" id=\"6244\">tr </span><span style=\" color: #F00;\" id=\"6245\">class</span>=\"email\"&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6246\">&lt;<span style=\" color: #800000;\" id=\"6247\">td</span>&gt; <span style=\" color: #000;\" id=\"6248\">Email: </span>&lt;/<span style=\" color: #800000;\" id=\"6249\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6250\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6251\">asp</span>:<span style=\" color: #800000;\" id=\"6252\">TextBox </span><span style=\" color: #F00;\" id=\"6253\">ID</span>=\"TextBoxEmail\" <span style=\" color: #F00;\" id=\"6254\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6255\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6256\">asp</span>:<span style=\" color: #800000;\" id=\"6257\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6258\">&lt;<span style=\" color: #800000;\" id=\"6259\">asp</span>:<span style=\" color: #800000;\" id=\"6260\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"6261\">ID</span>=\"RequiredFieldValidatorEmail\" <span style=\" color: #F00;\" id=\"6262\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6263\">Font-Size</span>=\"Small\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"6264\"><span style=\" color: #F00;\" id=\"6265\">ErrorMessage</span>=\"Email Required\" <span style=\" color: #F00;\" id=\"6266\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span style=\" color: #000;\" id=\"6267\">Email Required</span>&lt;/<span style=\" color: #800000;\" id=\"6268\">asp</span>:<span style=\" color: #800000;\" id=\"6269\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6270\">&lt;<span style=\" color: #800000;\" id=\"6271\">asp</span>:<span style=\" color: #800000;\" id=\"6272\">CustomValidator </span><span style=\" color: #F00;\" id=\"6273\">ID</span>=\"CustomValidatorEmail\" <span style=\" color: #F00;\" id=\"6274\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6275\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6276\">ErrorMessage<span style=\" color: #00F;\" id=\"6277\">=\"Email Not Valid\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6278\">=\"TextBoxEmail\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6279\"><br id=\"6280\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6281\"><span style=\" color: #F00;\" id=\"6282\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6283\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6284\">asp</span>:<span style=\" color: #800000;\" id=\"6285\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6286\">&lt;/<span style=\" color: #800000;\" id=\"6287\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6288\">&lt;/<span style=\" color: #800000;\" id=\"6289\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6290\">&lt;<span style=\" color: #800000;\" id=\"6291\">tr </span><span style=\" color: #F00;\" id=\"6292\">class</span>=\"website\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6293\">&lt;<span style=\" color: #800000;\" id=\"6294\">td</span>&gt; <span style=\" color: #000;\" id=\"6295\">WebSite:</span>&lt;/<span style=\" color: #800000;\" id=\"6296\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6297\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6298\">asp</span>:<span style=\" color: #800000;\" id=\"6299\">TextBox </span><span style=\" color: #F00;\" id=\"6300\">ID</span>=\"TextBoxWebsite\" <span style=\" color: #F00;\" id=\"6301\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6302\">asp</span>:<span style=\" color: #800000;\" id=\"6303\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6304\">&lt;<span style=\" color: #800000;\" id=\"6305\">asp</span>:<span style=\" color: #800000;\" id=\"6306\">CustomValidator </span><span style=\" color: #F00;\" id=\"6307\">ID</span>=\"CustomValidatorWebSite\" <span style=\" color: #F00;\" id=\"6308\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6309\">ErrorMessage</span>=\"Website not valid\" <span style=\" color: #F00;\" id=\"6310\">ControlToValidate</span>=\"TextBoxWebsite\"</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6311\"><br id=\"6312\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6313\"><span style=\" color: #F00;\" id=\"6314\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6315\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6316\">asp</span>:<span style=\" color: #800000;\" id=\"6317\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6318\">&lt;/<span style=\" color: #800000;\" id=\"6319\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"6320\">&lt;/<span style=\" color: #800000;\" id=\"6321\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6322\">&lt;<span style=\" color: #800000;\" id=\"6323\">tr </span><span style=\" color: #F00;\" id=\"6324\">class</span>=\"photo\"&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6325\">&lt;<span style=\" color: #800000;\" id=\"6326\">td</span>&gt; <span style=\" color: #000;\" id=\"6327\">Photo:</span>&lt;/<span style=\" color: #800000;\" id=\"6328\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6329\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6330\">asp</span>:<span style=\" color: #800000;\" id=\"6331\">FileUpload </span><span style=\" color: #F00;\" id=\"6332\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"6333\">runat</span>=\"server\" /&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6334\">&lt;/<span style=\" color: #800000;\" id=\"6335\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6336\">&lt;/<span style=\" color: #800000;\" id=\"6337\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6338\">&lt;<span style=\" color: #800000;\" id=\"6339\">tr </span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6340\">&lt;<span style=\" color: #800000;\" id=\"6341\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"6342\"><span style=\" color: #F00;\" id=\"6343\">&amp;nbsp;</span>&lt;/<span style=\" color: #800000;\" id=\"6344\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6345\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6346\">asp</span>:<span style=\" color: #800000;\" id=\"6347\">Button </span><span style=\" color: #F00;\" id=\"6348\">ID</span>=\"ButtonCreate\" <span style=\" color: #F00;\" id=\"6349\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6350\">Text</span>=\"Create\"</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6351\"><span style=\" color: #F00;\" id=\"6352\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span style=\" color: #800000;\" id=\"6353\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6354\">&lt;/<span style=\" color: #800000;\" id=\"6355\">tr</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6356\"><br id=\"6357\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6358\">&lt;/<span style=\" color: #800000;\" id=\"6359\">table</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6360\">&lt;/<span style=\" color: #800000;\" id=\"6361\">form</span>&gt;</p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6362\"><a name=\"a68\" id=\"6363\"><span class=\"p\" id=\"6364\">File </span></a><span class=\"s128\" style=\" background-color: #FF0;\" id=\"6365\">VcardControl.ascx.cs</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6366\"><br id=\"6367\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6368\">using <span style=\" color: #000;\" id=\"6369\">System;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6370\">using <span style=\" color: #000;\" id=\"6371\">System.Collections.Generic; </span>using <span style=\" color: #000;\" id=\"6372\">System.Linq;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6373\">using <span style=\" color: #000;\" id=\"6374\">System.Web;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6375\">using <span style=\" color: #000;\" id=\"6376\">umbraco.DataLayer.SqlHelpers.SqlServer; </span>using <span style=\" color: #000;\" id=\"6377\">umbraco.DataLayer;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6378\">using <span style=\" color: #000;\" id=\"6379\">umbraco;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6380\">using <span style=\" color: #000;\" id=\"6381\">System.Data.SqlClient;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6382\">using <span style=\" color: #000;\" id=\"6383\">System.Text.RegularExpressions; </span>using <span style=\" color: #000;\" id=\"6384\">System.Web.UI.WebControls; </span>using <span style=\" color: #000;\" id=\"6385\">System.IO;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6386\">using <span style=\" color: #000;\" id=\"6387\">System.Text; </span>using <span style=\" color: #000;\" id=\"6388\">System.Net.Mail; </span>using <span style=\" color: #000;\" id=\"6389\">System.Net;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6390\"><br id=\"6391\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6392\">namespace <span style=\" color: #000;\" id=\"6393\">VCardGenerator</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6394\">{</p><p class=\"s98\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6395\"><span style=\" color: #00F;\" id=\"6396\">public partial class </span>VcardControl <span style=\" color: #000;\" id=\"6397\">: System.Web.UI.</span>UserControl</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6398\">{</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6399\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6400\">/// <span style=\" color: #008000;\" id=\"6401\">Handles the Load event of the Page control.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6402\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6403\">/// &lt;param name=\"sender\"&gt;<span style=\" color: #008000;\" id=\"6404\">The source of the event.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6405\">/// &lt;param name=\"e\"&gt;<span style=\" color: #008000;\" id=\"6406\">The </span>&lt;see cref=\"System.EventArgs\"/&gt; <span style=\" color: #008000;\" id=\"6407\">instance containing the event data.</span>&lt;/param&gt;</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6408\"><span style=\" color: #00F;\" id=\"6409\">protected void </span>Page_Load(<span style=\" color: #00F;\" id=\"6410\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6411\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6412\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6413\"><br id=\"6414\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6415\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6416\"><br id=\"6417\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6418\"><span style=\" color: #00F;\" id=\"6419\">protected void </span>ButtonCreate_Click(<span style=\" color: #00F;\" id=\"6420\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6421\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6422\">{</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6423\">if <span style=\" color: #000;\" id=\"6424\">(Page.IsValid)</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6425\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6426\"><span style=\" color: #2B91AE;\" id=\"6427\">Guid </span>id = <span style=\" color: #2B91AE;\" id=\"6428\">Guid</span>.NewGuid(); <span style=\" color: #00F;\" id=\"6429\">string </span>imgFile = <span style=\" color: #A21515;\" id=\"6430\">\"noimage\"</span>;</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6431\">string <span style=\" color: #000;\" id=\"6432\">name = RemoveSpecialCharacter(TextBoxName.Text);</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6433\">string <span style=\" color: #000;\" id=\"6434\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"6435\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"6436\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"6437\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6438\">string <span style=\" color: #000;\" id=\"6439\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: justify;\" id=\"6440\">string <span style=\" color: #000;\" id=\"6441\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"6442\">phone = RemoveSpecialCharacter(TextBoxPhone.Text); </span>if <span style=\" color: #000;\" id=\"6443\">(FileUploadPhoto.PostedFile != </span>null <span style=\" color: #000;\" id=\"6444\">&amp;&amp;</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6445\">FileUploadPhoto.PostedFile.ContentLength &gt; 0)</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6446\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6447\"><span style=\" color: #00F;\" id=\"6448\">string </span>guid = id.ToString(<span style=\" color: #A21515;\" id=\"6449\">\"N\"</span>);</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6450\"><span style=\" color: #00F;\" id=\"6451\">string </span>imageDirectory = Server.MapPath(<span style=\" color: #A21515;\" id=\"6452\">\"vcardimage\"</span>); <span style=\" color: #00F;\" id=\"6453\">if </span>(<span style=\" color: #2B91AE;\" id=\"6454\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6455\">{</p><p class=\"s70\" style=\"padding-left: 151pt;text-indent: -20pt;text-align: left;\" id=\"6456\">FileUploadPhoto.PostedFile.SaveAs( Server.MapPath(<span style=\" color: #A21515;\" id=\"6457\">\"/vcardimage/\" </span>+ guid +</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6458\">FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6459\">}</p><p class=\"s66\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6460\">else</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6461\">{</p><p class=\"s70\" style=\"padding-left: 130pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6462\"><span style=\" color: #2B91AE;\" id=\"6463\">Directory</span>.CreateDirectory(Server.MapPath(<span style=\" color: #A21515;\" id=\"6464\">\"vcardimage\"</span>));</p><p class=\"s70\" style=\"padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6465\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span style=\" color: #A21515;\" id=\"6466\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6467\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6468\"><br id=\"6469\"></p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6470\">imgFile = imageDirectory + <span style=\" color: #A21515;\" id=\"6471\">\"/\" </span>+ guid + FileUploadPhoto.FileName; SendVcard(<span style=\" color: #A21515;\" id=\"6472\">\"Your Vcard:\"</span>,</p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 156pt;text-align: left;\" id=\"6473\">\"Your vcard is ready. Please open Attachment. \\n Thank you very much \\n Semic Provider\"<span style=\" color: #000;\" id=\"6474\">,</span></p><p class=\"s70\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"6475\">email,</p><p class=\"s70\" style=\"padding-left: 161pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6476\">GenerateVcard(name, streetaddress, zip, city, country,</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6477\">email, phone, web, imgFile));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6478\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6479\">\"VCard has been sent to \" </span>+ email;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6480\">}</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6481\">else</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6482\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6483\">SendVcard(<span style=\" color: #A21515;\" id=\"6484\">\"Vcard:\"</span>, <span style=\" color: #A21515;\" id=\"6485\">\"Your vcard is ready. Please open Attachment.</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6486\">\\n Thank you very much \\n Semic Provider\"<span style=\" color: #000;\" id=\"6487\">,</span></p><p class=\"s70\" style=\"padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"6488\">email,</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 104pt;text-align: left;\" id=\"6489\">GenerateVcard(name, streetaddress, zip, city, country, email, phone, web, imgFile));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6490\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6491\">\"VCard has been sent to \" </span>+ email;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6492\"><br id=\"6493\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6494\">imgFile);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6495\"><br id=\"6496\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6497\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6498\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6499\">InsertTable(name, streetaddress, zip, country, phone, email, web,</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6500\"><br id=\"6501\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6502\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6503\"><br id=\"6504\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6505\"><br id=\"6506\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6507\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6508\">/// <span style=\" color: #008000;\" id=\"6509\">Generates the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6510\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6511\">/// &lt;param name=\"firstName\"&gt;<span style=\" color: #008000;\" id=\"6512\">The first name.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6513\">/// &lt;param name=\"streetAddress\"&gt;<span style=\" color: #008000;\" id=\"6514\">The street address.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6515\">/// &lt;param name=\"zip\"&gt;<span style=\" color: #008000;\" id=\"6516\">The zip.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6517\">/// &lt;param name=\"city\"&gt;<span style=\" color: #008000;\" id=\"6518\">The city.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6519\">/// &lt;param name=\"country\"&gt;<span style=\" color: #008000;\" id=\"6520\">The country.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6521\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6522\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6523\">/// &lt;param name=\"phone\"&gt;<span style=\" color: #008000;\" id=\"6524\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6525\">/// &lt;param name=\"web\"&gt;<span style=\" color: #008000;\" id=\"6526\">The web.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6527\">/// &lt;param name=\"image\"&gt;<span style=\" color: #008000;\" id=\"6528\">The image.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6529\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6530\">vcard string </span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6531\">public string <span style=\" color: #000;\" id=\"6532\">GenerateVcard(</span>string <span style=\" color: #000;\" id=\"6533\">firstName, </span>string <span style=\" color: #000;\" id=\"6534\">streetAddress, </span>string <span style=\" color: #000;\" id=\"6535\">zip, </span>string <span style=\" color: #000;\" id=\"6536\">city, </span>string <span style=\" color: #000;\" id=\"6537\">country, </span>string <span style=\" color: #000;\" id=\"6538\">email, </span>string <span style=\" color: #000;\" id=\"6539\">phone, </span>string <span style=\" color: #000;\" id=\"6540\">web, </span>string <span style=\" color: #000;\" id=\"6541\">image)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6542\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6543\"><span style=\" color: #00F;\" id=\"6544\">string </span>url = <span style=\" color: #A21515;\" id=\"6545\">\"\"</span>; <span style=\" color: #00F;\" id=\"6546\">if </span>(web.Length &gt; 0)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6547\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6548\">url = <span style=\" color: #A21515;\" id=\"6549\">\"http://\" </span>+ web.Replace(<span style=\" color: #A21515;\" id=\"6550\">\"http\"</span>, <span style=\" color: #A21515;\" id=\"6551\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6552\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6553\"><span style=\" color: #00F;\" id=\"6554\">var </span>vcardStringBuilder = <span style=\" color: #00F;\" id=\"6555\">new </span><span style=\" color: #2B91AE;\" id=\"6556\">StringBuilder</span>(); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6557\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6558\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6559\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"6560\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"6561\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"6562\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"6563\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"6564\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6565\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6566\">\"URL;type=pref:\" </span>+ url);</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6567\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6568\">\"EMAIL:\" </span>+ email); <span style=\" color: #00F;\" id=\"6569\">if </span>(image != <span style=\" color: #A21515;\" id=\"6570\">\"noimage\"</span>)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6571\">{</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6572\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6573\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"6574\">\":\"</span>);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6575\"><br id=\"6576\"></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: -83pt;text-align: left;\" id=\"6577\">vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"6578\">Convert</span>.ToBase64String(ReadImage(image))); vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"6579\">string</span>.Empty);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6580\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6581\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6582\">\"END:VCARD\"</span>); <span style=\" color: #00F;\" id=\"6583\">return </span>vcardStringBuilder.ToString();</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6584\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6585\"><br id=\"6586\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6587\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6588\">/// <span style=\" color: #008000;\" id=\"6589\">Reads the image.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6590\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6591\">/// &lt;param name=\"image\"&gt;<span style=\" color: #008000;\" id=\"6592\">The image.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6593\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6594\">image bytes </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6595\">public byte</span><span style=\" color: #000;\" id=\"6596\">[] ReadImage(</span><span style=\" color: #00F;\" id=\"6597\">string </span><span style=\" color: #000;\" id=\"6598\">image)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6599\">{</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"6600\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6601\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6602\"><br id=\"6603\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6604\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6605\"><br id=\"6606\"></p><p class=\"s66\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6607\">return <span style=\" color: #2B91AE;\" id=\"6608\">File</span><span style=\" color: #000;\" id=\"6609\">.ReadAllBytes(image);</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6610\"><span style=\" color: #00F;\" id=\"6611\">catch </span>(<span style=\" color: #2B91AE;\" id=\"6612\">Exception </span>ex)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6613\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6614\"><span style=\" color: #00F;\" id=\"6615\">return </span><span style=\" color: #2B91AE;\" id=\"6616\">File</span>.ReadAllBytes(Server.MapPath(<span style=\" color: #A21515;\" id=\"6617\">\"media/logo-vcard.png\"</span>));</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6618\">}</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6619\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6620\"><br id=\"6621\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6622\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6623\">/// <span style=\" color: #008000;\" id=\"6624\">Sends the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6625\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6626\">/// &lt;param name=\"subject\"&gt;<span style=\" color: #008000;\" id=\"6627\">The subject.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6628\">/// &lt;param name=\"body\"&gt;<span style=\" color: #008000;\" id=\"6629\">The body.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6630\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6631\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6632\">/// &lt;param name=\"file\"&gt;<span style=\" color: #008000;\" id=\"6633\">The file.</span>&lt;/param&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6634\">private void <span style=\" color: #000;\" id=\"6635\">SendVcard(</span>string <span style=\" color: #000;\" id=\"6636\">subject, </span>string <span style=\" color: #000;\" id=\"6637\">body, </span>string <span style=\" color: #000;\" id=\"6638\">email, </span>string <span style=\" color: #000;\" id=\"6639\">file)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6640\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6641\"><span style=\" color: #00F;\" id=\"6642\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"6643\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #00F;\" id=\"6644\">try</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6645\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6646\"><br id=\"6647\"></p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6648\">MemoryStream <span style=\" color: #000;\" id=\"6649\">stream = </span><span style=\" color: #00F;\" id=\"6650\">new </span>MemoryStream<span style=\" color: #000;\" id=\"6651\">(byteArray); </span>MailMessage <span style=\" color: #000;\" id=\"6652\">message = </span><span style=\" color: #00F;\" id=\"6653\">new </span>MailMessage<span style=\" color: #000;\" id=\"6654\">(); message.Subject = subject;</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6655\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6656\">message.From = <span style=\" color: #00F;\" id=\"6657\">new </span><span style=\" color: #2B91AE;\" id=\"6658\">MailAddress</span>(<a href=\"mailto:jeevan_2np@yahoo.com\" class=\"s130\" target=\"_blank\" id=\"6659\">\"sender id example: </a><span style=\" color: #A21515;\" id=\"6660\">jeevan_2np@yahoo.com\"</span>);</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6661\">message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6662\">SmtpClient <span style=\" color: #000;\" id=\"6663\">client = </span><span style=\" color: #00F;\" id=\"6664\">new </span>SmtpClient<span style=\" color: #000;\" id=\"6665\">();</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6666\"><span style=\" color: #2B91AE;\" id=\"6667\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"6668\">new </span><span style=\" color: #2B91AE;\" id=\"6669\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"6670\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6671\">client.Host = <span style=\" color: #A21515;\" id=\"6672\">\"smtp address\"</span>; client.Port = smtp port number;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6673\">client.Credentials = <span style=\" color: #00F;\" id=\"6674\">new </span><span style=\" color: #2B91AE;\" id=\"6675\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"6676\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"6677\">\"password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"6678\">true</span>;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6679\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6680\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6681\">catch</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6682\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6683\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6684\">\"Internal Error\"</span>;</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6685\">DownloadVcard(byteArray);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6686\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6687\"><br id=\"6688\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6689\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6690\"><br id=\"6691\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6692\"><span style=\" color: #00F;\" id=\"6693\">protected void </span>CustomValidatorName_ServerValidate(<span style=\" color: #00F;\" id=\"6694\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6695\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6696\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6697\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6698\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6699\"><br id=\"6700\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6701\"><span style=\" color: #00F;\" id=\"6702\">protected void </span>CustomValidatorPostalCode_ServerValidate(<span style=\" color: #00F;\" id=\"6703\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6704\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6705\">{</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"6706\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6707\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6708\"><br id=\"6709\"></p><p class=\"s66\" style=\"padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6710\">if <span style=\" color: #000;\" id=\"6711\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6712\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6713\">args.IsValid = RemoveSpecialCharacter(args.Value).Length == 4;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6714\">}</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6715\">else</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6716\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6717\">args.IsValid = <span style=\" color: #00F;\" id=\"6718\">true</span>;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6719\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6720\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6721\">catch <span style=\" color: #000;\" id=\"6722\">{ args.IsValid = </span>false<span style=\" color: #000;\" id=\"6723\">; }</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6724\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6725\"><br id=\"6726\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6727\"><span style=\" color: #00F;\" id=\"6728\">protected void </span>CustomValidatorCountry_ServerValidate(<span style=\" color: #00F;\" id=\"6729\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6730\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6731\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6732\"><br id=\"6733\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6734\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6735\"><br id=\"6736\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6737\"><span style=\" color: #00F;\" id=\"6738\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"6739\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6740\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6741\">{</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6742\">if <span style=\" color: #000;\" id=\"6743\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6744\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6745\"><br id=\"6746\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6747\">}</p><p class=\"s66\" style=\"text-indent: 0pt;text-align: right;\" id=\"6748\">else</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6749\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6750\"><br id=\"6751\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6752\">}</p><p class=\"s70\" style=\"padding-left: 10pt;text-indent: 0pt;text-align: center;\" id=\"6753\">}</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"6754\">args.IsValid = ValidatePhone(args.Value);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6755\"><br id=\"6756\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"6757\">args.IsValid = <span style=\" color: #00F;\" id=\"6758\">true</span>;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6759\"><br id=\"6760\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6761\"><span style=\" color: #00F;\" id=\"6762\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"6763\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6764\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6765\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6766\">args.IsValid = ValidateEmail(args.Value.ToString());</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6767\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6768\"><br id=\"6769\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6770\"><span style=\" color: #00F;\" id=\"6771\">protected void </span>CustomValidatorWebSite_ServerValidate(<span style=\" color: #00F;\" id=\"6772\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6773\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6774\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6775\"><br id=\"6776\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6777\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6778\"><br id=\"6779\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6780\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6781\">/// <span style=\" color: #008000;\" id=\"6782\">Validates the phone.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6783\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-top: 2pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6784\">/// &lt;param name=\"input\"&gt;<span style=\" color: #008000;\" id=\"6785\">The input.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6786\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6787\">true if it valid </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6788\">public bool </span><span style=\" color: #000;\" id=\"6789\">ValidatePhone(</span><span style=\" color: #00F;\" id=\"6790\">string </span><span style=\" color: #000;\" id=\"6791\">input)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6792\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6793\"><span style=\" color: #00F;\" id=\"6794\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"6795\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"6796\">Regex </span>num = <span style=\" color: #00F;\" id=\"6797\">new </span><span style=\" color: #2B91AE;\" id=\"6798\">Regex</span>(<span style=\" color: #A21515;\" id=\"6799\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6800\">return <span style=\" color: #000;\" id=\"6801\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6802\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6803\"><br id=\"6804\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6805\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6806\">/// <span style=\" color: #008000;\" id=\"6807\">Validates the email.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6808\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6809\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6810\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6811\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6812\">true on valid email </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6813\">public bool </span><span style=\" color: #000;\" id=\"6814\">ValidateEmail(</span><span style=\" color: #00F;\" id=\"6815\">string </span><span style=\" color: #000;\" id=\"6816\">email)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6817\">{</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"6818\">return <span style=\" color: #2B91AE;\" id=\"6819\">Regex</span><span style=\" color: #000;\" id=\"6820\">.IsMatch(email,</span></p><p class=\"s99\" style=\"padding-left: 72pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6821\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"6822\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span style=\" color: #000;\" id=\"6823\">+</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 67pt;text-align: left;\" id=\"6824\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a- zA-Z]{2,6}))$\"<span style=\" color: #000;\" id=\"6825\">);</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6826\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6827\"><br id=\"6828\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6829\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6830\">/// <span style=\" color: #008000;\" id=\"6831\">Removes the special character.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6832\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6833\">/// &lt;param name=\"input\"&gt;<span style=\" color: #008000;\" id=\"6834\">The input.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6835\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6836\">secure string </span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6837\">public string <span style=\" color: #000;\" id=\"6838\">RemoveSpecialCharacter(</span>string <span style=\" color: #000;\" id=\"6839\">input)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6840\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6841\"><span style=\" color: #00F;\" id=\"6842\">return </span><span style=\" color: #2B91AE;\" id=\"6843\">Regex</span>.Replace(input, <span style=\" color: #A21515;\" id=\"6844\">\"[^0-9a-zA-Z. ]+\"</span>, <span style=\" color: #A21515;\" id=\"6845\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6846\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6847\"><br id=\"6848\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6849\"><span style=\" color: #00F;\" id=\"6850\">protected void </span>TextBoxEmail_TextChanged(<span style=\" color: #00F;\" id=\"6851\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6852\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6853\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6854\"><br id=\"6855\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6856\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6857\"><br id=\"6858\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6859\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6860\">/// <span style=\" color: #008000;\" id=\"6861\">Creates the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6862\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6863\">/// &lt;param name=\"tableName\"&gt;<span style=\" color: #008000;\" id=\"6864\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6865\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6866\">true if table created</span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6867\">private static bool </span><span style=\" color: #000;\" id=\"6868\">CreateTable(</span><span style=\" color: #00F;\" id=\"6869\">string </span><span style=\" color: #000;\" id=\"6870\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6871\">{</p><p class=\"s66\" style=\"text-indent: 0pt;text-align: right;\" id=\"6872\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6873\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6874\"><br id=\"6875\"></p><p class=\"s70\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6876\"><span style=\" color: #2B91AE;\" id=\"6877\">SqlConnection </span>connection = <span style=\" color: #00F;\" id=\"6878\">new </span><span style=\" color: #2B91AE;\" id=\"6879\">SqlConnection</span>(<span style=\" color: #2B91AE;\" id=\"6880\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"6881\">string </span>queryString =</p><p class=\"s99\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6882\">@\" CREATE TABLE [vcardimage](</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6883\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 5pt;text-align: left;\" id=\"6884\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 0pt;text-align: left;\" id=\"6885\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"6886\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6887\"><br id=\"6888\"></p><p class=\"s98\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6889\">SqlCommand <span style=\" color: #000;\" id=\"6890\">command = </span><span style=\" color: #00F;\" id=\"6891\">new </span>SqlCommand<span style=\" color: #000;\" id=\"6892\">(queryString, connection);</span></p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6893\">connection.Open(); command.ExecuteNonQuery(); connection.Close();</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6894\">return true<span style=\" color: #000;\" id=\"6895\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6896\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6897\">catch</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6898\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6899\">return false<span style=\" color: #000;\" id=\"6900\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6901\">}</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6902\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6903\"><br id=\"6904\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6905\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6906\">/// <span style=\" color: #008000;\" id=\"6907\">Checks the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6908\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6909\">/// &lt;param name=\"tableName\"&gt;<span style=\" color: #008000;\" id=\"6910\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6911\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6912\">true if table exist </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6913\">private static bool </span><span style=\" color: #000;\" id=\"6914\">CheckTable(</span><span style=\" color: #00F;\" id=\"6915\">string </span><span style=\" color: #000;\" id=\"6916\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6917\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6918\"><span style=\" color: #2B91AE;\" id=\"6919\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"6920\">new </span><span style=\" color: #2B91AE;\" id=\"6921\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"6922\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"6923\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6924\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6925\"><br id=\"6926\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6927\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6928\">/// <span style=\" color: #008000;\" id=\"6929\">Inserts the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6930\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6931\">/// &lt;param name=\"name\"&gt;<span style=\" color: #008000;\" id=\"6932\">The name.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6933\">/// &lt;param name=\"street\"&gt;<span style=\" color: #008000;\" id=\"6934\">The street.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6935\">/// &lt;param name=\"postalcode\"&gt;<span style=\" color: #008000;\" id=\"6936\">The postalcode.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6937\">/// &lt;param name=\"country\"&gt;<span style=\" color: #008000;\" id=\"6938\">The country.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6939\">/// &lt;param name=\"phone\"&gt;<span style=\" color: #008000;\" id=\"6940\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6941\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6942\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6943\">/// &lt;param name=\"website\"&gt;<span style=\" color: #008000;\" id=\"6944\">The website.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6945\">/// &lt;param name=\"imageguid\"&gt;<span style=\" color: #008000;\" id=\"6946\">The imageguid.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6947\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6948\">true on successul data insert</span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6949\">public static bool <span style=\" color: #000;\" id=\"6950\">InsertTable(</span>string <span style=\" color: #000;\" id=\"6951\">name, </span>string <span style=\" color: #000;\" id=\"6952\">street, </span>string <span style=\" color: #000;\" id=\"6953\">postalcode, </span>string <span style=\" color: #000;\" id=\"6954\">country, </span>string <span style=\" color: #000;\" id=\"6955\">phone, </span>string <span style=\" color: #000;\" id=\"6956\">email, </span>string <span style=\" color: #000;\" id=\"6957\">website, </span>string <span style=\" color: #000;\" id=\"6958\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6959\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6960\"><span style=\" color: #00F;\" id=\"6961\">string </span>tableName = <span style=\" color: #A21515;\" id=\"6962\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"6963\">try</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6964\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6965\">if <span style=\" color: #000;\" id=\"6966\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6967\">{ CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6968\">ISqlHelper <span style=\" color: #000;\" id=\"6969\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"6970\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6971\">@\"insert into \" <span style=\" color: #000;\" id=\"6972\">+ tableName + </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"6973\">+</span></p><p class=\"s99\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6974\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6975\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"6976\">,</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6977\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6978\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6979\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6980\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6981\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6982\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6983\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6984\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6985\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6986\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"6987\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"6988\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6989\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6990\"><span style=\" color: #00F;\" id=\"6991\">catch </span>(<span style=\" color: #2B91AE;\" id=\"6992\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6993\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6994\">return false<span style=\" color: #000;\" id=\"6995\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6996\"><br id=\"6997\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6998\"><br id=\"6999\"></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7000\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7001\"><br id=\"7002\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7003\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7004\"><br id=\"7005\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7006\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7007\">/// <span style=\" color: #008000;\" id=\"7008\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7009\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7010\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"7011\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"7012\">public void </span><span style=\" color: #000;\" id=\"7013\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"7014\">byte </span><span style=\" color: #000;\" id=\"7015\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7016\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7017\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"7018\">true</span>;</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7019\">Response.ContentType = <span style=\" color: #A21515;\" id=\"7020\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"7021\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"7022\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7023\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"7024\">);</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7025\">Response.Charset = <span style=\" color: #A21515;\" id=\"7026\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7027\">HttpContext<span style=\" color: #000;\" id=\"7028\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7029\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7030\">}</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7031\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7032\"><br id=\"7033\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7034\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"7035\">GlobalSetting.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7036\"><br id=\"7037\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7038\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7039\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: -6pt;line-height: 114%;text-align: left;\" id=\"7040\">&lt;xsl:stylesheet version=\"1.0\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7041\"><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7042\">xmlns:xsl=\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml=\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library=\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon=\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes=\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath=\"urn:Exslt.ExsltMath\" xmlns:Exslt.ExsltRegularExpressions=\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings=\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets=\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7043\">exclude-result-prefixes=\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7044\"><br id=\"7045\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7046\">&lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7047\">&lt;xsl:param name=\"currentPage\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7048\">&lt;xsl:template match=\"/\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"7049\">&lt;!-- start writing XSLT --&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7050\">&lt;xsl:variable name=\"items\" select=\"$currentPage/ancestor-or-self::*</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7051\">/WebSiteGlobalSettings \"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7052\">&lt;xsl:variable name=\"logo\" select=\"$items/logo\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7053\">&lt;div class=\"vcard\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7054\">&lt;div class=\"logo\"&gt;&lt;a href=\"/\" title=\"start page\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7055\">&lt;img src=\"{$logo}\" alt=\"semic provider logo; visual identity\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: center;\" id=\"7056\">&lt;/a&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7057\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7058\">&lt;div class=\"fn\" &gt;</p><p style=\"padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"7059\">&lt;xsl:value-of select=\"$items/siteName\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7060\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7061\">&lt;h4&gt; &lt;xsl:value-of select=\"$items/slogan\"/&gt; &lt;/h4&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7062\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7063\">&lt;/xsl:template&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7064\">&lt;/xsl:stylesheet&gt;</p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7065\">Navigation.xslt</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7066\"><br id=\"7067\"></p><p style=\"padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7068\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7069\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7070\">&lt;<span class=\"p\" id=\"7071\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7072\">version<span class=\"s56\" id=\"7073\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7074\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7075\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7076\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7077\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7078\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7079\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7080\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7081\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7082\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7083\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7084\">=</span>\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7085\">exclude-result-prefixes<span class=\"s56\" id=\"7086\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7087\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7088\">&lt;<span class=\"p\" id=\"7089\">xsl:output method</span>=<span class=\"p\" id=\"7090\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7091\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7092\">&lt;<span class=\"p\" id=\"7093\">xsl:param name</span>=<span class=\"p\" id=\"7094\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7095\">&lt;<span class=\"p\" id=\"7096\">xsl:template match</span>=<span class=\"p\" id=\"7097\">\"/\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7098\">&lt;<span class=\"p\" id=\"7099\">xsl:variable name</span>=<span class=\"p\" id=\"7100\">\"items\" select</span>=<span class=\"p\" id=\"7101\">\"$currentPage/ancestor-or-self::*</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7102\">/GeneralContent [string(useInNavigation) = '1'] \"<span class=\"s56\" id=\"7103\">/&gt;</span></p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7104\">&lt;<span class=\"p\" id=\"7105\">xsl:if test</span>=<span class=\"p\" id=\"7106\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7107\">&lt;<span class=\"p\" id=\"7108\">ul</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7109\">&lt;<span class=\"p\" id=\"7110\">xsl:for-each select</span>=<span class=\"p\" id=\"7111\">\"$items\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7112\">&lt;<span class=\"p\" id=\"7113\">xsl:if test</span>=<span class=\"p\" id=\"7114\">\"$currentPage/@id = @id\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7115\">&lt;<span class=\"p\" id=\"7116\">li class</span>=<span class=\"p\" id=\"7117\">\"current\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7118\">&lt;<span class=\"p\" id=\"7119\">xsl:value-of select</span>=<span class=\"p\" id=\"7120\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7121\">&lt;/<span class=\"p\" id=\"7122\">li</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7123\">&lt;/<span class=\"p\" id=\"7124\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"7125\">&lt;<span class=\"p\" id=\"7126\">xsl:if test</span>=<span class=\"p\" id=\"7127\">\"$currentPage/@id != @id\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7128\">&lt;<span class=\"p\" id=\"7129\">li class</span>=<span class=\"p\" id=\"7130\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 35pt;text-indent: 0pt;text-align: left;\" id=\"7131\">&lt;<span class=\"p\" id=\"7132\">a href</span>=<span class=\"p\" id=\"7133\">\"{umbraco.library:NiceUrl(@id)}\" title</span>=<span class=\"p\" id=\"7134\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7135\">&lt;<span class=\"p\" id=\"7136\">xsl:value-of select</span>=<span class=\"p\" id=\"7137\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"7138\">&lt;/<span class=\"p\" id=\"7139\">a</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7140\">&lt;/<span class=\"p\" id=\"7141\">li</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7142\">&lt;/<span class=\"p\" id=\"7143\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7144\">&lt;/<span class=\"p\" id=\"7145\">xsl:for-each</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7146\">&lt;/<span class=\"p\" id=\"7147\">ul</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7148\">&lt;/<span class=\"p\" id=\"7149\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7150\">&lt;/<span class=\"p\" id=\"7151\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7152\">&lt;/<span class=\"p\" id=\"7153\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7154\"><br id=\"7155\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7156\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7157\">NewsList.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7158\"><br id=\"7159\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7160\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7161\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7162\">&lt;<span class=\"p\" id=\"7163\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7164\">version<span class=\"s56\" id=\"7165\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7166\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7167\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7168\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7169\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7170\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7171\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7172\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7173\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7174\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7175\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7176\">=</span>\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7177\">exclude-result-prefixes<span class=\"s56\" id=\"7178\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7179\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7180\">&lt;<span class=\"p\" id=\"7181\">xsl:output method</span>=<span class=\"p\" id=\"7182\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7183\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7184\">&lt;<span class=\"p\" id=\"7185\">xsl:param name</span>=<span class=\"p\" id=\"7186\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7187\">&lt;<span class=\"p\" id=\"7188\">xsl:template match</span>=<span class=\"p\" id=\"7189\">\"/\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7190\">&lt;<span class=\"p\" id=\"7191\">xsl:variable name</span>=<span class=\"p\" id=\"7192\">\"newsItems\" select</span>=<span class=\"p\" id=\"7193\">\"$currentPage/ancestor-or-self::*</span></p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7194\">/NewsContainer/NewsArticle \"<span class=\"s56\" id=\"7195\">/&gt;</span></p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7196\">&lt;<span class=\"p\" id=\"7197\">xsl:variable name</span>=<span class=\"p\" id=\"7198\">\"numberofnewsitems\" select</span>=<span class=\"p\" id=\"7199\">\"/macro/numberofnewsitems\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7200\">&lt;<span class=\"p\" id=\"7201\">xsl:if test</span>=<span class=\"p\" id=\"7202\">\"count($newsItems) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7203\">&lt;<span class=\"p\" id=\"7204\">xsl:for-each select</span>=<span class=\"p\" id=\"7205\">\"$newsItems\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"7206\">&lt;<span class=\"p\" id=\"7207\">xsl:sort select</span>=<span class=\"p\" id=\"7208\">\"@createDate\" order</span>=<span class=\"p\" id=\"7209\">\"ascending\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"7210\">&lt;<span class=\"p\" id=\"7211\">xsl:if test</span>=<span class=\"p\" id=\"7212\">\"position() &amp;lt;=$numberofnewsitems\" </span>&gt; &lt;<span class=\"p\" id=\"7213\">div clas</span>=<span class=\"p\" id=\"7214\">\"newsItem\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 27pt;text-indent: 0pt;text-align: center;\" id=\"7215\">&lt;<span class=\"p\" id=\"7216\">h3</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7217\">&lt;<span class=\"p\" id=\"7218\">a href</span>=<span class=\"p\" id=\"7219\">\"{umbraco.library:NiceUrl(@id)}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 45pt;text-indent: 0pt;text-align: left;\" id=\"7220\">&lt;<span class=\"p\" id=\"7221\">xsl:value-of select</span>=<span class=\"p\" id=\"7222\">\"newsTitle\" </span>/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7223\"><br id=\"7224\"></p><p class=\"s56\" style=\"padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7225\">&lt;/<span class=\"p\" id=\"7226\">a</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: center;\" id=\"7227\">&lt;/<span class=\"p\" id=\"7228\">h3</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7229\">&lt;<span class=\"p\" id=\"7230\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7231\">&lt;<span class=\"p\" id=\"7232\">xsl:value-of select</span>=<span class=\"p\" id=\"7233\">\"newsBody\" disable-output-escaping</span>=<span class=\"p\" id=\"7234\">\"yes\" </span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7235\">&lt;/<span class=\"p\" id=\"7236\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7237\">&lt;<span class=\"p\" id=\"7238\">p</span>&gt;</p><p style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7239\">Last update: <span class=\"s56\" id=\"7240\">&lt;</span>xsl:value-of select<span class=\"s56\" id=\"7241\">=</span>\"@updateDate\" <span class=\"s56\" id=\"7242\">/&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7243\"><br id=\"7244\"></p><p class=\"s56\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"7245\">&lt;/<span class=\"p\" id=\"7246\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: center;\" id=\"7247\">&lt;/<span class=\"p\" id=\"7248\">div</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7249\">&lt;/<span class=\"p\" id=\"7250\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7251\">&lt;/<span class=\"p\" id=\"7252\">xsl:for-each</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7253\">&lt;/<span class=\"p\" id=\"7254\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"7255\">&lt;/<span class=\"p\" id=\"7256\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"7257\">&lt;/<span class=\"p\" id=\"7258\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7259\"><br id=\"7260\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7261\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7262\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7263\"><br id=\"7264\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7265\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7266\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7267\">&lt;<span class=\"p\" id=\"7268\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7269\">version<span class=\"s56\" id=\"7270\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7271\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7272\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7273\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:recentVcard<span class=\"s56\" id=\"7274\">=</span>\"urn:recentvcard\" xmlns:umbraco.library<span class=\"s56\" id=\"7275\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7276\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7277\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7278\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7279\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7280\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7281\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7282\">=</span>\"urn:Exslt.ExsltSets\" xmlns:recentvcard<span class=\"s56\" id=\"7283\">=</span>\"urn:recentvcard\" exclude-result-prefixes<span class=\"s56\" id=\"7284\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets recentvcard \"<span class=\"s56\" id=\"7285\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7286\">&lt;<span class=\"p\" id=\"7287\">xsl:output method</span>=<span class=\"p\" id=\"7288\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7289\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7290\">&lt;<span class=\"p\" id=\"7291\">xsl:param name</span>=<span class=\"p\" id=\"7292\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7293\">&lt;<span class=\"p\" id=\"7294\">xsl:template match</span>=<span class=\"p\" id=\"7295\">\"/\"</span>&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7296\">&lt;!-- start writing XSLT --&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7297\">&lt;<span class=\"p\" id=\"7298\">xsl:value-of select</span>=<span class=\"p\" id=\"7299\">\"recentVcard:GetVcardData()\" disable-output-escaping</span>=<span class=\"p\" id=\"7300\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7301\">&lt;/<span class=\"p\" id=\"7302\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7303\">&lt;/<span class=\"p\" id=\"7304\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7305\"><br id=\"7306\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7307\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7308\">RecentVcard.cs</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7309\"><br id=\"7310\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7311\">using <span style=\" color: #000;\" id=\"7312\">System;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7313\">using <span style=\" color: #000;\" id=\"7314\">System.Collections.Generic; </span>using <span style=\" color: #000;\" id=\"7315\">System.Linq;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7316\">using <span style=\" color: #000;\" id=\"7317\">System.Web;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7318\">using <span style=\" color: #000;\" id=\"7319\">umbraco.DataLayer; </span>using <span style=\" color: #000;\" id=\"7320\">umbraco;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7321\">namespace <span style=\" color: #000;\" id=\"7322\">VCardGenerator</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7323\">{</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7324\">public class <span style=\" color: #2B91AE;\" id=\"7325\">RecentVcard</span></p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7326\">{</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7327\">public static string <span style=\" color: #000;\" id=\"7328\">GetVcardData()</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7329\">{</p><p class=\"s98\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"7330\">ISqlHelper <span style=\" color: #000;\" id=\"7331\">getVcard = </span>DataLayerHelper<span style=\" color: #000;\" id=\"7332\">.CreateSqlHelper(</span>GlobalSettings<span style=\" color: #000;\" id=\"7333\">.DbDSN);</span></p><p class=\"s98\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7334\">IRecordsReader <span style=\" color: #000;\" id=\"7335\">read = getVcard.ExecuteReader(</span><span style=\" color: #A21515;\" id=\"7336\">@\"select top 10 id, name,</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7337\">country</p><p class=\"s99\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7338\">from vcardimage where id &gt; @id order by id desc\"<span style=\" color: #000;\" id=\"7339\">,</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7340\">getVcard.CreateParameter(<span style=\" color: #A21515;\" id=\"7341\">\"@id\"</span>, <span style=\" color: #A21515;\" id=\"7342\">\"0\"</span>));</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7343\"><span style=\" color: #00F;\" id=\"7344\">string </span>data = <span style=\" color: #A21515;\" id=\"7345\">\"\"</span>; <span style=\" color: #00F;\" id=\"7346\">while </span>(read.Read())</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7347\">{</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"7348\">data += <span style=\" color: #A21515;\" id=\"7349\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span style=\" color: #A21515;\" id=\"7350\">\"name\"</span>) +</p><p class=\"s99\" style=\"padding-left: 104pt;text-indent: 0pt;text-align: left;\" id=\"7351\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span style=\" color: #000;\" id=\"7352\">+ read.GetString(</span>\"country\"<span style=\" color: #000;\" id=\"7353\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span style=\" color: #000;\" id=\"7354\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7355\">}</p><p class=\"s99\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7356\"><span style=\" color: #00F;\" id=\"7357\">return </span>\"&lt;ul&gt;\" <span style=\" color: #000;\" id=\"7358\">+ data + </span>\"&lt;/ul\"<span style=\" color: #000;\" id=\"7359\">;</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7360\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7361\">}</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7362\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7363\"><span id=\"7364\"><img width=\"602\" height=\"851\" alt=\"image\" src=\"Image_137.png\" id=\"7365\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7366\"><br id=\"7367\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7368\"><br id=\"7369\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7370\"><br id=\"7371\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7372\">About Writer</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7373\">Name: Jivan Thapa</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7374\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p style=\"padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;line-height: 159%;text-align: left;\" id=\"7375\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7376\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7377\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7378\">jeevan_2np@yahoo.com</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7379\"><br id=\"7380\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7381\">About Writer</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7382\">Name: Jivan Thapa</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7383\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p style=\"padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;line-height: 159%;text-align: left;\" id=\"7384\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7385\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7386\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7387\">jeevan_2np@yahoo.com</a></p><p style=\"padding-left: 30pt;text-indent: 0pt;text-align: left;\" id=\"7388\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"7389\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7390\"><br id=\"7391\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7392\"><br id=\"7393\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7394\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7395\">Here I covered:</p><ul id=\"l140\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7397\"><p style=\"display: inline;\" id=\"7398\">Document Type</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7399\"><p style=\"display: inline;\" id=\"7400\">Template</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7401\"><p style=\"display: inline;\" id=\"7402\">Content</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7403\"><p style=\"display: inline;\" id=\"7404\">Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7405\"><p style=\"display: inline;\" id=\"7406\">Extending Umbraco using .net class and User Control</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7407\"><p style=\"display: inline;\" id=\"7408\">And more ….</p></li></ul><p style=\"padding-top: 11pt;text-indent: 0pt;text-align: right;\" id=\"7409\">Jivan Thapa</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7410\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7411\">Here I covered:</p><ul id=\"l141\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7413\"><p style=\"display: inline;\" id=\"7414\">Document Type</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7415\"><p style=\"display: inline;\" id=\"7416\">Template</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7417\"><p style=\"display: inline;\" id=\"7418\">Content</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7419\"><p style=\"display: inline;\" id=\"7420\">Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7421\"><p style=\"display: inline;\" id=\"7422\">Extending Umbraco using .net class and User Control</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7423\"><p style=\"display: inline;\" id=\"7424\">And more ….</p></li></ul><p style=\"padding-top: 11pt;text-indent: 0pt;text-align: right;\" id=\"7425\">Jivan Thapa</p><p style=\"padding-left: 30pt;text-indent: 0pt;text-align: left;\" id=\"7426\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"7427\"> </span></p></div></div><p id=\"endOfDocument\"></p></div></div></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading613\" class=\"heading613\"><a name=\"bookmark12\" id=\"614\" >Installation of Umbraco CMS</a></h2>","pageStyleReducedContent":"<div id=\"contentheading613\" ><p  id=\"615\">There are several steps to install Umbraco CMS, most of steps are easy but needs to take carefully each steps. Here I briefly discuss about installation process. I already made video about “installation of Umbraco CMS in localhost” and uploaded to YouTube video. I strongly recommend to watch video<span class=\"s3\" id=\"616\">1 </span>first and come back later in this chapter to continue. Here basic steps are listed.</p><h3  id=\"heading617\" class=\"heading617\"><a name=\"bookmark13\" id=\"618\" >Database</a><span class=\"h4\" id=\"619\">:</span></h3><div id=\"contentheading617\" ><p  id=\"620\">Create Empty Database, you can give any name as you like for this purpose I gave name “umbracodb” and created user account name “root”. Make sure user should have database admin access otherwise Umbraco will not install properly.</p><p  id=\"621\">Instruction:</p><p  id=\"622\"><br id=\"623\"></p><ul id=\"l12\"><li  id=\"625\"><p  id=\"626\">Open Sql Server Management studio and login as “Windows Authentication”</p></li><li  id=\"627\"><p  id=\"628\">Right click on Database and click on “New Database”. Provide database name and click ok. <span class=\"s19\" id=\"629\">See Image: umbracodb.image</span></p></li><li  id=\"630\"><p  id=\"631\">Expand “Security” on left side menu. Right click on Login and click on “New Login”</p></li><li  id=\"632\"><p  id=\"633\">Type login name and check “SQL server authentication” and provide password. Uncheck “Enforce password Policy” if you are new to Sql server and press OK. Windows will disappear. In my case I create login name “root” and password “root”</p></li><li  id=\"634\"><p  id=\"635\">Expand Security tree from left side menu until last child where you can see new login added <span class=\"s19\" id=\"636\">See Image: user.image </span>and click on that login name. it will open Login Properties</p></li><li  id=\"637\"><p  id=\"638\">Select “User Mapping” it will list all available database and check new database that you are going to use for Umbraco and in “Database Role Membership” checked on “db owner”, “dbladmin”, “datawrite” and “datareader”,.</p></li><li  id=\"639\"><p  id=\"640\">Disconnect current working database and try to connect using new user id and password. This time do not select “windows authentication”. You should be select “Sql Server Authentication” this will activate Login and Password input textbox. You must be able to login to database. If you get any error please repeat database setting process.</p></li><li  id=\"641\"><p  id=\"642\">If you success to log in using your new user id and password and database that assign to Umbraco is listed on right side menu than your database setup is ready for Umbraco.</p></li><li  id=\"643\"><p  id=\"644\">See screen shot for references</p><p  id=\"645\"><br id=\"646\"></p><p  id=\"647\"><span id=\"648\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_007.png\" id=\"649\"></span></p><p  id=\"650\"><a href=\"http://www.youtube.com/jeevan2np%23p/a/u/0/DMXw7aeSG54\"  target=\"_blank\" id=\"651\">1 </a><a href=\"http://www.youtube.com/jeevan2np%23p/a/u/0/DMXw7aeSG54\" class=\"s11\" target=\"_blank\" id=\"652\">http://www.youtube.com/jeevan2np#p/a/u/0/DMXw7aeSG54</a></p><p  id=\"653\"><span id=\"654\"><img width=\"624\" height=\"367\" alt=\"image\" src=\"Image_008.png\" id=\"655\"></span></p><p class=\"s21\"  id=\"656\">Umbracodb.image <span class=\"s22\" id=\"657\">User.image</span></p><p  id=\"658\"><br id=\"659\"></p><p  id=\"660\">Notes:</p><p  id=\"661\">Here I did not include about MySql<span class=\"s3\" id=\"662\">2 </span>Database. MySql server is free server and mostly used in Apache server. MySql Server is developed and maintained by Oracle Corporation. Most of PHP web application like Joomla<span class=\"s3\" id=\"663\">3 </span>CMS, Drupal <span class=\"s3\" id=\"664\">4</span>, Wordpress<span class=\"s3\" id=\"665\">5 </span>CMS use MySql server.</p><p  id=\"666\"><a href=\"http://www.mysql.com/\" class=\"a\" target=\"_blank\" id=\"667\">Your case can be difference from here in that case you can installed Mysql database from official sites at </a>www.mysql.com. When you install Mysql Server please read documentation provided on official sites and follow each step carefully otherwise MySql database may not work as expected.</p><p  id=\"668\">Creating user, database, setting database permission for user, changing password can be difference for MySql Database as instruction provided to Mssql database. If you decided to use MySql server for Umbraco CMS it‟s your responsibility to find out more details about MySql set up because here I will not conver MySql database.</p><p  id=\"669\"><br id=\"670\"></p><p  id=\"671\"><span id=\"672\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_009.png\" id=\"673\"></span></p><p  id=\"674\"><a href=\"http://www.mysql.com/\"  target=\"_blank\" id=\"675\">2 </a><a href=\"http://www.mysql.com/\" class=\"s11\" target=\"_blank\" id=\"676\">http://www.mysql.com/</a></p><p  id=\"677\"><a href=\"http://www.joomla.org/\"  target=\"_blank\" id=\"678\">3 </a><a href=\"http://www.joomla.org/\" class=\"s11\" target=\"_blank\" id=\"679\">www.joomla.org</a></p><p  id=\"680\"><a href=\"http://www.drupal.org/\"  target=\"_blank\" id=\"681\">4 </a><a href=\"http://www.drupal.org/\" class=\"s11\" target=\"_blank\" id=\"682\">www.drupal.org</a></p><p  id=\"683\"><a href=\"http://www.wordpress.org/\"  target=\"_blank\" id=\"684\">5 </a><a href=\"http://www.wordpress.org/\" class=\"s11\" target=\"_blank\" id=\"685\">www.wordpress.org</a></p><h3  id=\"heading686\" class=\"heading686\"><a name=\"bookmark14\" id=\"687\" >Directory</a><span class=\"p\" id=\"688\">:</span></h3><div id=\"contentheading686\" ><p  id=\"689\"><br id=\"690\"></p><p  id=\"691\">Directory is location for physical files, all Umbraco files goes or placed inside domain name directory. I will define directory from two points of view one from server and one from local machine.</p><p  id=\"692\"><b id=\"693\">Server: </b>If you buy web hosting including domain and space. You can see there is “httpdocs”<span class=\"s3\" id=\"694\">6 </span>directory that is main directory for your website. All Umbraco files should be placed within main directory. Do not place Umbraco files inside sub directory because Umbraco does not support until version 4.7 and I can‟t say about later version until its release. All Umbraco files directory should be placed without</p><p  id=\"695\">renaming into root directory.</p><h4  id=\"696\">Local Machine: <span class=\"p\" id=\"697\">I am installing Umbraco in local machine so that I will focus here more. First you need to Create Directory and give name “HowToUmbraco” in my case but you can give different name. Follow instructions.</span></h4></div></li><li  id=\"698\"><p  id=\"699\">Create Directory in hard disk.</p><p  id=\"700\"><span id=\"701\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_010.png\" id=\"702\"></span></p><p  id=\"703\"><span id=\"704\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_011.png\" id=\"705\"></span></p><p  id=\"706\"><span id=\"707\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_012.png\" id=\"708\"></span></p></li><li  id=\"709\"><p  id=\"710\">Right click on it, click on Properties Security Edit Add</p></li><li  id=\"711\"><p  id=\"712\">Type “Network Service” and press OK</p></li><li  id=\"713\"><p  id=\"714\">Select “Network service” and Checked “Modify”</p></li><li  id=\"715\"><p  id=\"716\">Press Apply and Press OK until it close property windows.</p><p  id=\"717\"><span id=\"718\"><img width=\"358\" height=\"401\" alt=\"image\" src=\"Image_013.jpg\" id=\"719\"></span></p></li><li  id=\"720\"><p  id=\"721\">Your Directory is ready to use for Umbraco websites.</p><p  id=\"722\"><br id=\"723\"></p><p  id=\"724\"><br id=\"725\"></p><p  id=\"726\">Here I Created Directory “HowToUmbraco” in Drive D: and checked “Modify” file permission for “Network Service”</p><p  id=\"727\">Here I Created Directory “HowToUmbraco” in Drive D: and checked “Modify” file permission for “Network Service”</p><p  id=\"728\"><span  id=\"729\"> </span></p><p  id=\"730\"><br id=\"731\"></p><p  id=\"732\"><span id=\"733\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_014.png\" id=\"734\"></span></p><p class=\"s20\"  id=\"735\">6 <a href=\"http://www.dollar2host.com/\" class=\"s11\" target=\"_blank\" id=\"736\">“httpdoc” directory may not same name for all. It‟s based on my experienced with www.dollar2host.com</a></p><h3  id=\"heading737\" class=\"heading737\"><a name=\"bookmark15\" id=\"738\" >Turn On IIS Service</a></h3><div id=\"contentheading737\" ><p  id=\"739\">Here I assume that your machine is windows 7. To turn on IIS service follow instructions.</p><p  id=\"740\"><br id=\"741\"></p><p  id=\"742\"><span id=\"743\"><img width=\"295\" height=\"389\" alt=\"image\" src=\"Image_015.jpg\" id=\"744\"></span></p><ul id=\"l13\"><li  id=\"746\"><p  id=\"747\">Type “Turn Windows features on or off” in Search Box and press Enter</p><p  id=\"748\">It will open new windows. Navigate Internet Information Service and expand its tree.</p></li><li  id=\"749\"><p  id=\"750\">Navigate</p><p  id=\"751\"><br id=\"752\"></p><p  id=\"753\">-World Wide Web Service</p><p  id=\"754\"><br id=\"755\"></p><p  id=\"756\">-Application Development Feature</p><p  id=\"757\"><br id=\"758\"></p></li><li  id=\"759\"><p  id=\"760\">Checked</p><p  id=\"761\"><br id=\"762\"></p><ul id=\"l14\"><li  id=\"764\"><p  id=\"765\">NET Extensibility</p><p  id=\"766\"><br id=\"767\"></p></li><li  id=\"768\"><p  id=\"769\">ASP.NET</p><p  id=\"770\"><br id=\"771\"></p></li><li  id=\"772\"><p  id=\"773\">Server-Side Includes</p><p  id=\"774\"><br id=\"775\"></p></li></ul></li><li  id=\"776\"><p  id=\"777\">Press OK</p><p  id=\"778\"><br id=\"779\"></p><p  id=\"780\">Wait until “Turn Windows Features On or Off” Close automatically.</p><p  id=\"781\"><br id=\"782\"></p><p  id=\"783\"><span id=\"784\"><img width=\"256\" height=\"184\" alt=\"image\" src=\"Image_016.jpg\" id=\"785\"></span></p><p class=\"s8\"  id=\"786\">Test your IIS Server</p><p  id=\"787\"><br id=\"788\"></p><p  id=\"789\">Type “localhost” in your browser it will open default IIS websites (see left image) and also check using drive C:// “Inetpub” directory should be created by IIS Service. If there is a directory and</p><p  id=\"790\">localhost returns default websites<span class=\"s3\" id=\"791\">7 </span>means</p><p  id=\"792\">IIS is ready to use.</p><p class=\"s21\"  id=\"793\">Defaultwebsites.image</p><p  id=\"794\"><br id=\"795\"></p><p  id=\"796\"><span id=\"797\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_017.png\" id=\"798\"></span></p><p class=\"s20\"  id=\"799\">7 <span class=\"s10\" id=\"800\">See image defaultwebsites.image</span></p><p  id=\"801\"><br id=\"802\"></p><h3  id=\"heading803\" class=\"heading803\"><a name=\"bookmark16\" id=\"804\" >IIS Set Up</a></h3><div id=\"contentheading803\" ><p  id=\"805\">Until now we just turn on IIS7 in local machine. Here I will explain about Application Pool and other relevant topic to IIS and Umbraco CMS. Let‟s open Internet Information Service (IIS) Manager. To open IIS manager type “IIS” in search box windows search result will show up “internet Information Service” and press OK. It will open IIS manager windows. See screen bellow</p><p  id=\"806\"><span id=\"807\"><img width=\"605\" height=\"347\" alt=\"image\" src=\"Image_018.jpg\" id=\"808\"></span></p><p  id=\"809\">General Description of IIS Manager environment</p><p  id=\"810\"><br id=\"811\"></p><h4  id=\"812\"><a name=\"a18\" id=\"813\">Connections</a><span class=\"p\" id=\"814\">:</span></h4><p  id=\"815\"><br id=\"816\"></p><p  id=\"817\">List of all websites that created by users. By default there one website name is “Default Web Site” which is IIS created automatically when we Turn On Internet Information Service from “Turn windows features on or off” program.</p><h4  id=\"818\"><a name=\"a19\" id=\"819\">Application Pools:</a></h4><p  id=\"820\"><br id=\"821\"></p><p  id=\"822\">According to Microsoft, when you run IIS 6.0 in worker process isolation mode, you can separate different Web applications and Web sites into groups known as <i id=\"823\">application pools</i>. An <i id=\"824\">application pool </i>is a group of one or more URLs that are served by a worker process or set of worker processes. Any Web directory or virtual</p><p  id=\"825\">directory can be assigned to an application pool. For more details you can follow link provided in reference<span class=\"s3\" id=\"826\">8</span>.</p><h4  id=\"827\"><a name=\"a20\" id=\"828\">Sites:</a></h4><p  id=\"829\"><br id=\"830\"></p><p  id=\"831\">You can create new sites inside your local IIS manager. Here we are going to create new websites for our Vcard Project. Sites menu contains list of created sites into your local machine. You can edit, delete and create easily by right clicking on specific sites.</p><h4  id=\"832\"><a name=\"a21\" id=\"833\">Create new site:</a></h4><p  id=\"834\"><br id=\"835\"></p><p  id=\"836\">Instruction:</p><p  id=\"837\"><br id=\"838\"></p></div></li></ul></div></li><li  id=\"839\"><p  id=\"840\">Right click on Site menu on left side at communications. If you did not see “sites” expand left menu tree.</p></li><li  id=\"841\"><p  id=\"842\">Click on “Add Web Site”</p></li><li  id=\"843\"><p  id=\"844\">Provide valid information see captured screen for references.</p><ul id=\"l15\"><li  id=\"846\"><p  id=\"847\">Site name “<span  id=\"848\">howtoumbraco</span>” – you can give your own name if you like</p></li><li  id=\"849\"><p  id=\"850\">“Application Pool” is created automatically but I recommend changing it so that click on “Select” button at right side. It will list all available application pool. Select “<span  id=\"851\">ASP.NET v4.0</span>” for Umbraco 4.7 and press OK.</p><p  id=\"852\"><br id=\"853\"></p><p  id=\"854\"><br id=\"855\"></p><p  id=\"856\"><span id=\"857\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_019.png\" id=\"858\"></span></p><p class=\"s10\"  id=\"859\"><a href=\"http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/67e39bd8-317e-4cf6-\"  target=\"_blank\" id=\"860\">8 </a>http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/67e39bd8-317e-4cf6- b675-6431d4425248.mspx?mfr=true</p></li><li  id=\"861\"><p  id=\"862\">Physical Path: this is important part here so click on browse button right side and locate directory where you created before for Umbraco installation. In my case “<span  id=\"863\">HowToUmbraco</span>” directory in drive D:</p></li><li  id=\"864\"><p  id=\"865\">Binding: I changed port number to 8080 you can leave default but I</p></li></ul><p  id=\"866\"><span id=\"867\"><img width=\"322\" height=\"362\" alt=\"image\" src=\"Image_020.jpg\" id=\"868\"></span></p><p  id=\"869\">recommend to change it. You can specify any port number if it‟s not used or occupied by other application like Skype. In my case Skype already use default port number <span  id=\"870\">80 </span>so that I need to change it something else. So I change to <span  id=\"871\">8080</span>. Remember that if you change port number you have to provide port number every time when you access your websites via browser.</p><p  id=\"872\">Press OK:</p><p  id=\"873\"><br id=\"874\"></p><p  id=\"875\">You have successfully create sites and assign application pool “Asp.net v4.0”.</p><p  id=\"876\"><br id=\"877\"></p><p class=\"s24\"  id=\"878\"><a name=\"bookmark17\" id=\"879\">TESTING IIS</a><span class=\"h4\" id=\"880\">:</span></p><p  id=\"881\">It is necessary to test our site and setting we have done before, everything should work perfectly. To test newly created site follow these steps:</p></li><li  id=\"882\"><p  id=\"883\">Open Notepad</p></li><li  id=\"884\"><p  id=\"885\">Copy and paste that line of code without changing it. Copy code bellow</p><p class=\"s23\"  id=\"886\">&lt;% Response.write(\" welcome to 'How to Umbraco Basic'\") %&gt;</p><p  id=\"887\"><br id=\"888\"></p></li><li  id=\"889\"><p  id=\"890\">Click on Save. Now be very careful Naming is very important here. Give file name <span  id=\"891\">DefaultTest </span>and end with <span  id=\"892\">.aspx </span>without space so your file name must be “<span  id=\"893\">DefaultTest.aspx</span>” without quote. Now save that file inside Umbraco installation directory in my case I saved <span  id=\"894\">DefaultTest.aspx </span>file inside “<span  id=\"895\">HowToUmbraco</span>” Directory.</p></li><li  id=\"896\"><p  id=\"897\">Open Browser and type <span  id=\"898\">localhost:8080/DefaultTest.aspx </span>here <span  id=\"899\">8080 </span>is port number that I changed before, if you did not change port number “<span  id=\"900\">localhost/DefaultTest.aspx</span>” will be enough.</p></li><li  id=\"901\"><p  id=\"902\">If you can see <span  id=\"903\">welcome to 'How to Umbraco Basic' </span>message in browser. That means your sites is working if you did not see that message or get some error please repeat Previous Chapter.</p><p  id=\"904\"><br id=\"905\"></p><h4  id=\"906\"><a name=\"a22\" id=\"907\">Modifying your Sites:</a></h4><p  id=\"908\"><br id=\"909\"></p><p  id=\"910\">If you like to modify your sites properties or other settings your can click on your sites and on middle and right side you can see more options available to edit. For example:</p></li><li  id=\"911\"><p  id=\"912\">Edit bindings, Permission and basic settings</p></li><li  id=\"913\"><p  id=\"914\">Advanced settings</p></li><li  id=\"915\"><p  id=\"916\">View application, add virtual directory</p></li><li  id=\"917\"><p  id=\"918\">Edit SMTP or Email setting, database connection strings, SSL, Handler Mappings etc.</p></li><li  id=\"919\"><p  id=\"920\">For more details you can visit Microsoft official sites for IIS.</p><p  id=\"921\"><br id=\"922\"></p><p class=\"s10\"  id=\"923\">References:</p><p  id=\"924\"><br id=\"925\"></p><p class=\"s10\"  id=\"926\">IIS</p><p  id=\"927\"><br id=\"928\"></p><p class=\"s10\"  id=\"929\">Taken date April 13, 2011</p><p class=\"s10\"  id=\"930\"><a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=32c54c37-7530-4fc0-bd20-\" class=\"s11\" target=\"_blank\" id=\"931\">http://www.iis.net </a>http://www.microsoft.com/downloads/en/details.aspx?FamilyID=32c54c37-7530-4fc0-bd20- 177a3e5330b7</p><p class=\"s10\"  id=\"932\">Notepad is out of box software provided by Microsoft.</p><h3  id=\"heading933\" class=\"heading933\"><a name=\"bookmark18\" id=\"934\" >Downloading Umbraco files:</a></h3><div id=\"contentheading933\" ><p  id=\"935\">It‟s time to download Umbraco latest file from official site. Official site contains list of Umbraco release, most resent Umbraco release version is highly focused in download site. I recommend downloading latest version because every new release contains bug fix from previous version, added extra new features and improved better than previous release. Here you can argue that new version of Umbraco also contains new bugs and it may take longer time to fix because it‟s a new release. You are not wrong but my point is we all are here to learn new thing and challenge new problem, help others and get help from others so do not compromise to face new challenge and learn more, technology never becomes perfect, it‟s a process of learning from history, face new challenge in present and improve it better for future.</p><p  id=\"936\">In my personal opinion I download one or two previous release then latest release version only for client websites because earlier version of release has known bugs and can be solved very fast because someone or other developer might be already faced or fixed such bugs. But in my local host or for my testing purpose I always download latest release because I always want to face new bugs that nobody discovered it and have a fun with that bugs. In this Vcard project I will download latest version of Umbraco release 4.7.</p></div><h3  id=\"heading937\" class=\"heading937\"><a name=\"bookmark19\" id=\"938\" >What to Download?</a></h3><div id=\"contentheading937\" ><p class=\"s26\"  id=\"939\"><a href=\"http://umbraco.com/download\" class=\"a\" target=\"_blank\" id=\"940\">Now you get overview of downloading Umbraco. It‟s a good questions what to download? If you visit </a>http://umbraco.com/download <a href=\"http://umbraco.codeplex.com/releases/\" class=\"a\" target=\"_blank\" id=\"941\">sites to download, you can easily install using “Web Platform Installer”. Web platform Installer is Microsoft free software use to install program. Here I will not use “Web Platform Installer” because I want to show you more options. Visit Umbraco release or let‟s follow this link </a>http://umbraco.codeplex.com/releases/<span class=\"p\" id=\"942\">. This websites contains all Umbraco release version. On left menu side you can see current release version. Inside rectangle box you can see details of latest release version, for example Rating, Release date, update, Reviews, Number of Download etc. here look for Dev Status: if it‟s say stable it means it‟s a believe to be ready to use. On right side menu bar you can see pervious release of Umbraco. I said not to use Web Platform Installer to install Umbraco because it will install new release. If you would like to install other version then you need to browse codeplex for all releases.</span></p><p  id=\"943\">Let‟s back to main questions what to download? I would say first describe yourself and decide what to download. Here are three main categories so you need to choose one categories yourself based on your programming skills and .NET language skills.</p><h4  id=\"944\">Categories Basic <span class=\"p\" id=\"945\">– if you have basic knowledge of C#, object oriented program, MsSql database, if you know how to use usercontrol, webservices and classes to asp.net websites than I said its very basic to Umbraco so you can download Recommended Download by Umbraco sites. It‟s a binaries file.</span></h4><p  id=\"946\"><br id=\"947\"></p><h4  id=\"948\">Categories Tester <span class=\"p\" id=\"949\">- if you have advanced level of C#, Object Oriented program knowledge and if you do not want to use mssql database but want to test Umbraco than you are as a tester. Please download “Umbraco x.x.x WebDeploy NET n.n” here x.x.x is Umbraco Release version and n.n is .NET frame work version. Until this book release its “Umbraco 4.7.0 WebDeploy NET 4.0” so download that files and test Umbraco without using MSSQL database.</span></h4><h4  id=\"950\">Categories Advanced <a href=\"http://umbraco.codeplex.com/SourceControl/list/changesets\" class=\"a\" target=\"_blank\" id=\"951\">– If you can analyze other‟s c# code and have knowledge of Object Oriented Program, database and other programming language then you can download Source code from here </a><span  id=\"952\">http://umbraco.codeplex.com/SourceControl/list/changesets </span><span class=\"p\" id=\"953\">and have a fun with source code.</span></h4><p  id=\"954\"><br id=\"955\"></p><p  id=\"956\"><span id=\"957\"><img width=\"529\" height=\"331\" alt=\"image\" src=\"Image_021.jpg\" id=\"958\"></span></p><p  id=\"959\"><br id=\"960\"></p><p  id=\"961\">My personal opinion: I download Binary files for client websites development and I download source code files for learning purpose. I strongly recommend you to download source code because using source code files we can easily debug and see how Umbraco works. It‟s a good way to learn Umbraco. For Vcard project I download binary files, binary files are recommended by Umbraco official.</p><p  id=\"962\"><br id=\"963\"></p></div><h3  id=\"heading964\" class=\"heading964\"><a name=\"bookmark20\" id=\"965\" >Unzip ZIP format</a></h3><div id=\"contentheading964\" ><p  id=\"966\">Umbraco downloaded files are compressed in ZIP format, I guess you already worked with zip format; one important thing for Umbraco zip file before extract is to unblock it. Make sure you unblock zip file before extract.</p><p  id=\"967\">Instruction:</p><p  id=\"968\"><br id=\"969\"></p></div></li><li  id=\"970\"><p  id=\"971\">Right click on Umbraco files that you just downloaded and click on Properties</p></li><li  id=\"972\"><p  id=\"973\">Click On “Unblock” and press OK</p></li><li  id=\"974\"><p  id=\"975\">Extract files by Right click on zip files and click on “Extract All”</p></li><li  id=\"976\"><p  id=\"977\">Your extractor can be difference from I have one. But purpose is to extract all files.</p><p  id=\"978\"><br id=\"979\"></p><p  id=\"980\"><span id=\"981\"><img width=\"485\" height=\"456\" alt=\"image\" src=\"Image_022.png\" id=\"982\"></span></p></li><li  id=\"983\"><p  id=\"984\">Copy all extracted files, do not copy “build” directory<span class=\"s3\" id=\"985\">9</span>. Go inside “build” directory and copy all files from there.</p></li><li  id=\"986\"><p  id=\"987\">Paste all files inside “HowToUmbraco” directory if you follow me. Otherwise paste all Umbraco extracted files to your directory where you have decided to use. If you get confused go back to “Directory” topic and follow each step.</p></li><li  id=\"988\"><p  id=\"989\">If you followed me your “HowToUmbraco” directory must look like this see screen</p><p  id=\"990\"><span id=\"991\"><img width=\"316\" height=\"501\" alt=\"image\" src=\"Image_023.png\" id=\"992\"></span></p><p class=\"s27\"  id=\"993\">-</p><p  id=\"994\"><br id=\"995\"></p><p  id=\"996\">If yours file structure is same as above captured image then you are ready to install Umbraco.</p><p  id=\"997\"><br id=\"998\"></p><p  id=\"999\"><span id=\"1000\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_024.png\" id=\"1001\"></span></p><p class=\"s20\"  id=\"1002\">9 <span class=\"s10\" id=\"1003\">You can also copy “build” directory in your case, if you want to follow me copy directory and files that have inside build directory.</span></p><h3  id=\"heading1004\" class=\"heading1004\"><a name=\"bookmark21\" id=\"1005\" >Install Umbraco step by step guide</a></h3><div id=\"contentheading1004\" ><p  id=\"1006\">To install Umbraco Follow these process Instruction:</p></div></li><li  id=\"1007\"><p  id=\"1008\">Browser you websites using browser and type localhost:8080</p></li><li  id=\"1009\"><p  id=\"1010\">Here 8080 is port number if you did not change your port number just type localhost</p></li><li  id=\"1011\"><p  id=\"1012\">You  must  see  Umbraco  welcome  page  click  <span id=\"1013\"><img width=\"100\" height=\"29\" alt=\"image\" src=\"Image_025.jpg\" id=\"1014\"></span><span class=\"s28\" id=\"1015\">    </span>on “Lets get Started”</p></li><li  id=\"1016\"><p  id=\"1017\">Even its free open source CMS you need to follow rules to use Umbraco read license, term and conditions. More details can be found on official websites of Umbraco, Accept the license for Umbraco CMS. To accept license click “Accept and continue”</p></li><li  id=\"1018\"><p  id=\"1019\">You are now in step 3. This step is more fun.</p></li><li  id=\"1020\"><p  id=\"1021\">By providing not enough file permission to “Network service” or “application pool” in Umbraco installation directory will thrown out notification message “files permission are not ready” in such case you will not see this step 3, go back to file permission setting and come back later. If everything is ok you can see more option here</p><p class=\"s27\"  id=\"1022\">-     <span id=\"1023\"><img width=\"375\" height=\"90\" alt=\"image\" src=\"Image_026.jpg\" id=\"1024\"></span></p></li><li  id=\"1025\"><p  id=\"1026\">Four options are here and all four options have on radio button. Why it‟s in radio button, reason is Radio button allows to choose only one option at a time, in Umbraco it is not possible<span class=\"s3\" id=\"1027\">10 </span>to use two different databases at a same time that‟s why they have radio button to make sure to choose one database.</p></li></ul><ul id=\"l16\"><li  id=\"1029\"><p  id=\"1030\">If you want to follow me until now click on first one “I …. Have a blank Sql server. <span class=\"s19\" id=\"1031\">Also see “What to Download?” topics page 25 </span>“</p></li><li  id=\"1032\"><p  id=\"1033\">If you are planning to test Umbraco select second option “I want to use SQl CE4,….” It does not require database. <span class=\"s19\" id=\"1034\">see “Categories Tester?” page 26</span></p></li><li  id=\"1035\"><p  id=\"1036\">If you are advanced user select third option this will allows developer to type connection string. <span class=\"s19\" id=\"1037\">Also see “Categories Advanced” page 26</span></p></li></ul><p  id=\"1038\"><br id=\"1039\"></p><p  id=\"1040\"><span id=\"1041\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_027.png\" id=\"1042\"></span></p><p class=\"s20\"  id=\"1043\">10 <span class=\"s10\" id=\"1044\">It is possible to use more than one database by extending umbraco using .net class. It is not possible to use multiple database during installation period.</span></p><p  id=\"1045\"><br id=\"1046\"></p><ul id=\"l17\"><li  id=\"1048\"><p  id=\"1049\">if you need help click on last one.</p></li><li  id=\"1050\"><p  id=\"1051\">I click on first one so Umbraco provides more option to select database type. I am using mssql, so I am selecting Microsoft SQL server.</p></li><li  id=\"1052\"><p  id=\"1053\">Your case can be deference if you plan to use MySql server than you need to find yourself how to connect to Mysql server, I am not going to include here.</p></li><li  id=\"1054\"><p  id=\"1055\">After click on first option or choice it will provide more input fields for sql connection details. See captured screen for reference your case can be deference. If you are following me it will be same as in captured screen bellow.</p></li><li  id=\"1056\"><p  id=\"1057\">Here is description</p><ul id=\"l18\"><li  id=\"1059\"><p  id=\"1060\">Server= location of sql server, in mycase its .\\sqlepress, you can also use remote server database if you have for example server=”www.example.com\\sqlexpress”</p></li><li  id=\"1061\"><p  id=\"1062\">Database name: Name of database that we created for Umbraco cms in database topic</p></li><li  id=\"1063\"><p  id=\"1064\">Username: user that has access on database that we created for Umbraco</p></li><li  id=\"1065\"><p  id=\"1066\">Password: password that assign to user to login sql server</p></li></ul></li></ul><p  id=\"1067\"><span id=\"1068\"><img width=\"465\" height=\"355\" alt=\"image\" src=\"Image_028.jpg\" id=\"1069\"></span></p><p  id=\"1070\">database.</p><p  id=\"1071\"><br id=\"1072\"></p><p class=\"s27\"  id=\"1073\">-</p><p  id=\"1074\"><br id=\"1075\"></p><ul id=\"l19\"><li  id=\"1077\"><p  id=\"1078\">Press “Install”</p></li><li  id=\"1079\"><p  id=\"1080\">If server location, database name, username and password are correct then it will take only few minute to setup database for Umbraco, during this process Umbraco show up progress bar. If Umbraco show up any error or notice. Correct error based on error message provided by Umbraco and continue to install Umbraco</p></li><li  id=\"1081\"><p  id=\"1082\">Press “Continue” now you are in step 4</p><p  id=\"1083\"><span id=\"1084\"><img width=\"322\" height=\"317\" alt=\"image\" src=\"Image_029.jpg\" id=\"1085\"></span></p></li><li  id=\"1086\"><p  id=\"1087\">Step 4 is for Create user; here you have to provide User information. That user will be supper administrator and have elevator access or root level of access to Umbraco Backend.</p><ul id=\"l20\"><li  id=\"1089\"><p  id=\"1090\">Name: name for supper administrator account</p></li><li  id=\"1091\"><p  id=\"1092\">Email: email of supper administrator account</p></li><li  id=\"1093\"><p  id=\"1094\">Username: user name use to identify user.</p></li><li  id=\"1095\"><p  id=\"1096\">Password: secrete code to gain access</p></li><li  id=\"1097\"><p  id=\"1098\">See captured screen as a reference.</p><p  id=\"1099\"><br id=\"1100\"></p><p class=\"s29\"  id=\"1101\">o</p></li></ul></li><li  id=\"1102\"><p  id=\"1103\">Click “Create user”</p><p  id=\"1104\">Step 5: select starter kits.</p><p  id=\"1105\"><br id=\"1106\"></p><p  id=\"1107\"><span id=\"1108\"><img width=\"585\" height=\"232\" alt=\"image\" src=\"Image_030.jpg\" id=\"1109\"></span></p><p  id=\"1110\"><br id=\"1111\"></p><p  id=\"1112\">You can choose any one for your sites. It will install selected starter kits. It contains Templates, xslt, css and other extra files based on selected starter kits. This is good way to learn for new Umbraco developer. By installing out of box starter kits will provide guidance to new user about how templates, add XSLT, Document types, Macro, CSS etc works in Umbraco. By analyzing starter kits help developer to learn quickly and get familiar with environments.</p><p  id=\"1113\">I will start from scratch that‟s why I am not going to install any starter kits but you can install if you want. I will click last one “no thanks”. It will not install anything do not worry I will create later on. If you want to follow me click on “No thanks” and Click “Yes”.</p><p  id=\"1114\"><b id=\"1115\">Final step: </b>you are done now click on “Set up your new websites” it will redirect to administrator control panel that is Backend of Umbraco sites<span class=\"s3\" id=\"1116\">11</span>.</p><p  id=\"1117\"><br id=\"1118\"></p><p  id=\"1119\"><span id=\"1120\"><img width=\"601\" height=\"76\" alt=\"image\" src=\"Image_031.jpg\" id=\"1121\"></span></p><p  id=\"1122\">Note: if you browse you sites you will see Umbraco notice “Looks like there's still work to do”. It‟s because we did not set up our Umbraco sites. I will show step by step guide to set up.</p><h4  id=\"1123\"><a name=\"a23\" id=\"1124\">Note: to install starter kits, it should be connected to internet. Being offline may not work to install starter kits.</a></h4><p  id=\"1125\"><br id=\"1126\"></p><p  id=\"1127\"><br id=\"1128\"></p><p  id=\"1129\"><span id=\"1130\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_032.png\" id=\"1131\"></span></p><p class=\"s20\"  id=\"1132\">11 <span class=\"s10\" id=\"1133\">Also called back office.</span></p><p  id=\"1134\"><span id=\"1135\"><img width=\"602\" height=\"441\" alt=\"image\" src=\"Image_033.png\" id=\"1136\"></span></p><h2  id=\"heading1137\" class=\"heading1137\"><a name=\"bookmark22\" id=\"1138\" >Back End Working Environment</a></h2><div id=\"contentheading1137\" ><p  id=\"1139\">1 2 3 4 5</p><p  id=\"1140\"><br id=\"1141\"></p><p  id=\"1142\">6 8 9 10</p><p  id=\"1143\"><br id=\"1144\"></p><p  id=\"1145\">13</p><p  id=\"1146\">7</p><p  id=\"1147\"><br id=\"1148\"></p><p  id=\"1149\">11</p><p  id=\"1150\"><br id=\"1151\"></p><p  id=\"1152\">12</p><p  id=\"1153\"><br id=\"1154\"></p><p  id=\"1155\"><br id=\"1156\"></p><ol id=\"l21\"><li  id=\"1158\"><p  id=\"1159\">Create: it‟s dynamic, will change based on Section item see number 12.</p><p  id=\"1160\"><br id=\"1161\"></p></li><li  id=\"1162\"><p  id=\"1163\">Search: type text to search content</p><p  id=\"1164\"><br id=\"1165\"></p></li><li  id=\"1166\"><p  id=\"1167\">About: To view Umbraco installed version, licensed and other information.</p><p  id=\"1168\"><br id=\"1169\"></p></li><li  id=\"1170\"><p  id=\"1171\">Help: external link, will open Wiki page about Umbraco</p><p  id=\"1172\"><br id=\"1173\"></p></li><li  id=\"1174\"><p  id=\"1175\">Logout: click to log out. It will contain login user name</p><p  id=\"1176\"><br id=\"1177\"></p></li><li  id=\"1178\"><p  id=\"1179\">Content: it‟s a dynamic, will changed based on Section Items see number 12</p></li><li  id=\"1180\"><p  id=\"1181\">Secondary items or child items of Main Items.</p><p  id=\"1182\"><br id=\"1183\"></p></li><li  id=\"1184\"><p  id=\"1185\">Get Started: Umbraco provides information, news and external links</p><p  id=\"1186\"><br id=\"1187\"></p></li><li  id=\"1188\"><p  id=\"1189\">Latest edits: list latest change you have made on you site. 10)Change Password: change admin password. Password is hashed</p></li></ol><ol id=\"l22\"><li  id=\"1191\"><p  id=\"1192\">Section: Main menu items, we can add custom section. Not covered here</p><p  id=\"1193\"><br id=\"1194\"></p></li><li  id=\"1195\"><p  id=\"1196\">Section Items: Items inside section. Sub Menu part of Section Menu. Mostly used in developing Umbraco, creating content and other</p></li></ol><p  id=\"1197\"><br id=\"1198\"></p><p  id=\"1199\">administrator purpose. Umbraco come up with six default section items Content, Media, User, Settings, Developer and Members.</p><p  id=\"1200\">Content: here editor create articles, edit, upload image. It‟s not technical stuff</p><p  id=\"1201\"><br id=\"1202\"></p><p  id=\"1203\">Media: it contains Media items. Image, Video, Audio is mostly Media items. Uploaded files go inside Media section. Using .net control developer can easily use others Directory to store files on their needs and requirements.</p><p  id=\"1204\">User: contains list of Users. All registered user are listed under User. Here you can set up user id, password, Email, permission and other personal information.</p><ul id=\"l23\"><li  id=\"1206\"><p  id=\"1207\">Users</p></li><li  id=\"1208\"><p  id=\"1209\">User types</p></li><li  id=\"1210\"><p  id=\"1211\">User Permission Members: it contains</p></li><li  id=\"1212\"><p  id=\"1213\">Members</p></li><li  id=\"1214\"><p  id=\"1215\">Member Groups</p></li><li  id=\"1216\"><p  id=\"1217\">Member types</p><p  id=\"1218\">Settings: widely used in this “how to Umbraco”. Setting used to set up umbraco site. It contains</p></li><li  id=\"1219\"><p  id=\"1220\">Document Type</p></li><li  id=\"1221\"><p  id=\"1222\">Templates</p></li><li  id=\"1223\"><p  id=\"1224\">Style Sheet</p></li><li  id=\"1225\"><p  id=\"1226\">Scripts</p></li><li  id=\"1227\"><p  id=\"1228\">Dictionary</p></li><li  id=\"1229\"><p  id=\"1230\">Language</p></li><li  id=\"1231\"><p  id=\"1232\">Media types</p><p  id=\"1233\"><br id=\"1234\"></p><p  id=\"1235\">Developer: it contains all technical stuff.</p><p  id=\"1236\"><br id=\"1237\"></p></li><li  id=\"1238\"><p  id=\"1239\">Cache browser</p></li><li  id=\"1240\"><p  id=\"1241\">Data Types</p></li><li  id=\"1242\"><p  id=\"1243\">Macro</p></li><li  id=\"1244\"><p  id=\"1245\">Packages</p></li><li  id=\"1246\"><p  id=\"1247\">Scripting Files</p></li><li  id=\"1248\"><p  id=\"1249\">Xslt Files</p></li></ul><p  id=\"1250\"><br id=\"1251\"></p><h1  id=\"1252\"><a name=\"a24\" id=\"1253\">Chapter 03: Document Type</a></h1><p  id=\"1254\"><br id=\"1255\"></p><p  id=\"1256\"><br id=\"1257\"></p><p  id=\"1258\"><span id=\"1259\"><img width=\"529\" height=\"1\" alt=\"image\" src=\"Image_034.png\" id=\"1260\"></span></p></div><h2  id=\"heading1261\" class=\"heading1261\"><a name=\"bookmark23\" id=\"1262\" >Document Type:</a></h2><div id=\"contentheading1261\" ><p  id=\"1263\">Document type is a core feature<span class=\"s3\" id=\"1264\">12 </span>of Umbraco cms; it is out of box document type feature. If you already work with Drupal CMS, you might be working with CCK (Content Construction Kit), Document Type is exactly same purpose as CCK that allows you to create fields.</p><p  id=\"1265\">Document type is a group of fields, that controls fields and fields are used to input data by content creator or editor while creating content on Umbraco sites. Content is second step after Document Type so that Document type structures the input fields, creates environment to add or create new content and facilitate content creating services to Editor.</p><p  id=\"1266\"><br id=\"1267\"></p></div><h2  id=\"heading1268\" class=\"heading1268\"><a name=\"bookmark24\" id=\"1269\" >Document Type for Developers:</a></h2><div id=\"contentheading1268\" ><p  id=\"1270\">Developer creates document type based on groups of data that needs to be saved to and provides rich service to manage data and customize input fields.</p><p  id=\"1271\">You may still not clear what document type is so I am going to give one example as vcard case. Vcard websites I called “Semic Provider” has many fields like</p><ul id=\"l24\"><li  id=\"1273\"><p  id=\"1274\">Logo</p></li><li  id=\"1275\"><p  id=\"1276\">Title of Websites “Semic Provider” and</p></li><li  id=\"1277\"><p  id=\"1278\">Slogan “Where content is understood by human and machine”.</p><p  id=\"1279\">As a developer I want to provide a service to client so s/he can upload Logo, edit title of websites and slogan. Developer could do hard coding text into templates to display logo, title of websites and slogan but client can‟t change it later if s/he decided to change it. Client wants cms because s/he wants to control content without having knowledge of technical stuff like editing templates so as a developer we should provide more control over content. Logo, Title of Website and slogan are not same for all time; they can be changed later by client. To solve that problem we need to create Document type.</p><p  id=\"1280\">Document type is not single subject it‟s more complex for new Umbraco developer. I am going to look more details about document types. It contains Properties, Info, Structure and Tabs.</p><h4  id=\"1281\">Properties<span class=\"p\" id=\"1282\">: it‟s an input field that you create in document type, has more properties</span></h4></li><li  id=\"1283\"><p  id=\"1284\">Name: name of your input field</p></li><li  id=\"1285\"><p  id=\"1286\">Alias: alias used to retrieve value or fetch value that properties have</p></li><li  id=\"1287\"><p  id=\"1288\">Type: input type for example , Text box, upload, Button, check box etc. these are based on Data Type</p></li><li  id=\"1289\"><p  id=\"1290\">Tab- by default properties is assign to generic properties but you can assign to your custom tabs</p><p  id=\"1291\"><br id=\"1292\"></p><p  id=\"1293\"><span id=\"1294\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_035.png\" id=\"1295\"></span></p><p class=\"s10\"  id=\"1296\"><a href=\"http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder-\"  target=\"_blank\" id=\"1297\">12 </a>http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder- introduction/document-types official video about Document Type introduction</p><h4  id=\"1298\">Tabs<span class=\"p\" id=\"1299\">: Tabs is name of group for example name, age, address and email properties of person can be group together with tabs “personal Details” so in Tabs we create “Personal Details” and in Property tab we assign name, age, address and email properties to “Personal Details” tab. Tab and Tabs should not be confuse. Tabs, Properties, Structure and Info have save level inside Document Type tree and tab is child of Properties.</span></h4><p  id=\"1300\"><br id=\"1301\"></p><h4  id=\"1302\">Structure<span class=\"p\" id=\"1303\">: Document type can have parent or child document Type here you check what‟s should be parent or child document type is allowed</span></h4><h4  id=\"1304\">Info<span class=\"p\" id=\"1305\">: it‟s not that much important as Properties, Tabs and Structure. Here you can assign template and other general setting or get more information about Document Type. More available settings inside Info are listed below. </span><span class=\"s10\" id=\"1306\">These are taken from official Umbraco sites. Please visit references.</span></h4><ul id=\"l25\"><li  id=\"1308\"><p  id=\"1309\">Name: name of Document Type</p></li><li  id=\"1310\"><p  id=\"1311\">Alias: alias of Document Type, use by Umbraco and developer when they work with Umbraco API and CodeInProject.</p></li><li  id=\"1312\"><p  id=\"1313\">Thumbnail: Thumb image of Document Type displayed on create page dialog.</p></li><li  id=\"1314\"><p  id=\"1315\">Icon: Icon of Document Type.</p><p  id=\"1316\"><br id=\"1317\"></p></li><li  id=\"1318\"><p  id=\"1319\">Description: Description of Document Type.</p><p  id=\"1320\"><br id=\"1321\"></p></li><li  id=\"1322\"><p  id=\"1323\">Allowed Template. It is use to present data to end uses. If you fetch data using Xslt you can make document type without templates but Content based on that document type will not be able to provide preview mode if there is no associated template. One Document Type can have more than one template.</p></li><li  id=\"1324\"><p  id=\"1325\">Default Templates: that is a default template of document type. And used by Document Type</p></li></ul></li></ul><p class=\"s30\"  id=\"1326\"><a name=\"bookmark25\" id=\"1327\">Visual Diagram</a><span class=\"s31\" id=\"1328\">13 </span>for Document Type<span class=\"h3\" id=\"1329\">:</span></p><p  id=\"1330\"><br id=\"1331\"></p><p  id=\"1332\"><span id=\"1333\"><img width=\"607\" height=\"165\" alt=\"image\" src=\"Image_036.png\" id=\"1334\"></span></p><p class=\"s32\"  id=\"1335\">Document Type <span class=\"s10\" id=\"1336\">Name: </span><span class=\"s33\" id=\"1337\">Properties:</span></p><p class=\"s34\"  id=\"1338\">- <span class=\"s35\" id=\"1339\">Alias: </span><span class=\"s33\" id=\"1340\">Tabs:</span></p><p  id=\"1341\"><br id=\"1342\"></p><h4  id=\"1343\">Create Content <span class=\"s36\" id=\"1344\">Properties and Tabs </span><span class=\"p\" id=\"1345\">of Document type</span></h4><p  id=\"1346\"><br id=\"1347\"></p><h4  id=\"1348\"><a name=\"a25\" id=\"1349\">Templates</a><span class=\"p\" id=\"1350\">:</span></h4><p class=\"s23\"  id=\"1351\">Alias <span  id=\"1352\">of Document Type‟s Properties</span></p><p  id=\"1353\"><br id=\"1354\"></p><h4  id=\"1355\"><a name=\"a26\" id=\"1356\">Presentation of Content</a></h4><p  id=\"1357\">End Users</p><p  id=\"1358\"><br id=\"1359\"></p><p  id=\"1360\"><span id=\"1361\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_037.png\" id=\"1362\"></span></p><p class=\"s3\"  id=\"1363\">13 <span class=\"s10\" id=\"1364\">These diagrams are my own concept and may be other developer argues with Diagrams. There is no official diagram for Document Type.</span></p><p class=\"s10\"  id=\"1365\">References taken dates April 14, 2011</p><p  id=\"1366\">Diagram show, first create Document Type, second create Content based on Document Type Properties, use Alias of Document Type‟s properties and display data to End users.</p><p  id=\"1367\"><br id=\"1368\"></p><h4  id=\"1369\"><a name=\"a27\" id=\"1370\">Practical: let’s create Document Type for “Sites Setting”</a></h4><h3  id=\"1371\"><a name=\"bookmark26\" id=\"1372\">Document Type Generic Properties: </a><span id=\"1373\"><img width=\"294\" height=\"22\" alt=\"image\" src=\"Image_038.jpg\" id=\"1374\"></span></h3><p  id=\"1375\">Instruction:</p><ul id=\"l26\"><li  id=\"1377\"><p  id=\"1378\">open Backend of Umbraco sites (your site /Umbraco/) in my case localhost:8080/umbraco/</p></li><li  id=\"1379\"><p  id=\"1380\">Provide login credentials user id and password (my case “admin” “root” login and password respectively)</p></li><li  id=\"1381\"><p  id=\"1382\">Click Setting on Section at bottom left corner, it will list all available features on Setting on top left corner. Expand Document Type</p></li><li  id=\"1383\"><p  id=\"1384\">If you follow me Document Type must be empty so nothing will happen it‟s because I decided not to install any starter kits. Now I will create new document Type</p></li><li  id=\"1385\"><p  id=\"1386\">Right Click on Document Type and Click “Create”. New windows popup.</p></li><li  id=\"1387\"><p  id=\"1388\">Master Document Type: select none…</p></li><li  id=\"1389\"><p  id=\"1390\">Name: name for Document Type I choose “Web Site Global Setting” but you can choose different if you want. Its name of document type.</p></li><li  id=\"1391\"><p  id=\"1392\">By Default “Create matching templates” is checked so leave default, it will create matching templates and we will use that templates as master templates.</p></li><li  id=\"1393\"><p  id=\"1394\">Press “Create” Button</p></li><li  id=\"1395\"><p  id=\"1396\">Now Umbraco created new document Type and provide more option to input.</p></li><li  id=\"1397\"><p  id=\"1398\">Click “Web site global Setting” to open document type. It will open four properties Info, Structure, Generic Properties and Tabs</p></li><li  id=\"1399\"><p  id=\"1400\">Info: if you want to follow me provide these information</p><ul id=\"l27\"><li  id=\"1402\"><p class=\"s8\"  id=\"1403\">Name <span class=\"p\" id=\"1404\">and </span>Alias <span class=\"p\" id=\"1405\">is not recommended to change because it will effect whole system</span></p></li><li  id=\"1406\"><p class=\"s8\"  id=\"1407\">Icon<span class=\"p\" id=\"1408\">: Setting Agent. Select from dropdown</span></p></li><li  id=\"1409\"><p class=\"s8\"  id=\"1410\">Thumbnail<span class=\"p\" id=\"1411\">: developer.png select from dropdown</span></p></li><li  id=\"1412\"><p class=\"s8\"  id=\"1413\">Description<span class=\"p\" id=\"1414\">: “Manage your websites. Here you can set up your global sites. Example change logo, slogan etc.”</span></p></li><li  id=\"1415\"><p class=\"s8\"  id=\"1416\">Allowed templates <span class=\"p\" id=\"1417\">and </span>Default Templates <span class=\"p\" id=\"1418\">leave default do not change it.</span></p></li><li  id=\"1419\"><h4  id=\"1420\"><a name=\"a28\" id=\"1421\">Remember to save before jump to next property</a><span class=\"p\" id=\"1422\">.</span></h4></li><li  id=\"1423\"><p  id=\"1424\">You must see balloon success message at bottom right corner if anything goes wrong it will show up balloon message with error details.</p></li></ul></li><li  id=\"1425\"><p  id=\"1426\">Structure: leave Default</p></li><li  id=\"1427\"><p  id=\"1428\">Tabs: do not create for this document type</p></li><li  id=\"1429\"><p  id=\"1430\">Generic Properties: click on Generic Properties. It‟s a most important in document Type. Click on “Add New Property”.</p></li><li  id=\"1431\"><p  id=\"1432\">It will expand fields to input data, if you want to follow me provide these information without quotes</p><ul id=\"l28\"><li  id=\"1434\"><p class=\"s8\"  id=\"1435\">Name<span class=\"p\" id=\"1436\">: “Site Name”</span></p></li><li  id=\"1437\"><p class=\"s8\"  id=\"1438\">Alias<span class=\"p\" id=\"1439\">: Leave Default, Umbraco will generate for you</span></p></li><li  id=\"1440\"><p class=\"s8\"  id=\"1441\">Type<span class=\"p\" id=\"1442\">: Textstring , select from Drop down menu</span></p></li><li  id=\"1443\"><p class=\"s8\"  id=\"1444\">Tab<span class=\"p\" id=\"1445\">: Leave Default</span></p></li><li  id=\"1446\"><p class=\"s8\"  id=\"1447\">Mandator<span class=\"p\" id=\"1448\">: checked, means, it should not be empty</span></p></li><li  id=\"1449\"><p class=\"s8\"  id=\"1450\">Validation<span class=\"p\" id=\"1451\">: for now leave empty</span></p></li><li  id=\"1452\"><p class=\"s8\"  id=\"1453\">Description<span class=\"p\" id=\"1454\">: “Your Site Name”</span></p></li><li  id=\"1455\"><h4  id=\"1456\"><a name=\"a29\" id=\"1457\">Remember to save before jump to next properties</a><span class=\"p\" id=\"1458\">.</span></h4></li><li  id=\"1459\"><p  id=\"1460\">You can see balloon “success message” at bottom right corner if anything goes wrong it will show up balloon message with error details, correct error based on error message and Save again.</p><p  id=\"1461\">See captured screen as references.</p><p  id=\"1462\"><br id=\"1463\"></p><p  id=\"1464\"><br id=\"1465\"></p><p  id=\"1466\">Document</p><p  id=\"1467\">Save</p><p  id=\"1468\">Document Type</p><p  id=\"1469\">Add New Property</p><p  id=\"1470\">Document</p><p  id=\"1471\">Save</p><p  id=\"1472\">Document Type</p><p  id=\"1473\">Add New Property</p><p class=\"s10\"  id=\"1474\"><span  id=\"1475\"> </span><span  id=\"1476\"> </span>\t\t</p><p  id=\"1477\"><br id=\"1478\"></p><p  id=\"1479\"><span id=\"1480\"><img width=\"602\" height=\"546\" alt=\"image\" src=\"Image_039.png\" id=\"1481\"></span></p><p  id=\"1482\">Delete</p><p  id=\"1483\">Delete</p><p  id=\"1484\"></p><p  id=\"1485\">Settings</p><p  id=\"1486\">Settings</p><p  id=\"1487\"></p><p  id=\"1488\">Drop Down Menu <span class=\"s37\" id=\"1489\">Expand </span><span class=\"s10\" id=\"1490\">collapse Property</span></p><p  id=\"1491\"><br id=\"1492\"></p><p  id=\"1493\">Drag and Drop</p><p  id=\"1494\">Drag and Drop</p><p  id=\"1495\"><span  id=\"1496\"> </span></p><p  id=\"1497\"><br id=\"1498\"></p><p  id=\"1499\"><br id=\"1500\"></p><h4  id=\"1501\">Drag and Drop: <span class=\"p\" id=\"1502\">To sort property order, Umbraco automatically saves sorted order. </span>Delete: <span class=\"p\" id=\"1503\">To delete Property Type, if you delete property type it will delete all content relevant to that particular Property Type</span></h4><h4  id=\"1504\">Expand collapse Icon. <span class=\"p\" id=\"1505\">It will allows to expand or Collapse property Menu</span></h4><h4  id=\"1506\">Add New Property: <span class=\"p\" id=\"1507\">To Add new property</span></h4><h4  id=\"1508\">DropDown Menu: <span class=\"p\" id=\"1509\">to select value from Types or assign property to Tabs.</span></h4><p  id=\"1510\">You must save manually after change; Umbraco does not automatically save for you.</p><h4  id=\"1511\">Alias<span class=\"p\" id=\"1512\">: alias is case sensitive and if you modify alias you may lose data if you are not sure how alias works. It‟s better not to change it in case you have to do so please make sure update in other parts of Umbraco system when you used that alias to fetch data. Alias is used to fetch data by Umbraco.</span></h4><p  id=\"1513\"><br id=\"1514\"></p><h4  id=\"1515\">Type<span class=\"p\" id=\"1516\">: there are many types out of box available, for example, Rich text editors, True/False, Textstring, Upload, all are called Data Type I will discuss later. Changing type will lost data in content editing page but will still remain on database unless you save content after type changed. It‟s better not to change so make decision before you decide what type should be used.</span></h4><p  id=\"1517\">Some tips: if you want simple text editor select simple text editor, Textstring allows only to type text, Rich text editor will allows more rich features to content editor.</p><p  id=\"1518\"><br id=\"1519\"></p><h4  id=\"1520\"><a name=\"a30\" id=\"1521\">Note:</a></h4><h4  id=\"1522\">Repeat Same Process for <i id=\"1523\">Name</i>: “Slogan”, <i id=\"1524\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1525\">Type</i>: Textstring, <i id=\"1526\">Mandatory</i>: Checked, <i id=\"1527\">Description</i>: “Slogan here”</h4><p  id=\"1528\"><br id=\"1529\"></p><h4  id=\"1530\">Repeat Same Process for <i id=\"1531\">Name</i>: “Logo”, <i id=\"1532\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1533\">Type</i>: Upload, <i id=\"1534\">Mandatory</i>: leave default, <i id=\"1535\">Description</i>: “Upload logo here”.</h4><h4  id=\"1536\"><a name=\"a31\" id=\"1537\">Notes: Type: upload allows content Creator to upload Image or files while create content, Type: Textstring allows to type text in input text field.</a></h4><p  id=\"1538\"><br id=\"1539\"></p><p  id=\"1540\">Let‟s see our final web grid how it look likes and create more Document Type for Semic website. See captured screen bellow.</p><p  id=\"1541\"><br id=\"1542\"></p><p class=\"s38\"  id=\"1543\">1</p><p class=\"s38\"  id=\"1544\">2</p><p class=\"s38\"  id=\"1545\">1</p><p class=\"s38\"  id=\"1546\">2</p><p class=\"s10\"  id=\"1547\">\t</p><p  id=\"1548\"><br id=\"1549\"></p><p class=\"s38\"  id=\"1550\">3</p><p class=\"s38\"  id=\"1551\">3</p><p  id=\"1552\"></p><p  id=\"1553\"><br id=\"1554\"></p><p  id=\"1555\"><br id=\"1556\"></p><p class=\"s38\"  id=\"1557\">4</p><p class=\"s38\"  id=\"1558\">4</p><p  id=\"1559\"></p><p  id=\"1560\"><br id=\"1561\"></p><p class=\"s38\"  id=\"1562\">5</p><p class=\"s38\"  id=\"1563\">5</p><p  id=\"1564\"></p><p  id=\"1565\"><br id=\"1566\"></p><p  id=\"1567\"><span id=\"1568\"><img width=\"616\" height=\"384\" alt=\"image\" src=\"Image_040.png\" id=\"1569\"></span></p><ol id=\"l29\"><li  id=\"1571\"><p  id=\"1572\">Logo</p></li><li  id=\"1573\"><p  id=\"1574\">Title</p></li><li  id=\"1575\"><p  id=\"1576\">Slogan</p></li><li  id=\"1577\"><p  id=\"1578\">Navigation Bar</p></li><li  id=\"1579\"><p  id=\"1580\">Body</p></li></ol><h3  id=\"heading1581\" class=\"heading1581\"><a name=\"bookmark27\" id=\"1582\" >Document Type “Tabs</a><span class=\"s3\" id=\"1583\">” </span><span id=\"1584\"><img width=\"400\" height=\"25\" alt=\"image\" src=\"Image_041.jpg\" id=\"1585\"></span></h3><div id=\"contentheading1581\" ><p  id=\"1586\">Here we just finished document type for global settings, but little document type is still remaining, take a look at navigation bar. There is title of Article like “News”, “Solution”, “Semic” and “Contact”. Now it‟s time to create Document type for these articles. I will introduce input pattern here, Input Pattern is fields or value that needs to provide when Editor creates content (Article) on Content page.</p><p  id=\"1587\">Input Pattern is “Title” and “Body”. Title is a title of article that shows up in navigation bar, Body is text or description of Title that show up when user click on particular title in navigation bar. For example if user clicks on “News” Title it will show up Description of News, in my case it will show up recent news details. Here “news”, “Solution” and “Semic” have only two Input Pattern title and Body, it means we can create many article with different title and body on same input pattern. So let‟s create one Document Type that can implement Two Input Pattern. Now let‟s create new document type “General Content” and also check matching templates and Press OK. If you want to follow me repeat same process as above to add new properties</p><p  id=\"1588\">Add following properties into “General Content”</p><p  id=\"1589\"><br id=\"1590\"></p></div></li></ul></li><li  id=\"1591\"><p class=\"s8\"  id=\"1592\">Before Adding Following Properties. Create first Two Tabs “Title” and “Description”.</p></li><li  id=\"1593\"><p class=\"s8\"  id=\"1594\">Type Tab name and Press “New tab” it will create new tab</p><p  id=\"1595\"><span id=\"1596\"><img width=\"472\" height=\"167\" alt=\"image\" src=\"Image_042.jpg\" id=\"1597\"></span></p><ul id=\"l30\"><li  id=\"1599\"><p class=\"s8\"  id=\"1600\">Name: name of Tabs you created</p></li><li  id=\"1601\"><p class=\"s8\"  id=\"1602\">Sort order: ordering number of tabs, lower sort order number will appear at top of the grater sort order number in “Generic Properties”</p></li><li  id=\"1603\"><p class=\"s8\"  id=\"1604\">Delete: To delete tabs, related property will automatically assign to Generic Properties if tabs is deleted.</p><p  id=\"1605\"><br id=\"1606\"></p></li></ul></li><li  id=\"1607\"><p  id=\"1608\">Name: “Content <i id=\"1609\">Title”</i>, Alias: Use Default, Type: <i id=\"1610\">Textstring</i>, Tab, use Default, Mandator: <i id=\"1611\">checked</i>, Description: <i id=\"1612\">Article Title</i></p></li><li  id=\"1613\"><p  id=\"1614\">Name: “Content <i id=\"1615\">Body”</i>, Alias, Use Default, Type: <i id=\"1616\">Rich Text Editor</i>, Tab, use Default, Mandator: <i id=\"1617\">checked</i>, Description: <i id=\"1618\">Body text here for Article</i></p></li><li  id=\"1619\"><p  id=\"1620\">Name: “<i id=\"1621\">Use in Navigation”</i>, Alias, Use Default, Type: <i id=\"1622\">True/False</i>, Tab, use Default, Mandatory: <i id=\"1623\">checked</i>, Description: <i id=\"1624\">Checked to show content in Navigation bar.</i></p><p  id=\"1625\">-</p><p class=\"s8\"  id=\"1626\">See captured screen as references for Document type “Tabs”</p><p  id=\"1627\"><br id=\"1628\"></p><p  id=\"1629\">Name of Property</p><p  id=\"1630\">Alias of Property</p><p  id=\"1631\">Type of Property</p><p  id=\"1632\">Name of Property</p><p  id=\"1633\">Alias of Property</p><p  id=\"1634\">Type of Property</p><p  id=\"1635\"><span  id=\"1636\"> </span><span  id=\"1637\"> </span><span  id=\"1638\"> </span></p><p  id=\"1639\"><br id=\"1640\"></p><p  id=\"1641\"><span id=\"1642\"><img width=\"534\" height=\"404\" alt=\"image\" src=\"Image_043.png\" id=\"1643\"></span></p><h3  id=\"heading1644\" class=\"heading1644\"><a name=\"bookmark28\" id=\"1645\" >Document Type Structure: </a><span id=\"1646\"><img width=\"345\" height=\"27\" alt=\"image\" src=\"Image_044.jpg\" id=\"1647\"></span></h3><div id=\"contentheading1644\" ><p  id=\"1648\">It‟s a little bit tricky, news items are added each time if there is new things happen, so we need to create two Document Types. One Document Type is for News Container and another for news article. News Container is like a container that contains news article.</p><p class=\"s39\"  id=\"1649\">Purpose: <span class=\"p\" id=\"1650\">Umbraco developer can set up hierarchy structure so it will limit or prevent from creating non relevant content to content editor. For example I want only news items inside News Container, we want to mange content or data. I don‟t want to create any content that is not news items inside News container, to achieve that goal I can set up structure to News Container Document Type so it will only allows to create child content only relevant to news article. Let‟s begin to create Two Document Type “News Container” and “News Article”</span></p><p  id=\"1651\">Instruction: process is similar to create News Container Document Type as above mentioned.</p><p  id=\"1652\">Document Type “News Container”</p></div></li><li  id=\"1653\"><p  id=\"1654\">Create, Document Type “News Container”</p></li><li  id=\"1655\"><p  id=\"1656\">Name: “<i id=\"1657\">News Items”</i>, Alias: Use Default, Type: <i id=\"1658\">Label</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1659\">it’s a news container”.</i></p></li><li  id=\"1660\"><p class=\"s8\"  id=\"1661\">Remember to Save</p><p  id=\"1662\">Document Type “News Article”</p></li><li  id=\"1663\"><p  id=\"1664\">Create Document Type “News Article”</p></li><li  id=\"1665\"><p  id=\"1666\">Name: <i id=\"1667\">News Title</i>, Alias: Use Default, Type: <i id=\"1668\">Textstring</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1669\">News Title”.</i></p></li><li  id=\"1670\"><p class=\"s8\"  id=\"1671\">Remember to Save</p></li><li  id=\"1672\"><p  id=\"1673\">Name: “<i id=\"1674\">News Body”</i>, Alias: Use Default, Type: <i id=\"1675\">simple Editor</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1676\">news details”.</i></p></li><li  id=\"1677\"><p class=\"s8\"  id=\"1678\">Remember to Save</p><p class=\"s8\"  id=\"1679\">Let’s set up structure Open “Structure” of Document Type “News Container” as checked document type you want to set up as child nodetypes. In my case “News Article” see screen bellow.</p><p  id=\"1680\"><br id=\"1681\"></p><p  id=\"1682\"><span id=\"1683\"><img width=\"413\" height=\"243\" alt=\"image\" src=\"Image_045.png\" id=\"1684\"></span></p><p  id=\"1685\"><br id=\"1686\"></p><h4  id=\"1687\"><a name=\"a32\" id=\"1688\">Creating Child Document Type</a></h4><p  id=\"1689\"><br id=\"1690\"></p><p  id=\"1691\">There are two ways of creating child Document Type.</p><p  id=\"1692\">First Ways. If you remember that we selected none “Master Document Type” when we created document type for global Setting, News Container and General Content. If you want to create child document type you can select desire master document type while you are creating Document Type first time.</p><p  id=\"1693\">Second Way: second way to create child document type is Right click on Document Type that you want to use as master Document Type and Click on “Create”. This is another way to create child document type.</p><p  id=\"1694\">Purpose: creating child document type allows Developer to reuse properties that have in master document type.</p><p  id=\"1695\"><br id=\"1696\"></p><p class=\"s8\"  id=\"1697\">Notes: Do not forget to play around all types of Child Document type, Structure, Info, Properties, Tabs, Validation and different Data Types or Type etc.</p><h3  id=\"heading1698\" class=\"heading1698\"><a name=\"bookmark29\" id=\"1699\" >Document Type API:</a></h3><div id=\"contentheading1698\" ><p  id=\"1700\">We are creating document type manually by right click on Document Type using backend of Umbraco site. It‟s also technical stuff and you need to know Umbraco stuff to set up, if you want to be a Umbraco developer in future, you should not look on top to ocean, you have to go more deep until bottom of ocean. Umbraco CMS will convert all your manual work in programming language and execute code. Let‟s look what‟s happening inside Umbraco when you manually create document type, how it‟s working and get basic Umbraco API knowledge.</p><p  id=\"1701\">Umbraco has namespace “<span class=\"s40\" id=\"1702\">umbraco.cms.businesslogic.web‛ </span>that contains los of Class. Here I will discuss DocumentType only.</p><p  id=\"1703\"><br id=\"1704\"></p></div></li><li  id=\"1705\"><p class=\"s41\"  id=\"1706\">Manual Work: “Create”</p><ul id=\"l31\"><li  id=\"1708\"><p class=\"s40\"  id=\"1709\">When you right click on Document Type and press ‚Create‛. You have to provide Document Type Name.</p></li><li  id=\"1710\"><p class=\"s40\"  id=\"1711\">At that time Umbraco execute MakeNew() methods on server that methods are responsible to create Document Type that will effect on Database. <span  id=\"1712\">DocumentType</span>.MakeNew(<span  id=\"1713\">User</span>, docTypename).Save();</p></li><li  id=\"1714\"><p class=\"s40\"  id=\"1715\">User will be automatically assigned by Umbraco based on your backend login information, Note that not all uses have access to create document type. docTypename is Name of Document Type you provided first time. Save() is void methods, it will save Document Type to database. Saving to database means to make data available next time to use.</p><p  id=\"1716\"><br id=\"1717\"></p></li></ul></li><li  id=\"1718\"><p class=\"s41\"  id=\"1719\">Manual Work: “Add New Property”</p><ul id=\"l32\"><li  id=\"1721\"><p class=\"s40\"  id=\"1722\">Add new property will execute AddPropertyType(<span  id=\"1723\">DataTypeDefinition</span>, name, description) methods. Three parameters DataTypeDefinition, name and description and there is also more overloads on that methods.</p></li><li  id=\"1724\"><p class=\"s40\"  id=\"1725\">DataTypeDefinition – Data Type you selected, Umbraco only use Id of Data Type. When you select data type, Umbraco automatically take id of data type.</p><p  id=\"1726\"><br id=\"1727\"></p></li></ul></li><li  id=\"1728\"><p class=\"s41\"  id=\"1729\">Manual Work: “New Tab”</p><ul id=\"l33\"><li  id=\"1731\"><p class=\"s40\"  id=\"1732\">Umbraco execute AddVirtualTab(tabName) to add new tab, tabName is name of tab you provided.</p></li><li  id=\"1733\"><p class=\"s42\"  id=\"1734\">DocumentType</p></li><li  id=\"1735\"><p class=\"s40\"  id=\"1736\">dt.AddVirtualTab(tabName);</p><p  id=\"1737\"><br id=\"1738\"></p></li></ul></li><li  id=\"1739\"><p class=\"s43\"  id=\"1740\"><a name=\"a33\" id=\"1741\">Setting Tabs on Generic Properties.</a></p><ul id=\"l34\"><li  id=\"1743\"><p class=\"s40\"  id=\"1744\">When you select tab to organize you preoperty Umbraco will assign tabs on that Property.</p></li><li  id=\"1745\"><p class=\"s42\"  id=\"1746\">DocumentType <span  id=\"1747\">dt;</span></p></li><li  id=\"1748\"><p class=\"s40\"  id=\"1749\">dt.SetTabOnPropertyType(PropertyType, <span  id=\"1750\">Tab </span>Id);</p></li><li  id=\"1751\"><p class=\"s40\"  id=\"1752\">here property Type is type of new property and Tab Id is node id of Tabs you created, all Names are for visual representation of data and id or aliad is for machine or Umbraco system to represent object.</p><p  id=\"1753\">-</p></li></ul></li><li  id=\"1754\"><p class=\"s43\"  id=\"1755\"><a name=\"a34\" id=\"1756\">Manual Work “Delete”</a></p><ul id=\"l35\"><li  id=\"1758\"><p class=\"s40\"  id=\"1759\">If you would like to delete Document Type you will right click on document type and press ‚Delete‛.</p></li><li  id=\"1760\"><p class=\"s40\"  id=\"1761\">Umbraco will execute Delete() methods to delete document type.</p></li><li  id=\"1762\"><p class=\"s40\"  id=\"1763\">Here is an example</p></li><li  id=\"1764\"><p class=\"s42\"  id=\"1765\">DocumentType<span  id=\"1766\">.GetByAlias(docAlias).delete();</span></p></li><li  id=\"1767\"><p class=\"s40\"  id=\"1768\">First call GetByAlias() method to select document type by alias, also you can select document type by Id.</p></li><li  id=\"1769\"><p class=\"s40\"  id=\"1770\">Second Call Delete() method to delete Document,</p></li><li  id=\"1771\"><p class=\"s40\"  id=\"1772\">This time you don’t need to save. Because Delete will delete selected document type from Database as well.</p></li></ul></li><li  id=\"1773\"><p class=\"s40\"  id=\"1774\">Whatever you made change on Umbraco, you have to press Save icon <span id=\"1775\"><img width=\"27\" height=\"26\" alt=\"image\" src=\"Image_046.jpg\" id=\"1776\"></span><span class=\"s28\" id=\"1777\">    </span>to save your work. That will execute Void methods Save().</p><p  id=\"1778\"><br id=\"1779\"></p><p class=\"s40\"  id=\"1780\">More Document Type API:</p><p  id=\"1781\"><br id=\"1782\"></p><p class=\"s40\"  id=\"1783\">Here is more API listed, for full list of API, you need to download source code or decompile DLL files that provided by Umbraco binary.</p><p  id=\"1784\"><br id=\"1785\"></p></li><li  id=\"1786\"><p class=\"s40\"  id=\"1787\">getVirtualTabs</p><ul id=\"l36\"><li  id=\"1789\"><p class=\"s40\"  id=\"1790\">returns list of available tabs on document type</p></li></ul></li><li  id=\"1791\"><p class=\"s40\"  id=\"1792\">HasTemplate()</p><ul id=\"l37\"><li  id=\"1794\"><p class=\"s40\"  id=\"1795\">Return bool value ,true if document type has template</p></li></ul></li><li  id=\"1796\"><p class=\"s40\"  id=\"1797\">allowedTemplates</p><ul id=\"l38\"><li  id=\"1799\"><p class=\"s40\"  id=\"1800\">return List of Allowed templates.</p></li></ul></li><li  id=\"1801\"><p class=\"s40\"  id=\"1802\">PropertyTypes</p><ul id=\"l39\"><li  id=\"1804\"><p class=\"s40\"  id=\"1805\">Return list of Property types.</p></li></ul></li><li  id=\"1806\"><p class=\"s40\"  id=\"1807\">HasChildren</p><ul id=\"l40\"><li  id=\"1809\"><p class=\"s40\"  id=\"1810\">Return Bool Value, True if Document type has children document type.</p></li></ul></li></ul><p  id=\"1811\">These are few mostly used API. To change value using API you can use visual studio. If field has “Set” methods you can change value using API.</p><p  id=\"1812\">Example:</p><p  id=\"1813\"><br id=\"1814\"></p><p class=\"s40\"  id=\"1815\"><span  id=\"1816\">DocumentType</span>.GetByAlias(<span  id=\"1817\">\"NewsContainer\"</span>).Alias = <span  id=\"1818\">\"newNewsContainer\"</span>; It will change alias of News Container to ‘newNewsContainer’.</p><p  id=\"1819\"><br id=\"1820\"></p><h1  id=\"1821\"><a name=\"a35\" id=\"1822\">Chapter 04: Content</a></h1><p  id=\"1823\"><br id=\"1824\"></p><p  id=\"1825\"><br id=\"1826\"></p><p  id=\"1827\"><span id=\"1828\"><img width=\"385\" height=\"1\" alt=\"image\" src=\"Image_047.png\" id=\"1829\"></span></p><p  id=\"1830\"><br id=\"1831\"></p></div><h2  id=\"heading1832\" class=\"heading1832\"><a name=\"bookmark30\" id=\"1833\" >Content:</a></h2><div id=\"contentheading1832\" ><p  id=\"1834\">Content is one of the Section menu item in umbraco. Backend user will have access to content area. It contains articles or data that created by Editor based on document type. Lets Familiar with Envornment of Content if you Right Click over Content you can see different options. See captured screen bellow</p><h4  id=\"1835\">Create<span class=\"p\" id=\"1836\">: To create new content</span></h4><p  id=\"1837\"><br id=\"1838\"></p><p  id=\"1839\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4  id=\"1840\">Republish Entire Sites: <span class=\"p\" id=\"1841\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4  id=\"1842\">Reload nodes: <span class=\"p\" id=\"1843\">To clear cache on server side, client sites and recreate new cache.</span></h4><h4  id=\"1844\">Create<span class=\"p\" id=\"1845\">: To create new content</span></h4><p  id=\"1846\"><br id=\"1847\"></p><p  id=\"1848\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4  id=\"1849\">Republish Entire Sites: <span class=\"p\" id=\"1850\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4  id=\"1851\">Reload nodes: <span class=\"p\" id=\"1852\">To clear cache on server side, client sites and recreate new cache.</span></h4><p class=\"s10\"  id=\"1853\"><span id=\"1854\"><img width=\"254\" height=\"407\" alt=\"image\" src=\"Image_048.jpg\" id=\"1855\"></span>\t</p><p  id=\"1856\"><br id=\"1857\"></p><h3  id=\"heading1858\" class=\"heading1858\"><a name=\"bookmark31\" id=\"1859\" >Creating Content:</a></h3><div id=\"contentheading1858\" ><p  id=\"1860\">It‟s a very simple process, if you click on Create it will show up new windows promoting you to type name of content and selecting option of Document Type in drop down list. After clicked on “Create” will create content.</p><p  id=\"1861\"><span id=\"1862\"><img width=\"179\" height=\"196\" alt=\"image\" src=\"Image_049.jpg\" id=\"1863\"></span></p><p  id=\"1864\">Name: name of content and it‟s not the title of article that will show up in end users. It‟s a name of content and only used in Content section, it will not show up to end users.</p><p  id=\"1865\">It‟s time to create Content for Vcard “SemicProvider” sites. First let‟s start with creating content for global settings<span class=\"s19\" id=\"1866\">. I will show you only for global settings, for rest of content you can repeat similar process.</span></p><p class=\"s8\"  id=\"1867\">Instruction: Right click on Content and Click on “Create” provide following information</p><p class=\"s8\"  id=\"1868\">Name: “Setting sites”</p><p class=\"s8\"  id=\"1869\">Document Type: select “Web Site Global Settings” from drop down list.</p><p class=\"s8\"  id=\"1870\">Press “Create”</p><p  id=\"1871\"><br id=\"1872\"></p><p  id=\"1873\">It will ask more information based on document type. Provide following info and press “Save” button. See highlighted color text. See captured screen “Image content”</p><p class=\"s19\"  id=\"1874\">Image: Content</p><p  id=\"1875\"><br id=\"1876\"></p><p  id=\"1877\"><span id=\"1878\"><img width=\"547\" height=\"552\" alt=\"image\" src=\"Image_050.png\" id=\"1879\"></span></p><p class=\"s45\"  id=\"1880\">Save Content <span class=\"p\" id=\"1881\">Save and Publish</span></p><p  id=\"1882\"><br id=\"1883\"></p><p  id=\"1884\">Preview</p><p  id=\"1885\"><br id=\"1886\"></p><p  id=\"1887\">Content Name</p><p  id=\"1888\">Content Name</p><p  id=\"1889\"><span  id=\"1890\"> </span></p><p  id=\"1891\"><br id=\"1892\"></p><p  id=\"1893\"><br id=\"1894\"></p><p  id=\"1895\">Node Id of Content</p><p  id=\"1896\">Node Id of Content</p><p  id=\"1897\"><span  id=\"1898\"> </span></p><p  id=\"1899\"><br id=\"1900\"></p><p  id=\"1901\">Present Content to End</p><p  id=\"1902\">Present Content to End</p><p  id=\"1903\"><span  id=\"1904\"> </span></p><p  id=\"1905\"><br id=\"1906\"></p><p  id=\"1907\"><span class=\"s46\"  id=\"1908\">Image content</span></p><p  id=\"1909\"><span class=\"s46\"  id=\"1910\">Image content</span></p><p  id=\"1911\"><span  id=\"1912\"> </span></p><p  id=\"1913\"><br id=\"1914\"></p><p  id=\"1915\">Did you remember Site Name, Slogan and Logo were created at Document Type “Web site global settings”? We added type properties Textstring for Site name and Slogan and type:Upload for Logo. Here in Content page we can type site name and slogan because we selected type:Textstring and we can upload image in logo because we selected type:Upload in Document Type “Web Site Global Settings”. Now I hope you understand concept of Document Type and relation between Content and Document Type:</p><p  id=\"1916\"><br id=\"1917\"></p><p class=\"s8\"  id=\"1918\">Notes: Create content for “Developer”, “Solution” and “Semic” using document type “General Content”. It’s a same process as we created just now. After that you will be more familiar with Creating Content in Umbraco sites and relation of Document Type and content. Let’s See next image relations between content and Document Type.</p><p  id=\"1919\"><span id=\"1920\"><img width=\"573\" height=\"427\" alt=\"image\" src=\"Image_051.png\" id=\"1921\"></span></p><p  id=\"1922\"><span class=\"s46\"  id=\"1923\">Content</span></p><p  id=\"1924\"><span class=\"s46\"  id=\"1925\">Content</span></p><p  id=\"1926\"></p></div><h3  id=\"heading1927\" class=\"heading1927\"><a name=\"bookmark32\" id=\"1928\" >Relations between Document Type and Content</a></h3><div id=\"contentheading1927\" ><p  id=\"1929\"><br id=\"1930\"></p><p  id=\"1931\"><span class=\"s46\"  id=\"1932\">Document Type</span></p><p  id=\"1933\"><span class=\"s46\"  id=\"1934\">Document Type</span></p><p  id=\"1935\"><span  id=\"1936\"> </span></p><p  id=\"1937\"><br id=\"1938\"></p><p class=\"s10\"  id=\"1939\"><span  id=\"1940\">Red Long-dash arrow</span>: Name of Properties <span  id=\"1941\">Green arrow</span>: Type of Properties</p><p  id=\"1942\"><br id=\"1943\"></p><p  id=\"1944\">To understand relation between Document Type and Content may be difficult for first time but when you practice more it will be easy to understand. See two images above and follow red and green arrow telling relation between Document Type and Content.</p><p class=\"s4\"  id=\"1945\">Delete Document Type<span class=\"s8\" id=\"1946\">: </span><span class=\"p\" id=\"1947\">if you delete Document Type all associated content will be also deleted from websites, it‟s not possible to undo or restore Document Type in case delete.</span></p><p class=\"s4\"  id=\"1948\">Update Document Type Properties: <span class=\"p\" id=\"1949\">you can change document type property for example you can change property type from type Simple Editor to type Rich Text Editor, data will not be lost because both are related type, both editor allows editor to edit text as simple or rich text environment. When you change type from type Textstring to type Label or type Upload, in that case all content modified after document type property has changed will lost previous data because type are not similar. So changing property type may cost data lost.</span></p><h4  id=\"1950\">Delete Content: <span class=\"p\" id=\"1951\">you can delete content. Deleted items will moved to Recycle Bin so if you accidently delete any content no need to feel panic you can easily restore from Recycle bin directory.</span></h4></div><h3  id=\"heading1952\" class=\"heading1952\"><a name=\"bookmark33\" id=\"1953\" >Explore content Properties:</a></h3><div id=\"contentheading1952\" ><p  id=\"1954\">There is more option for content that we created on Content section based on document type. Let‟s right click on “Setting site” content and explore more options. See captured screen.</p><h4  id=\"1955\">Create<span class=\"p\" id=\"1956\">: Create new child article example News Container.</span></h4><h4  id=\"1957\">Edit in Canvas: <span class=\"p\" id=\"1958\">will allows editor to edit content in Frontend using browser.</span></h4><h4  id=\"1959\">Delete<span class=\"p\" id=\"1960\">: Move content to Recycle Bin</span></h4><h4  id=\"1961\">Move<span class=\"p\" id=\"1962\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1963\">: Copy content, Copy will not delete content</span></h4><p  id=\"1964\">from old location</p><h4  id=\"1965\">Sort<span class=\"p\" id=\"1966\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4  id=\"1967\">Rollback<span class=\"p\" id=\"1968\">: allows to rollback content based on previous changed,</span></h4><h4  id=\"1969\">Manage Hostnames: <span class=\"p\" id=\"1970\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4  id=\"1971\">Permission: <span class=\"p\" id=\"1972\">set up permission</span></h4><h4  id=\"1973\">Publich Access: <span class=\"p\" id=\"1974\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4  id=\"1975\">Audit Trill<span class=\"p\" id=\"1976\">: list of history of content</span></h4><h4  id=\"1977\">Notifications<span class=\"p\" id=\"1978\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4  id=\"1979\">Send to Translation: <span class=\"p\" id=\"1980\">used for multiple languages</span></h4><h4  id=\"1981\">Create<span class=\"p\" id=\"1982\">: Create new child article example News Container.</span></h4><h4  id=\"1983\">Edit in Canvas: <span class=\"p\" id=\"1984\">will allows editor to edit content in Frontend using browser.</span></h4><h4  id=\"1985\">Delete<span class=\"p\" id=\"1986\">: Move content to Recycle Bin</span></h4><h4  id=\"1987\">Move<span class=\"p\" id=\"1988\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1989\">: Copy content, Copy will not delete content</span></h4><p  id=\"1990\">from old location</p><h4  id=\"1991\">Sort<span class=\"p\" id=\"1992\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4  id=\"1993\">Rollback<span class=\"p\" id=\"1994\">: allows to rollback content based on previous changed,</span></h4><h4  id=\"1995\">Manage Hostnames: <span class=\"p\" id=\"1996\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4  id=\"1997\">Permission: <span class=\"p\" id=\"1998\">set up permission</span></h4><h4  id=\"1999\">Publich Access: <span class=\"p\" id=\"2000\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4  id=\"2001\">Audit Trill<span class=\"p\" id=\"2002\">: list of history of content</span></h4><h4  id=\"2003\">Notifications<span class=\"p\" id=\"2004\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4  id=\"2005\">Send to Translation: <span class=\"p\" id=\"2006\">used for multiple languages</span></h4><p class=\"s10\"  id=\"2007\"><span id=\"2008\"><img width=\"180\" height=\"528\" alt=\"image\" src=\"Image_052.jpg\" id=\"2009\"></span>\t</p><p  id=\"2010\"><br id=\"2011\"></p><p  id=\"2012\">Notes:</p><p  id=\"2013\">I am not going to create content for other document types because creating</p><p  id=\"2014\">content is same for all document type just you need to select different document type when you create content. You can easily follow my process to create content for other document type.</p><p  id=\"2015\">Creating News Container and News Article are a bit different. First Create Article on “News Container” after that right click on just created content (“News Container” Document type content), then create news article. You can see Document Type “News Article” is only option to choose if you followed me. That is Allowed child nodetypes that we set up in Document Type “Structure” property of “News Container” Document Type.</p><p  id=\"2016\">I have created more content for Semic Provider site. You can see captured screen and compare with your version.</p><p class=\"s8\"  id=\"2017\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\"  id=\"2018\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\"  id=\"2019\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2020\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s8\"  id=\"2021\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\"  id=\"2022\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\"  id=\"2023\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2024\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s10\"  id=\"2025\"><span id=\"2026\"><img width=\"298\" height=\"400\" alt=\"image\" src=\"Image_053.jpg\" id=\"2027\"></span>\t</p><p  id=\"2028\"><br id=\"2029\"></p><p  id=\"2030\">We are just working in backend part of Semic Provider site. If you preview article you see empty page. No content its because we have not touch any Templates yet, templates are responsible to output content or to present data to end users. I will discuss later or about templates. When you preview your content Umbraco will insert red strip with white color text “Preview Mode-click to end” on top right cornner of browser. Umbraco provides notification to you about your are viewing on Preview Mode. To exit click browser will close automatically.</p><p  id=\"2031\"><span id=\"2032\"><img width=\"424\" height=\"230\" alt=\"image\" src=\"Image_054.jpg\" id=\"2033\"></span></p><p  id=\"2034\">For now you can‟t preview you data because associated templates are empty.</p><p  id=\"2035\"><br id=\"2036\"></p><p class=\"s49\"  id=\"2037\"><a name=\"bookmark34\" id=\"2038\">Content API:</a></p><p  id=\"2039\"><br id=\"2040\"></p><p class=\"s50\"  id=\"2041\">In Umbraco code Content is understood by Document so that creating content in Umbraco Backend means executing Document code in Umbraco Core code inside server. Core code is programming language written in C# language. Content API is very important, if you want to create content using API, for example if you move sites from another websites to Umbraco CMS site, probably you want to get all data or content from old site as archive. If there is 1000 of articles in old site, it‟s not good idea to import content manually. You have to think some sort of automatic process to import content. Here is basic API for Umbraco Content.</p><p class=\"s52\"  id=\"2042\"><span  id=\"2043\">namespace </span>umbraco.cms.businesslogic.web contains Document Class. Creating Content means Executing <span  id=\"2044\">Document</span>.MakeNew() methods of Document Class.</p><p class=\"s52\"  id=\"2045\">MakeNew() takes four parameters</p><ul id=\"l41\"><li  id=\"2047\"><p class=\"s52\"  id=\"2048\">1<span class=\"s54\" id=\"2049\">st </span>parameter String Title: its title of Content, that title shown in Content Tree.</p></li><li  id=\"2050\"><p class=\"s52\"  id=\"2051\">2<span class=\"s54\" id=\"2052\">nd </span>Parameter DocumentType: Document Type, when you select document</p><p class=\"s52\"  id=\"2053\">type Umbraco will automatically use that document type.</p></li><li  id=\"2054\"><p class=\"s52\"  id=\"2055\">3<span class=\"s54\" id=\"2056\">rd</span><span class=\"s55\" id=\"2057\"> </span>parameter User: Umbraco does not allow to crate content without valid and has access user. When you logged in Umbraco automatically take your login user and use to create document.</p></li><li  id=\"2058\"><p class=\"s52\"  id=\"2059\">4<span class=\"s54\" id=\"2060\">th </span>parameter parent id: it’s a hierarchy of content. If you want to</p><p class=\"s52\"  id=\"2061\">create content at root level you must provide parent id -1. In Semic Provider content ‘News Article’ is child of ‘news container’ in that case all news article’s content’s parent id is Node id of ‚news Container‛. Its means if you provide -1 as parent id, Content will be created at root level. If you provide node id of content, it will create content as child of provided node id content.</p></li><li  id=\"2062\"><p class=\"s52\"  id=\"2063\">Example:</p><ul id=\"l42\"><li  id=\"2065\"><p class=\"s52\"  id=\"2066\">Document dt = Document.MakeNew(‚Developer‛,GeneralContent, User(0), -1);</p></li><li  id=\"2067\"><p class=\"s52\"  id=\"2068\">dt.Publish();</p><ul id=\"l43\"><li  id=\"2070\"><p class=\"s52\"  id=\"2071\">Description: Create document name ‚Developer‛ on Document Type ‚GeneralContent‛. Use user 0. 0 is admin user id and always exist on Umbraco system. -1 will create Document at Root level.</p></li><li  id=\"2072\"><p class=\"s52\"  id=\"2073\">Publish() method should be invoke to publish content or when you press Publish icon Umbraco execute publish() method</p><p  id=\"2074\"><br id=\"2075\"></p></li></ul></li></ul></li><li  id=\"2076\"><p class=\"s50\"  id=\"2077\">Delete(): Delete method executed when you delete content.</p></li></ul><ul id=\"l44\"><li  id=\"2079\"><p class=\"s53\"  id=\"2080\"><span class=\"s50\" id=\"2081\">Example: </span>Document <span  id=\"2082\">dt = </span><span  id=\"2083\">new </span>Document<span  id=\"2084\">(id);</span></p></li></ul><p class=\"s52\"  id=\"2085\">dt.delete(); id is node id of content.</p><p class=\"s52\"  id=\"2086\">Delete() method will move content to Recycle Bin.</p><p  id=\"2087\"><br id=\"2088\"></p><p class=\"s50\"  id=\"2089\">That is very basic of Umbraco API for Creating Content. For more details you can look inside umbraco.cms.businesslogic.web.document namespace. I strongly recommend looking source code and analyzing codes.</p><p  id=\"2090\"><br id=\"2091\"></p><h1  id=\"2092\"><a name=\"a36\" id=\"2093\">Chapter 05: Templates</a></h1><p  id=\"2094\"><br id=\"2095\"></p><p  id=\"2096\"><br id=\"2097\"></p><p  id=\"2098\"><span id=\"2099\"><img width=\"432\" height=\"1\" alt=\"image\" src=\"Image_055.png\" id=\"2100\"></span></p></div></div><h2  id=\"heading2101\" class=\"heading2101\"><a name=\"bookmark35\" id=\"2102\" >Templates:</a></h2><div id=\"contentheading2101\" ><p  id=\"2103\">Purpose of templates is to present data to client or end users. Umbraco cms make totally separate visual presentation and content, to proof that concept you can preview any content we created before, we don‟t see any content on web it‟s just blank web page because we have not touch template means content is totally separated from visual presentation. Using templates we can present data or content to end users.</p><p  id=\"2104\"><br id=\"2105\"></p><h4  id=\"2106\">Templates are user friendly: <span class=\"p\" id=\"2107\">The way you write code in template is same way as you write html code. You start with doc type deceleration, html, head, and body. No difference I will show you later. Only difference is to fetch data and insert into templates, fetching data can be done in different ways using alias, alias is created by Umbraco in Document Type creation period, use user control to fetch data, use xslt and xpath to fetch data using marco or use Razor Engine. I will focus in XSLT to fetch data from xml, use macro to render data to templates and present to end users.</span></h4><p  id=\"2108\">CSS: the way we use css is not difference other than using in normal html page. It‟s very simple and you can copy your normal css text from text editor and paste to Umbraco CSS editing environment page. It will work as expected without any problem. Two ways are there to use CSS. One way is create css using Umbraco service or Create CSS file separate into normal text editor and place into “css” directory. You can also create your custom directory and use that, directory is not important; important is linking style sheet to templates. Linking style sheet is same as you use in normal html page.</p><p  id=\"2109\"><span id=\"2110\"><img width=\"584\" height=\"298\" alt=\"image\" src=\"Image_056.png\" id=\"2111\"></span></p><p  id=\"2112\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\"/&gt; that is use to link document is style.css file exist inside css directory.No worries Umbraco will also show you path you can copy path to href easily. Lets look captured screen.</p><p  id=\"2113\"><br id=\"2114\"></p><p class=\"s10\"  id=\"2115\">Name: name of style sheet.</p><p class=\"s35\"  id=\"2116\">Start writing your CSS code here</p><p class=\"s9\"  id=\"2117\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"<span  id=\"2118\">css/style.css</span>\"/&gt;</p><p  id=\"2119\"><br id=\"2120\"></p><p class=\"s10\"  id=\"2121\">Note: I will not cover CSS explanation in howtoumbraco basic. Style.css will be available in CD.</p><h3  id=\"heading2122\" class=\"heading2122\"><a name=\"bookmark36\" id=\"2123\" >Template working Environment</a></h3><div id=\"contentheading2122\" ><p  id=\"2124\"><br id=\"2125\"></p><p  id=\"2126\"><span id=\"2127\"><img width=\"602\" height=\"326\" alt=\"image\" src=\"Image_057.png\" id=\"2128\"></span></p><p class=\"s38\"  id=\"2129\">1 2 3 4 5 6 7 8 9</p><p  id=\"2130\"><br id=\"2131\"></p><ol id=\"l45\"><li  id=\"2133\"><p  id=\"2134\">Save button, whatever you made change on template, you need to press Save button to save your work.</p></li><li  id=\"2135\"><p  id=\"2136\">Insert Umbraco page field: use to insert page field. Using page field document type alias is used here to insert data into template. Umbraco will fetch and insert content on the fly. Alias that we had in document type are necessary in order to fetch content. By click on icon will list all page alias available to insert.</p><p  id=\"2137\"><span id=\"2138\"><img width=\"331\" height=\"271\" alt=\"image\" src=\"Image_058.jpg\" id=\"2139\"></span></p><p  id=\"2140\">I am going to show one example: instruction: click on empty area at line 3 and Click on “Insert Umbraco Page field” number 2 icon. You can see new windows open with input options.</p><ul id=\"l46\"><li  id=\"2142\"><p  id=\"2143\">Choose field: here you can get list of alias that you created at document type. If you want to follow me select “contentBody” from</p><p  id=\"2144\">dropdown list and press insert. It will insert filed. See captured screen bellow</p><p class=\"s29\"  id=\"2145\">o  <span id=\"2146\"><img width=\"482\" height=\"73\" alt=\"image\" src=\"Image_059.jpg\" id=\"2147\"></span></p></li><li  id=\"2148\"><p  id=\"2149\"><span class=\"s56\" id=\"2150\">&lt;</span><span  id=\"2151\">umbraco:Item </span>field<span class=\"s56\" id=\"2152\">=</span>\"<span  id=\"2153\">contentBody</span>\" runat<span class=\"s56\" id=\"2154\">=</span>\"<span  id=\"2155\">server</span>\"<span class=\"s56\" id=\"2156\">&gt;&lt;/</span><span  id=\"2157\">umbraco:Item</span><span class=\"s56\" id=\"2158\">&gt;</span></p><p  id=\"2159\"><span id=\"2160\"><img width=\"597\" height=\"217\" alt=\"image\" src=\"Image_060.png\" id=\"2161\"></span></p></li><li  id=\"2162\"><p class=\"s58\"  id=\"2163\">&lt;Umbraco:Item runat=”server”&gt; &lt;/Umbraco:item&gt; will executed by Umbraco cms. In my case filed=”contentBody”, here Content that provided in Document type “General Content‟s property „Content Body‟ ” by editor on Content page will be inserted on the fly. So user will see content body data on web page. for more clear see diagram.</p></li></ul><h4  id=\"2164\">Document Type: <span class=\"p\" id=\"2165\">General Content</span></h4><h4  id=\"2166\">Tab: <span class=\"p\" id=\"2167\">Description </span>Property Name: <span class=\"p\" id=\"2168\">Content Body</span></h4><h4  id=\"2169\"><a name=\"a37\" id=\"2170\">Property Alias:</a></h4><p  id=\"2171\">contentBody</p><h4  id=\"2172\">Type: <span class=\"p\" id=\"2173\">Richtext editor</span></h4><p  id=\"2174\"><br id=\"2175\"></p><p  id=\"2176\"><span id=\"2177\"><img width=\"562\" height=\"111\" alt=\"image\" src=\"Image_061.png\" id=\"2178\"></span></p><h4  id=\"2179\">Content: <span class=\"p\" id=\"2180\">Home </span>Description: <span class=\"p\" id=\"2181\">welcome to semic provider.</span></h4><p  id=\"2182\"><br id=\"2183\"></p><p  id=\"2184\"><span id=\"2185\"><img width=\"475\" height=\"153\" alt=\"image\" src=\"Image_062.png\" id=\"2186\"></span></p><h4  id=\"2187\">Field: <span class=\"p\" id=\"2188\">contentBody</span></h4><p  id=\"2189\"><br id=\"2190\"></p><p  id=\"2191\"><span id=\"2192\"><img width=\"561\" height=\"158\" alt=\"image\" src=\"Image_063.png\" id=\"2193\"></span></p><h4  id=\"2194\">Preview of Content Home: <span class=\"p\" id=\"2195\">Now Umbraco fetching content to Web sites.</span></h4><p  id=\"2196\">1084.aspx where 1084 is node id of content Home.</p><p  id=\"2197\"><br id=\"2198\"></p><p class=\"s4\"  id=\"2199\">We created document type “General Content”, added new property “Content Body” with alias “contentBody” and type “Richtext editor”. In Content we add content on Richtext environment. In Template we use alias “contentBody” to fetch data that added on content using Richtext environment. It’s a core concept of Umbraco for templates.</p><p  id=\"2200\"><br id=\"2201\"></p></li><li  id=\"2202\"><p  id=\"2203\">Insert Dictionary Field: Similar as Umbrcao page filed but it is used to insert Dictionary Items. Not covered in this “Howtoumbraco” basic.</p><p  id=\"2204\"><br id=\"2205\"></p></li><li  id=\"2206\"><p  id=\"2207\">Insert Macro: it‟s a mostly used in templates and I will cover this Macro Chapter. Macro is very important chapter. Developer should not miss about Macro.</p><p  id=\"2208\"><br id=\"2209\"></p></li><li  id=\"2210\"><p  id=\"2211\">Insert Content Area Placeholder: We can easily create child templates in Umbraco, child has access to parents generic properties. Umbraco templates have great features “Inheritance Character” that child template can inject data to Parent template using “Insert Content Area Placeholder”, first you create Placeholder in parent template and in child template you insert content area. If you want follow me I want to use “Web Sites Global Settings” templates as Master templates or parent templates. Parent templates can have placeholder to inject data from child templates. Now let‟s insert Content area Placeholder at “Web Sites Global Settings” templates.</p><ul id=\"l47\"><li  id=\"2213\"><p  id=\"2214\">Instruction:</p></li><li  id=\"2215\"><p  id=\"2216\">Open “Web Site Global Setting” Template</p></li><li  id=\"2217\"><p  id=\"2218\">First Click on any place at working environment where you would like to insert content Place holder. Crusher should blink now, Click on “Insert Content area Placeholder” it will open new windows now type placeholder name “ContentBody” and Press Insert. See captured screen highlighted code are just added.</p><p class=\"s29\"  id=\"2219\">o <span id=\"2220\"><img width=\"416\" height=\"162\" alt=\"image\" src=\"Image_064.jpg\" id=\"2221\"></span><span class=\"s28\" id=\"2222\"> </span><span class=\"p\" id=\"2223\"> Inheritance Properties: </span><span class=\"s10\" id=\"2224\">Umbraco template support inheritance properties so we can easily share global setting in sites for example. Navigation bar, heading, logo and web layout are global setting that will remain same look and feel for different content. “Web Sites Global Settings” template contains such global settings. Now I want to inject content from child templates on that place holder “ContentBody” I just created above. To inject data from child template first I have to assign child template. Click on General Content Template, in Master template change from “none” to “Web Site Global Settings” and Save “General Content” template. You can see General Content Templates now moved from root level to child template of “Web site Global Settings” Template. See captured screen</span></p><p  id=\"2225\"><br id=\"2226\"></p><p  id=\"2227\"><span id=\"2228\"><img width=\"496\" height=\"147\" alt=\"image\" src=\"Image_065.jpg\" id=\"2229\"></span></p><p  id=\"2230\">-</p></li></ul></li><li  id=\"2231\"><p  id=\"2232\">Insert content Area: if parents‟ templates have content area placeholder, using insert content area we can insert content area placeholder at child templates. In my case general content is child of “Web Site Global Setting” template. Lets Insert Content area by clicking of “Insert Content Area” icon, select “ContentBody” placeholder and press insert. If you like to cancel, just press cancel. Umbraco content placeholder “ContentBody” inserted after Content place holder “ContentPlaceHolderDefault”. This content place holder is created default by Umbraco. Delete “ContentPlaceHolderDefault” from Template “General content” and Move Umbraco field “contentBody” inside content Placeholder “ContentBody”. Remember to save. If you follow me “General Content” Template code should be like bellow.</p><p  id=\"2233\"><br id=\"2234\"></p><p  id=\"2235\"><span class=\"s59\"  id=\"2236\">&lt;%</span><span class=\"s60\" id=\"2237\">@ </span><span class=\"s61\" id=\"2238\">Master </span><span class=\"s62\" id=\"2239\">Language</span><span class=\"s60\" id=\"2240\">=\"C#\" </span><span class=\"s62\" id=\"2241\">MasterPageFile</span><span class=\"s60\" id=\"2242\">=\"~/masterpages/WebSiteGlobalSettings.master\" </span><span class=\"s62\" id=\"2243\">AutoEventWireup</span><span class=\"s60\" id=\"2244\">=\"true\" </span><span class=\"s59\"  id=\"2245\">%&gt;</span></p><p class=\"s60\"  id=\"2246\">&lt;<span  id=\"2247\">asp</span>:<span  id=\"2248\">Content </span><span  id=\"2249\">ID</span>=\"Content2\" <span  id=\"2250\">ContentPlaceHolderId</span>=\"ContentBody\" <span  id=\"2251\">runat</span>=\"server\"&gt;</p><p class=\"s63\"  id=\"2252\">&lt;!-- Insert \"ContentBody\" markup here --&gt;</p><p class=\"s60\"  id=\"2253\">&lt;<span  id=\"2254\">umbraco</span>:<span  id=\"2255\">Item </span><span  id=\"2256\">ID</span>=\"Item1\" <span  id=\"2257\">field</span>=\"contentBody\" <span  id=\"2258\">runat</span>=\"server\"&gt;&lt;/<span  id=\"2259\">umbraco</span>:<span  id=\"2260\">Item</span>&gt;</p><p class=\"s60\"  id=\"2261\">&lt;/<span  id=\"2262\">asp</span>:<span  id=\"2263\">Content</span>&gt;</p><p  id=\"2264\">- Remember to preview your content after changed in your template<span  id=\"2265\">.</span></p><p  id=\"2266\"><br id=\"2267\"></p></li><li  id=\"2268\"><p  id=\"2269\">Insert Inline Razor Macro: Razor engine is used if you don‟t want to use Xslt to fetch data from xml file. Not covered in this “HowtoUmbraco Basic”.</p><p  id=\"2270\"><br id=\"2271\"></p></li><li  id=\"2272\"><p  id=\"2273\">Help: it will open documentation. Remember to read it if you need help.</p><p  id=\"2274\"><br id=\"2275\"></p></li><li  id=\"2276\"><p  id=\"2277\">Working „Environment or area: Here you add all your template coding.</p></li></ol><p  id=\"2278\">Template &lt;%@ Master Language= \"C#\" MasterPageFile= \"</p><p  id=\"2279\">~/umbraco/masterpages/default.master\" AutoEventWireup=\"true\" %&gt;</p><p  id=\"2280\"><br id=\"2281\"></p><p  id=\"2282\">Description: all templates are inherited by default.master template, it‟s a Umbraco default master template.</p><p  id=\"2283\"><br id=\"2284\"></p><p  id=\"2285\">Content Placeholder: all your html code should go inside Content place holder. If you want to follow me copy and paste code bellow in “Web Site Global Settings” Templates. Note: I am not going to explain code because here nothing new just added html tags. You can look yourself.</p></div><h3  id=\"heading2286\" class=\"heading2286\"><a name=\"bookmark37\" id=\"2287\" >“Web Site Global Settings” Templates:</a></h3><div id=\"contentheading2286\" ><p  id=\"2288\">Note: if you are copying code from here, do not copy <span class=\"s56\" id=\"2289\">&lt;</span>%@ Master Language<span class=\"s56\" id=\"2290\">=</span>\"C#\" MasterPageFile<span class=\"s56\" id=\"2291\">=</span>\"~/umbraco/masterpages/default.master\" AutoEventWireup<span class=\"s56\" id=\"2292\">=</span>\"true\"</p><p  id=\"2293\">%<span class=\"s56\" id=\"2294\">&gt;</span></p><p  id=\"2295\">line because Umbraco will insert that line automatically in that case Umbraco CMS throw out yellow screen of death with Error message “ <b id=\"2296\">Parser Error Message: </b>There can be only one 'master' directive.” To solve this problem make sure there is only one master page template exist on that template. If you want to follow me your “Web Site Global Settings” template code should looks like bellow.</p><p  id=\"2297\"><br id=\"2298\"></p><p  id=\"2299\"><span class=\"s65\"  id=\"2300\">&lt;%</span><span class=\"s66\" id=\"2301\">@ </span><span class=\"s67\" id=\"2302\">Master </span><span class=\"s68\" id=\"2303\">Language</span><span class=\"s66\" id=\"2304\">=\"C#\" </span><span class=\"s68\" id=\"2305\">MasterPageFile</span><span class=\"s66\" id=\"2306\">=\"~/umbraco/masterpages/default.master\" </span><span class=\"s68\" id=\"2307\">AutoEventWireup</span><span class=\"s66\" id=\"2308\">=\"true\" </span><span class=\"s65\"  id=\"2309\">%&gt;</span></p><p class=\"s66\"  id=\"2310\"><span  id=\"2311\">asp</span>:<span  id=\"2312\">Content </span><span  id=\"2313\">ContentPlaceHolderID</span>=\"ContentPlaceHolderDefault\" <span  id=\"2314\">runat</span>=\"server\"&gt;</p><p class=\"s66\"  id=\"2315\">&lt;<span  id=\"2316\">html</span>&gt;</p><p class=\"s66\"  id=\"2317\">&lt;<span  id=\"2318\">head</span>&gt;</p><p class=\"s66\"  id=\"2319\">&lt;<span  id=\"2320\">link </span><span  id=\"2321\">rel</span>=\"stylesheet\" <span  id=\"2322\">type</span>=\"text/css\" <span  id=\"2323\">href</span>=\"css/style.css\"/&gt;</p><p class=\"s66\"  id=\"2324\">&lt;/<span  id=\"2325\">head</span>&gt;</p><p class=\"s66\"  id=\"2326\">&lt;<span  id=\"2327\">body</span>&gt;</p><p class=\"s66\"  id=\"2328\">&lt;<span  id=\"2329\">div </span><span  id=\"2330\">class</span>=\"head\"&gt;</p><p class=\"s66\"  id=\"2331\">&lt;<span  id=\"2332\">div </span><span  id=\"2333\">class</span>=\"top\"&gt;</p><p class=\"s66\"  id=\"2334\">&lt;<span  id=\"2335\">div </span><span  id=\"2336\">class</span>=\"title\"&gt;</p><p  id=\"2337\"><br id=\"2338\"></p><p class=\"s66\"  id=\"2339\">&lt;/<span  id=\"2340\">div</span>&gt;</p><p class=\"s66\"  id=\"2341\">&lt;/<span  id=\"2342\">div</span>&gt;</p><p class=\"s66\"  id=\"2343\">&lt;/<span  id=\"2344\">div</span>&gt;</p><p class=\"s66\"  id=\"2345\">&lt;<span  id=\"2346\">div </span><span  id=\"2347\">class</span>=\"navi\"&gt;</p><p class=\"s66\"  id=\"2348\">&lt;<span  id=\"2349\">div </span><span  id=\"2350\">class</span>=\"navigation\"&gt;</p><p class=\"s66\"  id=\"2351\">&lt;/<span  id=\"2352\">div</span>&gt;</p><p class=\"s66\"  id=\"2353\">&lt;/<span  id=\"2354\">div</span>&gt;</p><p class=\"s66\"  id=\"2355\">&lt;<span  id=\"2356\">div </span><span  id=\"2357\">class</span>=\"middle\"&gt;</p><p class=\"s66\"  id=\"2358\">&lt;<span  id=\"2359\">div </span><span  id=\"2360\">class</span>=\"content\" &gt;</p><p class=\"s66\"  id=\"2361\">&lt;<span  id=\"2362\">asp</span>:<span  id=\"2363\">ContentPlaceHolder </span><span  id=\"2364\">Id</span>=\"ContentBody\" <span  id=\"2365\">runat</span>=\"server\"&gt;</p><p class=\"s69\"  id=\"2366\">&lt;!-- Insert default \"ContentBody\" markup here --&gt;</p><p class=\"s66\"  id=\"2367\">&lt;/<span  id=\"2368\">asp</span>:<span  id=\"2369\">ContentPlaceHolder</span>&gt;</p><p class=\"s66\"  id=\"2370\">&lt;/<span  id=\"2371\">div</span>&gt;</p><p class=\"s66\"  id=\"2372\">&lt;/<span  id=\"2373\">div</span>&gt;</p><p class=\"s66\"  id=\"2374\">&lt;/<span  id=\"2375\">body</span>&gt;</p><p class=\"s66\"  id=\"2376\">&lt;/<span  id=\"2377\">html</span>&gt; &lt;/<span  id=\"2378\">asp</span>:<span  id=\"2379\">Content</span>&gt;</p></div><h3  id=\"heading2380\" class=\"heading2380\"><a name=\"bookmark38\" id=\"2381\" >Template API:</a></h3><div id=\"contentheading2380\" ><p  id=\"2382\">Template API can be found using namespace <span class=\"s66\" id=\"2383\">using </span><span class=\"s70\" id=\"2384\">umbraco.cms.businesslogic.template;</span></p><ul id=\"l48\"><li  id=\"2386\"><p  id=\"2387\">Manual work Create Template:</p><ul id=\"l49\"><li  id=\"2389\"><p  id=\"2390\">That manual work will execute <span  id=\"2391\">Template</span>.MakeNew(name, u);</p></li><li  id=\"2392\"><p  id=\"2393\">Name: name of Template</p></li><li  id=\"2394\"><p  id=\"2395\">U is user. Umbraco will automatically assign user when you logged in backend. If you want to create Template using API you should provide valid user, user should have access to create Template otherwise Umbraco will throughout exception.</p></li></ul></li><li  id=\"2396\"><p  id=\"2397\">Manual work Delete</p><ul id=\"l50\"><li  id=\"2399\"><p  id=\"2400\">It will execute Template.Delete() void methods.</p></li><li  id=\"2401\"><p  id=\"2402\">It‟s not possible to restore deleted templates.</p></li></ul></li><li  id=\"2403\"><p  id=\"2404\">Setting master Template:</p><ul id=\"l51\"><li  id=\"2406\"><p  id=\"2407\">Umbraco will execute Template. MasterTemplate = Template.Id;</p></li><li  id=\"2408\"><p  id=\"2409\">Where Template.Id is node id of parent Template.</p></li></ul></li><li  id=\"2410\"><p  id=\"2411\">Save:</p><ul id=\"l52\"><li  id=\"2413\"><p  id=\"2414\">Save button will execute Save() methods to save work. It will effect to Database see captured screen bellow as reference. I will not explain here but its not difficult to understand if you know basic knowledge of Sql server and Database.</p><p  id=\"2415\"><br id=\"2416\"></p><p  id=\"2417\"><span id=\"2418\"><img width=\"616\" height=\"325\" alt=\"image\" src=\"Image_066.png\" id=\"2419\"></span></p><p  id=\"2420\"><br id=\"2421\"></p><p  id=\"2422\">These results are from Database name „umbracodb‟ table „cmsTemplate‟. In your case database name can be deference as compared to mine.</p><p  id=\"2423\"><br id=\"2424\"></p><p class=\"s10\"  id=\"2425\">Notice:</p><p class=\"s10\"  id=\"2426\">I am not using anymore “insert page field” ways to fetch data in templates because if I fetch data using document type alias it will fetch data only if template are checked in Document type allowed templates. If templates are not associated with document type, Data will not be fetching using “Insert Page field” technique so that I am going to continue to fetch data using Xslt and use macro to render content to templates<span class=\"p\" id=\"2427\">.</span></p><p  id=\"2428\"><br id=\"2429\"></p><h1  id=\"2430\"><a name=\"a38\" id=\"2431\">Chapter 06: XSLT</a></h1><p  id=\"2432\"><br id=\"2433\"></p><p  id=\"2434\"><br id=\"2435\"></p><p  id=\"2436\"><span id=\"2437\"><img width=\"330\" height=\"1\" alt=\"image\" src=\"Image_067.png\" id=\"2438\"></span></p><p  id=\"2439\"><br id=\"2440\"></p><h2  id=\"heading2441\" class=\"heading2441\"><a name=\"bookmark39\" id=\"2442\" >XSLT:</a></h2><div id=\"contentheading2441\" ><p  id=\"2443\">Xslt provides fast data fetching processing from xml file. All published content in your site are structured in xml format by Umbraco system. Xslt is the way to transfer xml data to html format, Xslt and Xpath are used together to provide rich service. Xpath is used to move pointer back and forth to crawl content in xml file or to move pointer from one node to another node. My assumption is you already familiar with Xslt and Xpath, I will directly going to show creating and using Xslt.</p><p  id=\"2444\"><br id=\"2445\"></p><h4  id=\"2446\"><a name=\"a39\" id=\"2447\">Using XSLT:</a></h4><p  id=\"2448\"><br id=\"2449\"></p><p  id=\"2450\">Xslt transfer xml to html, using Xslt we are fetching data from xml and passing to template in Umbraco site. We need to create associated macro first, link that macro with Xslt and Use that macro in Template. Here macro works as bridge between Xslt and Template. Umbraco is user friendly so you don‟t have to worry about macro. Each time you check “Create Macro” when you create new Xslt, Umbraco will automatically generate Macro for you.</p><p  id=\"2451\"><br id=\"2452\"></p><p  id=\"2453\"><span id=\"2454\"><img width=\"333\" height=\"495\" alt=\"image\" src=\"Image_068.png\" id=\"2455\"></span></p><p  id=\"2456\">Let‟s starts to work with Xslt Instruction:</p></div></li></ul></li><li  id=\"2457\"><p  id=\"2458\">Click “Developer” in Sections menu. “XSLT Files” menu is available inside Developer menu items. See captured screen: “Xslt.jpg”.</p></li><li  id=\"2459\"><p  id=\"2460\">Right click on “XSLT Files” and Click “Create”. Umbraco open new windows: if you want to follow me provide these information</p><ul id=\"l53\"><li  id=\"2462\"><p  id=\"2463\">Name: “GlobalSetting”</p></li><li  id=\"2464\"><p  id=\"2465\">Choose a Template: Clean</p></li><li  id=\"2466\"><p  id=\"2467\">Checked: Create Macro</p></li></ul></li><li  id=\"2468\"><p  id=\"2469\">Press “Create” see captured screen bellow “XsltCreate.jpg”</p><p  id=\"2470\"><br id=\"2471\"></p><p  id=\"2472\">“GlobalSetting.xslt” file must be created inside XSLT file menu at Developer section.</p><p class=\"s8\"  id=\"2473\">Purpose of creating Globalsetting.xslt is to fetch Site name, site title and logo.</p><p  id=\"2474\"><br id=\"2475\"></p><p  id=\"2476\">Xslt.jpg</p><p  id=\"2477\"><br id=\"2478\"></p><p  id=\"2479\">XsltCreate.jpg</p><h3  id=\"2480\"><a name=\"bookmark40\" id=\"2481\">Xslt working environments:</a></h3><p  id=\"2482\"><br id=\"2483\"></p><p  id=\"2484\"><span id=\"2485\"><img width=\"616\" height=\"467\" alt=\"image\" src=\"Image_069.png\" id=\"2486\"></span></p><p class=\"s38\"  id=\"2487\">1 2 3 4 5 <span class=\"s72\" id=\"2488\">6 </span><span class=\"s73\" id=\"2489\">7</span></p><p class=\"s38\"  id=\"2490\">8</p><p  id=\"2491\"><br id=\"2492\"></p><p class=\"s38\"  id=\"2493\">9</p><p  id=\"2494\"><br id=\"2495\"></p><p class=\"s38\"  id=\"2496\">A</p><p  id=\"2497\"><br id=\"2498\"></p><p  id=\"2499\"><br id=\"2500\"></p><p  id=\"2501\">Image: xsltEnvironment.jpg</p><p  id=\"2502\">Image: xsltEnvironment.jpg</p><p  id=\"2503\"><span  id=\"2504\"> </span></p><p  id=\"2505\"><br id=\"2506\"></p><ol id=\"l54\"><li  id=\"2508\"><p  id=\"2509\">Coding area: here you can type Xslt code.</p><p  id=\"2510\"><br id=\"2511\"></p><ol id=\"l55\"><li  id=\"2513\"><h4  id=\"2514\">Save <span class=\"p\" id=\"2515\">Button To save work after changed</span></h4></li><li  id=\"2516\"><h4  id=\"2517\">Insert xslt:value of <span class=\"p\" id=\"2518\">: use to insert xslt value, you can also select prevalue. 3- </span>Insert xslt:variable : <span class=\"p\" id=\"2519\">use to insert xslt variable</span></h4></li></ol></li></ol><p  id=\"2520\">4- <b id=\"2521\">Insert xslt:if </b>: use to insert condition statement if 5- <b id=\"2522\">Insert xslt:for-each : </b>use for looping purpose</p><ol id=\"l56\"><li  id=\"2524\"><h4  id=\"2525\">Insert xslt:choose : <span class=\"p\" id=\"2526\">use to insert choose condition statement</span></h4></li><li  id=\"2527\"><h4  id=\"2528\">Visualize Xslt: <span class=\"p\" id=\"2529\">it‟s a big feature in Umbraco. Using visualizes Xslt you can see what output will be made by your Xslt Code on templates. You can also choose different Content and see what will be output.</span></h4></li><li  id=\"2530\"><h4  id=\"2531\">Name <span class=\"p\" id=\"2532\">of xslt file</span></h4></li><li  id=\"2533\"><h4  id=\"2534\">Skip testing: <span class=\"p\" id=\"2535\">if you checked on Skip Testing, Umbraco will not validate your Xslt code so you will not see any error message.</span></h4><p  id=\"2536\"><br id=\"2537\"></p><h4  id=\"2538\"><a name=\"a40\" id=\"2539\">Coding Area:</a></h4></li></ol></li><li  id=\"2540\"><p  id=\"2541\">It starts with xml deceleration and version, it is using xml version 1.0 and encoding utf-8. <span class=\"s19\" id=\"2542\">See at line 1 Image: xsltEnvironment.jpg</span></p></li><li  id=\"2543\"><p  id=\"2544\">You define replacement text yourself at Xslt using DTD<span class=\"s3\" id=\"2545\">14</span>. To use that features you have to have DTD schema knowledge. By default Umbraco inserted one entity.</p><p  id=\"2546\">&lt;!DOCTYPE xsl:stylesheet [&lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p  id=\"2547\">here Enitity nbsp can be used anywhere in xslt. On execution time Umbraco replace nbsp with text „&amp;#x00A0;‟ that we defined at DOCTYPE Entity. <span class=\"s19\" id=\"2548\">See line 2 at Image xsltEnvironment.jpg</span></p></li><li  id=\"2549\"><p  id=\"2550\">Stylesheet Declaration: You can extend Xslt further more using .NET Class libraries. In some cases Xslt may not enough to fetch data in such cases you can extend Xslt. You need to add your Xslt extension here in order to use it.</p><p  id=\"2551\"><br id=\"2552\"></p><p class=\"s74\"  id=\"2553\"><a name=\"bookmark41\" id=\"2554\">.NET Class Registration</a></p><p class=\"s74\"  id=\"2555\">Adding Assembly to Umbraco sites:</p><p class=\"s75\"  id=\"2556\"><a name=\"a41\" id=\"2557\">Open ~/config/xsltExtensions.config file, here you add Assembly first.</a></p><p class=\"s76\"  id=\"2558\">&lt;ext assembly=\"assemblyName\" type=\"assemblyName.namespace.type\" alias=\"custom\"&gt;</p><p class=\"s74\"  id=\"2559\">Assembly <b id=\"2560\">= location of your files</b></p><p class=\"s74\"  id=\"2561\">Type <b id=\"2562\">= namespace name</b></p><p class=\"s74\"  id=\"2563\"><a name=\"a42\" id=\"2564\">Alias </a><b id=\"2565\">= you use that alias at Xslt to refer assembly.</b></p><p  id=\"2566\"><br id=\"2567\"></p><p class=\"s74\"  id=\"2568\">Add alias in xslt stylesheet.</p><p class=\"s75\"  id=\"2569\"><a name=\"a43\" id=\"2570\">Xmlns:LocalName = alias from xsltExtesion registration LocalName is used inside Xslt templates</a></p><p class=\"s75\"  id=\"2571\">Alias = alias that you define when you registered assembly name at</p><p class=\"s75\"  id=\"2572\">~/config/xsltExtesion.config file</p><p class=\"s75\"  id=\"2573\">Now you are ready to use .NET Class library in Xslt.</p><p class=\"s74\"  id=\"2574\">exclude-result-prefixes=\"Assembly Alias”</p><p class=\"s77\"  id=\"2575\">Use exclude to prevent Xslt from outputting namespace name.</p><p class=\"s75\"  id=\"2576\">Note: ~ means your Umbraco root installation directory level.</p></li><li  id=\"2577\"><p class=\"s64\"  id=\"2578\">&lt;<span  id=\"2579\">xsl:output </span><span  id=\"2580\">method</span>=<span  id=\"2581\">\"</span>xml<span  id=\"2582\">\" </span><span  id=\"2583\">omit-xml-declaration</span>=<span  id=\"2584\">\"</span>yes<span  id=\"2585\">\"</span>/&gt;</p><p class=\"s75\"  id=\"2586\"><a name=\"a44\" id=\"2587\">It will omit xml deceleration output</a></p><p  id=\"2588\">Let‟s start to work with Umbraco Xslt</p></li><li  id=\"2589\"><p class=\"s64\"  id=\"2590\">&lt;<span  id=\"2591\">xsl:param </span><span  id=\"2592\">name</span>=<span  id=\"2593\">\"</span>currentPage<span  id=\"2594\">\"</span>/&gt;</p></li><li  id=\"2595\"><p  id=\"2596\">It‟s a very use full param in Umbraco. Umbraco will insert current page data. Current page means page that Templates, Content and Document Type using specific Xslt file in other words currentPage means current page. Value of currentPage depends on article or Content you are visiting now. Let‟s try to output currentPage value and see what will be output.</p></li><li  id=\"2597\"><p class=\"s78\"  id=\"2598\">Template Match</p><p class=\"s78\"  id=\"2599\">&lt;<span  id=\"2600\">xsl:template </span><span  id=\"2601\">match</span>=<span  id=\"2602\">\"</span>/<span  id=\"2603\">\"</span>&gt;</p><p class=\"s78\"  id=\"2604\">&lt;<span  id=\"2605\">xsl:copy-of </span><span  id=\"2606\">select</span>=<span  id=\"2607\">\"</span>$currentPage<span  id=\"2608\">\" </span>/&gt;</p><p class=\"s78\"  id=\"2609\">&lt;/<span  id=\"2610\">xsl:template</span>&gt;</p><p class=\"s82\"  id=\"2611\">o <span class=\"s78\" id=\"2612\">All your logic or html output you code between opening and closing tags of &lt;xsl:template&gt;</span></p><p  id=\"2613\"><br id=\"2614\"></p><p  id=\"2615\"><span id=\"2616\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_070.png\" id=\"2617\"></span></p><p class=\"s20\"  id=\"2618\">14 <span class=\"s10\" id=\"2619\">Document Type Definition</span></p></li><li  id=\"2620\"><p class=\"s78\"  id=\"2621\">Here we use xsl:copy-of select=‛$currentPage‛ to output current page data.</p><p  id=\"2622\"><br id=\"2623\"></p></li><li  id=\"2624\"><p class=\"s78\"  id=\"2625\">To see outp<span class=\"p\" id=\"2626\">ut value use “visualize Xslt” button at top-right corner of Edit xsl working environment. Make sure you choose first Content using “Choose…” menu. Select Content after press “Visualize XSLT” button. You should see some data if content has some data. See captured screen bellow.</span></p></li></ul><p  id=\"2627\"><br id=\"2628\"></p><p  id=\"2629\"><span id=\"2630\"><img width=\"544\" height=\"332\" alt=\"image\" src=\"Image_071.png\" id=\"2631\"></span></p><p class=\"s38\"  id=\"2632\">A B C</p><p class=\"s38\"  id=\"2633\">G</p><p  id=\"2634\"><br id=\"2635\"></p><p class=\"s38\"  id=\"2636\">D</p><p class=\"s38\"  id=\"2637\">E</p><p  id=\"2638\"><br id=\"2639\"></p><p class=\"s38\"  id=\"2640\">F</p><p  id=\"2641\"><br id=\"2642\"></p><ol id=\"l57\"><ol id=\"l58\"><li  id=\"2645\"><p  id=\"2646\">Title of Content: first time it must be empty.</p></li><li  id=\"2647\"><p  id=\"2648\">Delete: To delete selected Content. It will not delete content from Content Section, it will only delete from Visualize Xslt service.</p></li><li  id=\"2649\"><p  id=\"2650\">Choose..: you can easily change or alter Content to visualize XSLT and see different output based on XSLT code.</p></li><li  id=\"2651\"><p  id=\"2652\">Visualize Xslt Button: Press to visualize XSLT</p></li><li  id=\"2653\"><p  id=\"2654\">Encode: Checked if you want to see xml formatted data, uncheck to see only content.</p></li><li  id=\"2655\"><p  id=\"2656\">Output of XSLT: it‟s a result; it‟s an output of your Xslt code, its output currentPage value. Same value will insert into templates.</p></li><li  id=\"2657\"><p  id=\"2658\">Press “x” to close Visualize XSLT service.</p></li></ol></ol><p  id=\"2659\"><br id=\"2660\"></p><p class=\"s83 heading2661\"  id=\"heading2661\"><a name=\"bookmark42\" id=\"2662\" >Xml File umbraco.config</a></p><div id=\"contentheading2661\" ><p  id=\"2663\">I mentioned Xslt use to fetch data from xml file. You must wonder about what xml file? Where is that xml file? Why it‟s in xml file? And more questions.</p><ul id=\"l59\"><li  id=\"2665\"><p  id=\"2666\">Umbraco generates Umbraco.config temporary file it‟s structured in xml format, every time when you made change on content or document type. Umbraco remind you to publish content. It means, when you made change on content Umbraco made change only on Database. Umbraco does not fetch data from database to present data to end users unless you extend it using other programming language. One reason is it is slow process to fetch data</p><p  id=\"2667\"><br id=\"2668\"></p><p  id=\"2669\">from database as compared to fetching data from xml file. Database may store in separate machine or separate location in server that need to travel data that cause slower process. Umbraco use great idea generating temporary xml files, that xml files cached in memory. Using temporary xml file it‟s dramatically faster to fetch data using Xslt. To see temporary xml generated file you need to locate directory “App_Data” in website root level and find umbraco.config file. “~/App_data/umbraco.config”</p></li><li  id=\"2670\"><p  id=\"2671\">Open umbraco.config file using Note pad or other software, if you open with Visual studio it will easy to navigate. See captured screen. Your version can be difference.</p></li></ul><p  id=\"2672\"><br id=\"2673\"></p><p  id=\"2674\"><br id=\"2675\"></p><p  id=\"2676\"><span id=\"2677\"><img width=\"616\" height=\"512\" alt=\"image\" src=\"Image_072.png\" id=\"2678\"></span></p><p  id=\"2679\">Image: Umbracoconfig.jpg</p><h3  id=\"2680\"><a name=\"bookmark43\" id=\"2681\">Relationship between Document Type and Umbraco.config Xml</a></h3><p class=\"s19\"  id=\"2682\">See Image: Umbracoconfig.jpg</p><p  id=\"2683\"><br id=\"2684\"></p><h4  id=\"2685\">Line 1: <span class=\"p\" id=\"2686\">xml declaration</span></h4><p  id=\"2687\"><br id=\"2688\"></p><h4  id=\"2689\">Line 2 to line 10: <span class=\"p\" id=\"2690\">DTD schema information</span></h4><h4  id=\"2691\">Line 13: <span class=\"p\" id=\"2692\">Umbraco Root Element. All Elements go inside root node. Root is parent element for all.</span></h4><h4  id=\"2693\">Line 14: <span class=\"p\" id=\"2694\">Umbraco starts generating xml elements and attributes based on our document type and content. Did you notice Alias that used in Document type is Elements here?</span></h4><ul id=\"l60\"><li  id=\"2696\"><p  id=\"2697\">GeneralContent is alias of Document Type “General Content”. All attributes inside “GeneralContent” element are inserted by Umbraco automatically.</p></li><li  id=\"2698\"><p  id=\"2699\">Now let‟s look child element of “GeneralContent” Element. Two more element “contentTitle” and “contentBody” also created. If you notice that we added two new property “contentTitle” and “contentBody” in Document Type “General Content”.</p></li><li  id=\"2700\"><p  id=\"2701\">Here in umbraco.config xml these new property structured as child of Document Type element tags.</p></li><li  id=\"2702\"><p  id=\"2703\">Probably you need time to understand, you have to go back to Document Type, see carefully all alias. Come back to umbraco.config xml file and analyze yourself that helps you to understand better.</p><p  id=\"2704\"><br id=\"2705\"></p><p  id=\"2706\">Line 14: attributes: Umbraco generates few attributes automatically. Most attributes are self explanatory so easier to understand. I feel some attributes need to describe here for Umbraco New developers.</p></li><li  id=\"2707\"><p class=\"s32\"  id=\"2708\">id <span class=\"s10\" id=\"2709\">: it‟s a node id of content each content has different node id</span></p><p  id=\"2710\"><br id=\"2711\"></p></li><li  id=\"2712\"><p class=\"s32\"  id=\"2713\">parentID<span class=\"s10\" id=\"2714\">: node id of parent element. If you notice in Content API chapter we pass parent id -1 value. Means create content at root level in content but actually it means create content as child of root element. Umbraco assign root element id = -1 see line 13 Image: “Umbracoconfig.jpg;</span></p><p  id=\"2715\"><br id=\"2716\"></p></li><li  id=\"2717\"><p class=\"s32\"  id=\"2718\">level<span class=\"s10\" id=\"2719\">: level of content. 1 means at root level if you create child content it will be level 2</span></p><p  id=\"2720\"><br id=\"2721\"></p></li><li  id=\"2722\"><p class=\"s32\"  id=\"2723\">nodeName<span class=\"s10\" id=\"2724\">: It‟s not a contentTitle that you provide on document type content title property. it‟s a title of Content that appear at Content Tree Section.</span></p><p  id=\"2725\"><br id=\"2726\"></p></li><li  id=\"2727\"><p class=\"s32\"  id=\"2728\">urlName<span class=\"s10\" id=\"2729\">: name of url, content access using urlName. Example /home.aspx will load contain id 1084. See line 14 Image: “Umbracoconfig.jpg;</span></p><p  id=\"2730\"><br id=\"2731\"></p></li><li  id=\"2732\"><p class=\"s32\"  id=\"2733\">nodeType<span class=\"s10\" id=\"2734\">: node id of Document Type</span></p></li><li  id=\"2735\"><p class=\"s32\"  id=\"2736\">How do you know Document Type Node id?</p><p  id=\"2737\"><br id=\"2738\"></p><p class=\"s10\"  id=\"2739\">It‟s a tricky. Just mouse over Document Type at left bottom of browser , browser show JavaScript link like this “javascript:openNodeType(1054);” number between () is node id of Document Type.</p></li><li  id=\"2740\"><p class=\"s10\"  id=\"2741\"><b id=\"2742\">creatorID</b>: id of users who created content. 0 means administrator and always exist in Umbraco user, it has root level of access<span class=\"s20\" id=\"2743\">15</span>.</p></li></ul></div></div><h3  id=\"heading2744\" class=\"heading2744\"><a name=\"bookmark44\" id=\"2745\" >Fetching data:</a></h3><div id=\"contentheading2744\" ><p  id=\"2746\">Let‟s take real example for Semic provider site and be clear about use of Xslt. Semic provider has logo, title and slogan as global items. For global items<span class=\"s3\" id=\"2747\">16</span>, we need to fetch value from siteName, slogan and logo element <span class=\"s19\" id=\"2748\">see line at 26, 27 and 28 respectively at Image:Umbracoconfig.jpg”</span>. Open GlobalSetting.xslt file and add highlighted code into GlobalSetting.xslt. See captured screen and Save Xslt.</p><p  id=\"2749\"><br id=\"2750\"></p><p  id=\"2751\"><span id=\"2752\"><img width=\"616\" height=\"342\" alt=\"image\" src=\"Image_073.jpg\" id=\"2753\"></span></p><p  id=\"2754\">All html tags are not important, only important is highlighted line. Description:</p><ul id=\"l61\"><li  id=\"2756\"><p class=\"s78\"  id=\"2757\">&lt;<span  id=\"2758\">xsl</span>:<span  id=\"2759\">variable </span><span  id=\"2760\">name</span>=\"items\" <span  id=\"2761\">select</span>=\"$currentPage/ancestor-or-self::*</p><p class=\"s78\"  id=\"2762\">/WebSiteGlobalSettings \"/&gt;</p><ul id=\"l62\"><li  id=\"2764\"><p class=\"s81\"  id=\"2765\">Here $ represent variable in XSLT. variable name items will hold data from ‚WebSitesGlobalSettings‛ Element see line at 25 Image: <span class=\"s10\" id=\"2766\">“Umbracoconfig.jpg” page no: xx</span></p></li><li  id=\"2767\"><p class=\"s81\"  id=\"2768\">currentPage will select current page.</p></li><li  id=\"2769\"><p class=\"s81\"  id=\"2770\">ancestor-or-self:: move pointer back until root level.</p></li><li  id=\"2771\"><p class=\"s81\"  id=\"2772\">* select all that match</p></li><li  id=\"2773\"><p class=\"s81\"  id=\"2774\">/ move one step further to child element.</p></li><li  id=\"2775\"><p class=\"s81\"  id=\"2776\">WebsitesGlobalSettings is element name.</p></li></ul></li><li  id=\"2777\"><p class=\"s78\"  id=\"2778\">&lt;<span  id=\"2779\">xsl</span>:<span  id=\"2780\">variable </span><span  id=\"2781\">name</span>=\"logo\" <span  id=\"2782\">select</span>=\"$items/logo\"/&gt;</p><ul id=\"l63\"><li  id=\"2784\"><p class=\"s81\"  id=\"2785\">$items/logo will select logo element and hold data</p></li></ul></li><li  id=\"2786\"><p class=\"s78\"  id=\"2787\">&lt;<span  id=\"2788\">xsl</span>:<span  id=\"2789\">value-of </span><span  id=\"2790\">select</span>=\"$items/slogan\"/&gt;</p><ul id=\"l64\"><li  id=\"2792\"><p class=\"s81\"  id=\"2793\">$items/slogan: select value from slogan element</p></li><li  id=\"2794\"><p class=\"s78\"  id=\"2795\">&lt;<span  id=\"2796\">img </span><span  id=\"2797\">src</span>=\"{$logo}\" <span  id=\"2798\">alt</span>=\"semic provider logo; visual identity\"/&gt;</p></li><li  id=\"2799\"><p class=\"s78\"  id=\"2800\">Insert value of logo variable. Using $ and followed by name means use of variable, encapsulated data with {}. {} means code inside {} will executed on server by Umbraco CMS.</p></li></ul></li></ul><p  id=\"2801\"><br id=\"2802\"></p><p  id=\"2803\"><span id=\"2804\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_074.png\" id=\"2805\"></span></p><p class=\"s20\"  id=\"2806\">15 <span class=\"s10\" id=\"2807\">Root level of access: access that can CRUD ; C-create, R-read, U-update, D-delete</span></p><p class=\"s20\"  id=\"2808\">16 <span class=\"s10\" id=\"2809\">Items those are common for all. For example logo, website name.</span></p><p class=\"s78\"  id=\"2810\"><span class=\"s10\" id=\"2811\">- </span>&lt;<span  id=\"2812\">xsl</span>:<span  id=\"2813\">value-of </span><span  id=\"2814\">select</span>=\"$items/siteName\"/&gt;</p><p class=\"s85\"  id=\"2815\">o <span class=\"s81\" id=\"2816\">This line will select value of siteName element and output.</span></p><p  id=\"2817\"><br id=\"2818\"></p><p class=\"s41\"  id=\"2819\"><a name=\"bookmark45\" id=\"2820\">Note: alt tag in img element is not compulsory but I strongly recommend having alt tag. It will help for web accessibility and SEO.</a></p><p class=\"s86\"  id=\"2821\"><a name=\"a45\" id=\"2822\">Xslt for Navigation:</a></p><p  id=\"2823\"><br id=\"2824\"></p><p  id=\"2825\"><span id=\"2826\"><img width=\"581\" height=\"261\" alt=\"image\" src=\"Image_075.png\" id=\"2827\"></span></p><p  id=\"2828\"><br id=\"2829\"></p><p  id=\"2830\">This is another Xslt for Navigation bar. Create new Xslt. Provide name navigation and Checked Create Macro. Copy highlighted text. Note that html is not that much important these are for CSS and layout purpose.</p><p  id=\"2831\">Description:</p><ul id=\"l65\"><li  id=\"2833\"><p  id=\"2834\">[string(useInNavigation) = '1'] condition match means select all GeneralContent Element from ~/App_Data/umbraco.config file where useInNavigation checked boxed should be checked. Remember that we added new property at “General Content” Document Type. If editor wants to use general content in navigation bar. Editor should Checked mark on “useInNavigation” when s/he creates content.</p><p  id=\"2835\"><br id=\"2836\"></p></li><li  id=\"2837\"><p  id=\"2838\">Nice Url: umbraco.library:NiceUrl(@id)</p><ul id=\"l66\"><li  id=\"2840\"><p  id=\"2841\">NiceUrl(@node id) will generate user friendly nice Url. Remember that urlName are used example: home.aspx</p></li><li  id=\"2842\"><p  id=\"2843\">@id: it‟s an attribute of selected element at ~/App_Data/umbraco.config xml file. In my case it‟s a node id of content based on “General Content” document type. @ sysmbole represent get value from attributes. See Xslt, Xpath and xml for details.</p></li></ul></li></ul><p  id=\"2844\"><br id=\"2845\"></p><ul id=\"l67\"><li  id=\"2847\"><p class=\"s56\"  id=\"2848\">&lt;<span class=\"p\" id=\"2849\">xsl:value-of select</span>=<span class=\"p\" id=\"2850\">\"contentTitle\"</span>/&gt;</p><p  id=\"2851\"><br id=\"2852\"></p><ul id=\"l68\"><li  id=\"2854\"><p class=\"s56\"  id=\"2855\">Select value from contentTitle element</p></li></ul></li><li  id=\"2856\"><p class=\"s56\"  id=\"2857\">&lt;<span class=\"p\" id=\"2858\">xsl:for-each select</span>=<span class=\"p\" id=\"2859\">\"$items\"</span>&gt;</p><p  id=\"2860\"><br id=\"2861\"></p><ul id=\"l69\"><li  id=\"2863\"><p class=\"s56\"  id=\"2864\">Used to loop all existing content</p><p  id=\"2865\"><br id=\"2866\"></p></li></ul></li><li  id=\"2867\"><p class=\"s56\"  id=\"2868\">&lt;<span class=\"p\" id=\"2869\">xsl:if test</span>=<span class=\"p\" id=\"2870\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p  id=\"2871\"><br id=\"2872\"></p><ul id=\"l70\"><li  id=\"2874\"><p class=\"s56\"  id=\"2875\">Here &amp;gt; means greater than. Test: means execute block of code only if result is more than zero. If items are less than zero no need to loop items.</p></li></ul></li></ul><p  id=\"2876\"><br id=\"2877\"></p><h4  id=\"2878\"><a name=\"a46\" id=\"2879\">Note: there is missing code in captured screen means missing code are generated by Umbraco Default and removed from here to reduce space.</a></h4><p class=\"s86\"  id=\"2880\"><a name=\"bookmark46\" id=\"2881\">New Xslt file for News List items.</a></p><p  id=\"2882\">It will be exercise for you I create NewsList.xslt file, here I just include captured screen without description try to describe yourself. It‟s not big but need to knowledge of Xpath. Main purpose of this Xslt is to fetch content from 2<span class=\"s3\" id=\"2883\">nd </span>level menu contain. It will fetch News articles from ~/App_data/umbraco.config xml file. Captured screen are bellow.</p><p  id=\"2884\"><br id=\"2885\"></p><p  id=\"2886\"><span id=\"2887\"><img width=\"475\" height=\"383\" alt=\"image\" src=\"Image_076.jpg\" id=\"2888\"></span></p><p  id=\"2889\"><br id=\"2890\"></p><h1  id=\"2891\"><a name=\"a47\" id=\"2892\">Chapter 07: Macro</a></h1><p  id=\"2893\"><br id=\"2894\"></p><p  id=\"2895\"><br id=\"2896\"></p><p  id=\"2897\"><span id=\"2898\"><img width=\"350\" height=\"1\" alt=\"image\" src=\"Image_077.png\" id=\"2899\"></span></p><p  id=\"2900\"><br id=\"2901\"></p><h2  id=\"heading2902\" class=\"heading2902\"><a name=\"bookmark47\" id=\"2903\" >Macro:</a></h2><div id=\"contentheading2902\" ><p  id=\"2904\">Marco is use as bridge between xslt, user control or other languages and templates, using macro we can render content or data from data source to templates and templates are responsible to present data to end users. Macro is very important part in Umbraco.</p><p  id=\"2905\"><span id=\"2906\"><img width=\"616\" height=\"437\" alt=\"image\" src=\"Image_078.png\" id=\"2907\"></span></p><h3  id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" >Macro working Environments:</a></h3><div id=\"contentheading2908\" ><p class=\"s45\"  id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p  id=\"2912\"><br id=\"2913\"></p><p  id=\"2914\">C</p><p  id=\"2915\">D</p><p  id=\"2916\"><br id=\"2917\"></p><p  id=\"2918\">E</p><p  id=\"2919\"><br id=\"2920\"></p><p  id=\"2921\">F</p><p  id=\"2922\"><br id=\"2923\"></p><p  id=\"2924\">G</p><p  id=\"2925\"><br id=\"2926\"></p><p  id=\"2927\">H</p><p  id=\"2928\">I</p><p  id=\"2929\">J</p><p  id=\"2930\"><br id=\"2931\"></p><p  id=\"2932\">K</p><p  id=\"2933\">L</p><p  id=\"2934\"><br id=\"2935\"></p><p  id=\"2936\">M</p><p  id=\"2937\"><br id=\"2938\"></p><p  id=\"2939\"><br id=\"2940\"></p><p  id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li  id=\"2943\"><p  id=\"2944\">Save button to save your work or settings</p></li><li  id=\"2945\"><p  id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p  id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li  id=\"2949\"><p  id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li  id=\"2951\"><p  id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li  id=\"2953\"><p  id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li  id=\"2955\"><p  id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p  id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li  id=\"2959\"><p  id=\"2960\">Show preview fetch data on Content Editor.</p></li><li  id=\"2961\"><p  id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li  id=\"2963\"><p  id=\"2964\">Cached per page: cached page based on requested page</p></li><li  id=\"2965\"><p  id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p  id=\"2967\"><br id=\"2968\"></p><p  id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p  id=\"2971\"><br id=\"2972\"></p><p  id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\"  id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\"  target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p  id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p  id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li  id=\"2984\"><p class=\"s8\"  id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li  id=\"2987\"><p class=\"s8\"  id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li  id=\"2989\"><p class=\"s8\"  id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p  id=\"2991\"><br id=\"2992\"></p><p  id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3  id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" >Using Macro into templates:</a></h3><div id=\"contentheading2994\" ><p  id=\"2996\">Instruction:</p><p  id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li  id=\"3000\"><p  id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li  id=\"3002\"><p  id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li  id=\"3004\"><p  id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li  id=\"3007\"><p  id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li  id=\"3009\"><p  id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\"  id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li  id=\"3015\"><p class=\"s8\"  id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p  id=\"3018\"><br id=\"3019\"></p></li><li  id=\"3020\"><p class=\"s8\"  id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p  id=\"3023\"><br id=\"3024\"></p></li><li  id=\"3025\"><p class=\"s8\"  id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p  id=\"3028\"><br id=\"3029\"></p></li><li  id=\"3030\"><p class=\"s8\"  id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p  id=\"3033\"><br id=\"3034\"></p><p  id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3  id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" >Instruction to Insert Macro in Content Area:</a></h3></li><li  id=\"3038\"><p  id=\"3039\">Open content “News”</p></li><li  id=\"3040\"><p  id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li  id=\"3042\"><p  id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li  id=\"3045\"><p  id=\"3046\">Select Marco and Press Insert.</p><p  id=\"3047\"><br id=\"3048\"></p><p  id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\"  id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p  id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li  id=\"3057\"><p  id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li  id=\"3059\"><p  id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p  id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p  id=\"3065\"><br id=\"3066\"></p></li><li  id=\"3067\"><p  id=\"3068\">All red dotted area denotes Macro areas.</p></li><li  id=\"3069\"><p  id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li  id=\"3071\"><p  id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p  id=\"3073\"><br id=\"3074\"></p><p  id=\"3075\"><br id=\"3076\"></p><h3  id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" >Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" ><p  id=\"3079\"><br id=\"3080\"></p></div></li><li  id=\"3081\"><p class=\"s42\"  id=\"3082\">Macro <span  id=\"3083\">macro = </span>Macro<span  id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li  id=\"3086\"><p class=\"s40\"  id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li  id=\"3088\"><p class=\"s40\"  id=\"3089\">macro.UseInEditor = <span  id=\"3090\">true</span>;</p><ul id=\"l77\"><li  id=\"3092\"><p class=\"s40\"  id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li  id=\"3094\"><p class=\"s40\"  id=\"3095\">macro.RenderContent = <span  id=\"3096\">true</span>;</p><ul id=\"l78\"><li  id=\"3098\"><p class=\"s40\"  id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li  id=\"3100\"><p class=\"s40\"  id=\"3101\">macro.Xslt = <span  id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li  id=\"3103\"><p class=\"s40\"  id=\"3104\">provide location of xslt file to use.</p></li><li  id=\"3105\"><p class=\"s40\"  id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li  id=\"3107\"><p class=\"s40\"  id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\"  id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p  id=\"3110\"><br id=\"3111\"></p><h1  id=\"3112\">Chapter 08:</h1><h1  id=\"3113\">Extending Umbraco CMS</h1><p  id=\"3114\"><br id=\"3115\"></p><p  id=\"3116\"><br id=\"3117\"></p><p  id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2  id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p  id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p  id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p  id=\"3125\">User control</p><p  id=\"3126\">.NET Class Library Razor Engine XSLT</p><p  id=\"3127\">Python</p><p  id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p  id=\"3129\">Python is also not covered in this book.</p><p  id=\"3130\"><br id=\"3131\"></p><h3  id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" >User Control:</a></h3><div id=\"contentheading3132\" ><p  id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p  id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p  id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li  id=\"3138\"><p  id=\"3139\">Add New User Control</p></li><li  id=\"3140\"><p  id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p  id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li  id=\"3145\"><p  id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p  id=\"3147\"><br id=\"3148\"></p><p  id=\"3149\">Vcard-Process</p><p  id=\"3150\"><br id=\"3151\"></p><p  id=\"3152\">User Provides Personal Information</p><p  id=\"3153\">Generate Vcard</p><p  id=\"3154\">Send Vcard to Email</p><p  id=\"3155\">Save to Database</p><p  id=\"3156\">Vcard-Process</p><p  id=\"3157\"><br id=\"3158\"></p><p  id=\"3159\">User Provides Personal Information</p><p  id=\"3160\">Generate Vcard</p><p  id=\"3161\">Send Vcard to Email</p><p  id=\"3162\">Save to Database</p><p class=\"s10\"  id=\"3163\">\t\t</p><h3  id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" >Before start coding:</a></h3><div id=\"contentheading3164\" ><p  id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p  id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p  id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4  id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p  id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p  id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p  id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4  id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p  id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p  id=\"3182\"><br id=\"3183\"></p><p  id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\"  id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p  id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\"  target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p  id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\"  target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\"  id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\"  id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4  id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p  id=\"3202\"><br id=\"3203\"></p><p  id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\"  id=\"3207\">JavaScript.jpg </p><p class=\"s88\"  id=\"3208\">JavaScript.jpg </p><p  id=\"3209\"></p><p  id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p  id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p  id=\"3212\"><br id=\"3213\"></p><h4  id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p  id=\"3216\"><br id=\"3217\"></p><p  id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p  id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4  id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p  id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li  id=\"3225\"><p  id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li  id=\"3227\"><p  id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li  id=\"3229\"><p  id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li  id=\"3231\"><p  id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li  id=\"3233\"><p  id=\"3234\">“Regex” means Regular Expression.</p><p  id=\"3235\"><br id=\"3236\"></p><h4  id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p  id=\"3239\"><br id=\"3240\"></p><p  id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4  id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p  id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p  id=\"3246\"><br id=\"3247\"></p><h4  id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p  id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p  id=\"3251\"><br id=\"3252\"></p><h4  id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p  id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p  id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p  id=\"3257\"><br id=\"3258\"></p><p  id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p  id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p  id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p  id=\"3268\">User type personal Informatio n</p><p  id=\"3269\">Name: Email:</p><p  id=\"3270\">User type personal Informatio n</p><p  id=\"3271\">Name: Email:</p><p  id=\"3272\"></p><p  id=\"3273\">Generate Vcard</p><p  id=\"3274\">Generate Vcard</p><p  id=\"3275\"></p><p  id=\"3276\">Press Submit</p><p  id=\"3277\">Press Submit</p><p  id=\"3278\"></p><p  id=\"3279\">Validate submitted Data</p><p  id=\"3280\"><br id=\"3281\"></p><p  id=\"3282\"><br id=\"3283\"></p><p  id=\"3284\">Store in Database</p><p  id=\"3285\">Sent By Email</p><p  id=\"3286\">Store in Database</p><p  id=\"3287\">Sent By Email</p><p class=\"s10\"  id=\"3288\"><span  id=\"3289\"> </span>\t</p><p  id=\"3290\"><br id=\"3291\"></p><p  id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p  id=\"3293\"><br id=\"3294\"></p><h4  id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li  id=\"3297\"><p  id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li  id=\"3300\"><p  id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li  id=\"3302\"><p  id=\"3303\">Create Upload button for Image or Photo</p></li><li  id=\"3304\"><p  id=\"3305\">Create Button</p><ul id=\"l82\"><li  id=\"3307\"><p  id=\"3308\">To submit data</p><h4  id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li  id=\"3311\"><p  id=\"3312\">Create Class</p><ul id=\"l83\"><li  id=\"3314\"><p  id=\"3315\">To save data to Database</p></li></ul></li><li  id=\"3316\"><p  id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li  id=\"3319\"><p  id=\"3320\">Validate input methods</p></li><li  id=\"3321\"><p  id=\"3322\">Go Generate Vcard</p></li><li  id=\"3323\"><p  id=\"3324\">Send Email Store Data to Database</p><p  id=\"3325\"><br id=\"3326\"></p><p  id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\"  id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3  id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" >Let’s Begin to code:</a></h3><div id=\"contentheading3332\" ><p  id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li  id=\"3335\"><p  id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li  id=\"3337\"><p  id=\"3338\">File -&gt; New --&gt; Project</p></li><li  id=\"3339\"><p  id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li  id=\"3342\"><p  id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li  id=\"3344\"><p  id=\"3345\">Name: Vcard Generator</p></li><li  id=\"3346\"><p  id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li  id=\"3348\"><p  id=\"3349\">Solution name: leave default, if you want you can change</p></li><li  id=\"3350\"><p  id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li  id=\"3353\"><p  id=\"3354\">It will Create new directory</p></li></ul></li><li  id=\"3355\"><p  id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p  id=\"3357\"><br id=\"3358\"></p><p  id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p  id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p  id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p  id=\"3368\">It will open new windows</p><p  id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p  id=\"3374\"><br id=\"3375\"></p><p  id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p  id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p  id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p  id=\"3381\">Vcardcontrol.jp</p><p  id=\"3382\"><br id=\"3383\"></p><p class=\"s27\"  id=\"3384\">-</p><p  id=\"3385\"><br id=\"3386\"></p><p class=\"s27\"  id=\"3387\">-</p><p  id=\"3388\"><br id=\"3389\"></p><p class=\"s27\"  id=\"3390\">-</p><p  id=\"3391\"><br id=\"3392\"></p></div></div></div></div></div></li><li  id=\"3393\"><p  id=\"3394\">It must create three files end with “.ascx”, “ascx.cs” and “ascx.designer.cs”.</p></li><li  id=\"3395\"><p  id=\"3396\">Open VcardGenerator.ascx and Create Textbox, Button, Required Field validate and Custom Validate. See captured screen bellow</p></li></ul><p  id=\"3397\"><br id=\"3398\"></p><p  id=\"3399\"><span id=\"3400\"><img width=\"553\" height=\"493\" alt=\"image\" src=\"Image_095.png\" id=\"3401\"></span></p><p  id=\"3402\">Add: Validation</p><p  id=\"3403\"><br id=\"3404\"></p><p  id=\"3405\">Add: RequiredFieldValidator</p><p  id=\"3406\"><br id=\"3407\"></p><p  id=\"3408\">Add: CustomValidator</p><p  id=\"3409\"><br id=\"3410\"></p><p  id=\"3411\">* All are CustomValidator</p><p  id=\"3412\"><br id=\"3413\"></p><p  id=\"3414\">Add: Eight TextBox</p><p  id=\"3415\"><br id=\"3416\"></p><p  id=\"3417\"><br id=\"3418\"></p><p  id=\"3419\">Add: FileUpload</p><p  id=\"3420\"><br id=\"3421\"></p><p  id=\"3422\">Add: Add Buttom</p><p  id=\"3423\"><br id=\"3424\"></p><p class=\"s27\"  id=\"3425\">-</p><p  id=\"3426\"><br id=\"3427\"></p><p  id=\"3428\">You are Visiting Design View. Click Source to view source Code.</p><p  id=\"3429\"><br id=\"3430\"></p><p  id=\"3431\">I placed in table format; you can remove these table formats using div if you like.</p><p  id=\"3432\"><br id=\"3433\"></p><ul id=\"l87\"><li  id=\"3435\"><p  id=\"3436\">ValidationSummary: Validation Summary is used to provide users validation summary, if there is any validation fail, it will show up list of validation error message, error message are customizable.</p><p class=\"s90\"  id=\"3437\">&lt;<span  id=\"3438\">asp</span>:<span  id=\"3439\">ValidationSummary </span><span  id=\"3440\">ID</span>=\"ValidationSummary\" <span  id=\"3441\">runat</span>=\"server\" <span  id=\"3442\">ForeColor</span>=\"#FF6666\" /&gt;</p></li><li  id=\"3443\"><p  id=\"3444\">Make sure you have runat=”server”, otherwise code does not execute at server.</p></li><li  id=\"3445\"><p  id=\"3446\">Add: TextBox</p></li><li  id=\"3447\"><p class=\"s90\"  id=\"3448\">&lt;<span  id=\"3449\">asp</span>:<span  id=\"3450\">TextBox </span><span  id=\"3451\">ID</span>=\"TextBoxName\" <span  id=\"3452\">runat</span>=server&gt;&lt;/<span  id=\"3453\">asp</span>:<span  id=\"3454\">TextBox</span>&gt;</p></li><li  id=\"3455\"><p  id=\"3456\">This is example for textbox Name. Repeat same process for Street, PostalCode, City, Country, Phone, Email and WebSite.</p></li><li  id=\"3457\"><p  id=\"3458\">Each Textbox should have unique id so if you choose id that is self- explanatory it‟s easier to refer later on for example choose Textbox id “TextboxEmail” for email input textbox.</p></li><li  id=\"3459\"><p  id=\"3460\">Add: Required Filed Validator</p><p  id=\"3461\"><br id=\"3462\"></p><p  id=\"3463\">In Vcard website Name an Email must provide so we need to add Required Field Validator. Go to Toolbox <span class=\"s89\" id=\"3464\"></span><span class=\"s28\" id=\"3465\"> </span>Validation <span class=\"s89\" id=\"3466\"></span><span class=\"s28\" id=\"3467\"> </span>click on “RequiredFieldValidator”</p><p class=\"s90\"  id=\"3468\">&lt;<span  id=\"3469\">asp</span>:<span  id=\"3470\">RequiredFieldValidator </span><span  id=\"3471\">ID</span>=\"RequiredFieldValidatorName\" <span  id=\"3472\">runat</span>=\"server\" <span  id=\"3473\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"3474\">ErrorMessage</span>=\"Name Required\"&gt; &lt;/<span  id=\"3475\">asp</span>:<span  id=\"3476\">RequiredFieldValidator</span>&gt;</p><p  id=\"3477\"><br id=\"3478\"></p></li><li  id=\"3479\"><p class=\"s91\"  id=\"3480\"><span class=\"p\" id=\"3481\">RequiredFieldValidator start and end with </span>asp<span  id=\"3482\">:</span>RequiredFieldValidator tags.</p></li><li  id=\"3483\"><p  id=\"3484\">Important thing in RequiredFiledValidator is “ContorlToValidate”, here ControlToValidate is equal to “TextBoxName”. Please look carefully “TextBoxName” is the id of Input “TextBox” that we created for Name Input Data that means we are now making Input Filed Name is required Field. ErrorMessage is the message that will appear if client tries to send empty data.</p></li><li  id=\"3485\"><p  id=\"3486\">Repeat same process “RequiredFieldValidator” for Email as well.</p></li><li  id=\"3487\"><p  id=\"3488\">Add: Custom Validator:</p></li><li  id=\"3489\"><p  id=\"3490\">input field should be validate on server side. To add custom validator,</p></li><li  id=\"3491\"><p  id=\"3492\">Go to Toolbox <span class=\"s89\" id=\"3493\"></span><span class=\"s28\" id=\"3494\"> </span>Validation <span class=\"s89\" id=\"3495\"></span><span class=\"s28\" id=\"3496\"> </span>click on “CustomValidation”</p><p class=\"s90\"  id=\"3497\">&lt;<span  id=\"3498\">asp</span>:<span  id=\"3499\">CustomValidator </span><span  id=\"3500\">ID</span>=\"CustomValidatorName\" <span  id=\"3501\">runat</span>=\"server\" <span  id=\"3502\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"3503\">ErrorMessage</span>=\"Name is not Valid\" <span  id=\"3504\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span  id=\"3505\">*</span>&lt;/<span  id=\"3506\">asp</span>:<span  id=\"3507\">CustomValidator</span>&gt;</p></li><li  id=\"3508\"><p class=\"s91\"  id=\"3509\"><span class=\"p\" id=\"3510\">Custom Validator start and end with </span>asp<span  id=\"3511\">:</span>CustomValidator tags.</p></li><li  id=\"3512\"><p  id=\"3513\">controlToValidate=”TextBoxName” is we are validating Input TextBox Name.</p></li><li  id=\"3514\"><p  id=\"3515\">ErrorMessage. Message show up in Validation Summary list if input data is not valid.</p></li><li  id=\"3516\"><p class=\"s91\"  id=\"3517\"><span class=\"p\" id=\"3518\">* text or character between </span>asp<span  id=\"3519\">:</span>CustomValidator <span  id=\"3520\">start and end tags will show up where you placed </span>asp<span  id=\"3521\">:</span>CustomValidator <span  id=\"3522\">tags if Data is not Valid.</span></p></li><li  id=\"3523\"><p class=\"s92\"  id=\"3524\">Onservervalidate <span  id=\"3525\">here we specify which methods should we run or is relevant. it is linking methods called “CustomValidatorName_ServerValidate” this method must be create at code page. Explained later one.</span></p></li><li  id=\"3526\"><p class=\"s92\"  id=\"3527\">Repeat similar process for Email, street, postal code, country, city, phone, email and website.</p></li><li  id=\"3528\"><p class=\"s92\"  id=\"3529\">For references see code at next page.</p><p  id=\"3530\">VcardControl.ascx</p><p  id=\"3531\"><br id=\"3532\"></p><p class=\"s94\"  id=\"3533\">&lt;<span  id=\"3534\">form </span><span  id=\"3535\">id</span>=\"FormVcard\" <span  id=\"3536\">runat</span>=\"server\"&gt;</p><p class=\"s94\"  id=\"3537\">&lt;<span  id=\"3538\">div </span><span  id=\"3539\">class</span>=\"errorMessage\"&gt; &lt;<span  id=\"3540\">asp</span>:<span  id=\"3541\">Label </span><span  id=\"3542\">ID</span>=\"LabelNotice\" <span  id=\"3543\">runat</span>=\"server\" <span  id=\"3544\">Text</span>=\"\"&gt;&lt;/<span  id=\"3545\">asp</span>:<span  id=\"3546\">Label</span>&gt;</p><p class=\"s94\"  id=\"3547\">&lt;<span  id=\"3548\">asp</span>:<span  id=\"3549\">ValidationSummary </span><span  id=\"3550\">ID</span>=\"ValidationSummary\" <span  id=\"3551\">runat</span>=\"server\" <span  id=\"3552\">ForeColor</span>=\"#FF6666\" /&gt;&lt;/<span  id=\"3553\">div</span>&gt;</p><p class=\"s94\"  id=\"3554\">&lt;<span  id=\"3555\">table </span>&gt;</p><p class=\"s94\"  id=\"3556\">&lt;<span  id=\"3557\">tr </span><span  id=\"3558\">class</span>=\"name\"&gt;</p><p class=\"s94\"  id=\"3559\">&lt;<span  id=\"3560\">td</span>&gt; <span  id=\"3561\">Name: </span>&lt;/<span  id=\"3562\">td</span>&gt;&lt;<span  id=\"3563\">td</span>&gt;&lt;<span  id=\"3564\">asp</span>:<span  id=\"3565\">TextBox </span><span  id=\"3566\">ID</span>=\"TextBoxName\" <span  id=\"3567\">runat</span>=server&gt;&lt;/<span  id=\"3568\">asp</span>:<span  id=\"3569\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3570\">&lt;<span  id=\"3571\">asp</span>:<span  id=\"3572\">RequiredFieldValidator </span><span  id=\"3573\">ID</span>=\"RequiredFieldValidatorName\" <span  id=\"3574\">runat</span>=\"server\" <span  id=\"3575\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"3576\">ErrorMessage</span>=\"Name Required\" <span  id=\"3577\">Font-Size</span>=\"Small\"</p><p class=\"s94\"  id=\"3578\"><span  id=\"3579\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span  id=\"3580\">asp</span>:<span  id=\"3581\">RequiredFieldValidator</span>&gt;</p><p class=\"s94\"  id=\"3582\">&lt;<span  id=\"3583\">asp</span>:<span  id=\"3584\">CustomValidator </span><span  id=\"3585\">ID</span>=\"CustomValidatorName\" <span  id=\"3586\">runat</span>=\"server\" <span  id=\"3587\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"3588\">ErrorMessage</span>=\"Name is not Valid\" <span  id=\"3589\">ForeColor</span>=\"#CC0000\"</p><p class=\"s94\"  id=\"3590\"><span  id=\"3591\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span  id=\"3592\">*</span>&lt;/<span  id=\"3593\">asp</span>:<span  id=\"3594\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3595\">&lt;/<span  id=\"3596\">td</span>&gt;</p><p class=\"s94\"  id=\"3597\">&lt;/<span  id=\"3598\">tr</span>&gt;</p><p class=\"s94\"  id=\"3599\">&lt;<span  id=\"3600\">tr </span><span  id=\"3601\">class</span>=\"street\"&gt;</p><p class=\"s94\"  id=\"3602\">&lt;<span  id=\"3603\">td</span>&gt; <span  id=\"3604\">Street:</span>&lt;/<span  id=\"3605\">td</span>&gt;&lt;<span  id=\"3606\">td</span>&gt; &lt;<span  id=\"3607\">asp</span>:<span  id=\"3608\">TextBox </span><span  id=\"3609\">ID</span>=\"TextBoxStreet\" <span  id=\"3610\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3611\">asp</span>:<span  id=\"3612\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3613\">&lt;/<span  id=\"3614\">td</span>&gt;</p><p class=\"s94\"  id=\"3615\">&lt;/<span  id=\"3616\">tr</span>&gt;</p><p class=\"s94\"  id=\"3617\">&lt;<span  id=\"3618\">tr </span><span  id=\"3619\">class</span>=\"postalCode\"&gt;</p><p class=\"s94\"  id=\"3620\">&lt;<span  id=\"3621\">td</span>&gt; <span  id=\"3622\">PostalCode:</span>&lt;/<span  id=\"3623\">td</span>&gt;&lt;<span  id=\"3624\">td</span>&gt; &lt;<span  id=\"3625\">asp</span>:<span  id=\"3626\">TextBox </span><span  id=\"3627\">ID</span>=\"TextBoxPostalCode\" <span  id=\"3628\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3629\">asp</span>:<span  id=\"3630\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3631\">&lt;<span  id=\"3632\">asp</span>:<span  id=\"3633\">CustomValidator </span><span  id=\"3634\">ID</span>=\"CustomValidatorPostalCode\" <span  id=\"3635\">runat</span>=\"server\" <span  id=\"3636\">Font-Size</span>=\"Small\" <span  id=\"3637\">ErrorMessage</span>=\"Postal Code 4 digit\" <span  id=\"3638\">ControlToValidate</span>=\"TextBoxPostalCode\" <span  id=\"3639\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span  id=\"3640\">*</span>&lt;/<span  id=\"3641\">asp</span>:<span  id=\"3642\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3643\">&lt;/<span  id=\"3644\">td</span>&gt;</p><p class=\"s94\"  id=\"3645\">&lt;/<span  id=\"3646\">tr</span>&gt;</p><p class=\"s94\"  id=\"3647\">&lt;<span  id=\"3648\">tr </span><span  id=\"3649\">class</span>=\"city\"&gt;</p><p class=\"s94\"  id=\"3650\">&lt;<span  id=\"3651\">td</span>&gt; <span  id=\"3652\">City:</span>&lt;/<span  id=\"3653\">td</span>&gt;&lt;<span  id=\"3654\">td</span>&gt; &lt;<span  id=\"3655\">asp</span>:<span  id=\"3656\">TextBox </span><span  id=\"3657\">ID</span>=\"TextBoxCity\" <span  id=\"3658\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3659\">asp</span>:<span  id=\"3660\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3661\">&lt;/<span  id=\"3662\">tr</span>&gt;</p><p class=\"s94\"  id=\"3663\">&lt;<span  id=\"3664\">tr </span><span  id=\"3665\">class</span>=\"country\"&gt;</p><p class=\"s94\"  id=\"3666\">&lt;<span  id=\"3667\">td</span>&gt; <span  id=\"3668\">Country:</span>&lt;/<span  id=\"3669\">td</span>&gt;&lt;<span  id=\"3670\">td</span>&gt; &lt;<span  id=\"3671\">asp</span>:<span  id=\"3672\">TextBox </span><span  id=\"3673\">ID</span>=\"TextBoxCountry\" <span  id=\"3674\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3675\">asp</span>:<span  id=\"3676\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3677\">&lt;<span  id=\"3678\">asp</span>:<span  id=\"3679\">CustomValidator </span><span  id=\"3680\">ID</span>=\"CustomValidatorCountry\" <span  id=\"3681\">runat</span>=\"server\" <span  id=\"3682\">Font-Size</span>=\"Small\" <span  id=\"3683\">ErrorMessage</span>=\"Country Not Valid\" <span  id=\"3684\">ControlToValidate</span>=\"TextBoxCountry\"</p><p class=\"s94\"  id=\"3685\"><span  id=\"3686\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span  id=\"3687\">*</span>&lt;/<span  id=\"3688\">asp</span>:<span  id=\"3689\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3690\">&lt;/<span  id=\"3691\">td</span>&gt;</p><p class=\"s94\"  id=\"3692\">&lt;/<span  id=\"3693\">tr</span>&gt;</p><p class=\"s94\"  id=\"3694\">&lt;<span  id=\"3695\">tr </span><span  id=\"3696\">class</span>=\"phone\"&gt;</p><p class=\"s94\"  id=\"3697\">&lt;<span  id=\"3698\">td</span>&gt; <span  id=\"3699\">Phone:</span><span  id=\"3700\">&amp;nbsp; </span><span  id=\"3701\">+45</span>&lt;/<span  id=\"3702\">td</span>&gt;&lt;<span  id=\"3703\">td</span>&gt;&lt;<span  id=\"3704\">asp</span>:<span  id=\"3705\">TextBox </span><span  id=\"3706\">ID</span>=\"TextBoxPhone\" <span  id=\"3707\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3708\">asp</span>:<span  id=\"3709\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3710\">&lt;<span  id=\"3711\">asp</span>:<span  id=\"3712\">CustomValidator </span><span  id=\"3713\">ID</span>=\"CustomValidatorPhone\" <span  id=\"3714\">runat</span>=\"server\" <span  id=\"3715\">Font-Size</span>=\"Small\" <span  id=\"3716\">ErrorMessage</span>=\"Phone must be 8 digit, Without +45 \" <span  id=\"3717\">ControlToValidate</span>=\"TextBoxPhone\"</p><p class=\"s94\"  id=\"3718\"><span  id=\"3719\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span  id=\"3720\">*</span>&lt;/<span  id=\"3721\">asp</span>:<span  id=\"3722\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3723\">&lt;/<span  id=\"3724\">td</span>&gt;</p><p class=\"s94\"  id=\"3725\">&lt;/<span  id=\"3726\">tr</span>&gt;</p><p class=\"s94\"  id=\"3727\">&lt;<span  id=\"3728\">tr </span><span  id=\"3729\">class</span>=\"email\"&gt;</p><p class=\"s94\"  id=\"3730\">&lt;<span  id=\"3731\">td</span>&gt; <span  id=\"3732\">Email: </span>&lt;/<span  id=\"3733\">td</span>&gt;&lt;<span  id=\"3734\">td</span>&gt;&lt;<span  id=\"3735\">asp</span>:<span  id=\"3736\">TextBox </span><span  id=\"3737\">ID</span>=\"TextBoxEmail\" <span  id=\"3738\">runat</span>=\"server\" <span  id=\"3739\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span  id=\"3740\">asp</span>:<span  id=\"3741\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3742\">&lt;<span  id=\"3743\">asp</span>:<span  id=\"3744\">RequiredFieldValidator </span><span  id=\"3745\">ID</span>=\"RequiredFieldValidatorEmail\" <span  id=\"3746\">runat</span>=\"server\" <span  id=\"3747\">Font-Size</span>=\"Small\" <span  id=\"3748\">ErrorMessage</span>=\"Email Required\" <span  id=\"3749\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span  id=\"3750\">Email</span></p><p class=\"s94\"  id=\"3751\"><span  id=\"3752\">Required</span>&lt;/<span  id=\"3753\">asp</span>:<span  id=\"3754\">RequiredFieldValidator</span>&gt;</p><p class=\"s94\"  id=\"3755\">&lt;<span  id=\"3756\">asp</span>:<span  id=\"3757\">CustomValidator </span><span  id=\"3758\">ID</span>=\"CustomValidatorEmail\" <span  id=\"3759\">runat</span>=\"server\" <span  id=\"3760\">Font-Size</span>=\"Small\" <span  id=\"3761\">ErrorMessage</span>=\"Email Not Valid\" <span  id=\"3762\">ControlToValidate</span>=\"TextBoxEmail\" <span  id=\"3763\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span  id=\"3764\">*</span>&lt;/<span  id=\"3765\">asp</span>:<span  id=\"3766\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3767\">&lt;/<span  id=\"3768\">td</span>&gt;</p><p class=\"s94\"  id=\"3769\">&lt;/<span  id=\"3770\">tr</span>&gt;</p><p class=\"s94\"  id=\"3771\">&lt;<span  id=\"3772\">tr </span><span  id=\"3773\">class</span>=\"website\"&gt;</p><p  id=\"3774\"><br id=\"3775\"></p><p class=\"s94\"  id=\"3776\">&lt;<span  id=\"3777\">td</span>&gt; <span  id=\"3778\">WebSite:</span>&lt;/<span  id=\"3779\">td</span>&gt;&lt;<span  id=\"3780\">td</span>&gt; &lt;<span  id=\"3781\">asp</span>:<span  id=\"3782\">TextBox </span><span  id=\"3783\">ID</span>=\"TextBoxWebsite\" <span  id=\"3784\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3785\">asp</span>:<span  id=\"3786\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3787\">&lt;<span  id=\"3788\">asp</span>:<span  id=\"3789\">CustomValidator </span><span  id=\"3790\">ID</span>=\"CustomValidatorWebSite\" <span  id=\"3791\">runat</span>=\"server\" <span  id=\"3792\">ErrorMessage</span>=\"Website not valid\" <span  id=\"3793\">ControlToValidate</span>=\"TextBoxWebsite\" <span  id=\"3794\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span  id=\"3795\">*</span>&lt;/<span  id=\"3796\">asp</span>:<span  id=\"3797\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3798\">&lt;/<span  id=\"3799\">td</span>&gt;</p><p class=\"s94\"  id=\"3800\">&lt;/<span  id=\"3801\">tr</span>&gt;</p><p class=\"s94\"  id=\"3802\">&lt;<span  id=\"3803\">tr </span><span  id=\"3804\">class</span>=\"photo\"&gt;</p><p class=\"s94\"  id=\"3805\">&lt;<span  id=\"3806\">td</span>&gt; <span  id=\"3807\">Photo:</span>&lt;/<span  id=\"3808\">td</span>&gt;&lt;<span  id=\"3809\">td</span>&gt; &lt;<span  id=\"3810\">asp</span>:<span  id=\"3811\">FileUpload </span><span  id=\"3812\">ID</span>=\"FileUploadPhoto\" <span  id=\"3813\">runat</span>=\"server\" /&gt;</p><p class=\"s94\"  id=\"3814\">&lt;/<span  id=\"3815\">td</span>&gt;</p><p class=\"s94\"  id=\"3816\">&lt;/<span  id=\"3817\">tr</span>&gt;</p><p class=\"s94\"  id=\"3818\">&lt;<span  id=\"3819\">tr </span>&gt;</p><p class=\"s94\"  id=\"3820\">&lt;<span  id=\"3821\">td</span>&gt;</p><p class=\"s94\"  id=\"3822\"><span  id=\"3823\">&amp;nbsp;</span>&lt;/<span  id=\"3824\">td</span>&gt; &lt;<span  id=\"3825\">td</span>&gt; &lt;<span  id=\"3826\">asp</span>:<span  id=\"3827\">Button </span><span  id=\"3828\">ID</span>=\"ButtonCreate\" <span  id=\"3829\">runat</span>=\"server\" <span  id=\"3830\">Text</span>=\"Create\" <span  id=\"3831\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span  id=\"3832\">td</span>&gt;</p><p class=\"s94\"  id=\"3833\">&lt;/<span  id=\"3834\">tr</span>&gt;</p><p  id=\"3835\"><br id=\"3836\"></p><p class=\"s94\"  id=\"3837\">&lt;/<span  id=\"3838\">table</span>&gt;</p><p class=\"s94\"  id=\"3839\">&lt;/<span  id=\"3840\">form</span>&gt;</p><p  id=\"3841\"><br id=\"3842\"></p><p  id=\"3843\">If you want to follow me, copy above code and paste it into your User Control Design View.</p><p  id=\"3844\">General description of “VcardControl.ascx” if you are new to ASP.NET user control</p><p  id=\"3845\"><br id=\"3846\"></p><p  id=\"3847\">Description: It start with form tags, you must include runat=”server” because we want to execute code at server side. And I added div class that used for style sheet and I used table to nicely format input fields.</p><p class=\"s90\"  id=\"3848\"><span  id=\"3849\">&lt;asp</span>:<span  id=\"3850\">Label </span><span  id=\"3851\">ID</span>=\"LabelNotice\" <span  id=\"3852\">runat</span>=\"server\" <span  id=\"3853\">Text</span>=\"\"&gt; it‟s a label that will use to show up conformation message to end users or client.</p><p  id=\"3854\"><br id=\"3855\"></p></li><li  id=\"3856\"><p class=\"s90\"  id=\"3857\">&lt;table&gt; is starting table</p></li><li  id=\"3858\"><p class=\"s90\"  id=\"3859\">&lt;tr&gt; it‟s a table row. One row contains multiple data cells so that we can use multiple &lt;td&gt; between opening and closing tags of table row &lt;tr&gt;. TD stands for “Table Data”.</p></li><li  id=\"3860\"><p class=\"s90\"  id=\"3861\">&amp;nbsp; means white space.</p></li><li  id=\"3862\"><p class=\"s90\"  id=\"3863\">Closing tags of table row, table and form tags.</p></li><li  id=\"3864\"><p class=\"s90\"  id=\"3865\">All tags contain forward slash “/” means closing tags.</p></li><li  id=\"3866\"><p class=\"s90\"  id=\"3867\">Example &lt;/tr&gt; &lt;/td&gt;, &lt;/table&gt; tags.</p></li><li  id=\"3868\"><p class=\"s92\"  id=\"3869\">Onclick is events that will executed when user clicks on Button. In our Vcard we crate button id “ButtonCreate” and called “ButtonCreat_Click” methods that is in code behind page.</p><p  id=\"3870\"><br id=\"3871\"></p><p class=\"s93\"  id=\"3872\">Code behind Page “<span class=\"p\" id=\"3873\">VcardControl.ascx.cs” page.</span></p><p  id=\"3874\"><br id=\"3875\"></p><p  id=\"3876\">To open code behind page you can double click on button. For example let‟s double click at CustomValidator for Name. It will create “<span class=\"s90\" id=\"3877\">CustomValidatorName_ServerValidate</span>” methods at code behind page and links automatically at design view for you. Or you can manually add methods to code behind page and link manually at Design view. See captured screen bellow of code behind page.</p><p  id=\"3878\"><br id=\"3879\"></p><p  id=\"3880\"><span id=\"3881\"><img width=\"616\" height=\"331\" alt=\"image\" src=\"Image_096.png\" id=\"3882\"></span></p><p  id=\"3883\"><br id=\"3884\"></p></li><li  id=\"3885\"><p  id=\"3886\">Using is used to references other namespace</p></li><li  id=\"3887\"><p class=\"s8\"  id=\"3888\">Namespace <span class=\"p\" id=\"3889\">“VCardGenerator” namespace name.</span></p></li><li  id=\"3890\"><p class=\"s8\"  id=\"3891\">Public <span class=\"p\" id=\"3892\">means public, available from outside</span></p></li><li  id=\"3893\"><p class=\"s8\"  id=\"3894\">Colon <span class=\"p\" id=\"3895\">“:” means left side of class is inherited from right side of class</span></p></li><li  id=\"3896\"><p class=\"s8\"  id=\"3897\">Partial Class<span class=\"p\" id=\"3898\">: it‟s not a single class; C# compiler will group all the partial classes together and treat as a single class.</span></p></li><li  id=\"3899\"><p class=\"s8\"  id=\"3900\">VcardControl <span class=\"p\" id=\"3901\">is name of class and it is inheritance from System.Web.Ui.Usercontrol</span></p></li><li  id=\"3902\"><p class=\"s8\"  id=\"3903\">Protected <span class=\"p\" id=\"3904\">means, member is accessible within its class and by derived classes.</span></p></li><li  id=\"3905\"><p class=\"s8\"  id=\"3906\">Void<span class=\"p\" id=\"3907\">: it means do not return anything, just execute block of code that inside open curly and close curly brackets.</span></p></li><li  id=\"3908\"><p class=\"s8\"  id=\"3909\">Page Load<span class=\"p\" id=\"3910\">: it‟s a method that executed when page load at server, All code inside Page_Load will executed automatically when page loads.</span></p></li><li  id=\"3911\"><p  id=\"3912\">Be care full you should not write your code outside open and close curly brackets of Class. You have to place your code inside open and close curly brackets of Class. In our case “VcardControl class”, otherwise C# compiler will failed.</p><p  id=\"3913\"><br id=\"3914\"></p><h3  id=\"heading3915\" class=\"heading3915\"><a name=\"bookmark56\" id=\"3916\" >CustomValidator for Name:</a></h3><div id=\"contentheading3915\" ><p  id=\"3917\">Let‟s Create CustomValidator for Name, Open Design View “VcardControl.ascx” and double click on CustomValidator that link to Name Textbox. If you follow me your code behind page should looks like this</p><p  id=\"3918\"><br id=\"3919\"></p><p  id=\"3920\"><span id=\"3921\"><img width=\"626\" height=\"120\" alt=\"image\" src=\"Image_097.png\" id=\"3922\"></span></p><p  id=\"3923\"><br id=\"3924\"></p></div></li><li  id=\"3925\"><p  id=\"3926\">Above captured screen is part of “VcardContro.ascx”</p></li><li  id=\"3927\"><p  id=\"3928\">See second line of code, its TextBox and has id “TextBoxName”</p></li><li  id=\"3929\"><p  id=\"3930\">See seventh line of code, ControlToValidate =”TextBoxName” . it means CustomValidator is linked to TextboxName.</p></li><li  id=\"3931\"><p  id=\"3932\">See last line of onservervalidate=”CustomValidatorName_ServerValidate” onservervalidate is important, in above case it‟s equal to “CustomValidator_ServerValidate”. It must be same name methods that you specify between double quote in your code behind page. Let‟s create methods “CustomValidatorName_ServerValidate”.</p><p  id=\"3933\"><br id=\"3934\"></p><p class=\"s93\"  id=\"3935\"><span  id=\"3936\">protected void </span>CustomValidatorName_ServerValidate(<span  id=\"3937\">object </span>source, <span  id=\"3938\">ServerValidateEventArgs </span>args)</p><p class=\"s93\"  id=\"3939\">{</p><p class=\"s93\"  id=\"3940\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s93\"  id=\"3941\">}</p><p  id=\"3942\"><br id=\"3943\"></p></li><li  id=\"3944\"><p  id=\"3945\">This is simple validation, here I get serverValidateEventArgs and stored in variable args.</p></li><li  id=\"3946\"><p  id=\"3947\">I called bool methods IsValid, if provided value‟s length is greater than zero it will set validate value equal to true otherwise it will set up false.</p></li><li  id=\"3948\"><p  id=\"3949\">Here I pass values to RemoveSpeicalCharacter() methods because I want to replace all special character to secure websites.</p><p  id=\"3950\"><span class=\"s97\"  id=\"3951\">RemoveSpeicalCharacter() methods</span></p><p class=\"s66\"  id=\"3952\">public string <span  id=\"3953\">RemoveSpecialCharacter(</span>string <span  id=\"3954\">input)</span></p><p class=\"s70\"  id=\"3955\">{</p><p class=\"s70\"  id=\"3956\"><span  id=\"3957\">return </span><span  id=\"3958\">Regex</span>.Replace(input, <span  id=\"3959\">\"[^0-9a-zA-Z. ]+\"</span>, <span  id=\"3960\">\"\"</span>);</p><p class=\"s70\"  id=\"3961\">}</p><p  id=\"3962\"><br id=\"3963\"></p><ul id=\"l88\"><li  id=\"3965\"><p  id=\"3966\">It is written in Regular expression.</p></li><li  id=\"3967\"><p  id=\"3968\">Regex is regular expression can be use using Regex.</p></li><li  id=\"3969\"><p  id=\"3970\">Make sure to add <span class=\"s66\" id=\"3971\">using </span><span class=\"s70\" id=\"3972\">System.Text.RegularExpression before Namespace starts.</span></p></li></ul><p class=\"s27\"  id=\"3973\">-    <span class=\"p\" id=\"3974\">RemoveSpeicalCharacter() Method take one parameter string, it removes all character but not from 0 to 9 digits, from A to Z upper and lower case characters and period.</span></p><p  id=\"3975\"><span class=\"s97\"  id=\"3976\">RemoveSpeicalCharacter() methods</span></p><p class=\"s66\"  id=\"3977\">public string <span  id=\"3978\">RemoveSpecialCharacter(</span>string <span  id=\"3979\">input)</span></p><p class=\"s70\"  id=\"3980\">{</p><p class=\"s70\"  id=\"3981\"><span  id=\"3982\">return </span><span  id=\"3983\">Regex</span>.Replace(input, <span  id=\"3984\">\"[^0-9a-zA-Z. ]+\"</span>, <span  id=\"3985\">\"\"</span>);</p><p class=\"s70\"  id=\"3986\">}</p><p  id=\"3987\"><br id=\"3988\"></p><ul id=\"l89\"><li  id=\"3990\"><p  id=\"3991\">It is written in Regular expression.</p></li><li  id=\"3992\"><p  id=\"3993\">Regex is regular expression can be use using Regex.</p></li><li  id=\"3994\"><p  id=\"3995\">Make sure to add <span class=\"s66\" id=\"3996\">using </span><span class=\"s70\" id=\"3997\">System.Text.RegularExpression before Namespace starts.</span></p></li></ul><p class=\"s27\"  id=\"3998\">-    <span class=\"p\" id=\"3999\">RemoveSpeicalCharacter() Method take one parameter string, it removes all character but not from 0 to 9 digits, from A to Z upper and lower case characters and period.</span></p><p  id=\"4000\"><span  id=\"4001\"> </span></p><h3  id=\"heading4002\" class=\"heading4002\"><a name=\"bookmark57\" id=\"4003\" >Email Validation:</a></h3></li><li  id=\"4004\"><p  id=\"4005\">Email Validation:</p></li><li  id=\"4006\"><p  id=\"4007\">I created methods ValidateEmail()<span class=\"s3\" id=\"4008\">25</span></p><p  id=\"4009\"><span class=\"s65\"  id=\"4010\">ValidateEmail </span><span class=\"s97\"  id=\"4011\">() methods:</span></p><p class=\"s66\"  id=\"4012\">public bool <span  id=\"4013\">ValidateEmail(</span>string <span  id=\"4014\">email)</span></p><p class=\"s70\"  id=\"4015\">{ <span  id=\"4016\">return </span><span  id=\"4017\">Regex</span>.IsMatch(email,</p><p class=\"s99\"  id=\"4018\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\"  id=\"4019\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span  id=\"4020\">+</span></p><p class=\"s99\"  id=\"4021\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA- Z]\\.)+[a-zA-Z]{2,6}))$\"<span  id=\"4022\">); }</span></p><p  id=\"4023\"><br id=\"4024\"></p><ul id=\"l90\"><li  id=\"4026\"><p  id=\"4027\">This method has one parameter email; here input string email is compared with pattern. Pattern is “valid email character id” + “@” + “Domain or sub Domain name”. And finally returns true if pattern is match otherwise return false.</p></li><li  id=\"4028\"><p  id=\"4029\">Example:</p><ul id=\"l91\"><li  id=\"4031\"><p class=\"s8\"  id=\"4032\">Jeevan_2np@yahoo.com <span class=\"p\" id=\"4033\">will return true</span></p></li><li  id=\"4034\"><p class=\"s8\"  id=\"4035\">Jeevan_2np.at.the.rate.yahoo.com <span class=\"p\" id=\"4036\">will return false- because “@” is missing here. Email id must contain “@” symbol</span></p></li></ul></li></ul><p  id=\"4037\"><span class=\"s65\"  id=\"4038\">ValidateEmail </span><span class=\"s97\"  id=\"4039\">() methods:</span></p><p class=\"s66\"  id=\"4040\">public bool <span  id=\"4041\">ValidateEmail(</span>string <span  id=\"4042\">email)</span></p><p class=\"s70\"  id=\"4043\">{ <span  id=\"4044\">return </span><span  id=\"4045\">Regex</span>.IsMatch(email,</p><p class=\"s99\"  id=\"4046\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\"  id=\"4047\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span  id=\"4048\">+</span></p><p class=\"s99\"  id=\"4049\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA- Z]\\.)+[a-zA-Z]{2,6}))$\"<span  id=\"4050\">); }</span></p><p  id=\"4051\"><br id=\"4052\"></p><ul id=\"l92\"><li  id=\"4054\"><p  id=\"4055\">This method has one parameter email; here input string email is compared with pattern. Pattern is “valid email character id” + “@” + “Domain or sub Domain name”. And finally returns true if pattern is match otherwise return false.</p></li><li  id=\"4056\"><p  id=\"4057\">Example:</p><ul id=\"l93\"><li  id=\"4059\"><p class=\"s8\"  id=\"4060\">Jeevan_2np@yahoo.com <span class=\"p\" id=\"4061\">will return true</span></p></li><li  id=\"4062\"><p class=\"s8\"  id=\"4063\">Jeevan_2np.at.the.rate.yahoo.com <span class=\"p\" id=\"4064\">will return false- because “@” is missing here. Email id must contain “@” symbol</span></p></li></ul></li></ul><p  id=\"4065\"><span  id=\"4066\"> </span></p></li><li  id=\"4067\"><p class=\"s93\"  id=\"4068\">Here is CustomEmailValidator Methods</p><p  id=\"4069\"><br id=\"4070\"></p><p class=\"s70\"  id=\"4071\"><span  id=\"4072\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"4073\">object </span>source, <span  id=\"4074\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"4075\">{ args.IsValid = ValidateEmail(args.Value.ToString()); }</p><p  id=\"4076\"><br id=\"4077\"></p><p class=\"s8\"  id=\"4078\">Description: <span class=\"p\" id=\"4079\">args.Value.ToString() is holding value that user typed in Email input Textbox in Browser, passing that value to ValidateEmail() method will decide whether passing value is in valid email format or not. If it is valid it will set args.IsValid = true, if it is not valid it will set args.IsValid = false;</span></p><p class=\"s70\"  id=\"4080\"><span  id=\"4081\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"4082\">object </span>source, <span  id=\"4083\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"4084\">{ args.IsValid = ValidateEmail(args.Value.ToString()); }</p><p  id=\"4085\"><br id=\"4086\"></p><p class=\"s8\"  id=\"4087\">Description: <span class=\"p\" id=\"4088\">args.Value.ToString() is holding value that user typed in Email input Textbox in Browser, passing that value to ValidateEmail() method will decide whether passing value is in valid email format or not. If it is valid it will set args.IsValid = true, if it is not valid it will set args.IsValid = false;</span></p><p  id=\"4089\"><span  id=\"4090\"> </span></p><p  id=\"4091\"><br id=\"4092\"></p><h3  id=\"heading4093\" class=\"heading4093\"><a name=\"bookmark58\" id=\"4094\" >Phone Validation:</a></h3><div id=\"contentheading4093\" ><p  id=\"4095\"><br id=\"4096\"></p><p  id=\"4097\"><span class=\"s65\"  id=\"4098\">CustomValidatorPhone_ServerValidate:</span></p><p  id=\"4099\"><br id=\"4100\"></p><p class=\"s70\"  id=\"4101\"><span  id=\"4102\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"4103\">object </span>source, <span  id=\"4104\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"4105\">{</p><p class=\"s66\"  id=\"4106\">if <span  id=\"4107\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"4108\">{</p><p class=\"s70\"  id=\"4109\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\"  id=\"4110\">}</p><p class=\"s66\"  id=\"4111\">else</p><p class=\"s70\"  id=\"4112\">{</p><p class=\"s70\"  id=\"4113\">args.IsValid = <span  id=\"4114\">true</span>;</p><p class=\"s70\"  id=\"4115\">}</p><p class=\"s70\"  id=\"4116\">}</p><p  id=\"4117\"><span class=\"s65\"  id=\"4118\">CustomValidatorPhone_ServerValidate:</span></p><p  id=\"4119\"><br id=\"4120\"></p><p class=\"s70\"  id=\"4121\"><span  id=\"4122\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"4123\">object </span>source, <span  id=\"4124\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"4125\">{</p><p class=\"s66\"  id=\"4126\">if <span  id=\"4127\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"4128\">{</p><p class=\"s70\"  id=\"4129\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\"  id=\"4130\">}</p><p class=\"s66\"  id=\"4131\">else</p><p class=\"s70\"  id=\"4132\">{</p><p class=\"s70\"  id=\"4133\">args.IsValid = <span  id=\"4134\">true</span>;</p><p class=\"s70\"  id=\"4135\">}</p><p class=\"s70\"  id=\"4136\">}</p><p  id=\"4137\"><span  id=\"4138\"> </span></p><p  id=\"4139\"><br id=\"4140\"></p><p  id=\"4141\"><br id=\"4142\"></p><p  id=\"4143\"><span id=\"4144\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_098.png\" id=\"4145\"></span></p><p class=\"s20\"  id=\"4146\">25 <a href=\"http://msdn.microsoft.com/en-us/library/01escwtf.aspx\" class=\"s11\" target=\"_blank\" id=\"4147\">Methods originally created by http://msdn.microsoft.com/en-us/library/01escwtf.aspx</a></p><p class=\"s93\"  id=\"4148\">Description: “CustomValidatorPhone_ServerValidate”</p><p  id=\"4149\"><br id=\"4150\"></p><p class=\"s93\"  id=\"4151\">First we check if user typed some value in Phone Number text box or not. If user typed some character on input text box its length must be greater than zero. If input value is great than zero, we need to validate whether it is valid phone number or not. We pass value to ValidatePhone() methods, ValidatePhone() method return true or false. If it is valid args.IsValid value is set to true, if not value is set to false.</p><p  id=\"4152\"><br id=\"4153\"></p><p class=\"s93\"  id=\"4154\">Else statement execute if input value is empty or less than zero character length. It means user do not want to provide phone number on their Vcard so that args.IsValid is set to true.</p><p  id=\"4155\"><br id=\"4156\"></p><p  id=\"4157\"><span class=\"s65\"  id=\"4158\">ValidatePhone() methods:</span></p><p class=\"s66\"  id=\"4159\">public bool <span  id=\"4160\">ValidatePhone(</span>string <span  id=\"4161\">input)</span></p><p class=\"s70\"  id=\"4162\">{</p><p class=\"s70\"  id=\"4163\"><span  id=\"4164\">if </span>(input.Length != 8) { <span  id=\"4165\">return false</span>; } <span  id=\"4166\">Regex </span>num = <span  id=\"4167\">new </span><span  id=\"4168\">Regex</span>(<span  id=\"4169\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"4170\">return <span  id=\"4171\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"4172\">}</p><p class=\"s70\"  id=\"4173\">Description:</p><p class=\"s70\"  id=\"4174\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span  id=\"4175\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\"  id=\"4176\">9 digits, it will return false because it’s not valid phone number.</p><p  id=\"4177\"><span class=\"s65\"  id=\"4178\">ValidatePhone() methods:</span></p><p class=\"s66\"  id=\"4179\">public bool <span  id=\"4180\">ValidatePhone(</span>string <span  id=\"4181\">input)</span></p><p class=\"s70\"  id=\"4182\">{</p><p class=\"s70\"  id=\"4183\"><span  id=\"4184\">if </span>(input.Length != 8) { <span  id=\"4185\">return false</span>; } <span  id=\"4186\">Regex </span>num = <span  id=\"4187\">new </span><span  id=\"4188\">Regex</span>(<span  id=\"4189\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"4190\">return <span  id=\"4191\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"4192\">}</p><p class=\"s70\"  id=\"4193\">Description:</p><p class=\"s70\"  id=\"4194\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span  id=\"4195\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\"  id=\"4196\">9 digits, it will return false because it’s not valid phone number.</p><p  id=\"4197\"><span  id=\"4198\"> </span></p><p  id=\"4199\"><br id=\"4200\"></p><p class=\"s100\"  id=\"4201\">Validation for rest of Input Fields Street, PostalCode, City, Country, and Website are listed at appendix as complete code or putting all code together “Vcardcontrol.ascx.cs” page title. Please check appendix page for more details.</p><p  id=\"4202\"><br id=\"4203\"></p><h4  id=\"4204\"><a name=\"a59\" id=\"4205\">Create Button Events.</a></h4><p  id=\"4206\"><br id=\"4207\"></p><p class=\"s93\"  id=\"4208\">End user submits data by clicking Create Button; here we have to do all processing steps. I have listed steps that need to do after end user clicks on “Create Button”.</p><p  id=\"4209\"><br id=\"4210\"></p></div></li><li  id=\"4211\"><p class=\"s93\"  id=\"4212\">Step 1: Hold or Store submitted data in a variable</p><p  id=\"4213\"><br id=\"4214\"></p></li><li  id=\"4215\"><p class=\"s93\"  id=\"4216\">Step 2: Validate and Remove special characters from submitted data</p><p  id=\"4217\"><br id=\"4218\"></p></li><li  id=\"4219\"><p class=\"s93\"  id=\"4220\">Step 3: Upload Image to server and save it in server location if user choose image files.</p><p  id=\"4221\"><br id=\"4222\"></p></li><li  id=\"4223\"><p class=\"s93\"  id=\"4224\">Step 4: Generate Vcard on the fly</p><p  id=\"4225\"><br id=\"4226\"></p></li><li  id=\"4227\"><p class=\"s93\"  id=\"4228\">Step 5: Send attach Email with Vcard</p><p  id=\"4229\"><br id=\"4230\"></p></li><li  id=\"4231\"><p class=\"s93\"  id=\"4232\">Step 6: Store data to Database for later use.</p><p  id=\"4233\"><br id=\"4234\"></p><p class=\"s93\"  id=\"4235\">Step 2 is already done for Email, Name and Phone. Rest of validation and remove special character are available at appendix page as complete code so that please check out appendix page.</p><p  id=\"4236\"><br id=\"4237\"></p><h3  id=\"heading4238\" class=\"heading4238\"><a name=\"bookmark59\" id=\"4239\" >Step 1: Hold or Store Submitted Data</a></h3><div id=\"contentheading4238\" ><p class=\"s93\"  id=\"4240\">-it‟s a very easy. See example for holding or retrieving value for Name from client side. <span  id=\"4241\">string </span>name = RemoveSpecialCharacter(TextBoxName.Text); I have created string variable name, name is equal to TextBoxName.Text, here TextBoxName is id of TextBoxName and .Text means text value from input textbox. I passed text value from input textbox to method “RemoveSpecialCharacter()” to remove special character. At the end string name will be equal to data or value that user typed in textbox other then special characters.</p><p class=\"s93\"  id=\"4242\">Repeat same process for rest of input data. See example as references.</p><p  id=\"4243\"><br id=\"4244\"></p><p  id=\"4245\"><br id=\"4246\"></p><p class=\"s66\"  id=\"4247\">string <span  id=\"4248\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"4249\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"4250\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"4251\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"4252\">string <span  id=\"4253\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"4254\">string <span  id=\"4255\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"4256\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p  id=\"4257\"><br id=\"4258\"></p><p class=\"s70\"  id=\"4259\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p class=\"s66\"  id=\"4260\">string <span  id=\"4261\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"4262\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"4263\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"4264\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"4265\">string <span  id=\"4266\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"4267\">string <span  id=\"4268\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"4269\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p  id=\"4270\"><br id=\"4271\"></p><p class=\"s70\"  id=\"4272\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p  id=\"4273\"><span  id=\"4274\"> </span></p></div><h3  id=\"heading4275\" class=\"heading4275\"><a name=\"bookmark60\" id=\"4276\" >Step 2: Validate Data</a></h3><div id=\"contentheading4275\" ><p class=\"s93\"  id=\"4277\">Double click on “Create” button, visual studio will automatically add event and open code behind page. If you follow me it must be looks like bellow</p><p  id=\"4278\"><br id=\"4279\"></p><p class=\"s93\"  id=\"4280\"><span  id=\"4281\">protected void </span>ButtonCreate_Click(<span  id=\"4282\">object </span>sender, <span  id=\"4283\">EventArgs </span>e)</p><p class=\"s93\"  id=\"4284\">{</p><p class=\"s90\"  id=\"4285\">if <span  id=\"4286\">(Page.IsValid)</span></p><p class=\"s93\"  id=\"4287\">{ // processing code goes here…….. }</p><p class=\"s93\"  id=\"4288\">}</p><p  id=\"4289\"><br id=\"4290\"></p><p class=\"s93\"  id=\"4291\">Visual studio creates ButtonCreate_Click() method events automatically. I added if(Page.IsValid) statement. It is very important to check all validation must be true, Page.IsValid will check whether page is valid or not.</p><p  id=\"4292\"><br id=\"4293\"></p><p class=\"s70\"  id=\"4294\">For example</p><p class=\"s70\"  id=\"4295\"><span  id=\"4296\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"4297\">object </span>source, <span  id=\"4298\">ServerValidateEventArgs </span>args)</p><p  id=\"4299\"><span class=\"s70\" id=\"4300\">{ </span><span class=\"s65\"  id=\"4301\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4302\">; }</span></p><p  id=\"4303\"><br id=\"4304\"></p><p class=\"s70\"  id=\"4305\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\"  id=\"4306\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span  id=\"4307\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p class=\"s70\"  id=\"4308\">For example</p><p class=\"s70\"  id=\"4309\"><span  id=\"4310\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"4311\">object </span>source, <span  id=\"4312\">ServerValidateEventArgs </span>args)</p><p  id=\"4313\"><span class=\"s70\" id=\"4314\">{ </span><span class=\"s65\"  id=\"4315\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4316\">; }</span></p><p  id=\"4317\"><br id=\"4318\"></p><p class=\"s70\"  id=\"4319\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\"  id=\"4320\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span  id=\"4321\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p  id=\"4322\"><span  id=\"4323\"> </span></p><p class=\"s93\"  id=\"4324\">If there is any validation fails or has false value, error message will show up at error summary and will not execute if(Page.IsValid) {} block of code.</p></div></li><li  id=\"4325\"><p class=\"s93\"  id=\"4326\">Note: Double back slash inside code is used to comments in c# programming language.</p><p  id=\"4327\"><br id=\"4328\"></p><h3  id=\"heading4329\" class=\"heading4329\"><a name=\"bookmark61\" id=\"4330\" >Step 3- Image Upload and Save to Server:</a></h3><div id=\"contentheading4329\" ><p class=\"s93\"  id=\"4331\">In Vcard, user is allowed to have Vcard with image, in order to generate vcard with image user should able to upload image using browse button. Add Upload Button, make Id is naming convention so upload button will be easy to recognize on code behind page. if you added Button it must look like bellow.</p><p class=\"s70\"  id=\"4332\">VcardControl.ascx</p><p class=\"s66\"  id=\"4333\">&lt;<span  id=\"4334\">asp</span>:<span  id=\"4335\">FileUpload </span><span  id=\"4336\">ID</span>=\"FileUploadPhoto\" <span  id=\"4337\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\"  id=\"4338\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p class=\"s70\"  id=\"4339\">VcardControl.ascx</p><p class=\"s66\"  id=\"4340\">&lt;<span  id=\"4341\">asp</span>:<span  id=\"4342\">FileUpload </span><span  id=\"4343\">ID</span>=\"FileUploadPhoto\" <span  id=\"4344\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\"  id=\"4345\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p  id=\"4346\"><span  id=\"4347\"> </span></p><p class=\"s93\"  id=\"4348\">In code behind page: using posted.saveas() methods, image will be uploaded to server. See code bellow as references. Your logic can be difference.</p><p  id=\"4349\"><br id=\"4350\"></p><p  id=\"4351\"><span id=\"4352\"><img width=\"598\" height=\"588\" alt=\"image\" src=\"Image_099.png\" id=\"4353\"></span></p><p class=\"s66\"  id=\"4354\">if <span  id=\"4355\">(FileUploadPhoto.PostedFile != </span>null <span  id=\"4356\">&amp;&amp; FileUploadPhoto.PostedFile.ContentLength</span></p><p class=\"s70\"  id=\"4357\">&gt; 0)</p><p class=\"s70\"  id=\"4358\">{ <span  id=\"4359\">string </span>guid = id.ToString(<span  id=\"4360\">\"N\"</span>);</p><p class=\"s70\"  id=\"4361\"><span  id=\"4362\">string </span>imageDirectory = Server.MapPath(<span  id=\"4363\">\"vcardimage\"</span>); <span  id=\"4364\">if </span>(<span  id=\"4365\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\"  id=\"4366\">{</p><p class=\"s70\"  id=\"4367\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\"  id=\"4368\">Server.MapPath(<span  id=\"4369\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"4370\">}</p><p class=\"s66\"  id=\"4371\">else</p><p class=\"s70\"  id=\"4372\">{ <span  id=\"4373\">Directory</span>.CreateDirectory(Server.MapPath(<span  id=\"4374\">\"vcardimage\"</span>));</p><p  id=\"4375\"><br id=\"4376\"></p><p class=\"s70\"  id=\"4377\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span  id=\"4378\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"4379\">}</p><p class=\"s70\"  id=\"4380\">}</p><p  id=\"4381\"><br id=\"4382\"></p><p class=\"s70\"  id=\"4383\">Description:</p><ul id=\"l94\"><li  id=\"4385\"><p class=\"s70\"  id=\"4386\">Fist we ensure that user browse or select file and Content Length of file is greater than zero that can be achieve by using FileUploadPhoto.PostedFile != <span  id=\"4387\">null (means posted files should not equal to null or empy) and </span>FileUploadPhoto.PostedFile.ContentLength &gt; 0 means length of file should be greater than zero. if file name and content length is greater than zero we go to next step.</p><p  id=\"4388\"><br id=\"4389\"></p></li><li  id=\"4390\"><p class=\"s70\"  id=\"4391\">Second: we make new guid, its unique id that system generates automatically, in theory guid is never be same or do not match each other. You may have raise questions here why do we need guid? We need because when user upload files we do not know what file name user has, if two user upload different file but same image file name and file type, system will overwride old files. To prevent from this we add extra string to file name so that file name will not be same even user upload more than one files on same name and file format.</p></li></ul></div></li></ul><p class=\"s101\"  id=\"4392\">o <span class=\"s70\" id=\"4393\">To get guid id we should call Guid id = Guid.NewGuid(); and string guid = id.ToString(\"N\"); ‚N‛ means guid will formatted without ‚-‚ symbol. By default guid looks like in that format 0000-0000-0000. Using ‚N‛ will remove ‚-‚so that guid will be in format of 123456.</span></p><ul id=\"l95\"><li  id=\"4395\"><p class=\"s70\"  id=\"4396\">Third: we check whether directory ‚vcardimage‛ exist or not. It is very important to make sure there must be directory to save files in Vcard case, all images goes insides ‚vcardimage‛ directory. You can choose different name if you like. If directory exist we save file</p><ul id=\"l96\"><li  id=\"4398\"><p class=\"s98\"  id=\"4399\">Directory<span  id=\"4400\">.Exists(directory name) will check whether passed director exist or not.</span></p></li><li  id=\"4401\"><p class=\"s70\"  id=\"4402\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\"  id=\"4403\">Server.MapPath(<span  id=\"4404\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p></li><li  id=\"4405\"><p class=\"s70\"  id=\"4406\">PostedFile.SaveAs() methods used to save posted file. Posted files means user submitted page to server by clicking buttons.</p></li><li  id=\"4407\"><p class=\"s70\"  id=\"4408\">FileUploadPhoto is id of asp:FileUpload that we created at design view or at VcardControl.ascx page</p></li></ul></li><li  id=\"4409\"><p class=\"s70\"  id=\"4410\">Forth: if director does not exist ‚else‛ statement code will be executed so we create directory first and save image after that.</p><ul id=\"l97\"><li  id=\"4412\"><p class=\"s98\"  id=\"4413\">Directory<span  id=\"4414\">.CreateDirectory(directory name) methods is used to make directory.</span></p></li></ul></li></ul><ul id=\"l98\"><li  id=\"4416\"><p class=\"s70\"  id=\"4417\">Third: we check whether directory ‚vcardimage‛ exist or not. It is very important to make sure there must be directory to save files in Vcard case, all images goes insides ‚vcardimage‛ directory. You can choose different name if you like. If directory exist we save file</p><ul id=\"l99\"><li  id=\"4419\"><p class=\"s98\"  id=\"4420\">Directory<span  id=\"4421\">.Exists(directory name) will check whether passed director exist or not.</span></p></li><li  id=\"4422\"><p class=\"s70\"  id=\"4423\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\"  id=\"4424\">Server.MapPath(<span  id=\"4425\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p></li><li  id=\"4426\"><p class=\"s70\"  id=\"4427\">PostedFile.SaveAs() methods used to save posted file. Posted files means user submitted page to server by clicking buttons.</p></li><li  id=\"4428\"><p class=\"s70\"  id=\"4429\">FileUploadPhoto is id of asp:FileUpload that we created at design view or at VcardControl.ascx page</p></li></ul></li><li  id=\"4430\"><p class=\"s70\"  id=\"4431\">Forth: if director does not exist ‚else‛ statement code will be executed so we create directory first and save image after that.</p><ul id=\"l100\"><li  id=\"4433\"><p class=\"s98\"  id=\"4434\">Directory<span  id=\"4435\">.CreateDirectory(directory name) methods is used to make directory.</span></p></li></ul></li></ul><p  id=\"4436\"><span  id=\"4437\"> </span></p><p  id=\"4438\"><br id=\"4439\"></p><p  id=\"4440\"><br id=\"4441\"></p><h3  id=\"heading4442\" class=\"heading4442\"><a name=\"bookmark62\" id=\"4443\" >Step 4: Generate Vcard:</a></h3><div id=\"contentheading4442\" ><p  id=\"4444\"><span id=\"4445\"><img width=\"606\" height=\"395\" alt=\"image\" src=\"Image_100.png\" id=\"4446\"></span></p><p  id=\"4447\">Now we have required information, validation and image. It‟s time to generate Vcard. Writing Vcard is no difference from writing file and adding text line to file. See bellow code as reference. Only difference is structure and data. If you want to know more about Vcard structure you can visit microformat official web sites at microformat.org. Also see references<span class=\"s3\" id=\"4448\">26</span>. Your idea may be difference than mine idea.</p><p  id=\"4449\"><br id=\"4450\"></p><p  id=\"4451\"><br id=\"4452\"></p><p class=\"s66\"  id=\"4453\"><span class=\"p\" id=\"4454\">Methods Name: GenerateVcard() Parameters: </span>string <span  id=\"4455\">firstName, </span>string</p><p class=\"s70\"  id=\"4456\">streetAddress, <span  id=\"4457\">string </span>zip, <span  id=\"4458\">string </span>city, <span  id=\"4459\">string </span>country, <span  id=\"4460\">string </span>email, <span  id=\"4461\">string </span>phone, <span  id=\"4462\">string </span>web and <span  id=\"4463\">string </span>image</p><p class=\"s66\"  id=\"4464\"><span class=\"p\" id=\"4465\">Methods Name: GenerateVcard() Parameters: </span>string <span  id=\"4466\">firstName, </span>string</p><p class=\"s70\"  id=\"4467\">streetAddress, <span  id=\"4468\">string </span>zip, <span  id=\"4469\">string </span>city, <span  id=\"4470\">string </span>country, <span  id=\"4471\">string </span>email, <span  id=\"4472\">string </span>phone, <span  id=\"4473\">string </span>web and <span  id=\"4474\">string </span>image</p><p  id=\"4475\"></p><p  id=\"4476\"><br id=\"4477\"></p><p class=\"s70\"  id=\"4478\">Code:</p><p class=\"s66\"  id=\"4479\">var <span  id=\"4480\">vcardStringBuilder = </span>new <span  id=\"4481\">StringBuilder</span><span  id=\"4482\">();</span></p><p class=\"s70\"  id=\"4483\">vcardStringBuilder.AppendLine(<span  id=\"4484\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4485\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4486\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"4487\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"4488\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"4489\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"4490\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"4491\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"4492\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"4493\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span  id=\"4494\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\"  id=\"4495\">vcardStringBuilder.AppendLine(<span  id=\"4496\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"4497\">\":\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4498\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\"  id=\"4499\">);</p><p class=\"s70\"  id=\"4500\">vcardStringBuilder.AppendLine(<span  id=\"4501\">string</span>.Empty); vcardStringBuilder.AppendLine(<span  id=\"4502\">\"END:VCARD\"</span>);</p><p class=\"s66\"  id=\"4503\">return <span  id=\"4504\">vcardStringBuilder.ToString();</span></p><p class=\"s70\"  id=\"4505\">Code:</p><p class=\"s66\"  id=\"4506\">var <span  id=\"4507\">vcardStringBuilder = </span>new <span  id=\"4508\">StringBuilder</span><span  id=\"4509\">();</span></p><p class=\"s70\"  id=\"4510\">vcardStringBuilder.AppendLine(<span  id=\"4511\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4512\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4513\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"4514\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"4515\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"4516\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"4517\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"4518\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"4519\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"4520\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span  id=\"4521\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\"  id=\"4522\">vcardStringBuilder.AppendLine(<span  id=\"4523\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"4524\">\":\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4525\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\"  id=\"4526\">);</p><p class=\"s70\"  id=\"4527\">vcardStringBuilder.AppendLine(<span  id=\"4528\">string</span>.Empty); vcardStringBuilder.AppendLine(<span  id=\"4529\">\"END:VCARD\"</span>);</p><p class=\"s66\"  id=\"4530\">return <span  id=\"4531\">vcardStringBuilder.ToString();</span></p><p class=\"s10\"  id=\"4532\">\t</p><p  id=\"4533\"><br id=\"4534\"></p><p  id=\"4535\"><br id=\"4536\"></p><p  id=\"4537\"><span id=\"4538\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_101.png\" id=\"4539\"></span></p><p class=\"s10\"  id=\"4540\"><a href=\"http://en.wikipedia.org/wiki/VCard\"  target=\"_blank\" id=\"4541\">26 </a>http://en.wikipedia.org/wiki/VCard for vcard example</p><p  id=\"4542\"><br id=\"4543\"></p><p  id=\"4544\">Methods Name: GenerateVcard() Description:</p><ul id=\"l101\"><li  id=\"4546\"><p  id=\"4547\">Start writing with line “<span class=\"s99\" id=\"4548\">BEGIN:VCARD</span><span class=\"s70\" id=\"4549\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li  id=\"4550\"><p class=\"s70\"  id=\"4551\">I append rest of information after ‚<span  id=\"4552\">BEGIN:VCARD</span>‛ before ‚<span  id=\"4553\">END:VCARD</span><span class=\"p\" id=\"4554\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li  id=\"4555\"><p class=\"s70\"  id=\"4556\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li  id=\"4557\"><p class=\"s70\"  id=\"4558\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\"  id=\"4559\">o</p><p class=\"s70\"  id=\"4560\">{</p><p  id=\"4561\">Methods Name: GenerateVcard() Description:</p><ul id=\"l102\"><li  id=\"4563\"><p  id=\"4564\">Start writing with line “<span class=\"s99\" id=\"4565\">BEGIN:VCARD</span><span class=\"s70\" id=\"4566\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li  id=\"4567\"><p class=\"s70\"  id=\"4568\">I append rest of information after ‚<span  id=\"4569\">BEGIN:VCARD</span>‛ before ‚<span  id=\"4570\">END:VCARD</span><span class=\"p\" id=\"4571\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li  id=\"4572\"><p class=\"s70\"  id=\"4573\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li  id=\"4574\"><p class=\"s70\"  id=\"4575\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\"  id=\"4576\">o</p><p class=\"s70\"  id=\"4577\">{</p><p  id=\"4578\"></p><p class=\"s101\"  id=\"4579\">o</p><p class=\"s101\"  id=\"4580\">o</p><p  id=\"4581\"></p><p  id=\"4582\"><br id=\"4583\"></p><ul id=\"l103\"><li  id=\"4585\"><p class=\"s70\"  id=\"4586\">Make sure to specify ‚<span  id=\"4587\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\"  id=\"4588\">actual image string.</p><ul id=\"l104\"><li  id=\"4590\"><p class=\"s70\"  id=\"4591\">Here PHOTO: used to indicate Vcard contains image</p></li><li  id=\"4592\"><p class=\"s70\"  id=\"4593\">Encoding: types of encode, in our case Base64</p></li><li  id=\"4594\"><p class=\"s70\"  id=\"4595\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li  id=\"4596\"><p class=\"s70\"  id=\"4597\">Finally Vcard is return in format of String for further process.</p></li></ul><ul id=\"l105\"><li  id=\"4599\"><p class=\"s70\"  id=\"4600\">Make sure to specify ‚<span  id=\"4601\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\"  id=\"4602\">actual image string.</p><ul id=\"l106\"><li  id=\"4604\"><p class=\"s70\"  id=\"4605\">Here PHOTO: used to indicate Vcard contains image</p></li><li  id=\"4606\"><p class=\"s70\"  id=\"4607\">Encoding: types of encode, in our case Base64</p></li><li  id=\"4608\"><p class=\"s70\"  id=\"4609\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li  id=\"4610\"><p class=\"s70\"  id=\"4611\">Finally Vcard is return in format of String for further process.</p></li></ul><p  id=\"4612\"></p><p  id=\"4613\"><br id=\"4614\"></p><p  id=\"4615\"><span id=\"4616\"><img width=\"606\" height=\"362\" alt=\"image\" src=\"Image_102.png\" id=\"4617\"></span></p><p class=\"s66\"  id=\"4618\">public byte<span  id=\"4619\">[] ReadImage(</span>string <span  id=\"4620\">image)</span></p><p class=\"s66\"  id=\"4621\">return <span  id=\"4622\">File</span><span  id=\"4623\">.ReadAllBytes(image); }</span></p><p class=\"s70\"  id=\"4624\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span  id=\"4625\">Convert</span>.ToBase64String() methods.</p><p class=\"s66\"  id=\"4626\">public byte<span  id=\"4627\">[] ReadImage(</span>string <span  id=\"4628\">image)</span></p><p class=\"s66\"  id=\"4629\">return <span  id=\"4630\">File</span><span  id=\"4631\">.ReadAllBytes(image); }</span></p><p class=\"s70\"  id=\"4632\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span  id=\"4633\">Convert</span>.ToBase64String() methods.</p><p  id=\"4634\"></p></div><h3  id=\"heading4635\" class=\"heading4635\"><a name=\"bookmark63\" id=\"4636\" >Step 5: Send attach Email with Vcard</a></h3><div id=\"contentheading4635\" ><p  id=\"4637\">After generating Vcard, Vcard needs to be delivered by Email attachment. Take a look bellow code how to send email using SMTP. I use gmx<span class=\"s3\" id=\"4638\">27 </span>as an example.</p><p  id=\"4639\"><br id=\"4640\"></p><p class=\"s66\"  id=\"4641\">private void <span  id=\"4642\">SendVcard(</span>string <span  id=\"4643\">subject, </span>string <span  id=\"4644\">body, </span>string <span  id=\"4645\">email, </span>string <span  id=\"4646\">file)</span></p><p class=\"s70\"  id=\"4647\">{ <span  id=\"4648\">byte</span>[] byteArray = <span  id=\"4649\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"4650\">MemoryStream </span>stream = <span  id=\"4651\">new </span><span  id=\"4652\">MemoryStream</span>(byteArray); <span  id=\"4653\">MailMessage </span>message = <span  id=\"4654\">new </span><span  id=\"4655\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\"  id=\"4656\">message.Body = body;</p><p class=\"s70\"  id=\"4657\">message.From = <span  id=\"4658\">new </span><span  id=\"4659\">MailAddress</span>(<span  id=\"4660\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\"  id=\"4661\">SmtpClient <span  id=\"4662\">client = </span><span  id=\"4663\">new </span>SmtpClient<span  id=\"4664\">();</span></p><p class=\"s70\"  id=\"4665\"><span  id=\"4666\">Attachment </span>vcard = <span  id=\"4667\">new </span><span  id=\"4668\">Attachment</span>(stream, <span  id=\"4669\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"4670\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\"  id=\"4671\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span  id=\"4672\">new</span></p><p class=\"s70\"  id=\"4673\"><span  id=\"4674\">NetworkCredential</span>(<span  id=\"4675\">\"user id \"</span>, <span  id=\"4676\">\" password\"</span>); client.EnableSsl = <span  id=\"4677\">true</span>;</p><p class=\"s70\"  id=\"4678\">client.Send(message);</p><p class=\"s70\"  id=\"4679\">}</p><p class=\"s70\"  id=\"4680\">Sender id= replace with your sender id</p><ul id=\"l107\"><li  id=\"4682\"><p class=\"s70\"  id=\"4683\">User id = replace with real user id that has access to use SMTP service</p></li><li  id=\"4684\"><p class=\"s70\"  id=\"4685\">Password = replace with real valid password to access SMTP service</p></li><li  id=\"4686\"><p class=\"s70\"  id=\"4687\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p class=\"s66\"  id=\"4688\">private void <span  id=\"4689\">SendVcard(</span>string <span  id=\"4690\">subject, </span>string <span  id=\"4691\">body, </span>string <span  id=\"4692\">email, </span>string <span  id=\"4693\">file)</span></p><p class=\"s70\"  id=\"4694\">{ <span  id=\"4695\">byte</span>[] byteArray = <span  id=\"4696\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"4697\">MemoryStream </span>stream = <span  id=\"4698\">new </span><span  id=\"4699\">MemoryStream</span>(byteArray); <span  id=\"4700\">MailMessage </span>message = <span  id=\"4701\">new </span><span  id=\"4702\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\"  id=\"4703\">message.Body = body;</p><p class=\"s70\"  id=\"4704\">message.From = <span  id=\"4705\">new </span><span  id=\"4706\">MailAddress</span>(<span  id=\"4707\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\"  id=\"4708\">SmtpClient <span  id=\"4709\">client = </span><span  id=\"4710\">new </span>SmtpClient<span  id=\"4711\">();</span></p><p class=\"s70\"  id=\"4712\"><span  id=\"4713\">Attachment </span>vcard = <span  id=\"4714\">new </span><span  id=\"4715\">Attachment</span>(stream, <span  id=\"4716\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"4717\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\"  id=\"4718\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span  id=\"4719\">new</span></p><p class=\"s70\"  id=\"4720\"><span  id=\"4721\">NetworkCredential</span>(<span  id=\"4722\">\"user id \"</span>, <span  id=\"4723\">\" password\"</span>); client.EnableSsl = <span  id=\"4724\">true</span>;</p><p class=\"s70\"  id=\"4725\">client.Send(message);</p><p class=\"s70\"  id=\"4726\">}</p><p class=\"s70\"  id=\"4727\">Sender id= replace with your sender id</p><ul id=\"l108\"><li  id=\"4729\"><p class=\"s70\"  id=\"4730\">User id = replace with real user id that has access to use SMTP service</p></li><li  id=\"4731\"><p class=\"s70\"  id=\"4732\">Password = replace with real valid password to access SMTP service</p></li><li  id=\"4733\"><p class=\"s70\"  id=\"4734\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p  id=\"4735\"><span  id=\"4736\"> </span></p><p  id=\"4737\"><br id=\"4738\"></p><p  id=\"4739\"><span id=\"4740\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_103.png\" id=\"4741\"></span></p><p class=\"s10\"  id=\"4742\"><a href=\"http://www.gmx.com/\"  target=\"_blank\" id=\"4743\">27 </a><span  id=\"4744\">www.gmx.com </span>is free smtp provider as gmail.com, yahoo.com and hotmail.com need upgrade to use their smtp service using API.</p><p  id=\"4745\"><br id=\"4746\"></p><p  id=\"4747\">Description:</p><p  id=\"4748\"><br id=\"4749\"></p><p class=\"s66\"  id=\"4750\">Description: <span  id=\"4751\">input </span>string <span  id=\"4752\">subject, </span>string <span  id=\"4753\">body, </span>string <span  id=\"4754\">email and </span>string <span  id=\"4755\">file are parameters, required to send email.</span></p><ul id=\"l109\"><li  id=\"4757\"><p class=\"s70\"  id=\"4758\"><span  id=\"4759\">byte</span>[] byteArray = <span  id=\"4760\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l110\"><li  id=\"4762\"><p class=\"s70\"  id=\"4763\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li  id=\"4764\"><p class=\"s70\"  id=\"4765\">MemoryStream is used to write bytes into memory</p></li></ul></li><li  id=\"4766\"><p class=\"s98\"  id=\"4767\">MailMessage <span  id=\"4768\">message = </span><span  id=\"4769\">new </span>MailMessage<span  id=\"4770\">();</span></p><ul id=\"l111\"><li  id=\"4772\"><p class=\"s98\"  id=\"4773\">instantiate MailMessage</p></li><li  id=\"4774\"><p class=\"s70\"  id=\"4775\">added receiver address, subject, sender</p></li></ul></li><li  id=\"4776\"><p class=\"s70\"  id=\"4777\">using Attachment we can attach files into email</p><ul id=\"l112\"><li  id=\"4779\"><p class=\"s70\"  id=\"4780\"><span  id=\"4781\">Attachment </span>vcard = <span  id=\"4782\">new </span><span  id=\"4783\">Attachment</span>(stream, <span  id=\"4784\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li  id=\"4785\"><p class=\"s70\"  id=\"4786\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li  id=\"4787\"><p class=\"s70\"  id=\"4788\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p class=\"s66\"  id=\"4789\">Description: <span  id=\"4790\">input </span>string <span  id=\"4791\">subject, </span>string <span  id=\"4792\">body, </span>string <span  id=\"4793\">email and </span>string <span  id=\"4794\">file are parameters, required to send email.</span></p><ul id=\"l113\"><li  id=\"4796\"><p class=\"s70\"  id=\"4797\"><span  id=\"4798\">byte</span>[] byteArray = <span  id=\"4799\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l114\"><li  id=\"4801\"><p class=\"s70\"  id=\"4802\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li  id=\"4803\"><p class=\"s70\"  id=\"4804\">MemoryStream is used to write bytes into memory</p></li></ul></li><li  id=\"4805\"><p class=\"s98\"  id=\"4806\">MailMessage <span  id=\"4807\">message = </span><span  id=\"4808\">new </span>MailMessage<span  id=\"4809\">();</span></p><ul id=\"l115\"><li  id=\"4811\"><p class=\"s98\"  id=\"4812\">instantiate MailMessage</p></li><li  id=\"4813\"><p class=\"s70\"  id=\"4814\">added receiver address, subject, sender</p></li></ul></li><li  id=\"4815\"><p class=\"s70\"  id=\"4816\">using Attachment we can attach files into email</p><ul id=\"l116\"><li  id=\"4818\"><p class=\"s70\"  id=\"4819\"><span  id=\"4820\">Attachment </span>vcard = <span  id=\"4821\">new </span><span  id=\"4822\">Attachment</span>(stream, <span  id=\"4823\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li  id=\"4824\"><p class=\"s70\"  id=\"4825\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li  id=\"4826\"><p class=\"s70\"  id=\"4827\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p  id=\"4828\"><span  id=\"4829\"> </span></p><p  id=\"4830\"><br id=\"4831\"></p><p  id=\"4832\">Here Vcard is sent to Email address, it make sure that email address should be valid and right person, but it also cause user may need to check spam email.</p></div><h3  id=\"heading4833\" class=\"heading4833\"><a name=\"bookmark64\" id=\"4834\" >What if server or SMTP fails to send email?</a></h3><div id=\"contentheading4833\" ><p  id=\"4835\">Lets create option for incase SMTP fails to send email. See code bellow</p><p  id=\"4836\"><br id=\"4837\"></p><p  id=\"4838\"><br id=\"4839\"></p><p class=\"s103\"  id=\"4840\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"4841\">/// <span  id=\"4842\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"4843\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"4844\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"4845\">The vcard file.</span>&lt;/param&gt; <span  id=\"4846\">public void </span><span  id=\"4847\">DownloadVcard(</span><span  id=\"4848\">byte </span><span  id=\"4849\">[] vcardFile)</span></p><p class=\"s70\"  id=\"4850\">{</p><p class=\"s70\"  id=\"4851\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"4852\">true</span>;</p><p class=\"s70\"  id=\"4853\">Response.ContentType = <span  id=\"4854\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"4855\">\"content-disposition\"</span>, <span  id=\"4856\">\"attach;filename =</span></p><p class=\"s99\"  id=\"4857\">YourVcard.vcf\"<span  id=\"4858\">);</span></p><p class=\"s70\"  id=\"4859\">Response.Charset = <span  id=\"4860\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"4861\">HttpContext<span  id=\"4862\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"4863\">}</p><p  id=\"4864\"><br id=\"4865\"></p><p class=\"s70\"  id=\"4866\">Description: I will describe very shortly.</p><ul id=\"l117\"><li  id=\"4868\"><p class=\"s70\"  id=\"4869\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li  id=\"4870\"><p class=\"s70\"  id=\"4871\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li  id=\"4872\"><p class=\"s70\"  id=\"4873\">clear any content if there is any by calling Clear() methods.</p></li><li  id=\"4874\"><p class=\"s70\"  id=\"4875\">Set buffer true</p></li><li  id=\"4876\"><p class=\"s70\"  id=\"4877\">Content type is Vcard</p></li><li  id=\"4878\"><p class=\"s70\"  id=\"4879\">Add headers and File name</p></li><li  id=\"4880\"><p class=\"s70\"  id=\"4881\">Start writing Vcard by using BinaryWriter() methods</p></li><li  id=\"4882\"><p class=\"s70\"  id=\"4883\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\"  id=\"4884\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p class=\"s103\"  id=\"4885\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"4886\">/// <span  id=\"4887\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"4888\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"4889\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"4890\">The vcard file.</span>&lt;/param&gt; <span  id=\"4891\">public void </span><span  id=\"4892\">DownloadVcard(</span><span  id=\"4893\">byte </span><span  id=\"4894\">[] vcardFile)</span></p><p class=\"s70\"  id=\"4895\">{</p><p class=\"s70\"  id=\"4896\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"4897\">true</span>;</p><p class=\"s70\"  id=\"4898\">Response.ContentType = <span  id=\"4899\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"4900\">\"content-disposition\"</span>, <span  id=\"4901\">\"attach;filename =</span></p><p class=\"s99\"  id=\"4902\">YourVcard.vcf\"<span  id=\"4903\">);</span></p><p class=\"s70\"  id=\"4904\">Response.Charset = <span  id=\"4905\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"4906\">HttpContext<span  id=\"4907\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"4908\">}</p><p  id=\"4909\"><br id=\"4910\"></p><p class=\"s70\"  id=\"4911\">Description: I will describe very shortly.</p><ul id=\"l118\"><li  id=\"4913\"><p class=\"s70\"  id=\"4914\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li  id=\"4915\"><p class=\"s70\"  id=\"4916\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li  id=\"4917\"><p class=\"s70\"  id=\"4918\">clear any content if there is any by calling Clear() methods.</p></li><li  id=\"4919\"><p class=\"s70\"  id=\"4920\">Set buffer true</p></li><li  id=\"4921\"><p class=\"s70\"  id=\"4922\">Content type is Vcard</p></li><li  id=\"4923\"><p class=\"s70\"  id=\"4924\">Add headers and File name</p></li><li  id=\"4925\"><p class=\"s70\"  id=\"4926\">Start writing Vcard by using BinaryWriter() methods</p></li><li  id=\"4927\"><p class=\"s70\"  id=\"4928\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\"  id=\"4929\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p  id=\"4930\"><span  id=\"4931\"> </span></p></div><h3  id=\"heading4932\" class=\"heading4932\"><a name=\"bookmark65\" id=\"4933\" >Step 6: Store data to Database for later use</a></h3><div id=\"contentheading4932\" ><p  id=\"4934\">In this step we will store Vcard data into Database for later use. To store data, first we need to ensure that table and fields are exits into database. Here is over view of logic how I am going to do this job done.</p><ol id=\"l119\"><li  id=\"4936\"><p  id=\"4937\">Create table and fields into Database</p><p  id=\"4938\"><br id=\"4939\"></p></li><li  id=\"4940\"><p  id=\"4941\">Check table before insert data.</p><p  id=\"4942\"><br id=\"4943\"></p></li><li  id=\"4944\"><p  id=\"4945\">Insert data into table and fields using Umbraco system Create Table and Fields into Database<span class=\"s3\" id=\"4946\">28</span></p></li></ol><p  id=\"4947\">There are many way to create table and fields into database. You may create using Sql Server Management Studio or you can create using C# code. Here I will explain sustainable way to program.</p><p  id=\"4948\"><br id=\"4949\"></p><p  id=\"4950\"><span id=\"4951\"><img width=\"617\" height=\"475\" alt=\"image\" src=\"Image_104.png\" id=\"4952\"></span></p><p class=\"s10\"  id=\"4953\">Creating Table and Fields:</p><p class=\"s78\"  id=\"4954\">string <span  id=\"4955\">queryString = </span><span  id=\"4956\">@\" CREATE TABLE [vcardimage](</span></p><p class=\"s106\"  id=\"4957\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s106\"  id=\"4958\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s106\"  id=\"4959\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"4960\">;</span></p><p class=\"s81\"  id=\"4961\">I have created queryString first. CREATE TABLE [ table name ] is used to create table. Fields are added inside open and close brackets.</p><ul id=\"l120\"><li  id=\"4963\"><p class=\"s106\"  id=\"4964\">[id] [int] IDENTITY(1,1) NOT NULL <span  id=\"4965\">means: [id] is field name, [int] short form of integer is its property, (1,1) means increase automatically by +1, NOT NULL means field id should not be null it must contains data.</span></p></li><li  id=\"4966\"><p class=\"s106\"  id=\"4967\">[name] [nvarchar] (250) NULL, [name]: field name is name, its property is nvarchar and (250) means its maximum capacity, Null means name field may be null or empty</p></li><li  id=\"4968\"><p class=\"s81\"  id=\"4969\">Street, country, phone, email, website and imageguid are similar as Name field</p></li><li  id=\"4970\"><p class=\"s81\"  id=\"4971\">postalCode and DateTime has different properties int (integer) and Datetime respectively.</p></li><li  id=\"4972\"><p class=\"s81\"  id=\"4973\">For more details check Sql query languages.</p></li></ul><p  id=\"4974\"><br id=\"4975\"></p><p  id=\"4976\"><br id=\"4977\"></p><p  id=\"4978\"><span id=\"4979\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_105.png\" id=\"4980\"></span></p><p class=\"s20\"  id=\"4981\">28 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"4982\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\"  id=\"4983\">%E2%80%93-comments</p><p class=\"s19\"  id=\"4984\">Note: Given creating table and fields example are only for MsSql database, if you using MySql database code may be difference<span class=\"p\" id=\"4985\">.</span></p><p  id=\"4986\"><br id=\"4987\"></p><p  id=\"4988\">Executing queryString:</p><p class=\"s70\"  id=\"4989\">Follow the steps:</p><ul id=\"l121\"><li  id=\"4991\"><p  id=\"4992\">Create sql command object</p><ul id=\"l122\"><li  id=\"4994\"><p class=\"s98\"  id=\"4995\"><span class=\"p\" id=\"4996\">using </span>SqlCommand <span  id=\"4997\">command = </span><span  id=\"4998\">new </span>SqlCommand<span  id=\"4999\">(queryString, connection)</span></p></li><li  id=\"5000\"><p class=\"s70\"  id=\"5001\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li  id=\"5002\"><p class=\"s70\"  id=\"5003\">To reuse Umbraco connection string use folling code</p><ul id=\"l123\"><li  id=\"5005\"><p class=\"s98\"  id=\"5006\">SqlConnection <span  id=\"5007\">connection = </span><span  id=\"5008\">new </span>SqlConnection<span  id=\"5009\">(</span>GlobalSettings<span  id=\"5010\">.DbDSN);</span></p></li><li  id=\"5011\"><p class=\"s70\"  id=\"5012\">Make sure to add reference <span  id=\"5013\">using </span>umbraco before use <span  id=\"5014\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li  id=\"5015\"><p class=\"s70\"  id=\"5016\">Open database connection using connection.Open();</p></li><li  id=\"5017\"><p class=\"s70\"  id=\"5018\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li  id=\"5019\"><p class=\"s70\"  id=\"5020\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li  id=\"5021\"><p class=\"s70\"  id=\"5022\">connection.Close();</p></li><li  id=\"5023\"><p class=\"s70\"  id=\"5024\">Finally close connection by calling Close() methods.</p></li></ul><p  id=\"5025\">Executing queryString:</p><p class=\"s70\"  id=\"5026\">Follow the steps:</p><ul id=\"l124\"><li  id=\"5028\"><p  id=\"5029\">Create sql command object</p><ul id=\"l125\"><li  id=\"5031\"><p class=\"s98\"  id=\"5032\"><span class=\"p\" id=\"5033\">using </span>SqlCommand <span  id=\"5034\">command = </span><span  id=\"5035\">new </span>SqlCommand<span  id=\"5036\">(queryString, connection)</span></p></li><li  id=\"5037\"><p class=\"s70\"  id=\"5038\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li  id=\"5039\"><p class=\"s70\"  id=\"5040\">To reuse Umbraco connection string use folling code</p><ul id=\"l126\"><li  id=\"5042\"><p class=\"s98\"  id=\"5043\">SqlConnection <span  id=\"5044\">connection = </span><span  id=\"5045\">new </span>SqlConnection<span  id=\"5046\">(</span>GlobalSettings<span  id=\"5047\">.DbDSN);</span></p></li><li  id=\"5048\"><p class=\"s70\"  id=\"5049\">Make sure to add reference <span  id=\"5050\">using </span>umbraco before use <span  id=\"5051\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li  id=\"5052\"><p class=\"s70\"  id=\"5053\">Open database connection using connection.Open();</p></li><li  id=\"5054\"><p class=\"s70\"  id=\"5055\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li  id=\"5056\"><p class=\"s70\"  id=\"5057\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li  id=\"5058\"><p class=\"s70\"  id=\"5059\">connection.Close();</p></li><li  id=\"5060\"><p class=\"s70\"  id=\"5061\">Finally close connection by calling Close() methods.</p></li></ul><p  id=\"5062\"><span  id=\"5063\"> </span></p><p class=\"s93\"  id=\"5064\">Code all in one for CreateTable methods</p><p  id=\"5065\"><br id=\"5066\"></p><p  id=\"5067\"><span id=\"5068\"><img width=\"621\" height=\"478\" alt=\"image\" src=\"Image_106.png\" id=\"5069\"></span></p><p class=\"s107\"  id=\"5070\">private static bool <span  id=\"5071\">CreateTable(</span>string <span  id=\"5072\">tableName)</span></p><p class=\"s108\"  id=\"5073\">{</p><p class=\"s107\"  id=\"5074\">try</p><p class=\"s108\"  id=\"5075\">{</p><p  id=\"5076\">Never forget to put code block inside try{} catch{}.</p><p class=\"s109\"  id=\"5077\">SqlConnection <span  id=\"5078\">connection = </span><span  id=\"5079\">new </span>SqlConnection<span  id=\"5080\">(</span>GlobalSettings<span  id=\"5081\">.DbDSN);</span></p><p class=\"s107\"  id=\"5082\">string <span  id=\"5083\">queryString =</span></p><p class=\"s110\"  id=\"5084\">@\" CREATE TABLE [vcardimage](</p><p class=\"s110\"  id=\"5085\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s110\"  id=\"5086\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s110\"  id=\"5087\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"5088\">;</span></p><p  id=\"5089\"><br id=\"5090\"></p><p class=\"s109\"  id=\"5091\">SqlCommand <span  id=\"5092\">command = </span><span  id=\"5093\">new </span>SqlCommand<span  id=\"5094\">(queryString, connection);</span></p><p class=\"s108\"  id=\"5095\">connection.Open(); command.ExecuteNonQuery(); connection.Close(); <span  id=\"5096\">return true</span>;</p><p class=\"s108\"  id=\"5097\">}</p><p class=\"s107\"  id=\"5098\">catch</p><p class=\"s108\"  id=\"5099\">{</p><p class=\"s107\"  id=\"5100\">return false<span  id=\"5101\">;</span></p><p  id=\"5102\">First it will try to execute code if there is nothing wrong it will return true. It means table and fields successfully created. If there is anything wrong while executing code it will catch those errors and return false. False means table and fields did not create successfully.</p><p  id=\"5103\">Using Try {} Catch{} page does not break on yellow dead screen if something</p><p  id=\"5104\">goes wrong.</p><p class=\"s108\"  id=\"5105\">}</p><p class=\"s108\"  id=\"5106\">}</p><h4  id=\"5107\"><a name=\"a60\" id=\"5108\">Check Table exist:</a></h4><p  id=\"5109\"><br id=\"5110\"></p><p class=\"s93\"  id=\"5111\">Using Umbraco system we can easily check table name see code bellow.</p><p  id=\"5112\"><br id=\"5113\"></p><p class=\"s70\"  id=\"5114\">CheckTable() methods.</p><p class=\"s66\"  id=\"5115\">private static bool <span  id=\"5116\">CheckTable(</span>string <span  id=\"5117\">tableName)</span></p><p class=\"s70\"  id=\"5118\">{</p><p class=\"s70\"  id=\"5119\"><span  id=\"5120\">SqlServerHelper </span>sqlHeplper = <span  id=\"5121\">new </span><span  id=\"5122\">SqlServerHelper</span>(<span  id=\"5123\">GlobalSettings</span>.DbDSN); <span  id=\"5124\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"5125\">}</p><p class=\"s70\"  id=\"5126\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p  id=\"5127\"><br id=\"5128\"></p><p class=\"s70\"  id=\"5129\">Make sure to add reference: <span  id=\"5130\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p class=\"s70\"  id=\"5131\">CheckTable() methods.</p><p class=\"s66\"  id=\"5132\">private static bool <span  id=\"5133\">CheckTable(</span>string <span  id=\"5134\">tableName)</span></p><p class=\"s70\"  id=\"5135\">{</p><p class=\"s70\"  id=\"5136\"><span  id=\"5137\">SqlServerHelper </span>sqlHeplper = <span  id=\"5138\">new </span><span  id=\"5139\">SqlServerHelper</span>(<span  id=\"5140\">GlobalSettings</span>.DbDSN); <span  id=\"5141\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"5142\">}</p><p class=\"s70\"  id=\"5143\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p  id=\"5144\"><br id=\"5145\"></p><p class=\"s70\"  id=\"5146\">Make sure to add reference: <span  id=\"5147\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p  id=\"5148\"><span  id=\"5149\"> </span></p><p  id=\"5150\"><br id=\"5151\"></p><p class=\"s93\"  id=\"5152\">Intert Data:</p><p  id=\"5153\"><br id=\"5154\"></p><p class=\"s93\"  id=\"5155\">database. see code bellow.</p><p class=\"s93\"  id=\"5156\">database. see code bellow.</p><p  id=\"5157\"></p><p  id=\"5158\"><span id=\"5159\"><img width=\"628\" height=\"517\" alt=\"image\" src=\"Image_107.png\" id=\"5160\"></span></p><p class=\"s70\"  id=\"5161\">InsertTable() Methods:</p><p  id=\"5162\"><br id=\"5163\"></p><p class=\"s66\"  id=\"5164\">public static bool <span  id=\"5165\">InsertTable(</span>string <span  id=\"5166\">name, </span>string <span  id=\"5167\">street, </span>string <span  id=\"5168\">postalcode, </span>string <span  id=\"5169\">country, </span>string <span  id=\"5170\">phone, </span>string <span  id=\"5171\">email, </span>string <span  id=\"5172\">website, </span>string <span  id=\"5173\">imageguid)</span></p><p class=\"s70\"  id=\"5174\">{</p><p class=\"s70\"  id=\"5175\"><span  id=\"5176\">string </span>tableName = <span  id=\"5177\">\"vcardimage\"</span>; <span  id=\"5178\">try</span></p><p class=\"s70\"  id=\"5179\">{</p><p class=\"s66\"  id=\"5180\">if <span  id=\"5181\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"5182\">{CreateTable(tableName); }</p><p class=\"s98\"  id=\"5183\">ISqlHelper <span  id=\"5184\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"5185\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"5186\">@\"insert into \"<span  id=\"5187\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"5188\">+</span></p><p class=\"s99\"  id=\"5189\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"5190\">@website, @imageguid, @date);\"<span  id=\"5191\">,</span></p><p class=\"s70\"  id=\"5192\">sqlHelper.CreateParameter(<span  id=\"5193\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"5194\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"5195\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"5196\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"5197\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"5198\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"5199\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"5200\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"5201\">\"@date\"</span>, <span  id=\"5202\">DateTime</span>.Now)); <span  id=\"5203\">return true</span>;</p><p class=\"s70\"  id=\"5204\">}</p><p class=\"s70\"  id=\"5205\"><span  id=\"5206\">catch</span>(<span  id=\"5207\">Exception</span>)</p><p class=\"s70\"  id=\"5208\">{</p><p class=\"s66\"  id=\"5209\">return false<span  id=\"5210\">;</span></p><p class=\"s70\"  id=\"5211\">}</p><p  id=\"5212\"><br id=\"5213\"></p><p class=\"s70\"  id=\"5214\">}</p><p class=\"s70\"  id=\"5215\">InsertTable() Methods:</p><p  id=\"5216\"><br id=\"5217\"></p><p class=\"s66\"  id=\"5218\">public static bool <span  id=\"5219\">InsertTable(</span>string <span  id=\"5220\">name, </span>string <span  id=\"5221\">street, </span>string <span  id=\"5222\">postalcode, </span>string <span  id=\"5223\">country, </span>string <span  id=\"5224\">phone, </span>string <span  id=\"5225\">email, </span>string <span  id=\"5226\">website, </span>string <span  id=\"5227\">imageguid)</span></p><p class=\"s70\"  id=\"5228\">{</p><p class=\"s70\"  id=\"5229\"><span  id=\"5230\">string </span>tableName = <span  id=\"5231\">\"vcardimage\"</span>; <span  id=\"5232\">try</span></p><p class=\"s70\"  id=\"5233\">{</p><p class=\"s66\"  id=\"5234\">if <span  id=\"5235\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"5236\">{CreateTable(tableName); }</p><p class=\"s98\"  id=\"5237\">ISqlHelper <span  id=\"5238\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"5239\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"5240\">@\"insert into \"<span  id=\"5241\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"5242\">+</span></p><p class=\"s99\"  id=\"5243\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"5244\">@website, @imageguid, @date);\"<span  id=\"5245\">,</span></p><p class=\"s70\"  id=\"5246\">sqlHelper.CreateParameter(<span  id=\"5247\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"5248\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"5249\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"5250\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"5251\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"5252\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"5253\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"5254\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"5255\">\"@date\"</span>, <span  id=\"5256\">DateTime</span>.Now)); <span  id=\"5257\">return true</span>;</p><p class=\"s70\"  id=\"5258\">}</p><p class=\"s70\"  id=\"5259\"><span  id=\"5260\">catch</span>(<span  id=\"5261\">Exception</span>)</p><p class=\"s70\"  id=\"5262\">{</p><p class=\"s66\"  id=\"5263\">return false<span  id=\"5264\">;</span></p><p class=\"s70\"  id=\"5265\">}</p><p  id=\"5266\"><br id=\"5267\"></p><p class=\"s70\"  id=\"5268\">}</p><p  id=\"5269\"></p><p class=\"s93\"  id=\"5270\">If there is no table exist, we can create table using Create<span class=\"s111\" id=\"5271\">29 </span>Table() methods<span class=\"s111\" id=\"5272\">30</span>, it‟s time to insert data into</p><p  id=\"5273\"><br id=\"5274\"></p><p  id=\"5275\"><span id=\"5276\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_108.png\" id=\"5277\"></span></p><p class=\"s20\"  id=\"5278\">29 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"5279\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\"  id=\"5280\">%E2%80%93-comments</p><p class=\"s20\"  id=\"5281\">30 <span class=\"s10\" id=\"5282\">See createTable() methods on previous chapter.</span></p><p  id=\"5283\"><br id=\"5284\"></p><p  id=\"5285\">Description of <span class=\"s70\" id=\"5286\">InsertTable() Methods:</span></p><ul id=\"l127\"><li  id=\"5288\"><p class=\"s70\"  id=\"5289\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li  id=\"5290\"><p class=\"s70\"  id=\"5291\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li  id=\"5292\"><p class=\"s70\"  id=\"5293\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li  id=\"5294\"><p class=\"s70\"  id=\"5295\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li  id=\"5296\"><p class=\"s70\"  id=\"5297\">Forth if not return false. Something happen wrong.</p></li><li  id=\"5298\"><p class=\"s70\"  id=\"5299\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\"  id=\"5300\">Note: make sure to reference <span  id=\"5301\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p  id=\"5302\">Description of <span class=\"s70\" id=\"5303\">InsertTable() Methods:</span></p><ul id=\"l128\"><li  id=\"5305\"><p class=\"s70\"  id=\"5306\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li  id=\"5307\"><p class=\"s70\"  id=\"5308\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li  id=\"5309\"><p class=\"s70\"  id=\"5310\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li  id=\"5311\"><p class=\"s70\"  id=\"5312\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li  id=\"5313\"><p class=\"s70\"  id=\"5314\">Forth if not return false. Something happen wrong.</p></li><li  id=\"5315\"><p class=\"s70\"  id=\"5316\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\"  id=\"5317\">Note: make sure to reference <span  id=\"5318\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p  id=\"5319\"><span  id=\"5320\"> </span></p><p class=\"s38\"  id=\"5321\">Putting all code together.</p><p  id=\"5322\"><br id=\"5323\"></p><p  id=\"5324\"><span class=\"s112\"  id=\"5325\">VcardControl.ascx.cs</span></p><p  id=\"5326\"><span class=\"s112\"  id=\"5327\">For complete code, please visit appendix page and find page title “VcardControl.ascx.cs”.</span></p><p  id=\"5328\"><br id=\"5329\"></p></div><h3  id=\"heading5330\" class=\"heading5330\"><a name=\"bookmark66\" id=\"5331\" >Implement User Control:</a></h3><div id=\"contentheading5330\" ><p class=\"s93\"  id=\"5332\">Until now we just finish creating usercontrol in Visual studio, its time to publish visual studio project, publishing visual studio project generate different types of files but we only need two types of files. Dot (.) dll file and .ascx file. Dll and .ascx (usercontrol) files should be copied into Umbraco site. <u id=\"5333\">DLL file goes inside bin directory of Umbraco site and .ascx file goes to “Usercontrol” directory of Umbraco sites</u>. Follow the steps</p><p  id=\"5334\"><br id=\"5335\"></p><ul id=\"l129\"><li  id=\"5337\"><p class=\"s93\"  id=\"5338\">First publish visual project</p><p  id=\"5339\"><br id=\"5340\"></p></li><li  id=\"5341\"><p class=\"s93\"  id=\"5342\">To publish project go to Build <span class=\"s114\" id=\"5343\"></span><span class=\"s115\" id=\"5344\"> </span>Publish + your visual project name</p><p  id=\"5345\"><br id=\"5346\"></p></li><li  id=\"5347\"><p class=\"s93\"  id=\"5348\">In my case publish VcardGenerator</p><p  id=\"5349\"><br id=\"5350\"></p></li><li  id=\"5351\"><p class=\"s93\"  id=\"5352\">See captured screen for references</p></li></ul><p  id=\"5353\"><br id=\"5354\"></p><p  id=\"5355\"><span id=\"5356\"><img width=\"585\" height=\"266\" alt=\"image\" src=\"Image_109.png\" id=\"5357\"></span></p><p  id=\"5358\">Select “File System” from</p><p  id=\"5359\"><br id=\"5360\"></p><p class=\"s10\"  id=\"5361\">Browse desire location to publish web site, in my case VcardPublish <span class=\"p\" id=\"5362\">directory in Desktop.</span></p><p  id=\"5363\"><br id=\"5364\"></p><p class=\"s116\"  id=\"5365\">-</p><p  id=\"5366\"><br id=\"5367\"></p><p  id=\"5368\"><span id=\"5369\"><img width=\"148\" height=\"66\" alt=\"image\" src=\"Image_110.png\" id=\"5370\"></span></p><p  id=\"5371\">Press</p><p  id=\"5372\"><br id=\"5373\"></p><p  id=\"5374\"><br id=\"5375\"></p><p class=\"s93\"  id=\"5376\">Let‟s open published items director. In my case “VcardPublish” directory it must contain at least one directory “bin” and one user control “VcardControl” see “VcardPublish.jpg” and “VcardPublish.bin.jpg” image bellow</p><p  id=\"5377\"><br id=\"5378\"></p><p  id=\"5379\"><span id=\"5380\"><img width=\"560\" height=\"640\" alt=\"image\" src=\"Image_111.png\" id=\"5381\"></span></p><p class=\"s88\"  id=\"5382\">VcardPublish.jpg    </p><p class=\"s16\"  id=\"5383\">directory</p><p class=\"s16\"  id=\"5384\">I placed cms.dll,</p><p class=\"s16\"  id=\"5385\">directory</p><p class=\"s16\"  id=\"5386\">I placed cms.dll,</p><p  id=\"5387\"></p><p  id=\"5388\">VcardPublish.bin.jpg</p><p  id=\"5389\"><br id=\"5390\"></p><p  id=\"5391\"><span class=\"s117\"  id=\"5392\">VcardPublish.jpg</span></p><p class=\"s16\"  id=\"5393\">It contains</p><p  id=\"5394\"><span class=\"s117\"  id=\"5395\">VcardPublish.jpg</span></p><p class=\"s16\"  id=\"5396\">It contains</p><p  id=\"5397\"></p><p  id=\"5398\"><br id=\"5399\"></p><p class=\"s16\"  id=\"5400\">called “ref”</p><p class=\"s16\"  id=\"5401\">umbraco.dll,</p><p class=\"s16\"  id=\"5402\">called “ref”</p><p class=\"s16\"  id=\"5403\">umbraco.dll,</p><p  id=\"5404\"></p><p  id=\"5405\"><br id=\"5406\"></p><p class=\"s16\"  id=\"5407\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p  id=\"5408\"><span class=\"s117\"  id=\"5409\">VcardPublish.bin.jpg</span></p><p class=\"s16\"  id=\"5410\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\"  id=\"5411\">be copied into Umbraco directory.</p><p class=\"s16\"  id=\"5412\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p  id=\"5413\"><span class=\"s117\"  id=\"5414\">VcardPublish.bin.jpg</span></p><p class=\"s16\"  id=\"5415\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\"  id=\"5416\">be copied into Umbraco directory.</p><p  id=\"5417\"></p><p  id=\"5418\"><br id=\"5419\"></p><p  id=\"5420\"><span class=\"s118\"  id=\"5421\">UmbracoWebDirectory.jpg</span></p><p  id=\"5422\"><br id=\"5423\"></p><p  id=\"5424\"><br id=\"5425\"></p><p class=\"s93\"  id=\"5426\">- <b id=\"5427\">Asp.net User Control files should goes inside “usercontrols” directory</b></p><p  id=\"5428\"><br id=\"5429\"></p><p class=\"s100\"  id=\"5430\">- VCardGenerator.DLL file goes inside “Bin” Directory see images “<span class=\"h4\" id=\"5431\">VcardPublish.jpg”,</span></p><h4  id=\"5432\"><a name=\"a61\" id=\"5433\">“VcardPublish.bin.jpg” and “UmbracoWebDirectory.jpg”.</a></h4><p  id=\"5434\"><br id=\"5435\"></p><h3  id=\"5436\"><a name=\"bookmark67\" id=\"5437\">Create Macro to use User Control.</a></h3><p class=\"s93\"  id=\"5438\">Copying Asp.net User Control to “usercontrol” directory and relevant DLL file into “bin” directory is not enough to use User Control, using User Control to Asp.net and using User Control to Umbraco site is different. In Umbraco site we can use User Control creating associated Marco. See image “vcard.jpg”</p><p  id=\"5439\"><br id=\"5440\"></p><p  id=\"5441\"><span id=\"5442\"><img width=\"590\" height=\"384\" alt=\"image\" src=\"Image_112.png\" id=\"5443\"></span></p><p  id=\"5444\">Select</p><p  id=\"5445\"><br id=\"5446\"></p><p  id=\"5447\">Check “Use in</p><p class=\"s88\"  id=\"5448\">Vcard.jpg                 </p><p  id=\"5449\"><br id=\"5450\"></p><p  id=\"5451\"><br id=\"5452\"></p><p class=\"s93\"  id=\"5453\">I created User Control “vcard”, selected User Control “VcardControl.ascx” Umbraco automatically add directory “usercontrol” and I checked “use in Editor”. Checked in “use in editor” will make macro available to use in Content Rich text editor.</p><p  id=\"5454\"><br id=\"5455\"></p><p class=\"s93\"  id=\"5456\">Let‟s create content and insert Vcard macro in content.</p><p  id=\"5457\"><br id=\"5458\"></p><p class=\"s93\"  id=\"5459\">Open Umbraco back end also called Umbraco Back Office. Go to Section “Content” click “Create New. Choose “General Content” Document Type. Click “Description” Tab and navigate Insert Macro near insert image icon</p><p  id=\"5460\"><br id=\"5461\"></p><p  id=\"5462\"><span id=\"5463\"><img width=\"604\" height=\"218\" alt=\"image\" src=\"Image_113.png\" id=\"5464\"></span></p><p class=\"s45\"  id=\"5465\">Description <span class=\"p\" id=\"5466\">Insert Macro</span></p><p  id=\"5467\"><br id=\"5468\"></p><p  id=\"5469\">Select <b id=\"5470\">Vcard</b></p><p  id=\"5471\">from Drop down</p><p  id=\"5472\"><br id=\"5473\"></p><p  id=\"5474\">Press OK</p><p  id=\"5475\"><br id=\"5476\"></p><p class=\"s93\"  id=\"5477\">After pressing OK Button, you must see macro inserted into content; it looks like red dotted boarder line. See image bellow for reference.</p><p  id=\"5478\"><br id=\"5479\"></p><p  id=\"5480\"><span id=\"5481\"><img width=\"309\" height=\"114\" alt=\"image\" src=\"Image_114.png\" id=\"5482\"></span></p><p class=\"s119\"  id=\"5483\">Vcardcontent.jpg       </p><p class=\"s119\"  id=\"5484\">Vcardcontent.jpg       </p><p  id=\"5485\"></p><p class=\"s93\"  id=\"5486\">A macro area is highlighted. See image “vcardcontent.jpg”</p><p  id=\"5487\"><br id=\"5488\"></p><p class=\"s100\"  id=\"5489\">Lets Preview Vcard Content by clicking Preview Icon:</p><p  id=\"5490\"><br id=\"5491\"></p><p class=\"s93\"  id=\"5492\">If you are following me, preview must look like this.</p><p  id=\"5493\"><br id=\"5494\"></p><p  id=\"5495\"><span id=\"5496\"><img width=\"606\" height=\"704\" alt=\"image\" src=\"Image_115.png\" id=\"5497\"></span></p><p  id=\"5498\"><span id=\"5499\"><img width=\"277\" height=\"342\" alt=\"image\" src=\"Image_116.png\" id=\"5500\"></span></p><p  id=\"5501\">1</p><p  id=\"5502\"><br id=\"5503\"></p><p  id=\"5504\">2</p><p  id=\"5505\"><br id=\"5506\"></p><p  id=\"5507\">3 4</p><p  id=\"5508\"><br id=\"5509\"></p><p  id=\"5510\">5</p><p  id=\"5511\"><br id=\"5512\"></p><p  id=\"5513\"><br id=\"5514\"></p><p  id=\"5515\">6</p><p  id=\"5516\"><br id=\"5517\"></p><p  id=\"5518\"><br id=\"5519\"></p><p  id=\"5520\"><br id=\"5521\"></p><p  id=\"5522\"><br id=\"5523\"></p><p  id=\"5524\">7</p><p  id=\"5525\"><br id=\"5526\"></p><p  id=\"5527\">7</p><p  id=\"5528\"></p><p  id=\"5529\"><br id=\"5530\"></p><ul id=\"l130\"><li  id=\"5532\"><p class=\"s120\"  id=\"5533\">- <span class=\"s121\" id=\"5534\">107 - </span>| <span class=\"s122\" id=\"5535\">W r i t t e n B y J i v a</span></p></li></ul><ol id=\"l131\"><li  id=\"5537\"><p  id=\"5538\">Red strip: preview mode</p><p  id=\"5539\"><br id=\"5540\"></p><p class=\"s122\"  id=\"5541\">n T h a p a</p><p  id=\"5542\"><br id=\"5543\"></p><p class=\"s122\"  id=\"5544\">n T h a p a</p><p  id=\"5545\"></p></li><li  id=\"5546\"><p  id=\"5547\">Vcard navigation bar show up 3- Input text box, Image upload,</p></li></ol><p  id=\"5548\">Create button environments</p><p  id=\"5549\"><br id=\"5550\"></p><ol id=\"l132\"><li  id=\"5552\"><p  id=\"5553\">Error Summary. Press “Create” button without typing. It show up required field errors</p></li><li  id=\"5554\"><p  id=\"5555\">Name: required error message 6- Email: Required error message</p></li></ol><ol id=\"l133\"><li  id=\"5557\"><p  id=\"5558\">Validation: email validation works. I tried to input “jeevan_2np at yahoo.com” email id, which does not contain</p><p  id=\"5559\">@ character, validation is not pass, it show up error message.</p><h2  id=\"heading5560\" class=\"heading5560\"><a name=\"bookmark68\" id=\"5561\" >Extending Xslt Using .NET Class</a></h2><div id=\"contentheading5560\" ><p  id=\"5562\">In many cases Xslt may not be enough to fetch data or to process data in that case you can easily extend XSLT using .NET Class. Here I show how to use it, In Vcard website, people may interested to see recent Vcard. Name and address are fetched using .NET Class to extend XSLT.</p><p  id=\"5563\">Let‟s add Class. If you followed me, add new class in Visual studio VCardGenerator solution where we created User Controls. I choose class name “RecentVcard” and press Add. See captured screen bellow.</p><p  id=\"5564\"><br id=\"5565\"></p><p  id=\"5566\"><span id=\"5567\"><img width=\"652\" height=\"689\" alt=\"image\" src=\"Image_117.png\" id=\"5568\"></span></p><ol id=\"l134\"><li  id=\"5570\"><p  id=\"5571\">Recently added Class “RecentVcard.cs”</p></li><li  id=\"5572\"><p  id=\"5573\">I added two references, umbraco.DataLayer and Umbraco.</p></li><li  id=\"5574\"><p  id=\"5575\">Method Name</p></li></ol></div></li></ol><p class=\"s45\"  id=\"5576\">2 <span class=\"s123\" id=\"5577\">1 </span><span class=\"p\" id=\"5578\">GetVcardData().</span></p><p class=\"s27\"  id=\"5579\"><a name=\"a62\" id=\"5580\">- </a><span class=\"h4\" id=\"5581\">GetVcardData()</span></p><p class=\"s124\"  id=\"5582\">3 <b id=\"5583\">method is going to</b></p><h4  id=\"5584\">use in XSLT so that it must be public access modifier and Static method declaration<span class=\"p\" id=\"5585\">.</span></h4><p class=\"s93\"  id=\"5586\">Requirements: when you extend .NET Class you should have some basic knowledge which I did not cover here. My assumption is you already know basic things about</p><p  id=\"5587\"><br id=\"5588\"></p><ol id=\"l135\"><li  id=\"5590\"><p class=\"s93\"  id=\"5591\">Adding References, in my case I am using Umbraco system to fetch data; you need to add Umbraco.DataLayer and Umraco references in your Visual Project.</p><p  id=\"5592\"><br id=\"5593\"></p></li><li  id=\"5594\"><p class=\"s93\"  id=\"5595\">Know how to select data from MsSql and sorting data (ascending or descending)</p><p  id=\"5596\"><br id=\"5597\"></p></li><li  id=\"5598\"><p class=\"s93\"  id=\"5599\">In Vcard web Recent Vcard will be selected top 10 lists from database and should be order by latest Vcard should be at top.</p><p  id=\"5600\"><br id=\"5601\"></p></li><li  id=\"5602\"><p class=\"s93\"  id=\"5603\">Looping. You should know how to loop data using while or foreach.</p><p  id=\"5604\"><br id=\"5605\"></p></li><li  id=\"5606\"><p class=\"s93\"  id=\"5607\">Know about static methods and where to use it. If you want to use methods in XSLT it must be declear as static and public access modifier.</p></li></ol><p  id=\"5608\"><br id=\"5609\"></p><p class=\"s93\"  id=\"5610\">Code inside GetVcardData() method.</p><p  id=\"5611\"><br id=\"5612\"></p><p class=\"s93\"  id=\"5613\">I am going use ISqlHelper class provided by Umbraco to fetch data from Database, but you can fetch using asp.net way if you like. Here I show you to fetch data from Database using Umbraco. See code bellow.</p><p  id=\"5614\"><br id=\"5615\"></p><p  id=\"5616\"><span id=\"5617\"><img width=\"603\" height=\"521\" alt=\"image\" src=\"Image_118.png\" id=\"5618\"></span></p><p class=\"s66\"  id=\"5619\">public static string <span  id=\"5620\">GetVcardData()</span></p><p class=\"s70\"  id=\"5621\">{</p><p class=\"s98\"  id=\"5622\">ISqlHelper <span  id=\"5623\">getVcard = </span>DataLayerHelper<span  id=\"5624\">.CreateSqlHelper(</span>GlobalSettings<span  id=\"5625\">.DbDSN);</span></p><p class=\"s98\"  id=\"5626\">IRecordsReader <span  id=\"5627\">read = getVcard.ExecuteReader(</span><span  id=\"5628\">@\"select top 10 id, name, country</span></p><p class=\"s99\"  id=\"5629\">from vcardimage where id &gt; @id order by id desc\"<span  id=\"5630\">, getVcard.CreateParameter(</span>\"@id\"<span  id=\"5631\">, </span>\"0\"<span  id=\"5632\">));</span></p><p class=\"s70\"  id=\"5633\"><span  id=\"5634\">string </span>data = <span  id=\"5635\">\"\"</span>; <span  id=\"5636\">while </span>(read.Read())</p><p class=\"s70\"  id=\"5637\">{</p><p class=\"s70\"  id=\"5638\">data += <span  id=\"5639\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span  id=\"5640\">\"name\"</span>) +</p><p class=\"s99\"  id=\"5641\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span  id=\"5642\">+ read.GetString(</span>\"country\"<span  id=\"5643\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span  id=\"5644\">;</span></p><p class=\"s70\"  id=\"5645\">}</p><p class=\"s99\"  id=\"5646\"><span  id=\"5647\">return </span>\"&lt;ul&gt;\" <span  id=\"5648\">+ data + </span>\"&lt;/ul\"<span  id=\"5649\">;</span></p><p class=\"s70\"  id=\"5650\">}</p><p  id=\"5651\"><br id=\"5652\"></p><p class=\"s40\"  id=\"5653\">Description:</p><ul id=\"l136\"><li  id=\"5655\"><p class=\"s40\"  id=\"5656\">ISqlHelper object used to connect to database, GlobalSettings.DbDSN is use to retrieve database connection string from web.config file.</p></li><li  id=\"5657\"><p class=\"s40\"  id=\"5658\">IRecorderReader object contains method ExecuteReader(). ExecuteReater() has two parameters, first parameters is query string and second is parameters.</p></li><li  id=\"5659\"><p class=\"s40\"  id=\"5660\">‚Select to 10 id, name, country‛ means select id, name and country from table name vcardimage and order by desc (desending) order.</p></li><li  id=\"5661\"><p class=\"s40\"  id=\"5662\">I use while loop to loop data.</p></li><li  id=\"5663\"><p class=\"s40\"  id=\"5664\">By calling GetString() methods Umbraco retrieve data as</p></li></ul><p  id=\"5665\"><span id=\"5666\"><img width=\"648\" height=\"422\" alt=\"image\" src=\"Image_119.png\" id=\"5667\"></span></p><p class=\"s8\"  id=\"5668\"><span class=\"p\" id=\"5669\">If you are following me, RecentVcard class should looks like bellow, see captured screen. Now you need to publish your website. Go to </span>Build <span class=\"s89\" id=\"5670\"></span><span class=\"s28\" id=\"5671\"> </span>Publish VCardGenerator<span class=\"p\" id=\"5672\">. Select </span>Publish Method <span class=\"s89\" id=\"5673\"></span><span class=\"s28\" id=\"5674\"> </span>file System<span class=\"p\" id=\"5675\">. Select </span>Target Location <span class=\"p\" id=\"5676\">and press “</span>Publish<span class=\"p\" id=\"5677\">” button. It should generate </span>VCardControl.dll <span class=\"p\" id=\"5678\">file inside “Bin” Directory of your published directory. Copy that </span>VCardControl.dll <span class=\"p\" id=\"5679\">file to Umbraco website “</span>Bin<span class=\"p\" id=\"5680\">” Directory. If you are following me, you should already copied </span>VCardControl.dll <span class=\"p\" id=\"5681\">file into Umbraco website “</span>Bin<span class=\"p\" id=\"5682\">” Directory during User Control topics. You should replace old </span>VCardControl.dll <span class=\"p\" id=\"5683\">file with new </span>VCardControl.dll <span class=\"p\" id=\"5684\">file. We can register our </span>RecentVcard <span class=\"p\" id=\"5685\">class into Umbraco website </span>xsltExtensions.config <span class=\"p\" id=\"5686\">file.</span></p><p  id=\"5687\"><br id=\"5688\"></p><p  id=\"5689\"><br id=\"5690\"></p><p class=\"s88\"  id=\"5691\">RecentVcard     </p><p  id=\"5692\"><br id=\"5693\"></p><p class=\"s88\"  id=\"5694\">RecentVcard     </p><p  id=\"5695\"></p><p  id=\"5696\"><br id=\"5697\"></p><p  id=\"5698\">Overview of <i id=\"5699\">VCardGenerator </i>visual studio solution</p><p  id=\"5700\"><br id=\"5701\"></p><ul id=\"l137\"><li  id=\"5703\"><p  id=\"5704\">One user Control “VcardControl.ascx” use to generate Vcard</p></li><li  id=\"5705\"><p  id=\"5706\">One Class “RecentVcard.cs” use to fetch data from Database</p></li><li  id=\"5707\"><p  id=\"5708\">Added two references</p></li></ul><ol id=\"l138\"><li  id=\"5710\"><p  id=\"5711\">Umbraco.DataLayer</p><p  id=\"5712\"><br id=\"5713\"></p></li><li  id=\"5714\"><p  id=\"5715\">Umbraco</p></li></ol><p  id=\"5716\"><br id=\"5717\"></p><p  id=\"5718\">See code line 5 and 6 in RecentVcard Class.</p><h3  id=\"5719\"><a name=\"bookmark69\" id=\"5720\">Registering .NET Class on config file</a></h3><p  id=\"5721\"><i id=\"5722\">RecentVcard </i>class returns latest ten list of recent vcard from database, before to use <i id=\"5723\">RecentVcard </i>class, Umbraco requires registering first. We can use <i id=\"5724\">RecentVcard </i>class only after registering <i id=\"5725\">RecentVard </i>class into Umbraco <i id=\"5726\">xsltExtensions.config </i>file. <i id=\"5727\">xsltExtesion.config </i>file is xml file which can be found inside “config” directory in Umbraco website. Go To “config” directory and open <i id=\"5728\">xsltExtension.config </i>file. You can either use visual studio or other software program, I am using Notepad ++<span class=\"s3\" id=\"5729\">31 </span>open source software. See captured screen bellow.</p><p  id=\"5730\"><span id=\"5731\"><img width=\"644\" height=\"678\" alt=\"image\" src=\"Image_120.png\" id=\"5732\"></span></p><p  id=\"5733\"><span class=\"s125\" id=\"5734\">1 </span><span class=\"s126\"  id=\"5735\">xsltExtension.jpg</span></p><p  id=\"5736\"><br id=\"5737\"></p><p  id=\"5738\">2</p><p  id=\"5739\"><br id=\"5740\"></p><p class=\"s127\"  id=\"5741\">5                                                                     <span class=\"p\" id=\"5742\">3                 4</span></p><ol id=\"l139\"><li  id=\"5744\"><p  id=\"5745\">File location of xsltExtensions.config</p></li><li  id=\"5746\"><p  id=\"5747\">Assembly name “VcardGenerator”</p></li><li  id=\"5748\"><p  id=\"5749\">Type = first one before dot is Namespace</p></li><li  id=\"5750\"><p  id=\"5751\">Type = second after dot is Class name</p></li><li  id=\"5752\"><p  id=\"5753\">Alias : it is use in Xslt to refer assembly</p></li></ol><h4  id=\"5754\"><a name=\"a63\" id=\"5755\">Did you get confuse?</a></h4><h4  id=\"5756\">See image bellow “VCardGenerator.extension.jpg” and match number.</h4><p  id=\"5757\">Make changed in your xsltExtensions.config file as mine see image xsltExtension.jpg if you want to follow me.</p><p  id=\"5758\"><br id=\"5759\"></p><p  id=\"5760\">2</p><p  id=\"5761\"><br id=\"5762\"></p><p  id=\"5763\">3 4</p><p  id=\"5764\"><br id=\"5765\"></p><p  id=\"5766\">4</p><p  id=\"5767\"><br id=\"5768\"></p><p  id=\"5769\"><a name=\"a64\" id=\"5770\"><span class=\"s128\"  id=\"5771\">VCardGenerator.extension.jpg</span></a></p><p  id=\"5772\"><br id=\"5773\"></p><p  id=\"5774\"><span id=\"5775\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_121.png\" id=\"5776\"></span></p><p  id=\"5777\"><a href=\"http://notepad-plus-plus.org/\"  target=\"_blank\" id=\"5778\">31 </a><a href=\"http://notepad-plus-plus.org/\" class=\"s11\" target=\"_blank\" id=\"5779\">http://notepad-plus-plus.org/</a></p><p  id=\"5780\"><br id=\"5781\"></p><p  id=\"5782\"><br id=\"5783\"></p><p  id=\"5784\">After made change on xsltExtensions.config file, make sure to save changed.</p><p  id=\"5785\"><br id=\"5786\"></p><h4  id=\"5787\"><a name=\"a65\" id=\"5788\">Extending XSLT using .net Class Practice</a></h4><p  id=\"5789\"><br id=\"5790\"></p><p  id=\"5791\">We have now VCardGenerator.dll file inside “Bin” directory and we also registered our Class on “xsltExtentions.config” file. Remember alias we specified at “xsltExtensions.config” file. If you are following me, alias is “recentvcard”.</p><h4  id=\"5792\"><a name=\"a66\" id=\"5793\">Create Xslt:</a></h4><p  id=\"5794\"><br id=\"5795\"></p><p  id=\"5796\"><span id=\"5797\"><img width=\"332\" height=\"203\" alt=\"image\" src=\"Image_122.jpg\" id=\"5798\"></span></p><p  id=\"5799\">I have created new xslt for Recent Vcard, see captured screen left. Go to backend part of umbraco website, Select <span class=\"s89\" id=\"5800\"></span><span class=\"s28\" id=\"5801\"> </span>Developer <span class=\"s89\" id=\"5802\"></span><span class=\"s28\" id=\"5803\"> </span>XSLT Files <span class=\"s89\" id=\"5804\"></span><span class=\"s28\" id=\"5805\"> </span>Right Click and click on “Create”.</p><p  id=\"5806\">Filename: “ RecentVcard” Choose a Template: “Clean”</p><p  id=\"5807\">Checked: “Create Macro” by checked in Umbraco will create matching macro for us automatically,</p><p  id=\"5808\">Press <span class=\"s89\" id=\"5809\"></span><span class=\"s28\" id=\"5810\"> </span><i id=\"5811\">Create </i>Button.</p><p  id=\"5812\"><br id=\"5813\"></p><p  id=\"5814\"><span id=\"5815\"><img width=\"419\" height=\"109\" alt=\"image\" src=\"Image_123.png\" id=\"5816\"></span></p><p class=\"s8\"  id=\"5817\">Open “RecentVcard.xslt”</p><p  id=\"5818\"><br id=\"5819\"></p><p  id=\"5820\">We can registered .net class inside xsl:stylesheet, using xslns. See the captured screen right. See highlighted area on</p><p  id=\"5821\">right image, if you already worked with Xslt you may know xmlns. Xmlns is xml namespace for a document. After colon you provide namespace name, I choose “recentVcard”. You can choose different if you want. Use urn colon alias that you specified at xsltExtensions.config” see “xsltExtension.jpg” image, I my case alias is “recentvcard”. URN is Uniform Resource Name.</p><p  id=\"5822\">public static method inside .NET class can be access using xml namespace in XSLT. In RecentVcard Class has one static public methods called <i id=\"5823\">GetVcardData()</i>. To access that public method we can use namespace colon and method name. If there are any parameters, we can easily pass. See example bellow how I accessed GetVcardData() method.</p><p  id=\"5824\"><br id=\"5825\"></p><p  id=\"5826\"><br id=\"5827\"></p><p  id=\"5828\"><span id=\"5829\"><img width=\"623\" height=\"17\" alt=\"image\" src=\"Image_124.jpg\" id=\"5830\"></span></p><p  id=\"5831\"><br id=\"5832\"></p><p  id=\"5833\"><span id=\"5834\"><img width=\"638\" height=\"217\" alt=\"image\" src=\"Image_125.png\" id=\"5835\"></span></p><p  id=\"5836\">Use xml namespace Specify method after</p><p  id=\"5837\">Tips: xml namespace and methods are separated by colon</p><p  id=\"5838\">Tips: xml namespace and methods are separated by colon</p><p  id=\"5839\"></p><p  id=\"5840\">colon.</p><p  id=\"5841\">Use disable-out-escaping= “yes”. It means that do not escape special character because method GetVcardData() returns html tags, ul, li, span tags.</p><p  id=\"5842\"><br id=\"5843\"></p><p  id=\"5844\"><br id=\"5845\"></p><p  id=\"5846\"><span id=\"5847\"><img width=\"610\" height=\"431\" alt=\"image\" src=\"Image_126.jpg\" id=\"5848\"></span></p><p  id=\"5849\">Code all in one:</p><p  id=\"5850\"><br id=\"5851\"></p><p  id=\"5852\"><span class=\"s97\"  id=\"5853\">RecentVcard.xslt</span></p><p  id=\"5854\"><br id=\"5855\"></p><p  id=\"5856\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p  id=\"5857\"><span class=\"s97\"  id=\"5858\">RecentVcard.xslt</span></p><p  id=\"5859\"><br id=\"5860\"></p><p  id=\"5861\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p  id=\"5862\"><span  id=\"5863\"> </span></p><p  id=\"5864\"><br id=\"5865\"></p></div><h3  id=\"heading5866\" class=\"heading5866\"><a name=\"bookmark70\" id=\"5867\" >Modify Macro:</a></h3><div id=\"contentheading5866\" ><p  id=\"5868\">Once you have XSLT, you can insert Xslt into templates, in my case I am going to insert into Content. So we need to check “Use in editor” option. Go to <span class=\"s89\" id=\"5869\"></span>Macros <span class=\"s89\" id=\"5870\"></span><span class=\"s28\" id=\"5871\"> </span>Open “Recent Vcard” <span class=\"s89\" id=\"5872\"></span><span class=\"s28\" id=\"5873\"> </span>checked on “Use in Editor” and Remember to “S<i id=\"5874\">ave”</i>. See captured screen bellow for references.</p><p  id=\"5875\"><br id=\"5876\"></p><p  id=\"5877\"><span id=\"5878\"><img width=\"638\" height=\"535\" alt=\"image\" src=\"Image_127.png\" id=\"5879\"></span></p><p  id=\"5880\">By selecting “Use in editor” makes macro available to use in content section.</p><p  id=\"5881\"><span id=\"5882\"><img width=\"386\" height=\"271\" alt=\"image\" src=\"Image_128.jpg\" id=\"5883\"></span></p><h4  id=\"5884\"><a name=\"a67\" id=\"5885\">Create Content: “Recent Vcard”</a></h4><p  id=\"5886\"><br id=\"5887\"></p><p  id=\"5888\">Go to Content Section <span class=\"s89\" id=\"5889\"></span><span class=\"s28\" id=\"5890\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5891\"></span><span class=\"s28\" id=\"5892\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p  id=\"5893\">Go to Content Section <span class=\"s89\" id=\"5894\"></span><span class=\"s28\" id=\"5895\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5896\"></span><span class=\"s28\" id=\"5897\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p  id=\"5898\"><span  id=\"5899\"> </span></p><p  id=\"5900\"><br id=\"5901\"></p><p  id=\"5902\"><span id=\"5903\"><img width=\"634\" height=\"231\" alt=\"image\" src=\"Image_129.png\" id=\"5904\"></span></p><p  id=\"5905\">It should create Content “Recent Vcard” and visible at left side menu. Provide following information. “Content Title”: Recent Card and checked in use in Navigation so that “Recent Vcard” will show up in navigation bar</p><p  id=\"5906\"><br id=\"5907\"></p><p  id=\"5908\"><span id=\"5909\"><img width=\"648\" height=\"298\" alt=\"image\" src=\"Image_130.png\" id=\"5910\"></span></p><p  id=\"5911\">Click on Tab“Description” and Insert Macro on content area. Select Marco “Recent Vcard”, after inserting Macro “RecentVcard”. Click on Tab “Preoperties” Select Template “General Content” and Press “Save and Publish Icon”. Create few Vcard and check. It should show up on web site.</p><p  id=\"5912\"><br id=\"5913\"></p><p  id=\"5914\">Preview content by click on preview icon.</p><p  id=\"5915\"><br id=\"5916\"></p><p  id=\"5917\">If you are following me, Vcard website should look like bellow captured screen.</p><p  id=\"5918\"><br id=\"5919\"></p><p  id=\"5920\"><span id=\"5921\"><img width=\"638\" height=\"274\" alt=\"image\" src=\"Image_131.png\" id=\"5922\"></span></p><h2  id=\"heading5923\" class=\"heading5923\"><a name=\"bookmark71\" id=\"5924\" >Page not Found Error:</a></h2><div id=\"contentheading5923\" ><p  id=\"5925\">It is nice to replace default Umbraco error HTTP handler, there are many error handler 500, 404 and 403 etc. 404 error are page not found error, due to some reason, accidental file deletion, dead links and user request not existing page causes HTTP 404 errors. Umbraco handles 404 errors by showing its default error message. We can easily override 404 errors with custom page. First let‟s see Umbraco default error 404 page.</p><p  id=\"5926\"><br id=\"5927\"></p><p  id=\"5928\"><span id=\"5929\"><img width=\"638\" height=\"414\" alt=\"image\" src=\"Image_132.png\" id=\"5930\"></span></p><p  id=\"5931\">I requested not existing page /test.aspx page, which was not exist. Umbraco handle 404 error. See highlighted text, it explain well, what to do. Sometimes it may not enough so need to extra work or needs to add extra code in web.config file.</p><h3  id=\"heading5932\" class=\"heading5932\"><a name=\"bookmark72\" id=\"5933\" >Create Custom 404 error page.</a></h3><div id=\"contentheading5932\" ><p  id=\"5934\">I am creating simple 404 error page. If you want to follow me go <span class=\"s89\" id=\"5935\"></span>Content <span class=\"s89\" id=\"5936\"></span><span class=\"s28\" id=\"5937\"> </span>Right click and click on “Create”. Name: “Page not Found” and Select “General Content” Document Type. Do not check “Use in Navigation” because I don‟t want to show this page into navigation. This page should be displayed only if 404 errors occur. Go to Tab “Title” provide content title “Page Not Found”, Go to Tab “Description” and type “Requested page not found, temporarily unavailable or an out-of-date bookmark/favorite” Go to Tab “Properties” Template <span class=\"s89\" id=\"5938\"></span><span class=\"s28\" id=\"5939\"> </span>“General Content”. Finally press “Save and Publish Icon”. Hold a second on Properties tab and look id of content because Umbraco needs content id. See “pagenotfound.jpg” image as references. Each content item gets unique id. We need to specify unique id of items into umbracoSettings.config files.</p><p  id=\"5940\"><br id=\"5941\"></p><p  id=\"5942\"><span id=\"5943\"><img width=\"609\" height=\"373\" alt=\"image\" src=\"Image_133.png\" id=\"5944\"></span></p><p  id=\"5945\">pagenotfound.jpg</p><p  id=\"5946\"><br id=\"5947\"></p><p  id=\"5948\"><br id=\"5949\"></p><p  id=\"5950\">In my case node id or unique id for content “Page not found” is 1098. You may have different node or unique id</p><p  id=\"5951\"><br id=\"5952\"></p></div><h3  id=\"heading5953\" class=\"heading5953\"><a name=\"bookmark73\" id=\"5954\" >Modifying umbracoSettings.config file:</a></h3><div id=\"contentheading5953\" ><p  id=\"5955\">umbracoSettings.config file can be found inside “config” directory, open umbracoSettings.config file using notepad or other program. It‟s xml document, find</p><p  id=\"5956\">&lt;errors&gt; elements inside umbracoSettings.config. <i id=\"5957\">errors </i>element contain child <i id=\"5958\">error404 </i>element. Set its value to node id of content, in my case 1098 and Save umbracoSettings.config file. See captured screen bellow for references.</p><p  id=\"5959\"><br id=\"5960\"></p><p  id=\"5961\"><br id=\"5962\"></p><p  id=\"5963\"><span id=\"5964\"><img width=\"317\" height=\"147\" alt=\"image\" src=\"Image_134.png\" id=\"5965\"></span></p><p class=\"s10\"  id=\"5966\">Umbraco <span class=\"p\" id=\"5967\">error404.jpg</span></p><p  id=\"5968\"><br id=\"5969\"></p><p  id=\"5970\"><span id=\"5971\"><img width=\"594\" height=\"317\" alt=\"image\" src=\"Image_135.png\" id=\"5972\"></span></p><p class=\"s64\"  id=\"5973\"><span  id=\"5974\">Note: in some cases Umbraco 404 error may override by IIS (internet Information Service) or IIS may not hand over 404 error to Umbraco to handle in such case 404 error page will end up with ugly yellow dead screen page. To prevent from this we can specify by telling IIS not to handle, instead hand over all 404 error to Asp.net web site in our case Umbraco site by adding few lines of code into web.config file. Web.config file can be found in root directory of Umbraco System. Find system.webserver elements and add new element </span>&lt;<span  id=\"5975\">httpErrors </span><span  id=\"5976\">existingResponse</span>=<span  id=\"5977\">\"</span>PassThrough<span  id=\"5978\">\" </span>/&gt; <span  id=\"5979\">inside system.webserver elements. Using existingRespone= “passThrough” means IIS does not override custom errors.</span></p><p  id=\"5980\"><br id=\"5981\"></p></div></div><h2  id=\"heading5982\" class=\"heading5982\"><a name=\"bookmark74\" id=\"5983\" >Conclusion:</a></h2><div id=\"contentheading5982\" ><p  id=\"5984\"><br id=\"5985\"></p><p  id=\"5986\">Learning process is not difficult if we start from basic, every complex system begins with basic and simple structure. Here I provided basic concept of Umbraco using examples rather than theory. I use Vcard as a case to demonstrate practical examples of basic concept of Umbraco. Vcard was virtual website it does not exist on live but concept that I used in Vcard was easy to understand how to start building Umbraco website from scratch. I started to show installation of Umbraco cms, most of new developer faces many problems to install. Developing Umbraco site from empty Umbraco installation is great challenge to new developer but it‟s a way to learn Umbraco from inside, I started to build Vcard site from scratch, empty Umbraco installation. Creating DocumentType, Template and Content is core of Umbraco CMS. If you reading books from beginning without skipping chapter you should be able to understand connection between DocumentType, Template and Content. I provided information about fetching data from xml using xslt and extending xslt using</p><p  id=\"5987\">.net class provided basic concept of how to extend Umbraco. All these concepts and examples can be used for your own purpose and needs. You are familiar with how to fetch and insert data from database to Umbraco and Umbraco to Database, extending Umbraco using Xslt, user control and .net class. In last chapter I provided how to solve umbraco 404 error default page problem with custom 404 errors page in case you get errors. I also touch about security on website which will provide knowledge to secure Umbraco site even though security is not basic on Umbraco sites.</p><p  id=\"5988\"><br id=\"5989\"></p></div><h2  id=\"heading5990\" class=\"heading5990\"><a name=\"bookmark75\" id=\"5991\" >References:</a></h2><div id=\"contentheading5990\" ><p  id=\"5992\">Taken date: May-17-2011 Xslt and Xpath</p><p  id=\"5993\"><a href=\"http://www.w3schools.com/xsl/\" id=\"5994\">http://www.w3schools.com/xsl/</a></p><p  id=\"5995\"><br id=\"5996\"></p><p  id=\"5997\">Umbraco to Database and Database to Umbraco</p><p  id=\"5998\"><br id=\"5999\"></p><p  id=\"6000\">http://our.umbraco.org/forum/developers/api-questions/12248-Get-value-from-base- into-database</p><p  id=\"6001\">http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205--- comments</p><p  id=\"6002\"><a href=\"http://our.umbraco.org/wiki\" class=\"a\" target=\"_blank\" id=\"6003\">Wiki </a><a href=\"http://our.umbraco.org/wiki\" target=\"_blank\" id=\"6004\">http://our.umbraco.org/wiki</a></p><p  id=\"6005\">http://our.umbraco.org/wiki/recommendations/recommended-reading-for-net- developers</p><p  id=\"6006\"><br id=\"6007\"></p></div><h2  id=\"heading6008\" class=\"heading6008\"><a name=\"bookmark76\" id=\"6009\" >Extra files:</a></h2><div id=\"contentheading6008\" ><h3  id=\"heading6010\" class=\"heading6010\"><a name=\"bookmark77\" id=\"6011\" >Web grid.</a></h3><div id=\"contentheading6010\" ><p  id=\"6012\"><span id=\"6013\"><img width=\"599\" height=\"371\" alt=\"image\" src=\"Image_136.jpg\" id=\"6014\"></span></p><h3  id=\"6015\"><a name=\"bookmark78\" id=\"6016\">File “VcardControl.ascx”</a></h3><p  id=\"6017\"><span class=\"s65\"  id=\"6018\">&lt;%</span><span class=\"s66\" id=\"6019\">@ </span><span class=\"s67\" id=\"6020\">Control </span><span class=\"s68\" id=\"6021\">Language</span><span class=\"s66\" id=\"6022\">=\"C#\" </span><span class=\"s68\" id=\"6023\">AutoEventWireup</span><span class=\"s66\" id=\"6024\">=\"true\" </span><span class=\"s68\" id=\"6025\">CodeBehind</span><span class=\"s66\" id=\"6026\">=\"VcardControl.ascx.cs\" </span><span class=\"s68\" id=\"6027\">Inherits</span><span class=\"s66\" id=\"6028\">=\"VCardGenerator.VcardControl\" </span><span class=\"s65\"  id=\"6029\">%&gt;</span></p><p  id=\"6030\"><br id=\"6031\"></p><p class=\"s66\"  id=\"6032\">&lt;<span  id=\"6033\">form </span><span  id=\"6034\">id</span>=\"FormVcard\" <span  id=\"6035\">runat</span>=\"server\"&gt;</p><p class=\"s66\"  id=\"6036\">&lt;<span  id=\"6037\">div </span><span  id=\"6038\">class</span>=\"errorMessage\"&gt;</p><p class=\"s66\"  id=\"6039\">&lt;<span  id=\"6040\">asp</span>:<span  id=\"6041\">Label </span><span  id=\"6042\">ID</span>=\"LabelNotice\" <span  id=\"6043\">runat</span>=\"server\" <span  id=\"6044\">Text</span>=\"\"&gt;&lt;/<span  id=\"6045\">asp</span>:<span  id=\"6046\">Label</span>&gt;</p><p class=\"s66\"  id=\"6047\">&lt;<span  id=\"6048\">asp</span>:<span  id=\"6049\">ValidationSummary </span><span  id=\"6050\">ID</span>=\"ValidationSummary\" <span  id=\"6051\">runat</span>=\"server\" <span  id=\"6052\">ForeColor</span>=\"#FF6666\"</p><p class=\"s66\"  id=\"6053\">/&gt;</p><p class=\"s66\"  id=\"6054\">&lt;/<span  id=\"6055\">div</span>&gt;</p><p class=\"s66\"  id=\"6056\">&lt;<span  id=\"6057\">table </span>&gt;</p><p class=\"s66\"  id=\"6058\">&lt;<span  id=\"6059\">tr </span><span  id=\"6060\">class</span>=\"name\"&gt;</p><p class=\"s66\"  id=\"6061\">&lt;<span  id=\"6062\">td</span>&gt; <span  id=\"6063\">Name: </span>&lt;/<span  id=\"6064\">td</span>&gt;&lt;<span  id=\"6065\">td</span>&gt;&lt;<span  id=\"6066\">asp</span>:<span  id=\"6067\">TextBox </span><span  id=\"6068\">ID</span>=\"TextBoxName\" <span  id=\"6069\">runat</span>=server&gt;&lt;/<span  id=\"6070\">asp</span>:<span  id=\"6071\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6072\">&lt;<span  id=\"6073\">asp</span>:<span  id=\"6074\">RequiredFieldValidator </span><span  id=\"6075\">ID</span>=\"RequiredFieldValidatorName\" <span  id=\"6076\">runat</span>=\"server\" <span  id=\"6077\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"6078\">ErrorMessage</span>=\"Name Required\" <span  id=\"6079\">Font-</span></p><p class=\"s68\"  id=\"6080\">Size<span  id=\"6081\">=\"Small\"</span></p><p class=\"s66\"  id=\"6082\"><span  id=\"6083\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span  id=\"6084\">asp</span>:<span  id=\"6085\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\"  id=\"6086\">&lt;<span  id=\"6087\">asp</span>:<span  id=\"6088\">CustomValidator </span><span  id=\"6089\">ID</span>=\"CustomValidatorName\" <span  id=\"6090\">runat</span>=\"server\" <span  id=\"6091\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"6092\">ErrorMessage</span>=\"Name is not Valid\" <span  id=\"6093\">ForeColor</span>=\"#CC0000\"</p><p class=\"s66\"  id=\"6094\"><span  id=\"6095\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span  id=\"6096\">*</span>&lt;/<span  id=\"6097\">asp</span>:<span  id=\"6098\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6099\">&lt;/<span  id=\"6100\">td</span>&gt;</p><p class=\"s66\"  id=\"6101\">&lt;/<span  id=\"6102\">tr</span>&gt;</p><p class=\"s66\"  id=\"6103\">&lt;<span  id=\"6104\">tr </span><span  id=\"6105\">class</span>=\"street\"&gt;</p><p class=\"s66\"  id=\"6106\">&lt;<span  id=\"6107\">td</span>&gt; <span  id=\"6108\">Street:</span>&lt;/<span  id=\"6109\">td</span>&gt;&lt;<span  id=\"6110\">td</span>&gt; &lt;<span  id=\"6111\">asp</span>:<span  id=\"6112\">TextBox </span><span  id=\"6113\">ID</span>=\"TextBoxStreet\" <span  id=\"6114\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6115\">asp</span>:<span  id=\"6116\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6117\">&lt;/<span  id=\"6118\">td</span>&gt;</p><p class=\"s66\"  id=\"6119\">&lt;/<span  id=\"6120\">tr</span>&gt;</p><p class=\"s66\"  id=\"6121\">&lt;<span  id=\"6122\">tr </span><span  id=\"6123\">class</span>=\"postalCode\"&gt;</p><p class=\"s66\"  id=\"6124\">&lt;<span  id=\"6125\">td</span>&gt; <span  id=\"6126\">PostalCode:</span>&lt;/<span  id=\"6127\">td</span>&gt;&lt;<span  id=\"6128\">td</span>&gt; &lt;<span  id=\"6129\">asp</span>:<span  id=\"6130\">TextBox </span><span  id=\"6131\">ID</span>=\"TextBoxPostalCode\" <span  id=\"6132\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6133\">asp</span>:<span  id=\"6134\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6135\">&lt;<span  id=\"6136\">asp</span>:<span  id=\"6137\">CustomValidator </span><span  id=\"6138\">ID</span>=\"CustomValidatorPostalCode\" <span  id=\"6139\">runat</span>=\"server\" <span  id=\"6140\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6141\">ErrorMessage<span  id=\"6142\">=\"Postal Code 4 digit\" </span>ControlToValidate<span  id=\"6143\">=\"TextBoxPostalCode\"</span></p><p  id=\"6144\"><br id=\"6145\"></p><p class=\"s66\"  id=\"6146\"><span  id=\"6147\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span  id=\"6148\">*</span>&lt;/<span  id=\"6149\">asp</span>:<span  id=\"6150\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6151\">&lt;/<span  id=\"6152\">td</span>&gt;</p><p class=\"s66\"  id=\"6153\">&lt;/<span  id=\"6154\">tr</span>&gt;</p><p class=\"s66\"  id=\"6155\">&lt;<span  id=\"6156\">tr </span><span  id=\"6157\">class</span>=\"city\"&gt;</p><p class=\"s66\"  id=\"6158\">&lt;<span  id=\"6159\">td</span>&gt; <span  id=\"6160\">City:</span>&lt;/<span  id=\"6161\">td</span>&gt;&lt;<span  id=\"6162\">td</span>&gt; &lt;<span  id=\"6163\">asp</span>:<span  id=\"6164\">TextBox </span><span  id=\"6165\">ID</span>=\"TextBoxCity\" <span  id=\"6166\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6167\">asp</span>:<span  id=\"6168\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6169\">&lt;/<span  id=\"6170\">tr</span>&gt;</p><p class=\"s66\"  id=\"6171\">&lt;<span  id=\"6172\">tr </span><span  id=\"6173\">class</span>=\"country\"&gt;</p><p class=\"s66\"  id=\"6174\">&lt;<span  id=\"6175\">td</span>&gt; <span  id=\"6176\">Country:</span>&lt;/<span  id=\"6177\">td</span>&gt;&lt;<span  id=\"6178\">td</span>&gt; &lt;<span  id=\"6179\">asp</span>:<span  id=\"6180\">TextBox </span><span  id=\"6181\">ID</span>=\"TextBoxCountry\" <span  id=\"6182\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6183\">asp</span>:<span  id=\"6184\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6185\">&lt;<span  id=\"6186\">asp</span>:<span  id=\"6187\">CustomValidator </span><span  id=\"6188\">ID</span>=\"CustomValidatorCountry\" <span  id=\"6189\">runat</span>=\"server\" <span  id=\"6190\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6191\">ErrorMessage<span  id=\"6192\">=\"Country Not Valid\" </span>ControlToValidate<span  id=\"6193\">=\"TextBoxCountry\"</span></p><p  id=\"6194\"><br id=\"6195\"></p><p class=\"s66\"  id=\"6196\"><span  id=\"6197\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span  id=\"6198\">*</span>&lt;/<span  id=\"6199\">asp</span>:<span  id=\"6200\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6201\">&lt;/<span  id=\"6202\">td</span>&gt;</p><p class=\"s66\"  id=\"6203\">&lt;/<span  id=\"6204\">tr</span>&gt;</p><p class=\"s66\"  id=\"6205\">&lt;<span  id=\"6206\">tr </span><span  id=\"6207\">class</span>=\"phone\"&gt;</p><p class=\"s66\"  id=\"6208\">&lt;<span  id=\"6209\">td</span>&gt; <span  id=\"6210\">Phone:</span><span  id=\"6211\">&amp;nbsp; </span><span  id=\"6212\">+45</span>&lt;/<span  id=\"6213\">td</span>&gt;&lt;<span  id=\"6214\">td</span>&gt;&lt;<span  id=\"6215\">asp</span>:<span  id=\"6216\">TextBox </span><span  id=\"6217\">ID</span>=\"TextBoxPhone\" <span  id=\"6218\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6219\">asp</span>:<span  id=\"6220\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6221\">&lt;<span  id=\"6222\">asp</span>:<span  id=\"6223\">CustomValidator </span><span  id=\"6224\">ID</span>=\"CustomValidatorPhone\" <span  id=\"6225\">runat</span>=\"server\" <span  id=\"6226\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6227\">ErrorMessage<span  id=\"6228\">=\"Phone must be 8 digit, Without +45 \" </span>ControlToValidate<span  id=\"6229\">=\"TextBoxPhone\"</span></p><p  id=\"6230\"><br id=\"6231\"></p><p class=\"s66\"  id=\"6232\"><span  id=\"6233\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span  id=\"6234\">*</span>&lt;/<span  id=\"6235\">asp</span>:<span  id=\"6236\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6237\">&lt;/<span  id=\"6238\">td</span>&gt;</p><p  id=\"6239\"><br id=\"6240\"></p><p class=\"s66\"  id=\"6241\">&lt;/<span  id=\"6242\">tr</span>&gt;</p><p class=\"s66\"  id=\"6243\">&lt;<span  id=\"6244\">tr </span><span  id=\"6245\">class</span>=\"email\"&gt;</p><p class=\"s66\"  id=\"6246\">&lt;<span  id=\"6247\">td</span>&gt; <span  id=\"6248\">Email: </span>&lt;/<span  id=\"6249\">td</span>&gt;&lt;<span  id=\"6250\">td</span>&gt;&lt;<span  id=\"6251\">asp</span>:<span  id=\"6252\">TextBox </span><span  id=\"6253\">ID</span>=\"TextBoxEmail\" <span  id=\"6254\">runat</span>=\"server\" <span  id=\"6255\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span  id=\"6256\">asp</span>:<span  id=\"6257\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6258\">&lt;<span  id=\"6259\">asp</span>:<span  id=\"6260\">RequiredFieldValidator </span><span  id=\"6261\">ID</span>=\"RequiredFieldValidatorEmail\" <span  id=\"6262\">runat</span>=\"server\" <span  id=\"6263\">Font-Size</span>=\"Small\"</p><p class=\"s66\"  id=\"6264\"><span  id=\"6265\">ErrorMessage</span>=\"Email Required\" <span  id=\"6266\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span  id=\"6267\">Email Required</span>&lt;/<span  id=\"6268\">asp</span>:<span  id=\"6269\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\"  id=\"6270\">&lt;<span  id=\"6271\">asp</span>:<span  id=\"6272\">CustomValidator </span><span  id=\"6273\">ID</span>=\"CustomValidatorEmail\" <span  id=\"6274\">runat</span>=\"server\" <span  id=\"6275\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6276\">ErrorMessage<span  id=\"6277\">=\"Email Not Valid\" </span>ControlToValidate<span  id=\"6278\">=\"TextBoxEmail\"</span></p><p  id=\"6279\"><br id=\"6280\"></p><p class=\"s66\"  id=\"6281\"><span  id=\"6282\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span  id=\"6283\">*</span>&lt;/<span  id=\"6284\">asp</span>:<span  id=\"6285\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6286\">&lt;/<span  id=\"6287\">td</span>&gt;</p><p class=\"s66\"  id=\"6288\">&lt;/<span  id=\"6289\">tr</span>&gt;</p><p class=\"s66\"  id=\"6290\">&lt;<span  id=\"6291\">tr </span><span  id=\"6292\">class</span>=\"website\"&gt;</p><p class=\"s66\"  id=\"6293\">&lt;<span  id=\"6294\">td</span>&gt; <span  id=\"6295\">WebSite:</span>&lt;/<span  id=\"6296\">td</span>&gt;&lt;<span  id=\"6297\">td</span>&gt; &lt;<span  id=\"6298\">asp</span>:<span  id=\"6299\">TextBox </span><span  id=\"6300\">ID</span>=\"TextBoxWebsite\" <span  id=\"6301\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6302\">asp</span>:<span  id=\"6303\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6304\">&lt;<span  id=\"6305\">asp</span>:<span  id=\"6306\">CustomValidator </span><span  id=\"6307\">ID</span>=\"CustomValidatorWebSite\" <span  id=\"6308\">runat</span>=\"server\" <span  id=\"6309\">ErrorMessage</span>=\"Website not valid\" <span  id=\"6310\">ControlToValidate</span>=\"TextBoxWebsite\"</p><p  id=\"6311\"><br id=\"6312\"></p><p class=\"s66\"  id=\"6313\"><span  id=\"6314\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span  id=\"6315\">*</span>&lt;/<span  id=\"6316\">asp</span>:<span  id=\"6317\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6318\">&lt;/<span  id=\"6319\">td</span>&gt;</p><p class=\"s66\"  id=\"6320\">&lt;/<span  id=\"6321\">tr</span>&gt;</p><p class=\"s66\"  id=\"6322\">&lt;<span  id=\"6323\">tr </span><span  id=\"6324\">class</span>=\"photo\"&gt;</p><p class=\"s66\"  id=\"6325\">&lt;<span  id=\"6326\">td</span>&gt; <span  id=\"6327\">Photo:</span>&lt;/<span  id=\"6328\">td</span>&gt;&lt;<span  id=\"6329\">td</span>&gt; &lt;<span  id=\"6330\">asp</span>:<span  id=\"6331\">FileUpload </span><span  id=\"6332\">ID</span>=\"FileUploadPhoto\" <span  id=\"6333\">runat</span>=\"server\" /&gt;</p><p class=\"s66\"  id=\"6334\">&lt;/<span  id=\"6335\">td</span>&gt;</p><p class=\"s66\"  id=\"6336\">&lt;/<span  id=\"6337\">tr</span>&gt;</p><p class=\"s66\"  id=\"6338\">&lt;<span  id=\"6339\">tr </span>&gt;</p><p class=\"s66\"  id=\"6340\">&lt;<span  id=\"6341\">td</span>&gt;</p><p class=\"s66\"  id=\"6342\"><span  id=\"6343\">&amp;nbsp;</span>&lt;/<span  id=\"6344\">td</span>&gt; &lt;<span  id=\"6345\">td</span>&gt; &lt;<span  id=\"6346\">asp</span>:<span  id=\"6347\">Button </span><span  id=\"6348\">ID</span>=\"ButtonCreate\" <span  id=\"6349\">runat</span>=\"server\" <span  id=\"6350\">Text</span>=\"Create\"</p><p class=\"s66\"  id=\"6351\"><span  id=\"6352\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span  id=\"6353\">td</span>&gt;</p><p class=\"s66\"  id=\"6354\">&lt;/<span  id=\"6355\">tr</span>&gt;</p><p  id=\"6356\"><br id=\"6357\"></p><p class=\"s66\"  id=\"6358\">&lt;/<span  id=\"6359\">table</span>&gt;</p><p class=\"s66\"  id=\"6360\">&lt;/<span  id=\"6361\">form</span>&gt;</p><p  id=\"6362\"><a name=\"a68\" id=\"6363\"><span class=\"p\" id=\"6364\">File </span></a><span class=\"s128\"  id=\"6365\">VcardControl.ascx.cs</span></p><p  id=\"6366\"><br id=\"6367\"></p><p class=\"s66\"  id=\"6368\">using <span  id=\"6369\">System;</span></p><p class=\"s66\"  id=\"6370\">using <span  id=\"6371\">System.Collections.Generic; </span>using <span  id=\"6372\">System.Linq;</span></p><p class=\"s66\"  id=\"6373\">using <span  id=\"6374\">System.Web;</span></p><p class=\"s66\"  id=\"6375\">using <span  id=\"6376\">umbraco.DataLayer.SqlHelpers.SqlServer; </span>using <span  id=\"6377\">umbraco.DataLayer;</span></p><p class=\"s66\"  id=\"6378\">using <span  id=\"6379\">umbraco;</span></p><p class=\"s66\"  id=\"6380\">using <span  id=\"6381\">System.Data.SqlClient;</span></p><p class=\"s66\"  id=\"6382\">using <span  id=\"6383\">System.Text.RegularExpressions; </span>using <span  id=\"6384\">System.Web.UI.WebControls; </span>using <span  id=\"6385\">System.IO;</span></p><p class=\"s66\"  id=\"6386\">using <span  id=\"6387\">System.Text; </span>using <span  id=\"6388\">System.Net.Mail; </span>using <span  id=\"6389\">System.Net;</span></p><p  id=\"6390\"><br id=\"6391\"></p><p class=\"s66\"  id=\"6392\">namespace <span  id=\"6393\">VCardGenerator</span></p><p class=\"s70\"  id=\"6394\">{</p><p class=\"s98\"  id=\"6395\"><span  id=\"6396\">public partial class </span>VcardControl <span  id=\"6397\">: System.Web.UI.</span>UserControl</p><p class=\"s70\"  id=\"6398\">{</p><p class=\"s103\"  id=\"6399\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6400\">/// <span  id=\"6401\">Handles the Load event of the Page control.</span></p><p class=\"s103\"  id=\"6402\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6403\">/// &lt;param name=\"sender\"&gt;<span  id=\"6404\">The source of the event.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6405\">/// &lt;param name=\"e\"&gt;<span  id=\"6406\">The </span>&lt;see cref=\"System.EventArgs\"/&gt; <span  id=\"6407\">instance containing the event data.</span>&lt;/param&gt;</p><p class=\"s70\"  id=\"6408\"><span  id=\"6409\">protected void </span>Page_Load(<span  id=\"6410\">object </span>sender, <span  id=\"6411\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6412\">{</p><p  id=\"6413\"><br id=\"6414\"></p><p class=\"s70\"  id=\"6415\">}</p><p  id=\"6416\"><br id=\"6417\"></p><p class=\"s70\"  id=\"6418\"><span  id=\"6419\">protected void </span>ButtonCreate_Click(<span  id=\"6420\">object </span>sender, <span  id=\"6421\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6422\">{</p><p class=\"s66\"  id=\"6423\">if <span  id=\"6424\">(Page.IsValid)</span></p><p class=\"s70\"  id=\"6425\">{</p><p class=\"s70\"  id=\"6426\"><span  id=\"6427\">Guid </span>id = <span  id=\"6428\">Guid</span>.NewGuid(); <span  id=\"6429\">string </span>imgFile = <span  id=\"6430\">\"noimage\"</span>;</p><p class=\"s66\"  id=\"6431\">string <span  id=\"6432\">name = RemoveSpecialCharacter(TextBoxName.Text);</span></p><p class=\"s66\"  id=\"6433\">string <span  id=\"6434\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"6435\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"6436\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"6437\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"6438\">string <span  id=\"6439\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"6440\">string <span  id=\"6441\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"6442\">phone = RemoveSpecialCharacter(TextBoxPhone.Text); </span>if <span  id=\"6443\">(FileUploadPhoto.PostedFile != </span>null <span  id=\"6444\">&amp;&amp;</span></p><p class=\"s70\"  id=\"6445\">FileUploadPhoto.PostedFile.ContentLength &gt; 0)</p><p class=\"s70\"  id=\"6446\">{</p><p class=\"s70\"  id=\"6447\"><span  id=\"6448\">string </span>guid = id.ToString(<span  id=\"6449\">\"N\"</span>);</p><p class=\"s70\"  id=\"6450\"><span  id=\"6451\">string </span>imageDirectory = Server.MapPath(<span  id=\"6452\">\"vcardimage\"</span>); <span  id=\"6453\">if </span>(<span  id=\"6454\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\"  id=\"6455\">{</p><p class=\"s70\"  id=\"6456\">FileUploadPhoto.PostedFile.SaveAs( Server.MapPath(<span  id=\"6457\">\"/vcardimage/\" </span>+ guid +</p><p class=\"s70\"  id=\"6458\">FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"6459\">}</p><p class=\"s66\"  id=\"6460\">else</p><p class=\"s70\"  id=\"6461\">{</p><p class=\"s70\"  id=\"6462\"><span  id=\"6463\">Directory</span>.CreateDirectory(Server.MapPath(<span  id=\"6464\">\"vcardimage\"</span>));</p><p class=\"s70\"  id=\"6465\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span  id=\"6466\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"6467\">}</p><p  id=\"6468\"><br id=\"6469\"></p><p class=\"s70\"  id=\"6470\">imgFile = imageDirectory + <span  id=\"6471\">\"/\" </span>+ guid + FileUploadPhoto.FileName; SendVcard(<span  id=\"6472\">\"Your Vcard:\"</span>,</p><p class=\"s99\"  id=\"6473\">\"Your vcard is ready. Please open Attachment. \\n Thank you very much \\n Semic Provider\"<span  id=\"6474\">,</span></p><p class=\"s70\"  id=\"6475\">email,</p><p class=\"s70\"  id=\"6476\">GenerateVcard(name, streetaddress, zip, city, country,</p><p class=\"s70\"  id=\"6477\">email, phone, web, imgFile));</p><p class=\"s70\"  id=\"6478\">LabelNotice.Text = <span  id=\"6479\">\"VCard has been sent to \" </span>+ email;</p><p class=\"s70\"  id=\"6480\">}</p><p class=\"s66\"  id=\"6481\">else</p><p class=\"s70\"  id=\"6482\">{</p><p class=\"s70\"  id=\"6483\">SendVcard(<span  id=\"6484\">\"Vcard:\"</span>, <span  id=\"6485\">\"Your vcard is ready. Please open Attachment.</span></p><p class=\"s99\"  id=\"6486\">\\n Thank you very much \\n Semic Provider\"<span  id=\"6487\">,</span></p><p class=\"s70\"  id=\"6488\">email,</p><p class=\"s70\"  id=\"6489\">GenerateVcard(name, streetaddress, zip, city, country, email, phone, web, imgFile));</p><p class=\"s70\"  id=\"6490\">LabelNotice.Text = <span  id=\"6491\">\"VCard has been sent to \" </span>+ email;</p><p  id=\"6492\"><br id=\"6493\"></p><p class=\"s70\"  id=\"6494\">imgFile);</p><p  id=\"6495\"><br id=\"6496\"></p><p class=\"s70\"  id=\"6497\">}</p><p class=\"s70\"  id=\"6498\">}</p><p class=\"s70\"  id=\"6499\">InsertTable(name, streetaddress, zip, country, phone, email, web,</p><p  id=\"6500\"><br id=\"6501\"></p><p class=\"s70\"  id=\"6502\">}</p><p  id=\"6503\"><br id=\"6504\"></p><p  id=\"6505\"><br id=\"6506\"></p><p class=\"s103\"  id=\"6507\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6508\">/// <span  id=\"6509\">Generates the vcard.</span></p><p class=\"s103\"  id=\"6510\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6511\">/// &lt;param name=\"firstName\"&gt;<span  id=\"6512\">The first name.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6513\">/// &lt;param name=\"streetAddress\"&gt;<span  id=\"6514\">The street address.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6515\">/// &lt;param name=\"zip\"&gt;<span  id=\"6516\">The zip.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6517\">/// &lt;param name=\"city\"&gt;<span  id=\"6518\">The city.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6519\">/// &lt;param name=\"country\"&gt;<span  id=\"6520\">The country.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6521\">/// &lt;param name=\"email\"&gt;<span  id=\"6522\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6523\">/// &lt;param name=\"phone\"&gt;<span  id=\"6524\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6525\">/// &lt;param name=\"web\"&gt;<span  id=\"6526\">The web.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6527\">/// &lt;param name=\"image\"&gt;<span  id=\"6528\">The image.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6529\">/// &lt;returns&gt; <span  id=\"6530\">vcard string </span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6531\">public string <span  id=\"6532\">GenerateVcard(</span>string <span  id=\"6533\">firstName, </span>string <span  id=\"6534\">streetAddress, </span>string <span  id=\"6535\">zip, </span>string <span  id=\"6536\">city, </span>string <span  id=\"6537\">country, </span>string <span  id=\"6538\">email, </span>string <span  id=\"6539\">phone, </span>string <span  id=\"6540\">web, </span>string <span  id=\"6541\">image)</span></p><p class=\"s70\"  id=\"6542\">{</p><p class=\"s70\"  id=\"6543\"><span  id=\"6544\">string </span>url = <span  id=\"6545\">\"\"</span>; <span  id=\"6546\">if </span>(web.Length &gt; 0)</p><p class=\"s70\"  id=\"6547\">{</p><p class=\"s70\"  id=\"6548\">url = <span  id=\"6549\">\"http://\" </span>+ web.Replace(<span  id=\"6550\">\"http\"</span>, <span  id=\"6551\">\"\"</span>);</p><p class=\"s70\"  id=\"6552\">}</p><p class=\"s70\"  id=\"6553\"><span  id=\"6554\">var </span>vcardStringBuilder = <span  id=\"6555\">new </span><span  id=\"6556\">StringBuilder</span>(); vcardStringBuilder.AppendLine(<span  id=\"6557\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"6558\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"6559\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"6560\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"6561\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"6562\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"6563\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"6564\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"6565\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"6566\">\"URL;type=pref:\" </span>+ url);</p><p class=\"s70\"  id=\"6567\">vcardStringBuilder.AppendLine(<span  id=\"6568\">\"EMAIL:\" </span>+ email); <span  id=\"6569\">if </span>(image != <span  id=\"6570\">\"noimage\"</span>)</p><p class=\"s70\"  id=\"6571\">{</p><p class=\"s70\"  id=\"6572\">vcardStringBuilder.AppendLine(<span  id=\"6573\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"6574\">\":\"</span>);</p><p  id=\"6575\"><br id=\"6576\"></p><p class=\"s70\"  id=\"6577\">vcardStringBuilder.AppendLine(<span  id=\"6578\">Convert</span>.ToBase64String(ReadImage(image))); vcardStringBuilder.AppendLine(<span  id=\"6579\">string</span>.Empty);</p><p class=\"s70\"  id=\"6580\">}</p><p class=\"s70\"  id=\"6581\">vcardStringBuilder.AppendLine(<span  id=\"6582\">\"END:VCARD\"</span>); <span  id=\"6583\">return </span>vcardStringBuilder.ToString();</p><p class=\"s70\"  id=\"6584\">}</p><p  id=\"6585\"><br id=\"6586\"></p><p class=\"s103\"  id=\"6587\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6588\">/// <span  id=\"6589\">Reads the image.</span></p><p class=\"s103\"  id=\"6590\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6591\">/// &lt;param name=\"image\"&gt;<span  id=\"6592\">The image.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6593\">/// &lt;returns&gt; <span  id=\"6594\">image bytes </span>&lt;/returns&gt; <span  id=\"6595\">public byte</span><span  id=\"6596\">[] ReadImage(</span><span  id=\"6597\">string </span><span  id=\"6598\">image)</span></p><p class=\"s70\"  id=\"6599\">{</p><p class=\"s66\"  id=\"6600\">try</p><p class=\"s70\"  id=\"6601\">{</p><p  id=\"6602\"><br id=\"6603\"></p><p class=\"s70\"  id=\"6604\">}</p><p  id=\"6605\"><br id=\"6606\"></p><p class=\"s66\"  id=\"6607\">return <span  id=\"6608\">File</span><span  id=\"6609\">.ReadAllBytes(image);</span></p><p class=\"s70\"  id=\"6610\"><span  id=\"6611\">catch </span>(<span  id=\"6612\">Exception </span>ex)</p><p class=\"s70\"  id=\"6613\">{</p><p class=\"s70\"  id=\"6614\"><span  id=\"6615\">return </span><span  id=\"6616\">File</span>.ReadAllBytes(Server.MapPath(<span  id=\"6617\">\"media/logo-vcard.png\"</span>));</p><p class=\"s70\"  id=\"6618\">}</p><p class=\"s70\"  id=\"6619\">}</p><p  id=\"6620\"><br id=\"6621\"></p><p class=\"s103\"  id=\"6622\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6623\">/// <span  id=\"6624\">Sends the vcard.</span></p><p class=\"s103\"  id=\"6625\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6626\">/// &lt;param name=\"subject\"&gt;<span  id=\"6627\">The subject.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6628\">/// &lt;param name=\"body\"&gt;<span  id=\"6629\">The body.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6630\">/// &lt;param name=\"email\"&gt;<span  id=\"6631\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6632\">/// &lt;param name=\"file\"&gt;<span  id=\"6633\">The file.</span>&lt;/param&gt;</p><p class=\"s66\"  id=\"6634\">private void <span  id=\"6635\">SendVcard(</span>string <span  id=\"6636\">subject, </span>string <span  id=\"6637\">body, </span>string <span  id=\"6638\">email, </span>string <span  id=\"6639\">file)</span></p><p class=\"s70\"  id=\"6640\">{</p><p class=\"s70\"  id=\"6641\"><span  id=\"6642\">byte</span>[] byteArray = <span  id=\"6643\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"6644\">try</span></p><p class=\"s70\"  id=\"6645\">{</p><p  id=\"6646\"><br id=\"6647\"></p><p class=\"s98\"  id=\"6648\">MemoryStream <span  id=\"6649\">stream = </span><span  id=\"6650\">new </span>MemoryStream<span  id=\"6651\">(byteArray); </span>MailMessage <span  id=\"6652\">message = </span><span  id=\"6653\">new </span>MailMessage<span  id=\"6654\">(); message.Subject = subject;</span></p><p class=\"s70\"  id=\"6655\">message.Body = body;</p><p class=\"s70\"  id=\"6656\">message.From = <span  id=\"6657\">new </span><span  id=\"6658\">MailAddress</span>(<a href=\"mailto:jeevan_2np@yahoo.com\" class=\"s130\" target=\"_blank\" id=\"6659\">\"sender id example: </a><span  id=\"6660\">jeevan_2np@yahoo.com\"</span>);</p><p class=\"s70\"  id=\"6661\">message.To.Add(email);</p><p class=\"s98\"  id=\"6662\">SmtpClient <span  id=\"6663\">client = </span><span  id=\"6664\">new </span>SmtpClient<span  id=\"6665\">();</span></p><p class=\"s70\"  id=\"6666\"><span  id=\"6667\">Attachment </span>vcard = <span  id=\"6668\">new </span><span  id=\"6669\">Attachment</span>(stream, <span  id=\"6670\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"6671\">client.Host = <span  id=\"6672\">\"smtp address\"</span>; client.Port = smtp port number;</p><p class=\"s70\"  id=\"6673\">client.Credentials = <span  id=\"6674\">new </span><span  id=\"6675\">NetworkCredential</span>(<span  id=\"6676\">\"user id \"</span>, <span  id=\"6677\">\"password\"</span>); client.EnableSsl = <span  id=\"6678\">true</span>;</p><p class=\"s70\"  id=\"6679\">client.Send(message);</p><p class=\"s70\"  id=\"6680\">}</p><p class=\"s66\"  id=\"6681\">catch</p><p class=\"s70\"  id=\"6682\">{</p><p class=\"s70\"  id=\"6683\">LabelNotice.Text = <span  id=\"6684\">\"Internal Error\"</span>;</p><p class=\"s70\"  id=\"6685\">DownloadVcard(byteArray);</p><p class=\"s70\"  id=\"6686\">}</p><p  id=\"6687\"><br id=\"6688\"></p><p class=\"s70\"  id=\"6689\">}</p><p  id=\"6690\"><br id=\"6691\"></p><p class=\"s70\"  id=\"6692\"><span  id=\"6693\">protected void </span>CustomValidatorName_ServerValidate(<span  id=\"6694\">object </span>source, <span  id=\"6695\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6696\">{</p><p class=\"s70\"  id=\"6697\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s70\"  id=\"6698\">}</p><p  id=\"6699\"><br id=\"6700\"></p><p class=\"s70\"  id=\"6701\"><span  id=\"6702\">protected void </span>CustomValidatorPostalCode_ServerValidate(<span  id=\"6703\">object </span>source, <span  id=\"6704\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6705\">{</p><p class=\"s66\"  id=\"6706\">try</p><p class=\"s70\"  id=\"6707\">{</p><p  id=\"6708\"><br id=\"6709\"></p><p class=\"s66\"  id=\"6710\">if <span  id=\"6711\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"6712\">{</p><p class=\"s70\"  id=\"6713\">args.IsValid = RemoveSpecialCharacter(args.Value).Length == 4;</p><p class=\"s70\"  id=\"6714\">}</p><p class=\"s66\"  id=\"6715\">else</p><p class=\"s70\"  id=\"6716\">{</p><p class=\"s70\"  id=\"6717\">args.IsValid = <span  id=\"6718\">true</span>;</p><p class=\"s70\"  id=\"6719\">}</p><p class=\"s70\"  id=\"6720\">}</p><p class=\"s66\"  id=\"6721\">catch <span  id=\"6722\">{ args.IsValid = </span>false<span  id=\"6723\">; }</span></p><p class=\"s70\"  id=\"6724\">}</p><p  id=\"6725\"><br id=\"6726\"></p><p class=\"s70\"  id=\"6727\"><span  id=\"6728\">protected void </span>CustomValidatorCountry_ServerValidate(<span  id=\"6729\">object </span>source, <span  id=\"6730\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6731\">{</p><p  id=\"6732\"><br id=\"6733\"></p><p class=\"s70\"  id=\"6734\">}</p><p  id=\"6735\"><br id=\"6736\"></p><p class=\"s70\"  id=\"6737\"><span  id=\"6738\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"6739\">object </span>source, <span  id=\"6740\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6741\">{</p><p class=\"s66\"  id=\"6742\">if <span  id=\"6743\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"6744\">{</p><p  id=\"6745\"><br id=\"6746\"></p><p class=\"s70\"  id=\"6747\">}</p><p class=\"s66\"  id=\"6748\">else</p><p class=\"s70\"  id=\"6749\">{</p><p  id=\"6750\"><br id=\"6751\"></p><p class=\"s70\"  id=\"6752\">}</p><p class=\"s70\"  id=\"6753\">}</p><p class=\"s70\"  id=\"6754\">args.IsValid = ValidatePhone(args.Value);</p><p  id=\"6755\"><br id=\"6756\"></p><p class=\"s70\"  id=\"6757\">args.IsValid = <span  id=\"6758\">true</span>;</p><p  id=\"6759\"><br id=\"6760\"></p><p class=\"s70\"  id=\"6761\"><span  id=\"6762\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"6763\">object </span>source, <span  id=\"6764\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6765\">{</p><p class=\"s70\"  id=\"6766\">args.IsValid = ValidateEmail(args.Value.ToString());</p><p class=\"s70\"  id=\"6767\">}</p><p  id=\"6768\"><br id=\"6769\"></p><p class=\"s70\"  id=\"6770\"><span  id=\"6771\">protected void </span>CustomValidatorWebSite_ServerValidate(<span  id=\"6772\">object </span>source, <span  id=\"6773\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6774\">{</p><p  id=\"6775\"><br id=\"6776\"></p><p class=\"s70\"  id=\"6777\">}</p><p  id=\"6778\"><br id=\"6779\"></p><p class=\"s103\"  id=\"6780\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6781\">/// <span  id=\"6782\">Validates the phone.</span></p><p class=\"s103\"  id=\"6783\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6784\">/// &lt;param name=\"input\"&gt;<span  id=\"6785\">The input.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6786\">/// &lt;returns&gt; <span  id=\"6787\">true if it valid </span>&lt;/returns&gt; <span  id=\"6788\">public bool </span><span  id=\"6789\">ValidatePhone(</span><span  id=\"6790\">string </span><span  id=\"6791\">input)</span></p><p class=\"s70\"  id=\"6792\">{</p><p class=\"s70\"  id=\"6793\"><span  id=\"6794\">if </span>(input.Length != 8) { <span  id=\"6795\">return false</span>; } <span  id=\"6796\">Regex </span>num = <span  id=\"6797\">new </span><span  id=\"6798\">Regex</span>(<span  id=\"6799\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"6800\">return <span  id=\"6801\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"6802\">}</p><p  id=\"6803\"><br id=\"6804\"></p><p class=\"s103\"  id=\"6805\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6806\">/// <span  id=\"6807\">Validates the email.</span></p><p class=\"s103\"  id=\"6808\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6809\">/// &lt;param name=\"email\"&gt;<span  id=\"6810\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6811\">/// &lt;returns&gt; <span  id=\"6812\">true on valid email </span>&lt;/returns&gt; <span  id=\"6813\">public bool </span><span  id=\"6814\">ValidateEmail(</span><span  id=\"6815\">string </span><span  id=\"6816\">email)</span></p><p class=\"s70\"  id=\"6817\">{</p><p class=\"s66\"  id=\"6818\">return <span  id=\"6819\">Regex</span><span  id=\"6820\">.IsMatch(email,</span></p><p class=\"s99\"  id=\"6821\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\"  id=\"6822\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span  id=\"6823\">+</span></p><p class=\"s99\"  id=\"6824\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a- zA-Z]{2,6}))$\"<span  id=\"6825\">);</span></p><p class=\"s70\"  id=\"6826\">}</p><p  id=\"6827\"><br id=\"6828\"></p><p class=\"s103\"  id=\"6829\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6830\">/// <span  id=\"6831\">Removes the special character.</span></p><p class=\"s103\"  id=\"6832\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6833\">/// &lt;param name=\"input\"&gt;<span  id=\"6834\">The input.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6835\">/// &lt;returns&gt; <span  id=\"6836\">secure string </span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6837\">public string <span  id=\"6838\">RemoveSpecialCharacter(</span>string <span  id=\"6839\">input)</span></p><p class=\"s70\"  id=\"6840\">{</p><p class=\"s70\"  id=\"6841\"><span  id=\"6842\">return </span><span  id=\"6843\">Regex</span>.Replace(input, <span  id=\"6844\">\"[^0-9a-zA-Z. ]+\"</span>, <span  id=\"6845\">\"\"</span>);</p><p class=\"s70\"  id=\"6846\">}</p><p  id=\"6847\"><br id=\"6848\"></p><p class=\"s70\"  id=\"6849\"><span  id=\"6850\">protected void </span>TextBoxEmail_TextChanged(<span  id=\"6851\">object </span>sender, <span  id=\"6852\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6853\">{</p><p  id=\"6854\"><br id=\"6855\"></p><p class=\"s70\"  id=\"6856\">}</p><p  id=\"6857\"><br id=\"6858\"></p><p class=\"s103\"  id=\"6859\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6860\">/// <span  id=\"6861\">Creates the table.</span></p><p class=\"s103\"  id=\"6862\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6863\">/// &lt;param name=\"tableName\"&gt;<span  id=\"6864\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6865\">/// &lt;returns&gt; <span  id=\"6866\">true if table created</span>&lt;/returns&gt; <span  id=\"6867\">private static bool </span><span  id=\"6868\">CreateTable(</span><span  id=\"6869\">string </span><span  id=\"6870\">tableName)</span></p><p class=\"s70\"  id=\"6871\">{</p><p class=\"s66\"  id=\"6872\">try</p><p class=\"s70\"  id=\"6873\">{</p><p  id=\"6874\"><br id=\"6875\"></p><p class=\"s70\"  id=\"6876\"><span  id=\"6877\">SqlConnection </span>connection = <span  id=\"6878\">new </span><span  id=\"6879\">SqlConnection</span>(<span  id=\"6880\">GlobalSettings</span>.DbDSN); <span  id=\"6881\">string </span>queryString =</p><p class=\"s99\"  id=\"6882\">@\" CREATE TABLE [vcardimage](</p><p class=\"s99\"  id=\"6883\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s99\"  id=\"6884\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s99\"  id=\"6885\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"6886\">;</span></p><p  id=\"6887\"><br id=\"6888\"></p><p class=\"s98\"  id=\"6889\">SqlCommand <span  id=\"6890\">command = </span><span  id=\"6891\">new </span>SqlCommand<span  id=\"6892\">(queryString, connection);</span></p><p class=\"s70\"  id=\"6893\">connection.Open(); command.ExecuteNonQuery(); connection.Close();</p><p class=\"s66\"  id=\"6894\">return true<span  id=\"6895\">;</span></p><p class=\"s70\"  id=\"6896\">}</p><p class=\"s66\"  id=\"6897\">catch</p><p class=\"s70\"  id=\"6898\">{</p><p class=\"s66\"  id=\"6899\">return false<span  id=\"6900\">;</span></p><p class=\"s70\"  id=\"6901\">}</p><p class=\"s70\"  id=\"6902\">}</p><p  id=\"6903\"><br id=\"6904\"></p><p class=\"s103\"  id=\"6905\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6906\">/// <span  id=\"6907\">Checks the table.</span></p><p class=\"s103\"  id=\"6908\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6909\">/// &lt;param name=\"tableName\"&gt;<span  id=\"6910\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6911\">/// &lt;returns&gt; <span  id=\"6912\">true if table exist </span>&lt;/returns&gt; <span  id=\"6913\">private static bool </span><span  id=\"6914\">CheckTable(</span><span  id=\"6915\">string </span><span  id=\"6916\">tableName)</span></p><p class=\"s70\"  id=\"6917\">{</p><p class=\"s70\"  id=\"6918\"><span  id=\"6919\">SqlServerHelper </span>sqlHeplper = <span  id=\"6920\">new </span><span  id=\"6921\">SqlServerHelper</span>(<span  id=\"6922\">GlobalSettings</span>.DbDSN); <span  id=\"6923\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"6924\">}</p><p  id=\"6925\"><br id=\"6926\"></p><p class=\"s103\"  id=\"6927\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6928\">/// <span  id=\"6929\">Inserts the table.</span></p><p class=\"s103\"  id=\"6930\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6931\">/// &lt;param name=\"name\"&gt;<span  id=\"6932\">The name.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6933\">/// &lt;param name=\"street\"&gt;<span  id=\"6934\">The street.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6935\">/// &lt;param name=\"postalcode\"&gt;<span  id=\"6936\">The postalcode.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6937\">/// &lt;param name=\"country\"&gt;<span  id=\"6938\">The country.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6939\">/// &lt;param name=\"phone\"&gt;<span  id=\"6940\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6941\">/// &lt;param name=\"email\"&gt;<span  id=\"6942\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6943\">/// &lt;param name=\"website\"&gt;<span  id=\"6944\">The website.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6945\">/// &lt;param name=\"imageguid\"&gt;<span  id=\"6946\">The imageguid.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6947\">/// &lt;returns&gt; <span  id=\"6948\">true on successul data insert</span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6949\">public static bool <span  id=\"6950\">InsertTable(</span>string <span  id=\"6951\">name, </span>string <span  id=\"6952\">street, </span>string <span  id=\"6953\">postalcode, </span>string <span  id=\"6954\">country, </span>string <span  id=\"6955\">phone, </span>string <span  id=\"6956\">email, </span>string <span  id=\"6957\">website, </span>string <span  id=\"6958\">imageguid)</span></p><p class=\"s70\"  id=\"6959\">{</p><p class=\"s70\"  id=\"6960\"><span  id=\"6961\">string </span>tableName = <span  id=\"6962\">\"vcardimage\"</span>; <span  id=\"6963\">try</span></p><p class=\"s70\"  id=\"6964\">{</p><p class=\"s66\"  id=\"6965\">if <span  id=\"6966\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"6967\">{ CreateTable(tableName); }</p><p class=\"s98\"  id=\"6968\">ISqlHelper <span  id=\"6969\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"6970\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"6971\">@\"insert into \" <span  id=\"6972\">+ tableName + </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"6973\">+</span></p><p class=\"s99\"  id=\"6974\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"6975\">@website, @imageguid, @date);\"<span  id=\"6976\">,</span></p><p class=\"s70\"  id=\"6977\">sqlHelper.CreateParameter(<span  id=\"6978\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"6979\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"6980\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"6981\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"6982\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"6983\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"6984\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"6985\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"6986\">\"@date\"</span>, <span  id=\"6987\">DateTime</span>.Now)); <span  id=\"6988\">return true</span>;</p><p class=\"s70\"  id=\"6989\">}</p><p class=\"s70\"  id=\"6990\"><span  id=\"6991\">catch </span>(<span  id=\"6992\">Exception</span>)</p><p class=\"s70\"  id=\"6993\">{</p><p class=\"s66\"  id=\"6994\">return false<span  id=\"6995\">;</span></p><p  id=\"6996\"><br id=\"6997\"></p><p  id=\"6998\"><br id=\"6999\"></p><p class=\"s70\"  id=\"7000\">}</p><p  id=\"7001\"><br id=\"7002\"></p><p class=\"s70\"  id=\"7003\">}</p><p  id=\"7004\"><br id=\"7005\"></p><p class=\"s103\"  id=\"7006\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"7007\">/// <span  id=\"7008\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"7009\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"7010\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"7011\">The vcard file.</span>&lt;/param&gt; <span  id=\"7012\">public void </span><span  id=\"7013\">DownloadVcard(</span><span  id=\"7014\">byte </span><span  id=\"7015\">[] vcardFile)</span></p><p class=\"s70\"  id=\"7016\">{</p><p class=\"s70\"  id=\"7017\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"7018\">true</span>;</p><p class=\"s70\"  id=\"7019\">Response.ContentType = <span  id=\"7020\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"7021\">\"content-disposition\"</span>, <span  id=\"7022\">\"attach;filename =</span></p><p class=\"s99\"  id=\"7023\">YourVcard.vcf\"<span  id=\"7024\">);</span></p><p class=\"s70\"  id=\"7025\">Response.Charset = <span  id=\"7026\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"7027\">HttpContext<span  id=\"7028\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"7029\">}</p><p class=\"s70\"  id=\"7030\">}</p><p class=\"s70\"  id=\"7031\">}</p><p  id=\"7032\"><br id=\"7033\"></p><p  id=\"7034\"><span class=\"s97\"  id=\"7035\">GlobalSetting.xslt</span></p><p  id=\"7036\"><br id=\"7037\"></p><p  id=\"7038\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7039\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p  id=\"7040\">&lt;xsl:stylesheet version=\"1.0\"</p><p  id=\"7041\"><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7042\">xmlns:xsl=\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml=\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library=\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon=\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes=\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath=\"urn:Exslt.ExsltMath\" xmlns:Exslt.ExsltRegularExpressions=\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings=\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets=\"urn:Exslt.ExsltSets\"</p><p  id=\"7043\">exclude-result-prefixes=\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"&gt;</p><p  id=\"7044\"><br id=\"7045\"></p><p  id=\"7046\">&lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;</p><p  id=\"7047\">&lt;xsl:param name=\"currentPage\"/&gt;</p><p  id=\"7048\">&lt;xsl:template match=\"/\"&gt;</p><p  id=\"7049\">&lt;!-- start writing XSLT --&gt;</p><p  id=\"7050\">&lt;xsl:variable name=\"items\" select=\"$currentPage/ancestor-or-self::*</p><p  id=\"7051\">/WebSiteGlobalSettings \"/&gt;</p><p  id=\"7052\">&lt;xsl:variable name=\"logo\" select=\"$items/logo\"/&gt;</p><p  id=\"7053\">&lt;div class=\"vcard\"&gt;</p><p  id=\"7054\">&lt;div class=\"logo\"&gt;&lt;a href=\"/\" title=\"start page\"&gt;</p><p  id=\"7055\">&lt;img src=\"{$logo}\" alt=\"semic provider logo; visual identity\"/&gt;</p><p  id=\"7056\">&lt;/a&gt;</p><p  id=\"7057\">&lt;/div&gt;</p><p  id=\"7058\">&lt;div class=\"fn\" &gt;</p><p  id=\"7059\">&lt;xsl:value-of select=\"$items/siteName\"/&gt;</p><p  id=\"7060\">&lt;/div&gt;</p><p  id=\"7061\">&lt;h4&gt; &lt;xsl:value-of select=\"$items/slogan\"/&gt; &lt;/h4&gt;</p><p  id=\"7062\">&lt;/div&gt;</p><p  id=\"7063\">&lt;/xsl:template&gt;</p><p  id=\"7064\">&lt;/xsl:stylesheet&gt;</p><p  id=\"7065\">Navigation.xslt</p><p  id=\"7066\"><br id=\"7067\"></p><p  id=\"7068\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7069\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7070\">&lt;<span class=\"p\" id=\"7071\">xsl:stylesheet</span></p><p  id=\"7072\">version<span class=\"s56\" id=\"7073\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7074\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7075\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7076\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7077\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7078\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7079\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7080\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7081\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7082\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7083\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7084\">=</span>\"urn:Exslt.ExsltSets\"</p><p  id=\"7085\">exclude-result-prefixes<span class=\"s56\" id=\"7086\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7087\">&gt;</span></p><p class=\"s56\"  id=\"7088\">&lt;<span class=\"p\" id=\"7089\">xsl:output method</span>=<span class=\"p\" id=\"7090\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7091\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7092\">&lt;<span class=\"p\" id=\"7093\">xsl:param name</span>=<span class=\"p\" id=\"7094\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7095\">&lt;<span class=\"p\" id=\"7096\">xsl:template match</span>=<span class=\"p\" id=\"7097\">\"/\"</span>&gt;</p><p class=\"s56\"  id=\"7098\">&lt;<span class=\"p\" id=\"7099\">xsl:variable name</span>=<span class=\"p\" id=\"7100\">\"items\" select</span>=<span class=\"p\" id=\"7101\">\"$currentPage/ancestor-or-self::*</span></p><p  id=\"7102\">/GeneralContent [string(useInNavigation) = '1'] \"<span class=\"s56\" id=\"7103\">/&gt;</span></p><p class=\"s56\"  id=\"7104\">&lt;<span class=\"p\" id=\"7105\">xsl:if test</span>=<span class=\"p\" id=\"7106\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\"  id=\"7107\">&lt;<span class=\"p\" id=\"7108\">ul</span>&gt;</p><p class=\"s56\"  id=\"7109\">&lt;<span class=\"p\" id=\"7110\">xsl:for-each select</span>=<span class=\"p\" id=\"7111\">\"$items\"</span>&gt;</p><p class=\"s56\"  id=\"7112\">&lt;<span class=\"p\" id=\"7113\">xsl:if test</span>=<span class=\"p\" id=\"7114\">\"$currentPage/@id = @id\"</span>&gt;</p><p class=\"s56\"  id=\"7115\">&lt;<span class=\"p\" id=\"7116\">li class</span>=<span class=\"p\" id=\"7117\">\"current\" </span>&gt;</p><p class=\"s56\"  id=\"7118\">&lt;<span class=\"p\" id=\"7119\">xsl:value-of select</span>=<span class=\"p\" id=\"7120\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\"  id=\"7121\">&lt;/<span class=\"p\" id=\"7122\">li</span>&gt;</p><p class=\"s56\"  id=\"7123\">&lt;/<span class=\"p\" id=\"7124\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7125\">&lt;<span class=\"p\" id=\"7126\">xsl:if test</span>=<span class=\"p\" id=\"7127\">\"$currentPage/@id != @id\"</span>&gt;</p><p class=\"s56\"  id=\"7128\">&lt;<span class=\"p\" id=\"7129\">li class</span>=<span class=\"p\" id=\"7130\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\"  id=\"7131\">&lt;<span class=\"p\" id=\"7132\">a href</span>=<span class=\"p\" id=\"7133\">\"{umbraco.library:NiceUrl(@id)}\" title</span>=<span class=\"p\" id=\"7134\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\"  id=\"7135\">&lt;<span class=\"p\" id=\"7136\">xsl:value-of select</span>=<span class=\"p\" id=\"7137\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\"  id=\"7138\">&lt;/<span class=\"p\" id=\"7139\">a</span>&gt;</p><p class=\"s56\"  id=\"7140\">&lt;/<span class=\"p\" id=\"7141\">li</span>&gt;</p><p class=\"s56\"  id=\"7142\">&lt;/<span class=\"p\" id=\"7143\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7144\">&lt;/<span class=\"p\" id=\"7145\">xsl:for-each</span>&gt;</p><p class=\"s56\"  id=\"7146\">&lt;/<span class=\"p\" id=\"7147\">ul</span>&gt;</p><p class=\"s56\"  id=\"7148\">&lt;/<span class=\"p\" id=\"7149\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7150\">&lt;/<span class=\"p\" id=\"7151\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7152\">&lt;/<span class=\"p\" id=\"7153\">xsl:stylesheet</span>&gt;</p><p  id=\"7154\"><br id=\"7155\"></p><p  id=\"7156\"><span class=\"s131\"  id=\"7157\">NewsList.xslt</span></p><p  id=\"7158\"><br id=\"7159\"></p><p  id=\"7160\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7161\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7162\">&lt;<span class=\"p\" id=\"7163\">xsl:stylesheet</span></p><p  id=\"7164\">version<span class=\"s56\" id=\"7165\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7166\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7167\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7168\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7169\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7170\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7171\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7172\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7173\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7174\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7175\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7176\">=</span>\"urn:Exslt.ExsltSets\"</p><p  id=\"7177\">exclude-result-prefixes<span class=\"s56\" id=\"7178\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7179\">&gt;</span></p><p class=\"s56\"  id=\"7180\">&lt;<span class=\"p\" id=\"7181\">xsl:output method</span>=<span class=\"p\" id=\"7182\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7183\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7184\">&lt;<span class=\"p\" id=\"7185\">xsl:param name</span>=<span class=\"p\" id=\"7186\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7187\">&lt;<span class=\"p\" id=\"7188\">xsl:template match</span>=<span class=\"p\" id=\"7189\">\"/\"</span>&gt;</p><p class=\"s56\"  id=\"7190\">&lt;<span class=\"p\" id=\"7191\">xsl:variable name</span>=<span class=\"p\" id=\"7192\">\"newsItems\" select</span>=<span class=\"p\" id=\"7193\">\"$currentPage/ancestor-or-self::*</span></p><p  id=\"7194\">/NewsContainer/NewsArticle \"<span class=\"s56\" id=\"7195\">/&gt;</span></p><p class=\"s56\"  id=\"7196\">&lt;<span class=\"p\" id=\"7197\">xsl:variable name</span>=<span class=\"p\" id=\"7198\">\"numberofnewsitems\" select</span>=<span class=\"p\" id=\"7199\">\"/macro/numberofnewsitems\"</span>/&gt;</p><p class=\"s56\"  id=\"7200\">&lt;<span class=\"p\" id=\"7201\">xsl:if test</span>=<span class=\"p\" id=\"7202\">\"count($newsItems) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\"  id=\"7203\">&lt;<span class=\"p\" id=\"7204\">xsl:for-each select</span>=<span class=\"p\" id=\"7205\">\"$newsItems\" </span>&gt;</p><p class=\"s56\"  id=\"7206\">&lt;<span class=\"p\" id=\"7207\">xsl:sort select</span>=<span class=\"p\" id=\"7208\">\"@createDate\" order</span>=<span class=\"p\" id=\"7209\">\"ascending\"</span>/&gt;</p><p class=\"s56\"  id=\"7210\">&lt;<span class=\"p\" id=\"7211\">xsl:if test</span>=<span class=\"p\" id=\"7212\">\"position() &amp;lt;=$numberofnewsitems\" </span>&gt; &lt;<span class=\"p\" id=\"7213\">div clas</span>=<span class=\"p\" id=\"7214\">\"newsItem\"</span>&gt;</p><p class=\"s56\"  id=\"7215\">&lt;<span class=\"p\" id=\"7216\">h3</span>&gt;</p><p class=\"s56\"  id=\"7217\">&lt;<span class=\"p\" id=\"7218\">a href</span>=<span class=\"p\" id=\"7219\">\"{umbraco.library:NiceUrl(@id)}\" </span>&gt;</p><p class=\"s56\"  id=\"7220\">&lt;<span class=\"p\" id=\"7221\">xsl:value-of select</span>=<span class=\"p\" id=\"7222\">\"newsTitle\" </span>/&gt;</p><p  id=\"7223\"><br id=\"7224\"></p><p class=\"s56\"  id=\"7225\">&lt;/<span class=\"p\" id=\"7226\">a</span>&gt;</p><p class=\"s56\"  id=\"7227\">&lt;/<span class=\"p\" id=\"7228\">h3</span>&gt;</p><p class=\"s56\"  id=\"7229\">&lt;<span class=\"p\" id=\"7230\">p</span>&gt;</p><p class=\"s56\"  id=\"7231\">&lt;<span class=\"p\" id=\"7232\">xsl:value-of select</span>=<span class=\"p\" id=\"7233\">\"newsBody\" disable-output-escaping</span>=<span class=\"p\" id=\"7234\">\"yes\" </span>/&gt;</p><p class=\"s56\"  id=\"7235\">&lt;/<span class=\"p\" id=\"7236\">p</span>&gt;</p><p class=\"s56\"  id=\"7237\">&lt;<span class=\"p\" id=\"7238\">p</span>&gt;</p><p  id=\"7239\">Last update: <span class=\"s56\" id=\"7240\">&lt;</span>xsl:value-of select<span class=\"s56\" id=\"7241\">=</span>\"@updateDate\" <span class=\"s56\" id=\"7242\">/&gt;</span></p><p  id=\"7243\"><br id=\"7244\"></p><p class=\"s56\"  id=\"7245\">&lt;/<span class=\"p\" id=\"7246\">p</span>&gt;</p><p class=\"s56\"  id=\"7247\">&lt;/<span class=\"p\" id=\"7248\">div</span>&gt;</p><p class=\"s56\"  id=\"7249\">&lt;/<span class=\"p\" id=\"7250\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7251\">&lt;/<span class=\"p\" id=\"7252\">xsl:for-each</span>&gt;</p><p class=\"s56\"  id=\"7253\">&lt;/<span class=\"p\" id=\"7254\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7255\">&lt;/<span class=\"p\" id=\"7256\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7257\">&lt;/<span class=\"p\" id=\"7258\">xsl:stylesheet</span>&gt;</p><p  id=\"7259\"><br id=\"7260\"></p><p  id=\"7261\"><span class=\"s131\"  id=\"7262\">RecentVcard.xslt</span></p><p  id=\"7263\"><br id=\"7264\"></p><p  id=\"7265\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7266\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7267\">&lt;<span class=\"p\" id=\"7268\">xsl:stylesheet</span></p><p  id=\"7269\">version<span class=\"s56\" id=\"7270\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7271\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7272\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7273\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:recentVcard<span class=\"s56\" id=\"7274\">=</span>\"urn:recentvcard\" xmlns:umbraco.library<span class=\"s56\" id=\"7275\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7276\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7277\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7278\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7279\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7280\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7281\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7282\">=</span>\"urn:Exslt.ExsltSets\" xmlns:recentvcard<span class=\"s56\" id=\"7283\">=</span>\"urn:recentvcard\" exclude-result-prefixes<span class=\"s56\" id=\"7284\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets recentvcard \"<span class=\"s56\" id=\"7285\">&gt;</span></p><p class=\"s56\"  id=\"7286\">&lt;<span class=\"p\" id=\"7287\">xsl:output method</span>=<span class=\"p\" id=\"7288\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7289\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7290\">&lt;<span class=\"p\" id=\"7291\">xsl:param name</span>=<span class=\"p\" id=\"7292\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7293\">&lt;<span class=\"p\" id=\"7294\">xsl:template match</span>=<span class=\"p\" id=\"7295\">\"/\"</span>&gt;</p><p  id=\"7296\">&lt;!-- start writing XSLT --&gt;</p><p class=\"s56\"  id=\"7297\">&lt;<span class=\"p\" id=\"7298\">xsl:value-of select</span>=<span class=\"p\" id=\"7299\">\"recentVcard:GetVcardData()\" disable-output-escaping</span>=<span class=\"p\" id=\"7300\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7301\">&lt;/<span class=\"p\" id=\"7302\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7303\">&lt;/<span class=\"p\" id=\"7304\">xsl:stylesheet</span>&gt;</p><p  id=\"7305\"><br id=\"7306\"></p><p  id=\"7307\"><span class=\"s131\"  id=\"7308\">RecentVcard.cs</span></p><p  id=\"7309\"><br id=\"7310\"></p><p class=\"s66\"  id=\"7311\">using <span  id=\"7312\">System;</span></p><p class=\"s66\"  id=\"7313\">using <span  id=\"7314\">System.Collections.Generic; </span>using <span  id=\"7315\">System.Linq;</span></p><p class=\"s66\"  id=\"7316\">using <span  id=\"7317\">System.Web;</span></p><p class=\"s66\"  id=\"7318\">using <span  id=\"7319\">umbraco.DataLayer; </span>using <span  id=\"7320\">umbraco;</span></p><p class=\"s66\"  id=\"7321\">namespace <span  id=\"7322\">VCardGenerator</span></p><p class=\"s70\"  id=\"7323\">{</p><p class=\"s66\"  id=\"7324\">public class <span  id=\"7325\">RecentVcard</span></p><p class=\"s70\"  id=\"7326\">{</p><p class=\"s66\"  id=\"7327\">public static string <span  id=\"7328\">GetVcardData()</span></p><p class=\"s70\"  id=\"7329\">{</p><p class=\"s98\"  id=\"7330\">ISqlHelper <span  id=\"7331\">getVcard = </span>DataLayerHelper<span  id=\"7332\">.CreateSqlHelper(</span>GlobalSettings<span  id=\"7333\">.DbDSN);</span></p><p class=\"s98\"  id=\"7334\">IRecordsReader <span  id=\"7335\">read = getVcard.ExecuteReader(</span><span  id=\"7336\">@\"select top 10 id, name,</span></p><p class=\"s99\"  id=\"7337\">country</p><p class=\"s99\"  id=\"7338\">from vcardimage where id &gt; @id order by id desc\"<span  id=\"7339\">,</span></p><p class=\"s70\"  id=\"7340\">getVcard.CreateParameter(<span  id=\"7341\">\"@id\"</span>, <span  id=\"7342\">\"0\"</span>));</p><p class=\"s70\"  id=\"7343\"><span  id=\"7344\">string </span>data = <span  id=\"7345\">\"\"</span>; <span  id=\"7346\">while </span>(read.Read())</p><p class=\"s70\"  id=\"7347\">{</p><p class=\"s70\"  id=\"7348\">data += <span  id=\"7349\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span  id=\"7350\">\"name\"</span>) +</p><p class=\"s99\"  id=\"7351\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span  id=\"7352\">+ read.GetString(</span>\"country\"<span  id=\"7353\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span  id=\"7354\">;</span></p><p class=\"s70\"  id=\"7355\">}</p><p class=\"s99\"  id=\"7356\"><span  id=\"7357\">return </span>\"&lt;ul&gt;\" <span  id=\"7358\">+ data + </span>\"&lt;/ul\"<span  id=\"7359\">;</span></p><p class=\"s70\"  id=\"7360\">}</p><p class=\"s70\"  id=\"7361\">}</p><p class=\"s70\"  id=\"7362\">}</p><p  id=\"7363\"><span id=\"7364\"><img width=\"602\" height=\"851\" alt=\"image\" src=\"Image_137.png\" id=\"7365\"></span></p><p  id=\"7366\"><br id=\"7367\"></p><p  id=\"7368\"><br id=\"7369\"></p><p  id=\"7370\"><br id=\"7371\"></p><p class=\"s8\"  id=\"7372\">About Writer</p><p  id=\"7373\">Name: Jivan Thapa</p><p  id=\"7374\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p  id=\"7375\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7376\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7377\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7378\">jeevan_2np@yahoo.com</a></p><p  id=\"7379\"><br id=\"7380\"></p><p class=\"s8\"  id=\"7381\">About Writer</p><p  id=\"7382\">Name: Jivan Thapa</p><p  id=\"7383\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p  id=\"7384\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7385\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7386\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7387\">jeevan_2np@yahoo.com</a></p><p  id=\"7388\"><span  id=\"7389\"> </span></p><p  id=\"7390\"><br id=\"7391\"></p><p  id=\"7392\"><br id=\"7393\"></p><p  id=\"7394\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p  id=\"7395\">Here I covered:</p><ul id=\"l140\"><li  id=\"7397\"><p  id=\"7398\">Document Type</p></li><li  id=\"7399\"><p  id=\"7400\">Template</p></li><li  id=\"7401\"><p  id=\"7402\">Content</p></li><li  id=\"7403\"><p  id=\"7404\">Xslt</p></li><li  id=\"7405\"><p  id=\"7406\">Extending Umbraco using .net class and User Control</p></li><li  id=\"7407\"><p  id=\"7408\">And more ….</p></li></ul><p  id=\"7409\">Jivan Thapa</p><p  id=\"7410\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p  id=\"7411\">Here I covered:</p><ul id=\"l141\"><li  id=\"7413\"><p  id=\"7414\">Document Type</p></li><li  id=\"7415\"><p  id=\"7416\">Template</p></li><li  id=\"7417\"><p  id=\"7418\">Content</p></li><li  id=\"7419\"><p  id=\"7420\">Xslt</p></li><li  id=\"7421\"><p  id=\"7422\">Extending Umbraco using .net class and User Control</p></li><li  id=\"7423\"><p  id=\"7424\">And more ….</p></li></ul><p  id=\"7425\">Jivan Thapa</p><p  id=\"7426\"><span  id=\"7427\"> </span></p></div></div><p id=\"endOfDocument\"></p></div></div></div>","sub":[{"pageId":"31","pageLevel":1,"pageOrder":"31","pageParentId":"30","pageName":"Database:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 10pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading617\" class=\"heading617\"><a name=\"bookmark13\" id=\"618\" style=\"color: green;\">Database</a><span class=\"h4\" id=\"619\">:</span></h3>","pageContent":"<div id=\"contentheading617\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 12pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"620\">Create Empty Database, you can give any name as you like for this purpose I gave name “umbracodb” and created user account name “root”. Make sure user should have database admin access otherwise Umbraco will not install properly.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"621\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"622\"><br id=\"623\"></p><ul id=\"l12\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"625\"><p style=\"display: inline;\" id=\"626\">Open Sql Server Management studio and login as “Windows Authentication”</p></li><li style=\"padding-top: 7pt;padding-left: 42pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"627\"><p style=\"display: inline;\" id=\"628\">Right click on Database and click on “New Database”. Provide database name and click ok. <span class=\"s19\" id=\"629\">See Image: umbracodb.image</span></p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"630\"><p style=\"display: inline;\" id=\"631\">Expand “Security” on left side menu. Right click on Login and click on “New Login”</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"632\"><p style=\"display: inline;\" id=\"633\">Type login name and check “SQL server authentication” and provide password. Uncheck “Enforce password Policy” if you are new to Sql server and press OK. Windows will disappear. In my case I create login name “root” and password “root”</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"634\"><p style=\"display: inline;\" id=\"635\">Expand Security tree from left side menu until last child where you can see new login added <span class=\"s19\" id=\"636\">See Image: user.image </span>and click on that login name. it will open Login Properties</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"637\"><p style=\"display: inline;\" id=\"638\">Select “User Mapping” it will list all available database and check new database that you are going to use for Umbraco and in “Database Role Membership” checked on “db owner”, “dbladmin”, “datawrite” and “datareader”,.</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"639\"><p style=\"display: inline;\" id=\"640\">Disconnect current working database and try to connect using new user id and password. This time do not select “windows authentication”. You should be select “Sql Server Authentication” this will activate Login and Password input textbox. You must be able to login to database. If you get any error please repeat database setting process.</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"641\"><p style=\"display: inline;\" id=\"642\">If you success to log in using your new user id and password and database that assign to Umbraco is listed on right side menu than your database setup is ready for Umbraco.</p></li><li style=\"padding-top: 6pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"643\"><p style=\"display: inline;\" id=\"644\">See screen shot for references</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"645\"><br id=\"646\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"647\"><span id=\"648\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_007.png\" id=\"649\"></span></p><p style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"650\"><a href=\"http://www.youtube.com/jeevan2np%23p/a/u/0/DMXw7aeSG54\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"651\">1 </a><a href=\"http://www.youtube.com/jeevan2np%23p/a/u/0/DMXw7aeSG54\" class=\"s11\" target=\"_blank\" id=\"652\">http://www.youtube.com/jeevan2np#p/a/u/0/DMXw7aeSG54</a></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"653\"><span id=\"654\"><img width=\"624\" height=\"367\" alt=\"image\" src=\"Image_008.png\" id=\"655\"></span></p><p class=\"s21\" style=\"padding-top: 4pt;padding-left: 112pt;text-indent: 0pt;text-align: left;\" id=\"656\">Umbracodb.image <span class=\"s22\" id=\"657\">User.image</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"658\"><br id=\"659\"></p><p style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"660\">Notes:</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 111%;text-align: justify;\" id=\"661\">Here I did not include about MySql<span class=\"s3\" id=\"662\">2 </span>Database. MySql server is free server and mostly used in Apache server. MySql Server is developed and maintained by Oracle Corporation. Most of PHP web application like Joomla<span class=\"s3\" id=\"663\">3 </span>CMS, Drupal <span class=\"s3\" id=\"664\">4</span>, Wordpress<span class=\"s3\" id=\"665\">5 </span>CMS use MySql server.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"666\"><a href=\"http://www.mysql.com/\" class=\"a\" target=\"_blank\" id=\"667\">Your case can be difference from here in that case you can installed Mysql database from official sites at </a>www.mysql.com. When you install Mysql Server please read documentation provided on official sites and follow each step carefully otherwise MySql database may not work as expected.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"668\">Creating user, database, setting database permission for user, changing password can be difference for MySql Database as instruction provided to Mssql database. If you decided to use MySql server for Umbraco CMS it‟s your responsibility to find out more details about MySql set up because here I will not conver MySql database.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"669\"><br id=\"670\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"671\"><span id=\"672\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_009.png\" id=\"673\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"674\"><a href=\"http://www.mysql.com/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"675\">2 </a><a href=\"http://www.mysql.com/\" class=\"s11\" target=\"_blank\" id=\"676\">http://www.mysql.com/</a></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"677\"><a href=\"http://www.joomla.org/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"678\">3 </a><a href=\"http://www.joomla.org/\" class=\"s11\" target=\"_blank\" id=\"679\">www.joomla.org</a></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"680\"><a href=\"http://www.drupal.org/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"681\">4 </a><a href=\"http://www.drupal.org/\" class=\"s11\" target=\"_blank\" id=\"682\">www.drupal.org</a></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"683\"><a href=\"http://www.wordpress.org/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"684\">5 </a><a href=\"http://www.wordpress.org/\" class=\"s11\" target=\"_blank\" id=\"685\">www.wordpress.org</a></p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading686\" class=\"heading686\"><a name=\"bookmark14\" id=\"687\" style=\"color: green;\">Directory</a><span class=\"p\" id=\"688\">:</span></h3><div id=\"contentheading686\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"689\"><br id=\"690\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"691\">Directory is location for physical files, all Umbraco files goes or placed inside domain name directory. I will define directory from two points of view one from server and one from local machine.</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"692\"><b id=\"693\">Server: </b>If you buy web hosting including domain and space. You can see there is “httpdocs”<span class=\"s3\" id=\"694\">6 </span>directory that is main directory for your website. All Umbraco files should be placed within main directory. Do not place Umbraco files inside sub directory because Umbraco does not support until version 4.7 and I can‟t say about later version until its release. All Umbraco files directory should be placed without</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"695\">renaming into root directory.</p><h4 style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"696\">Local Machine: <span class=\"p\" id=\"697\">I am installing Umbraco in local machine so that I will focus here more. First you need to Create Directory and give name “HowToUmbraco” in my case but you can give different name. Follow instructions.</span></h4></div></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"698\"><p style=\"display: inline;\" id=\"699\">Create Directory in hard disk.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"700\"><span id=\"701\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_010.png\" id=\"702\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"703\"><span id=\"704\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_011.png\" id=\"705\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"706\"><span id=\"707\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_012.png\" id=\"708\"></span></p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"709\"><p style=\"display: inline;\" id=\"710\">Right click on it, click on Properties Security Edit Add</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"711\"><p style=\"display: inline;\" id=\"712\">Type “Network Service” and press OK</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"713\"><p style=\"display: inline;\" id=\"714\">Select “Network service” and Checked “Modify”</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"715\"><p style=\"display: inline;\" id=\"716\">Press Apply and Press OK until it close property windows.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"717\"><span id=\"718\"><img width=\"358\" height=\"401\" alt=\"image\" src=\"Image_013.jpg\" id=\"719\"></span></p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"720\"><p style=\"display: inline;\" id=\"721\">Your Directory is ready to use for Umbraco websites.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"722\"><br id=\"723\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"724\"><br id=\"725\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"726\">Here I Created Directory “HowToUmbraco” in Drive D: and checked “Modify” file permission for “Network Service”</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"727\">Here I Created Directory “HowToUmbraco” in Drive D: and checked “Modify” file permission for “Network Service”</p><p style=\"padding-left: 286pt;text-indent: 0pt;text-align: left;\" id=\"728\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"729\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"730\"><br id=\"731\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"732\"><span id=\"733\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_014.png\" id=\"734\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"735\">6 <a href=\"http://www.dollar2host.com/\" class=\"s11\" target=\"_blank\" id=\"736\">“httpdoc” directory may not same name for all. It‟s based on my experienced with www.dollar2host.com</a></p><h3 style=\"padding-top: 3pt; padding-left: 7pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading737\" class=\"heading737\"><a name=\"bookmark15\" id=\"738\" style=\"color: green;\">Turn On IIS Service</a></h3><div id=\"contentheading737\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"739\">Here I assume that your machine is windows 7. To turn on IIS service follow instructions.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"740\"><br id=\"741\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"742\"><span id=\"743\"><img width=\"295\" height=\"389\" alt=\"image\" src=\"Image_015.jpg\" id=\"744\"></span></p><ul id=\"l13\"><li style=\"padding-top: 4pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"746\"><p style=\"display: inline;\" id=\"747\">Type “Turn Windows features on or off” in Search Box and press Enter</p><p style=\"padding-top: 10pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"748\">It will open new windows. Navigate Internet Information Service and expand its tree.</p></li><li style=\"padding-top: 10pt;padding-left: 242pt;text-indent: -7pt;text-align: left;\" id=\"749\"><p style=\"display: inline;\" id=\"750\">Navigate</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"751\"><br id=\"752\"></p><p style=\"padding-left: 271pt;text-indent: 0pt;text-align: left;\" id=\"753\">-World Wide Web Service</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"754\"><br id=\"755\"></p><p style=\"padding-left: 271pt;text-indent: 0pt;text-align: left;\" id=\"756\">-Application Development Feature</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"757\"><br id=\"758\"></p></li><li style=\"padding-left: 242pt;text-indent: -7pt;text-align: left;\" id=\"759\"><p style=\"display: inline;\" id=\"760\">Checked</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"761\"><br id=\"762\"></p><ul id=\"l14\"><li style=\"padding-left: 278pt;text-indent: -7pt;text-align: left;\" id=\"764\"><p style=\"display: inline;\" id=\"765\">NET Extensibility</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"766\"><br id=\"767\"></p></li><li style=\"padding-left: 278pt;text-indent: -7pt;text-align: left;\" id=\"768\"><p style=\"display: inline;\" id=\"769\">ASP.NET</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"770\"><br id=\"771\"></p></li><li style=\"padding-left: 278pt;text-indent: -7pt;text-align: left;\" id=\"772\"><p style=\"display: inline;\" id=\"773\">Server-Side Includes</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"774\"><br id=\"775\"></p></li></ul></li><li style=\"padding-left: 242pt;text-indent: -7pt;text-align: left;\" id=\"776\"><p style=\"display: inline;\" id=\"777\">Press OK</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"778\"><br id=\"779\"></p><p style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"780\">Wait until “Turn Windows Features On or Off” Close automatically.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"781\"><br id=\"782\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"783\"><span id=\"784\"><img width=\"256\" height=\"184\" alt=\"image\" src=\"Image_016.jpg\" id=\"785\"></span></p><p class=\"s8\" style=\"padding-top: 7pt;padding-left: 235pt;text-indent: 0pt;text-align: justify;\" id=\"786\">Test your IIS Server</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"787\"><br id=\"788\"></p><p style=\"padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"789\">Type “localhost” in your browser it will open default IIS websites (see left image) and also check using drive C:// “Inetpub” directory should be created by IIS Service. If there is a directory and</p><p style=\"padding-left: 235pt;text-indent: 0pt;line-height: 14pt;text-align: justify;\" id=\"790\">localhost returns default websites<span class=\"s3\" id=\"791\">7 </span>means</p><p style=\"padding-top: 2pt;padding-left: 235pt;text-indent: 0pt;text-align: justify;\" id=\"792\">IIS is ready to use.</p><p class=\"s21\" style=\"padding-top: 10pt;padding-left: 33pt;text-indent: 0pt;text-align: left;\" id=\"793\">Defaultwebsites.image</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"794\"><br id=\"795\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"796\"><span id=\"797\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_017.png\" id=\"798\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"799\">7 <span class=\"s10\" id=\"800\">See image defaultwebsites.image</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"801\"><br id=\"802\"></p><h3 style=\"padding-top: 4pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading803\" class=\"heading803\"><a name=\"bookmark16\" id=\"804\" style=\"color: green;\">IIS Set Up</a></h3><div id=\"contentheading803\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-bottom: 4pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"805\">Until now we just turn on IIS7 in local machine. Here I will explain about Application Pool and other relevant topic to IIS and Umbraco CMS. Let‟s open Internet Information Service (IIS) Manager. To open IIS manager type “IIS” in search box windows search result will show up “internet Information Service” and press OK. It will open IIS manager windows. See screen bellow</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"806\"><span id=\"807\"><img width=\"605\" height=\"347\" alt=\"image\" src=\"Image_018.jpg\" id=\"808\"></span></p><p style=\"padding-top: 7pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"809\">General Description of IIS Manager environment</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"810\"><br id=\"811\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"812\"><a name=\"a18\" id=\"813\">Connections</a><span class=\"p\" id=\"814\">:</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"815\"><br id=\"816\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"817\">List of all websites that created by users. By default there one website name is “Default Web Site” which is IIS created automatically when we Turn On Internet Information Service from “Turn windows features on or off” program.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"818\"><a name=\"a19\" id=\"819\">Application Pools:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"820\"><br id=\"821\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"822\">According to Microsoft, when you run IIS 6.0 in worker process isolation mode, you can separate different Web applications and Web sites into groups known as <i id=\"823\">application pools</i>. An <i id=\"824\">application pool </i>is a group of one or more URLs that are served by a worker process or set of worker processes. Any Web directory or virtual</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"825\">directory can be assigned to an application pool. For more details you can follow link provided in reference<span class=\"s3\" id=\"826\">8</span>.</p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"827\"><a name=\"a20\" id=\"828\">Sites:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"829\"><br id=\"830\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"831\">You can create new sites inside your local IIS manager. Here we are going to create new websites for our Vcard Project. Sites menu contains list of created sites into your local machine. You can edit, delete and create easily by right clicking on specific sites.</p><h4 style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"832\"><a name=\"a21\" id=\"833\">Create new site:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"834\"><br id=\"835\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"836\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"837\"><br id=\"838\"></p></div></li></ul></div></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"839\"><p style=\"display: inline;\" id=\"840\">Right click on Site menu on left side at communications. If you did not see “sites” expand left menu tree.</p></li><li style=\"padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"841\"><p style=\"display: inline;\" id=\"842\">Click on “Add Web Site”</p></li><li style=\"padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"843\"><p style=\"display: inline;\" id=\"844\">Provide valid information see captured screen for references.</p><ul id=\"l15\"><li style=\"padding-top: 11pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"846\"><p style=\"display: inline;\" id=\"847\">Site name “<span style=\" color: #538DD3;\" id=\"848\">howtoumbraco</span>” – you can give your own name if you like</p></li><li style=\"padding-top: 10pt;padding-left: 78pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"849\"><p style=\"display: inline;\" id=\"850\">“Application Pool” is created automatically but I recommend changing it so that click on “Select” button at right side. It will list all available application pool. Select “<span style=\" color: #538DD3;\" id=\"851\">ASP.NET v4.0</span>” for Umbraco 4.7 and press OK.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"852\"><br id=\"853\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"854\"><br id=\"855\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"856\"><span id=\"857\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_019.png\" id=\"858\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"859\"><a href=\"http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/67e39bd8-317e-4cf6-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"860\">8 </a>http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/67e39bd8-317e-4cf6- b675-6431d4425248.mspx?mfr=true</p></li><li style=\"padding-top: 3pt;padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"861\"><p style=\"display: inline;\" id=\"862\">Physical Path: this is important part here so click on browse button right side and locate directory where you created before for Umbraco installation. In my case “<span style=\" color: #538DD3;\" id=\"863\">HowToUmbraco</span>” directory in drive D:</p></li><li style=\"padding-top: 10pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"864\"><p style=\"display: inline;\" id=\"865\">Binding: I changed port number to 8080 you can leave default but I</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"866\"><span id=\"867\"><img width=\"322\" height=\"362\" alt=\"image\" src=\"Image_020.jpg\" id=\"868\"></span></p><p style=\"padding-left: 269pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"869\">recommend to change it. You can specify any port number if it‟s not used or occupied by other application like Skype. In my case Skype already use default port number <span style=\" color: #538DD3;\" id=\"870\">80 </span>so that I need to change it something else. So I change to <span style=\" color: #538DD3;\" id=\"871\">8080</span>. Remember that if you change port number you have to provide port number every time when you access your websites via browser.</p><p style=\"padding-top: 9pt;padding-left: 269pt;text-indent: 0pt;text-align: justify;\" id=\"872\">Press OK:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"873\"><br id=\"874\"></p><p style=\"padding-left: 269pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"875\">You have successfully create sites and assign application pool “Asp.net v4.0”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"876\"><br id=\"877\"></p><p class=\"s24\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"878\"><a name=\"bookmark17\" id=\"879\">TESTING IIS</a><span class=\"h4\" id=\"880\">:</span></p><p style=\"padding-top: 12pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"881\">It is necessary to test our site and setting we have done before, everything should work perfectly. To test newly created site follow these steps:</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"882\"><p style=\"display: inline;\" id=\"883\">Open Notepad</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"884\"><p style=\"display: inline;\" id=\"885\">Copy and paste that line of code without changing it. Copy code bellow</p><p class=\"s23\" style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"886\">&lt;% Response.write(\" welcome to 'How to Umbraco Basic'\") %&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"887\"><br id=\"888\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"889\"><p style=\"display: inline;\" id=\"890\">Click on Save. Now be very careful Naming is very important here. Give file name <span style=\" color: #538DD3;\" id=\"891\">DefaultTest </span>and end with <span style=\" color: #538DD3;\" id=\"892\">.aspx </span>without space so your file name must be “<span style=\" color: #538DD3;\" id=\"893\">DefaultTest.aspx</span>” without quote. Now save that file inside Umbraco installation directory in my case I saved <span style=\" color: #538DD3;\" id=\"894\">DefaultTest.aspx </span>file inside “<span style=\" color: #538DD3;\" id=\"895\">HowToUmbraco</span>” Directory.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"896\"><p style=\"display: inline;\" id=\"897\">Open Browser and type <span style=\" color: #538DD3;\" id=\"898\">localhost:8080/DefaultTest.aspx </span>here <span style=\" color: #538DD3;\" id=\"899\">8080 </span>is port number that I changed before, if you did not change port number “<span style=\" color: #538DD3;\" id=\"900\">localhost/DefaultTest.aspx</span>” will be enough.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"901\"><p style=\"display: inline;\" id=\"902\">If you can see <span style=\" color: #538DD3;\" id=\"903\">welcome to 'How to Umbraco Basic' </span>message in browser. That means your sites is working if you did not see that message or get some error please repeat Previous Chapter.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"904\"><br id=\"905\"></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"906\"><a name=\"a22\" id=\"907\">Modifying your Sites:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"908\"><br id=\"909\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"910\">If you like to modify your sites properties or other settings your can click on your sites and on middle and right side you can see more options available to edit. For example:</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"911\"><p style=\"display: inline;\" id=\"912\">Edit bindings, Permission and basic settings</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"913\"><p style=\"display: inline;\" id=\"914\">Advanced settings</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"915\"><p style=\"display: inline;\" id=\"916\">View application, add virtual directory</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"917\"><p style=\"display: inline;\" id=\"918\">Edit SMTP or Email setting, database connection strings, SSL, Handler Mappings etc.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"919\"><p style=\"display: inline;\" id=\"920\">For more details you can visit Microsoft official sites for IIS.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"921\"><br id=\"922\"></p><p class=\"s10\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"923\">References:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"924\"><br id=\"925\"></p><p class=\"s10\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"926\">IIS</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"927\"><br id=\"928\"></p><p class=\"s10\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"929\">Taken date April 13, 2011</p><p class=\"s10\" style=\"padding-top: 1pt;padding-left: 41pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"930\"><a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=32c54c37-7530-4fc0-bd20-\" class=\"s11\" target=\"_blank\" id=\"931\">http://www.iis.net </a>http://www.microsoft.com/downloads/en/details.aspx?FamilyID=32c54c37-7530-4fc0-bd20- 177a3e5330b7</p><p class=\"s10\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"932\">Notepad is out of box software provided by Microsoft.</p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading933\" class=\"heading933\"><a name=\"bookmark18\" id=\"934\" style=\"color: green;\">Downloading Umbraco files:</a></h3><div id=\"contentheading933\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"935\">It‟s time to download Umbraco latest file from official site. Official site contains list of Umbraco release, most resent Umbraco release version is highly focused in download site. I recommend downloading latest version because every new release contains bug fix from previous version, added extra new features and improved better than previous release. Here you can argue that new version of Umbraco also contains new bugs and it may take longer time to fix because it‟s a new release. You are not wrong but my point is we all are here to learn new thing and challenge new problem, help others and get help from others so do not compromise to face new challenge and learn more, technology never becomes perfect, it‟s a process of learning from history, face new challenge in present and improve it better for future.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"936\">In my personal opinion I download one or two previous release then latest release version only for client websites because earlier version of release has known bugs and can be solved very fast because someone or other developer might be already faced or fixed such bugs. But in my local host or for my testing purpose I always download latest release because I always want to face new bugs that nobody discovered it and have a fun with that bugs. In this Vcard project I will download latest version of Umbraco release 4.7.</p></div><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading937\" class=\"heading937\"><a name=\"bookmark19\" id=\"938\" style=\"color: green;\">What to Download?</a></h3><div id=\"contentheading937\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s26\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"939\"><a href=\"http://umbraco.com/download\" class=\"a\" target=\"_blank\" id=\"940\">Now you get overview of downloading Umbraco. It‟s a good questions what to download? If you visit </a>http://umbraco.com/download <a href=\"http://umbraco.codeplex.com/releases/\" class=\"a\" target=\"_blank\" id=\"941\">sites to download, you can easily install using “Web Platform Installer”. Web platform Installer is Microsoft free software use to install program. Here I will not use “Web Platform Installer” because I want to show you more options. Visit Umbraco release or let‟s follow this link </a>http://umbraco.codeplex.com/releases/<span class=\"p\" id=\"942\">. This websites contains all Umbraco release version. On left menu side you can see current release version. Inside rectangle box you can see details of latest release version, for example Rating, Release date, update, Reviews, Number of Download etc. here look for Dev Status: if it‟s say stable it means it‟s a believe to be ready to use. On right side menu bar you can see pervious release of Umbraco. I said not to use Web Platform Installer to install Umbraco because it will install new release. If you would like to install other version then you need to browse codeplex for all releases.</span></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"943\">Let‟s back to main questions what to download? I would say first describe yourself and decide what to download. Here are three main categories so you need to choose one categories yourself based on your programming skills and .NET language skills.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"944\">Categories Basic <span class=\"p\" id=\"945\">– if you have basic knowledge of C#, object oriented program, MsSql database, if you know how to use usercontrol, webservices and classes to asp.net websites than I said its very basic to Umbraco so you can download Recommended Download by Umbraco sites. It‟s a binaries file.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"946\"><br id=\"947\"></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"948\">Categories Tester <span class=\"p\" id=\"949\">- if you have advanced level of C#, Object Oriented program knowledge and if you do not want to use mssql database but want to test Umbraco than you are as a tester. Please download “Umbraco x.x.x WebDeploy NET n.n” here x.x.x is Umbraco Release version and n.n is .NET frame work version. Until this book release its “Umbraco 4.7.0 WebDeploy NET 4.0” so download that files and test Umbraco without using MSSQL database.</span></h4><h4 style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"950\">Categories Advanced <a href=\"http://umbraco.codeplex.com/SourceControl/list/changesets\" class=\"a\" target=\"_blank\" id=\"951\">– If you can analyze other‟s c# code and have knowledge of Object Oriented Program, database and other programming language then you can download Source code from here </a><span style=\" color: #365F91;\" id=\"952\">http://umbraco.codeplex.com/SourceControl/list/changesets </span><span class=\"p\" id=\"953\">and have a fun with source code.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"954\"><br id=\"955\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"956\"><span id=\"957\"><img width=\"529\" height=\"331\" alt=\"image\" src=\"Image_021.jpg\" id=\"958\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"959\"><br id=\"960\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"961\">My personal opinion: I download Binary files for client websites development and I download source code files for learning purpose. I strongly recommend you to download source code because using source code files we can easily debug and see how Umbraco works. It‟s a good way to learn Umbraco. For Vcard project I download binary files, binary files are recommended by Umbraco official.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"962\"><br id=\"963\"></p></div><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading964\" class=\"heading964\"><a name=\"bookmark20\" id=\"965\" style=\"color: green;\">Unzip ZIP format</a></h3><div id=\"contentheading964\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"966\">Umbraco downloaded files are compressed in ZIP format, I guess you already worked with zip format; one important thing for Umbraco zip file before extract is to unblock it. Make sure you unblock zip file before extract.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"967\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"968\"><br id=\"969\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"970\"><p style=\"display: inline;\" id=\"971\">Right click on Umbraco files that you just downloaded and click on Properties</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"972\"><p style=\"display: inline;\" id=\"973\">Click On “Unblock” and press OK</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"974\"><p style=\"display: inline;\" id=\"975\">Extract files by Right click on zip files and click on “Extract All”</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"976\"><p style=\"display: inline;\" id=\"977\">Your extractor can be difference from I have one. But purpose is to extract all files.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"978\"><br id=\"979\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"980\"><span id=\"981\"><img width=\"485\" height=\"456\" alt=\"image\" src=\"Image_022.png\" id=\"982\"></span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"983\"><p style=\"display: inline;\" id=\"984\">Copy all extracted files, do not copy “build” directory<span class=\"s3\" id=\"985\">9</span>. Go inside “build” directory and copy all files from there.</p></li><li style=\"padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"986\"><p style=\"display: inline;\" id=\"987\">Paste all files inside “HowToUmbraco” directory if you follow me. Otherwise paste all Umbraco extracted files to your directory where you have decided to use. If you get confused go back to “Directory” topic and follow each step.</p></li><li style=\"padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"988\"><p style=\"display: inline;\" id=\"989\">If you followed me your “HowToUmbraco” directory must look like this see screen</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"990\"><span id=\"991\"><img width=\"316\" height=\"501\" alt=\"image\" src=\"Image_023.png\" id=\"992\"></span></p><p class=\"s27\" style=\"padding-top: 10pt;padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"993\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"994\"><br id=\"995\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"996\">If yours file structure is same as above captured image then you are ready to install Umbraco.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"997\"><br id=\"998\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"999\"><span id=\"1000\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_024.png\" id=\"1001\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1002\">9 <span class=\"s10\" id=\"1003\">You can also copy “build” directory in your case, if you want to follow me copy directory and files that have inside build directory.</span></p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading1004\" class=\"heading1004\"><a name=\"bookmark21\" id=\"1005\" style=\"color: green;\">Install Umbraco step by step guide</a></h3><div id=\"contentheading1004\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"1006\">To install Umbraco Follow these process Instruction:</p></div></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1007\"><p style=\"display: inline;\" id=\"1008\">Browser you websites using browser and type localhost:8080</p></li><li style=\"padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"1009\"><p style=\"display: inline;\" id=\"1010\">Here 8080 is port number if you did not change your port number just type localhost</p></li><li style=\"padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;line-height: 106%;text-align: justify;\" id=\"1011\"><p style=\"display: inline;\" id=\"1012\">You  must  see  Umbraco  welcome  page  click  <span id=\"1013\"><img width=\"100\" height=\"29\" alt=\"image\" src=\"Image_025.jpg\" id=\"1014\"></span><span class=\"s28\" id=\"1015\">    </span>on “Lets get Started”</p></li><li style=\"padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"1016\"><p style=\"display: inline;\" id=\"1017\">Even its free open source CMS you need to follow rules to use Umbraco read license, term and conditions. More details can be found on official websites of Umbraco, Accept the license for Umbraco CMS. To accept license click “Accept and continue”</p></li><li style=\"padding-top: 10pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1018\"><p style=\"display: inline;\" id=\"1019\">You are now in step 3. This step is more fun.</p></li><li style=\"padding-top: 11pt;padding-left: 42pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"1020\"><p style=\"display: inline;\" id=\"1021\">By providing not enough file permission to “Network service” or “application pool” in Umbraco installation directory will thrown out notification message “files permission are not ready” in such case you will not see this step 3, go back to file permission setting and come back later. If everything is ok you can see more option here</p><p class=\"s27\" style=\"padding-top: 10pt;padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"1022\">-     <span id=\"1023\"><img width=\"375\" height=\"90\" alt=\"image\" src=\"Image_026.jpg\" id=\"1024\"></span></p></li><li style=\"padding-top: 8pt;padding-left: 42pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"1025\"><p style=\"display: inline;\" id=\"1026\">Four options are here and all four options have on radio button. Why it‟s in radio button, reason is Radio button allows to choose only one option at a time, in Umbraco it is not possible<span class=\"s3\" id=\"1027\">10 </span>to use two different databases at a same time that‟s why they have radio button to make sure to choose one database.</p></li></ul><ul id=\"l16\"><li style=\"padding-top: 10pt;padding-left: 78pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1029\"><p style=\"display: inline;\" id=\"1030\">If you want to follow me until now click on first one “I …. Have a blank Sql server. <span class=\"s19\" id=\"1031\">Also see “What to Download?” topics page 25 </span>“</p></li><li style=\"padding-top: 11pt;padding-left: 78pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1032\"><p style=\"display: inline;\" id=\"1033\">If you are planning to test Umbraco select second option “I want to use SQl CE4,….” It does not require database. <span class=\"s19\" id=\"1034\">see “Categories Tester?” page 26</span></p></li><li style=\"padding-top: 10pt;padding-left: 78pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1035\"><p style=\"display: inline;\" id=\"1036\">If you are advanced user select third option this will allows developer to type connection string. <span class=\"s19\" id=\"1037\">Also see “Categories Advanced” page 26</span></p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"1038\"><br id=\"1039\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1040\"><span id=\"1041\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_027.png\" id=\"1042\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1043\">10 <span class=\"s10\" id=\"1044\">It is possible to use more than one database by extending umbraco using .net class. It is not possible to use multiple database during installation period.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1045\"><br id=\"1046\"></p><ul id=\"l17\"><li style=\"padding-top: 4pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"1048\"><p style=\"display: inline;\" id=\"1049\">if you need help click on last one.</p></li><li style=\"padding-top: 11pt;padding-left: 60pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"1050\"><p style=\"display: inline;\" id=\"1051\">I click on first one so Umbraco provides more option to select database type. I am using mssql, so I am selecting Microsoft SQL server.</p></li><li style=\"padding-top: 11pt;padding-left: 60pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"1052\"><p style=\"display: inline;\" id=\"1053\">Your case can be deference if you plan to use MySql server than you need to find yourself how to connect to Mysql server, I am not going to include here.</p></li><li style=\"padding-top: 10pt;padding-left: 60pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"1054\"><p style=\"display: inline;\" id=\"1055\">After click on first option or choice it will provide more input fields for sql connection details. See captured screen for reference your case can be deference. If you are following me it will be same as in captured screen bellow.</p></li><li style=\"padding-top: 10pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"1056\"><p style=\"display: inline;\" id=\"1057\">Here is description</p><ul id=\"l18\"><li style=\"padding-top: 11pt;padding-left: 96pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1059\"><p style=\"display: inline;\" id=\"1060\">Server= location of sql server, in mycase its .\\sqlepress, you can also use remote server database if you have for example server=”www.example.com\\sqlexpress”</p></li><li style=\"padding-top: 10pt;padding-left: 96pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1061\"><p style=\"display: inline;\" id=\"1062\">Database name: Name of database that we created for Umbraco cms in database topic</p></li><li style=\"padding-top: 10pt;padding-left: 96pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1063\"><p style=\"display: inline;\" id=\"1064\">Username: user that has access on database that we created for Umbraco</p></li><li style=\"padding-top: 9pt;padding-left: 96pt;text-indent: -18pt;text-align: left;\" id=\"1065\"><p style=\"display: inline;\" id=\"1066\">Password: password that assign to user to login sql server</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"1067\"><span id=\"1068\"><img width=\"465\" height=\"355\" alt=\"image\" src=\"Image_028.jpg\" id=\"1069\"></span></p><p style=\"padding-top: 2pt;text-indent: 0pt;text-align: right;\" id=\"1070\">database.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1071\"><br id=\"1072\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1073\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1074\"><br id=\"1075\"></p><ul id=\"l19\"><li style=\"padding-top: 4pt;padding-left: 24pt;text-indent: -18pt;text-align: left;\" id=\"1077\"><p style=\"display: inline;\" id=\"1078\">Press “Install”</p></li><li style=\"padding-top: 11pt;padding-left: 24pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"1079\"><p style=\"display: inline;\" id=\"1080\">If server location, database name, username and password are correct then it will take only few minute to setup database for Umbraco, during this process Umbraco show up progress bar. If Umbraco show up any error or notice. Correct error based on error message provided by Umbraco and continue to install Umbraco</p></li><li style=\"padding-top: 10pt;padding-left: 24pt;text-indent: -18pt;text-align: left;\" id=\"1081\"><p style=\"display: inline;\" id=\"1082\">Press “Continue” now you are in step 4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1083\"><span id=\"1084\"><img width=\"322\" height=\"317\" alt=\"image\" src=\"Image_029.jpg\" id=\"1085\"></span></p></li><li style=\"padding-top: 11pt;padding-left: 24pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"1086\"><p style=\"display: inline;\" id=\"1087\">Step 4 is for Create user; here you have to provide User information. That user will be supper administrator and have elevator access or root level of access to Umbraco Backend.</p><ul id=\"l20\"><li style=\"padding-top: 10pt;padding-left: 60pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"1089\"><p style=\"display: inline;\" id=\"1090\">Name: name for supper administrator account</p></li><li style=\"padding-top: 10pt;padding-left: 60pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"1091\"><p style=\"display: inline;\" id=\"1092\">Email: email of supper administrator account</p></li><li style=\"padding-top: 11pt;padding-left: 60pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"1093\"><p style=\"display: inline;\" id=\"1094\">Username: user name use to identify user.</p></li><li style=\"padding-top: 11pt;padding-left: 60pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"1095\"><p style=\"display: inline;\" id=\"1096\">Password: secrete code to gain access</p></li><li style=\"padding-top: 11pt;padding-left: 60pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"1097\"><p style=\"display: inline;\" id=\"1098\">See captured screen as a reference.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1099\"><br id=\"1100\"></p><p class=\"s29\" style=\"padding-top: 5pt;padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"1101\">o</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 27pt;text-indent: -21pt;text-align: left;\" id=\"1102\"><p style=\"display: inline;\" id=\"1103\">Click “Create user”</p><p style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"1104\">Step 5: select starter kits.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1105\"><br id=\"1106\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1107\"><span id=\"1108\"><img width=\"585\" height=\"232\" alt=\"image\" src=\"Image_030.jpg\" id=\"1109\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1110\"><br id=\"1111\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1112\">You can choose any one for your sites. It will install selected starter kits. It contains Templates, xslt, css and other extra files based on selected starter kits. This is good way to learn for new Umbraco developer. By installing out of box starter kits will provide guidance to new user about how templates, add XSLT, Document types, Macro, CSS etc works in Umbraco. By analyzing starter kits help developer to learn quickly and get familiar with environments.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1113\">I will start from scratch that‟s why I am not going to install any starter kits but you can install if you want. I will click last one “no thanks”. It will not install anything do not worry I will create later on. If you want to follow me click on “No thanks” and Click “Yes”.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"1114\"><b id=\"1115\">Final step: </b>you are done now click on “Set up your new websites” it will redirect to administrator control panel that is Backend of Umbraco sites<span class=\"s3\" id=\"1116\">11</span>.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1117\"><br id=\"1118\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1119\"><span id=\"1120\"><img width=\"601\" height=\"76\" alt=\"image\" src=\"Image_031.jpg\" id=\"1121\"></span></p><p style=\"padding-top: 12pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1122\">Note: if you browse you sites you will see Umbraco notice “Looks like there's still work to do”. It‟s because we did not set up our Umbraco sites. I will show step by step guide to set up.</p><h4 style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"1123\"><a name=\"a23\" id=\"1124\">Note: to install starter kits, it should be connected to internet. Being offline may not work to install starter kits.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1125\"><br id=\"1126\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1127\"><br id=\"1128\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1129\"><span id=\"1130\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_032.png\" id=\"1131\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1132\">11 <span class=\"s10\" id=\"1133\">Also called back office.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1134\"><span id=\"1135\"><img width=\"602\" height=\"441\" alt=\"image\" src=\"Image_033.png\" id=\"1136\"></span></p><h2 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading1137\" class=\"heading1137\"><a name=\"bookmark22\" id=\"1138\" style=\"color: lime;\">Back End Working Environment</a></h2><div id=\"contentheading1137\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 7pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"1139\">1 2 3 4 5</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1140\"><br id=\"1141\"></p><p style=\"padding-top: 4pt;padding-left: 106pt;text-indent: 0pt;text-align: left;\" id=\"1142\">6 8 9 10</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1143\"><br id=\"1144\"></p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: right;\" id=\"1145\">13</p><p style=\"padding-left: 75pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1146\">7</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1147\"><br id=\"1148\"></p><p style=\"padding-top: 4pt;padding-left: 86pt;text-indent: 0pt;text-align: left;\" id=\"1149\">11</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1150\"><br id=\"1151\"></p><p style=\"padding-top: 4pt;padding-left: 106pt;text-indent: 0pt;text-align: left;\" id=\"1152\">12</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1153\"><br id=\"1154\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1155\"><br id=\"1156\"></p><ol id=\"l21\"><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1158\"><p style=\"display: inline;\" id=\"1159\">Create: it‟s dynamic, will change based on Section item see number 12.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1160\"><br id=\"1161\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1162\"><p style=\"display: inline;\" id=\"1163\">Search: type text to search content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1164\"><br id=\"1165\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1166\"><p style=\"display: inline;\" id=\"1167\">About: To view Umbraco installed version, licensed and other information.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1168\"><br id=\"1169\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1170\"><p style=\"display: inline;\" id=\"1171\">Help: external link, will open Wiki page about Umbraco</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1172\"><br id=\"1173\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1174\"><p style=\"display: inline;\" id=\"1175\">Logout: click to log out. It will contain login user name</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1176\"><br id=\"1177\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1178\"><p style=\"display: inline;\" id=\"1179\">Content: it‟s a dynamic, will changed based on Section Items see number 12</p></li><li style=\"padding-top: 10pt;padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1180\"><p style=\"display: inline;\" id=\"1181\">Secondary items or child items of Main Items.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1182\"><br id=\"1183\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1184\"><p style=\"display: inline;\" id=\"1185\">Get Started: Umbraco provides information, news and external links</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1186\"><br id=\"1187\"></p></li><li style=\"padding-left: 41pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"1188\"><p style=\"display: inline;\" id=\"1189\">Latest edits: list latest change you have made on you site. 10)Change Password: change admin password. Password is hashed</p></li></ol><ol id=\"l22\"><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1191\"><p style=\"display: inline;\" id=\"1192\">Section: Main menu items, we can add custom section. Not covered here</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1193\"><br id=\"1194\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1195\"><p style=\"display: inline;\" id=\"1196\">Section Items: Items inside section. Sub Menu part of Section Menu. Mostly used in developing Umbraco, creating content and other</p></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"1197\"><br id=\"1198\"></p><p style=\"padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1199\">administrator purpose. Umbraco come up with six default section items Content, Media, User, Settings, Developer and Members.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1200\">Content: here editor create articles, edit, upload image. It‟s not technical stuff</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1201\"><br id=\"1202\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1203\">Media: it contains Media items. Image, Video, Audio is mostly Media items. Uploaded files go inside Media section. Using .net control developer can easily use others Directory to store files on their needs and requirements.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1204\">User: contains list of Users. All registered user are listed under User. Here you can set up user id, password, Email, permission and other personal information.</p><ul id=\"l23\"><li style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 18pt;text-align: left;\" id=\"1206\"><p style=\"display: inline;\" id=\"1207\">Users</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1208\"><p style=\"display: inline;\" id=\"1209\">User types</p></li><li style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 18pt;line-height: 178%;text-align: left;\" id=\"1210\"><p style=\"display: inline;\" id=\"1211\">User Permission Members: it contains</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1212\"><p style=\"display: inline;\" id=\"1213\">Members</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1214\"><p style=\"display: inline;\" id=\"1215\">Member Groups</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1216\"><p style=\"display: inline;\" id=\"1217\">Member types</p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"1218\">Settings: widely used in this “how to Umbraco”. Setting used to set up umbraco site. It contains</p></li><li style=\"padding-top: 9pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1219\"><p style=\"display: inline;\" id=\"1220\">Document Type</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1221\"><p style=\"display: inline;\" id=\"1222\">Templates</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1223\"><p style=\"display: inline;\" id=\"1224\">Style Sheet</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1225\"><p style=\"display: inline;\" id=\"1226\">Scripts</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1227\"><p style=\"display: inline;\" id=\"1228\">Dictionary</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1229\"><p style=\"display: inline;\" id=\"1230\">Language</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1231\"><p style=\"display: inline;\" id=\"1232\">Media types</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1233\"><br id=\"1234\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1235\">Developer: it contains all technical stuff.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1236\"><br id=\"1237\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1238\"><p style=\"display: inline;\" id=\"1239\">Cache browser</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1240\"><p style=\"display: inline;\" id=\"1241\">Data Types</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1242\"><p style=\"display: inline;\" id=\"1243\">Macro</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1244\"><p style=\"display: inline;\" id=\"1245\">Packages</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1246\"><p style=\"display: inline;\" id=\"1247\">Scripting Files</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1248\"><p style=\"display: inline;\" id=\"1249\">Xslt Files</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"1250\"><br id=\"1251\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1252\"><a name=\"a24\" id=\"1253\">Chapter 03: Document Type</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"1254\"><br id=\"1255\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1256\"><br id=\"1257\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1258\"><span id=\"1259\"><img width=\"529\" height=\"1\" alt=\"image\" src=\"Image_034.png\" id=\"1260\"></span></p></div><h2 style=\"padding-top: 4pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1261\" class=\"heading1261\"><a name=\"bookmark23\" id=\"1262\" style=\"color: lime;\">Document Type:</a></h2><div id=\"contentheading1261\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1263\">Document type is a core feature<span class=\"s3\" id=\"1264\">12 </span>of Umbraco cms; it is out of box document type feature. If you already work with Drupal CMS, you might be working with CCK (Content Construction Kit), Document Type is exactly same purpose as CCK that allows you to create fields.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1265\">Document type is a group of fields, that controls fields and fields are used to input data by content creator or editor while creating content on Umbraco sites. Content is second step after Document Type so that Document type structures the input fields, creates environment to add or create new content and facilitate content creating services to Editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1266\"><br id=\"1267\"></p></div><h2 style=\"padding-top: 8pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1268\" class=\"heading1268\"><a name=\"bookmark24\" id=\"1269\" style=\"color: lime;\">Document Type for Developers:</a></h2><div id=\"contentheading1268\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1270\">Developer creates document type based on groups of data that needs to be saved to and provides rich service to manage data and customize input fields.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1271\">You may still not clear what document type is so I am going to give one example as vcard case. Vcard websites I called “Semic Provider” has many fields like</p><ul id=\"l24\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1273\"><p style=\"display: inline;\" id=\"1274\">Logo</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1275\"><p style=\"display: inline;\" id=\"1276\">Title of Websites “Semic Provider” and</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1277\"><p style=\"display: inline;\" id=\"1278\">Slogan “Where content is understood by human and machine”.</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1279\">As a developer I want to provide a service to client so s/he can upload Logo, edit title of websites and slogan. Developer could do hard coding text into templates to display logo, title of websites and slogan but client can‟t change it later if s/he decided to change it. Client wants cms because s/he wants to control content without having knowledge of technical stuff like editing templates so as a developer we should provide more control over content. Logo, Title of Website and slogan are not same for all time; they can be changed later by client. To solve that problem we need to create Document type.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1280\">Document type is not single subject it‟s more complex for new Umbraco developer. I am going to look more details about document types. It contains Properties, Info, Structure and Tabs.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"1281\">Properties<span class=\"p\" id=\"1282\">: it‟s an input field that you create in document type, has more properties</span></h4></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1283\"><p style=\"display: inline;\" id=\"1284\">Name: name of your input field</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1285\"><p style=\"display: inline;\" id=\"1286\">Alias: alias used to retrieve value or fetch value that properties have</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1287\"><p style=\"display: inline;\" id=\"1288\">Type: input type for example , Text box, upload, Button, check box etc. these are based on Data Type</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1289\"><p style=\"display: inline;\" id=\"1290\">Tab- by default properties is assign to generic properties but you can assign to your custom tabs</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1291\"><br id=\"1292\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1293\"><span id=\"1294\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_035.png\" id=\"1295\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1296\"><a href=\"http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"1297\">12 </a>http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder- introduction/document-types official video about Document Type introduction</p><h4 style=\"padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1298\">Tabs<span class=\"p\" id=\"1299\">: Tabs is name of group for example name, age, address and email properties of person can be group together with tabs “personal Details” so in Tabs we create “Personal Details” and in Property tab we assign name, age, address and email properties to “Personal Details” tab. Tab and Tabs should not be confuse. Tabs, Properties, Structure and Info have save level inside Document Type tree and tab is child of Properties.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1300\"><br id=\"1301\"></p><h4 style=\"padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1302\">Structure<span class=\"p\" id=\"1303\">: Document type can have parent or child document Type here you check what‟s should be parent or child document type is allowed</span></h4><h4 style=\"padding-top: 10pt;padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1304\">Info<span class=\"p\" id=\"1305\">: it‟s not that much important as Properties, Tabs and Structure. Here you can assign template and other general setting or get more information about Document Type. More available settings inside Info are listed below. </span><span class=\"s10\" id=\"1306\">These are taken from official Umbraco sites. Please visit references.</span></h4><ul id=\"l25\"><li style=\"padding-left: 46pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1308\"><p style=\"display: inline;\" id=\"1309\">Name: name of Document Type</p></li><li style=\"padding-top: 2pt;padding-left: 46pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1310\"><p style=\"display: inline;\" id=\"1311\">Alias: alias of Document Type, use by Umbraco and developer when they work with Umbraco API and CodeInProject.</p></li><li style=\"padding-left: 46pt;text-indent: -18pt;text-align: left;\" id=\"1312\"><p style=\"display: inline;\" id=\"1313\">Thumbnail: Thumb image of Document Type displayed on create page dialog.</p></li><li style=\"padding-top: 2pt;padding-left: 46pt;text-indent: -18pt;text-align: left;\" id=\"1314\"><p style=\"display: inline;\" id=\"1315\">Icon: Icon of Document Type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1316\"><br id=\"1317\"></p></li><li style=\"padding-left: 46pt;text-indent: -18pt;text-align: left;\" id=\"1318\"><p style=\"display: inline;\" id=\"1319\">Description: Description of Document Type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1320\"><br id=\"1321\"></p></li><li style=\"padding-left: 46pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1322\"><p style=\"display: inline;\" id=\"1323\">Allowed Template. It is use to present data to end uses. If you fetch data using Xslt you can make document type without templates but Content based on that document type will not be able to provide preview mode if there is no associated template. One Document Type can have more than one template.</p></li><li style=\"padding-top: 10pt;padding-left: 46pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1324\"><p style=\"display: inline;\" id=\"1325\">Default Templates: that is a default template of document type. And used by Document Type</p></li></ul></li></ul><p class=\"s30\" style=\"padding-top: 9pt;padding-left: 10pt;text-indent: 0pt;text-align: justify;\" id=\"1326\"><a name=\"bookmark25\" id=\"1327\">Visual Diagram</a><span class=\"s31\" id=\"1328\">13 </span>for Document Type<span class=\"h3\" id=\"1329\">:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1330\"><br id=\"1331\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1332\"><span id=\"1333\"><img width=\"607\" height=\"165\" alt=\"image\" src=\"Image_036.png\" id=\"1334\"></span></p><p class=\"s32\" style=\"padding-top: 4pt;padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1335\">Document Type <span class=\"s10\" id=\"1336\">Name: </span><span class=\"s33\" id=\"1337\">Properties:</span></p><p class=\"s34\" style=\"padding-left: 13pt;text-indent: 18pt;line-height: 111%;text-align: left;\" id=\"1338\">- <span class=\"s35\" id=\"1339\">Alias: </span><span class=\"s33\" id=\"1340\">Tabs:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1341\"><br id=\"1342\"></p><h4 style=\"padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1343\">Create Content <span class=\"s36\" id=\"1344\">Properties and Tabs </span><span class=\"p\" id=\"1345\">of Document type</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1346\"><br id=\"1347\"></p><h4 style=\"padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"1348\"><a name=\"a25\" id=\"1349\">Templates</a><span class=\"p\" id=\"1350\">:</span></h4><p class=\"s23\" style=\"padding-top: 2pt;padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1351\">Alias <span style=\" color: #000;\" id=\"1352\">of Document Type‟s Properties</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1353\"><br id=\"1354\"></p><h4 style=\"padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1355\"><a name=\"a26\" id=\"1356\">Presentation of Content</a></h4><p style=\"padding-left: 13pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"1357\">End Users</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1358\"><br id=\"1359\"></p><p style=\"padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1360\"><span id=\"1361\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_037.png\" id=\"1362\"></span></p><p class=\"s3\" style=\"padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 120%;text-align: left;\" id=\"1363\">13 <span class=\"s10\" id=\"1364\">These diagrams are my own concept and may be other developer argues with Diagrams. There is no official diagram for Document Type.</span></p><p class=\"s10\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"1365\">References taken dates April 14, 2011</p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1366\">Diagram show, first create Document Type, second create Content based on Document Type Properties, use Alias of Document Type‟s properties and display data to End users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1367\"><br id=\"1368\"></p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1369\"><a name=\"a27\" id=\"1370\">Practical: let’s create Document Type for “Sites Setting”</a></h4><h3 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1371\"><a name=\"bookmark26\" id=\"1372\">Document Type Generic Properties: </a><span id=\"1373\"><img width=\"294\" height=\"22\" alt=\"image\" src=\"Image_038.jpg\" id=\"1374\"></span></h3><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1375\">Instruction:</p><ul id=\"l26\"><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1377\"><p style=\"display: inline;\" id=\"1378\">open Backend of Umbraco sites (your site /Umbraco/) in my case localhost:8080/umbraco/</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1379\"><p style=\"display: inline;\" id=\"1380\">Provide login credentials user id and password (my case “admin” “root” login and password respectively)</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1381\"><p style=\"display: inline;\" id=\"1382\">Click Setting on Section at bottom left corner, it will list all available features on Setting on top left corner. Expand Document Type</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1383\"><p style=\"display: inline;\" id=\"1384\">If you follow me Document Type must be empty so nothing will happen it‟s because I decided not to install any starter kits. Now I will create new document Type</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1385\"><p style=\"display: inline;\" id=\"1386\">Right Click on Document Type and Click “Create”. New windows popup.</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1387\"><p style=\"display: inline;\" id=\"1388\">Master Document Type: select none…</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1389\"><p style=\"display: inline;\" id=\"1390\">Name: name for Document Type I choose “Web Site Global Setting” but you can choose different if you want. Its name of document type.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1391\"><p style=\"display: inline;\" id=\"1392\">By Default “Create matching templates” is checked so leave default, it will create matching templates and we will use that templates as master templates.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1393\"><p style=\"display: inline;\" id=\"1394\">Press “Create” Button</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1395\"><p style=\"display: inline;\" id=\"1396\">Now Umbraco created new document Type and provide more option to input.</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1397\"><p style=\"display: inline;\" id=\"1398\">Click “Web site global Setting” to open document type. It will open four properties Info, Structure, Generic Properties and Tabs</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1399\"><p style=\"display: inline;\" id=\"1400\">Info: if you want to follow me provide these information</p><ul id=\"l27\"><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 108%;text-align: left;\" id=\"1402\"><p class=\"s8\" style=\"display: inline;\" id=\"1403\">Name <span class=\"p\" id=\"1404\">and </span>Alias <span class=\"p\" id=\"1405\">is not recommended to change because it will effect whole system</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1406\"><p class=\"s8\" style=\"display: inline;\" id=\"1407\">Icon<span class=\"p\" id=\"1408\">: Setting Agent. Select from dropdown</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1409\"><p class=\"s8\" style=\"display: inline;\" id=\"1410\">Thumbnail<span class=\"p\" id=\"1411\">: developer.png select from dropdown</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 108%;text-align: left;\" id=\"1412\"><p class=\"s8\" style=\"display: inline;\" id=\"1413\">Description<span class=\"p\" id=\"1414\">: “Manage your websites. Here you can set up your global sites. Example change logo, slogan etc.”</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1415\"><p class=\"s8\" style=\"display: inline;\" id=\"1416\">Allowed templates <span class=\"p\" id=\"1417\">and </span>Default Templates <span class=\"p\" id=\"1418\">leave default do not change it.</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1419\"><h4 style=\"display: inline;\" id=\"1420\"><a name=\"a28\" id=\"1421\">Remember to save before jump to next property</a><span class=\"p\" id=\"1422\">.</span></h4></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1423\"><p style=\"display: inline;\" id=\"1424\">You must see balloon success message at bottom right corner if anything goes wrong it will show up balloon message with error details.</p></li></ul></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1425\"><p style=\"display: inline;\" id=\"1426\">Structure: leave Default</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1427\"><p style=\"display: inline;\" id=\"1428\">Tabs: do not create for this document type</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1429\"><p style=\"display: inline;\" id=\"1430\">Generic Properties: click on Generic Properties. It‟s a most important in document Type. Click on “Add New Property”.</p></li><li style=\"padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1431\"><p style=\"display: inline;\" id=\"1432\">It will expand fields to input data, if you want to follow me provide these information without quotes</p><ul id=\"l28\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"1434\"><p class=\"s8\" style=\"display: inline;\" id=\"1435\">Name<span class=\"p\" id=\"1436\">: “Site Name”</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1437\"><p class=\"s8\" style=\"display: inline;\" id=\"1438\">Alias<span class=\"p\" id=\"1439\">: Leave Default, Umbraco will generate for you</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1440\"><p class=\"s8\" style=\"display: inline;\" id=\"1441\">Type<span class=\"p\" id=\"1442\">: Textstring , select from Drop down menu</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1443\"><p class=\"s8\" style=\"display: inline;\" id=\"1444\">Tab<span class=\"p\" id=\"1445\">: Leave Default</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1446\"><p class=\"s8\" style=\"display: inline;\" id=\"1447\">Mandator<span class=\"p\" id=\"1448\">: checked, means, it should not be empty</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1449\"><p class=\"s8\" style=\"display: inline;\" id=\"1450\">Validation<span class=\"p\" id=\"1451\">: for now leave empty</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1452\"><p class=\"s8\" style=\"display: inline;\" id=\"1453\">Description<span class=\"p\" id=\"1454\">: “Your Site Name”</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1455\"><h4 style=\"display: inline;\" id=\"1456\"><a name=\"a29\" id=\"1457\">Remember to save before jump to next properties</a><span class=\"p\" id=\"1458\">.</span></h4></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"1459\"><p style=\"display: inline;\" id=\"1460\">You can see balloon “success message” at bottom right corner if anything goes wrong it will show up balloon message with error details, correct error based on error message and Save again.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1461\">See captured screen as references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1462\"><br id=\"1463\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1464\"><br id=\"1465\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1466\">Document</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1467\">Save</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1468\">Document Type</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1469\">Add New Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1470\">Document</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1471\">Save</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1472\">Document Type</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1473\">Add New Property</p><p class=\"s10\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: left;\" id=\"1474\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1475\"> </span><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1476\"> </span>\t\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1477\"><br id=\"1478\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1479\"><span id=\"1480\"><img width=\"602\" height=\"546\" alt=\"image\" src=\"Image_039.png\" id=\"1481\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1482\">Delete</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1483\">Delete</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1484\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1485\">Settings</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1486\">Settings</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1487\"></p><p style=\"padding-top: 4pt;padding-left: 265pt;text-indent: -154pt;line-height: 113%;text-align: justify;\" id=\"1488\">Drop Down Menu <span class=\"s37\" id=\"1489\">Expand </span><span class=\"s10\" id=\"1490\">collapse Property</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1491\"><br id=\"1492\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1493\">Drag and Drop</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1494\">Drag and Drop</p><p style=\"padding-left: 130pt;text-indent: 0pt;text-align: left;\" id=\"1495\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1496\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1497\"><br id=\"1498\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1499\"><br id=\"1500\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 150%;text-align: left;\" id=\"1501\">Drag and Drop: <span class=\"p\" id=\"1502\">To sort property order, Umbraco automatically saves sorted order. </span>Delete: <span class=\"p\" id=\"1503\">To delete Property Type, if you delete property type it will delete all content relevant to that particular Property Type</span></h4><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1504\">Expand collapse Icon. <span class=\"p\" id=\"1505\">It will allows to expand or Collapse property Menu</span></h4><h4 style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1506\">Add New Property: <span class=\"p\" id=\"1507\">To Add new property</span></h4><h4 style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1508\">DropDown Menu: <span class=\"p\" id=\"1509\">to select value from Types or assign property to Tabs.</span></h4><p style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1510\">You must save manually after change; Umbraco does not automatically save for you.</p><h4 style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1511\">Alias<span class=\"p\" id=\"1512\">: alias is case sensitive and if you modify alias you may lose data if you are not sure how alias works. It‟s better not to change it in case you have to do so please make sure update in other parts of Umbraco system when you used that alias to fetch data. Alias is used to fetch data by Umbraco.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1513\"><br id=\"1514\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1515\">Type<span class=\"p\" id=\"1516\">: there are many types out of box available, for example, Rich text editors, True/False, Textstring, Upload, all are called Data Type I will discuss later. Changing type will lost data in content editing page but will still remain on database unless you save content after type changed. It‟s better not to change so make decision before you decide what type should be used.</span></h4><p style=\"padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"1517\">Some tips: if you want simple text editor select simple text editor, Textstring allows only to type text, Rich text editor will allows more rich features to content editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1518\"><br id=\"1519\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1520\"><a name=\"a30\" id=\"1521\">Note:</a></h4><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1522\">Repeat Same Process for <i id=\"1523\">Name</i>: “Slogan”, <i id=\"1524\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1525\">Type</i>: Textstring, <i id=\"1526\">Mandatory</i>: Checked, <i id=\"1527\">Description</i>: “Slogan here”</h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1528\"><br id=\"1529\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1530\">Repeat Same Process for <i id=\"1531\">Name</i>: “Logo”, <i id=\"1532\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1533\">Type</i>: Upload, <i id=\"1534\">Mandatory</i>: leave default, <i id=\"1535\">Description</i>: “Upload logo here”.</h4><h4 style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1536\"><a name=\"a31\" id=\"1537\">Notes: Type: upload allows content Creator to upload Image or files while create content, Type: Textstring allows to type text in input text field.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1538\"><br id=\"1539\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1540\">Let‟s see our final web grid how it look likes and create more Document Type for Semic website. See captured screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1541\"><br id=\"1542\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1543\">1</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1544\">2</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1545\">1</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1546\">2</p><p class=\"s10\" style=\"padding-left: 91pt;text-indent: 0pt;text-align: left;\" id=\"1547\">\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1548\"><br id=\"1549\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1550\">3</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1551\">3</p><p style=\"padding-left: 172pt;text-indent: 0pt;text-align: left;\" id=\"1552\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1553\"><br id=\"1554\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1555\"><br id=\"1556\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1557\">4</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1558\">4</p><p style=\"padding-left: 405pt;text-indent: 0pt;text-align: left;\" id=\"1559\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1560\"><br id=\"1561\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1562\">5</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1563\">5</p><p style=\"padding-left: 255pt;text-indent: 0pt;text-align: left;\" id=\"1564\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1565\"><br id=\"1566\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1567\"><span id=\"1568\"><img width=\"616\" height=\"384\" alt=\"image\" src=\"Image_040.png\" id=\"1569\"></span></p><ol id=\"l29\"><li style=\"padding-top: 4pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1571\"><p style=\"display: inline;\" id=\"1572\">Logo</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1573\"><p style=\"display: inline;\" id=\"1574\">Title</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1575\"><p style=\"display: inline;\" id=\"1576\">Slogan</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1577\"><p style=\"display: inline;\" id=\"1578\">Navigation Bar</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1579\"><p style=\"display: inline;\" id=\"1580\">Body</p></li></ol><h3 style=\"padding-top: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1581\" class=\"heading1581\"><a name=\"bookmark27\" id=\"1582\" style=\"color: green;\">Document Type “Tabs</a><span class=\"s3\" id=\"1583\">” </span><span id=\"1584\"><img width=\"400\" height=\"25\" alt=\"image\" src=\"Image_041.jpg\" id=\"1585\"></span></h3><div id=\"contentheading1581\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 18pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1586\">Here we just finished document type for global settings, but little document type is still remaining, take a look at navigation bar. There is title of Article like “News”, “Solution”, “Semic” and “Contact”. Now it‟s time to create Document type for these articles. I will introduce input pattern here, Input Pattern is fields or value that needs to provide when Editor creates content (Article) on Content page.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1587\">Input Pattern is “Title” and “Body”. Title is a title of article that shows up in navigation bar, Body is text or description of Title that show up when user click on particular title in navigation bar. For example if user clicks on “News” Title it will show up Description of News, in my case it will show up recent news details. Here “news”, “Solution” and “Semic” have only two Input Pattern title and Body, it means we can create many article with different title and body on same input pattern. So let‟s create one Document Type that can implement Two Input Pattern. Now let‟s create new document type “General Content” and also check matching templates and Press OK. If you want to follow me repeat same process as above to add new properties</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1588\">Add following properties into “General Content”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1589\"><br id=\"1590\"></p></div></li></ul></li><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1591\"><p class=\"s8\" style=\"display: inline;\" id=\"1592\">Before Adding Following Properties. Create first Two Tabs “Title” and “Description”.</p></li><li style=\"padding-bottom: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1593\"><p class=\"s8\" style=\"display: inline;\" id=\"1594\">Type Tab name and Press “New tab” it will create new tab</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1595\"><span id=\"1596\"><img width=\"472\" height=\"167\" alt=\"image\" src=\"Image_042.jpg\" id=\"1597\"></span></p><ul id=\"l30\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1599\"><p class=\"s8\" style=\"display: inline;\" id=\"1600\">Name: name of Tabs you created</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1601\"><p class=\"s8\" style=\"display: inline;\" id=\"1602\">Sort order: ordering number of tabs, lower sort order number will appear at top of the grater sort order number in “Generic Properties”</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1603\"><p class=\"s8\" style=\"display: inline;\" id=\"1604\">Delete: To delete tabs, related property will automatically assign to Generic Properties if tabs is deleted.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1605\"><br id=\"1606\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1607\"><p style=\"display: inline;\" id=\"1608\">Name: “Content <i id=\"1609\">Title”</i>, Alias: Use Default, Type: <i id=\"1610\">Textstring</i>, Tab, use Default, Mandator: <i id=\"1611\">checked</i>, Description: <i id=\"1612\">Article Title</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"1613\"><p style=\"display: inline;\" id=\"1614\">Name: “Content <i id=\"1615\">Body”</i>, Alias, Use Default, Type: <i id=\"1616\">Rich Text Editor</i>, Tab, use Default, Mandator: <i id=\"1617\">checked</i>, Description: <i id=\"1618\">Body text here for Article</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1619\"><p style=\"display: inline;\" id=\"1620\">Name: “<i id=\"1621\">Use in Navigation”</i>, Alias, Use Default, Type: <i id=\"1622\">True/False</i>, Tab, use Default, Mandatory: <i id=\"1623\">checked</i>, Description: <i id=\"1624\">Checked to show content in Navigation bar.</i></p><p style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"1625\">-</p><p class=\"s8\" style=\"padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1626\">See captured screen as references for Document type “Tabs”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1627\"><br id=\"1628\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1629\">Name of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1630\">Alias of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1631\">Type of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1632\">Name of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1633\">Alias of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1634\">Type of Property</p><p style=\"padding-left: 19pt;text-indent: 0pt;text-align: left;\" id=\"1635\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1636\"> </span><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1637\"> </span><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1638\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1639\"><br id=\"1640\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1641\"><span id=\"1642\"><img width=\"534\" height=\"404\" alt=\"image\" src=\"Image_043.png\" id=\"1643\"></span></p><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1644\" class=\"heading1644\"><a name=\"bookmark28\" id=\"1645\" style=\"color: green;\">Document Type Structure: </a><span id=\"1646\"><img width=\"345\" height=\"27\" alt=\"image\" src=\"Image_044.jpg\" id=\"1647\"></span></h3><div id=\"contentheading1644\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 12pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1648\">It‟s a little bit tricky, news items are added each time if there is new things happen, so we need to create two Document Types. One Document Type is for News Container and another for news article. News Container is like a container that contains news article.</p><p class=\"s39\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1649\">Purpose: <span class=\"p\" id=\"1650\">Umbraco developer can set up hierarchy structure so it will limit or prevent from creating non relevant content to content editor. For example I want only news items inside News Container, we want to mange content or data. I don‟t want to create any content that is not news items inside News container, to achieve that goal I can set up structure to News Container Document Type so it will only allows to create child content only relevant to news article. Let‟s begin to create Two Document Type “News Container” and “News Article”</span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1651\">Instruction: process is similar to create News Container Document Type as above mentioned.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1652\">Document Type “News Container”</p></div></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1653\"><p style=\"display: inline;\" id=\"1654\">Create, Document Type “News Container”</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1655\"><p style=\"display: inline;\" id=\"1656\">Name: “<i id=\"1657\">News Items”</i>, Alias: Use Default, Type: <i id=\"1658\">Label</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1659\">it’s a news container”.</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1660\"><p class=\"s8\" style=\"display: inline;\" id=\"1661\">Remember to Save</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1662\">Document Type “News Article”</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1663\"><p style=\"display: inline;\" id=\"1664\">Create Document Type “News Article”</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1665\"><p style=\"display: inline;\" id=\"1666\">Name: <i id=\"1667\">News Title</i>, Alias: Use Default, Type: <i id=\"1668\">Textstring</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1669\">News Title”.</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1670\"><p class=\"s8\" style=\"display: inline;\" id=\"1671\">Remember to Save</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1672\"><p style=\"display: inline;\" id=\"1673\">Name: “<i id=\"1674\">News Body”</i>, Alias: Use Default, Type: <i id=\"1675\">simple Editor</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1676\">news details”.</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1677\"><p class=\"s8\" style=\"display: inline;\" id=\"1678\">Remember to Save</p><p class=\"s8\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1679\">Let’s set up structure Open “Structure” of Document Type “News Container” as checked document type you want to set up as child nodetypes. In my case “News Article” see screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1680\"><br id=\"1681\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1682\"><span id=\"1683\"><img width=\"413\" height=\"243\" alt=\"image\" src=\"Image_045.png\" id=\"1684\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1685\"><br id=\"1686\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1687\"><a name=\"a32\" id=\"1688\">Creating Child Document Type</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1689\"><br id=\"1690\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1691\">There are two ways of creating child Document Type.</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1692\">First Ways. If you remember that we selected none “Master Document Type” when we created document type for global Setting, News Container and General Content. If you want to create child document type you can select desire master document type while you are creating Document Type first time.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1693\">Second Way: second way to create child document type is Right click on Document Type that you want to use as master Document Type and Click on “Create”. This is another way to create child document type.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1694\">Purpose: creating child document type allows Developer to reuse properties that have in master document type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1695\"><br id=\"1696\"></p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1697\">Notes: Do not forget to play around all types of Child Document type, Structure, Info, Properties, Tabs, Validation and different Data Types or Type etc.</p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading1698\" class=\"heading1698\"><a name=\"bookmark29\" id=\"1699\" style=\"color: green;\">Document Type API:</a></h3><div id=\"contentheading1698\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 35pt;line-height: 114%;text-align: justify;\" id=\"1700\">We are creating document type manually by right click on Document Type using backend of Umbraco site. It‟s also technical stuff and you need to know Umbraco stuff to set up, if you want to be a Umbraco developer in future, you should not look on top to ocean, you have to go more deep until bottom of ocean. Umbraco CMS will convert all your manual work in programming language and execute code. Let‟s look what‟s happening inside Umbraco when you manually create document type, how it‟s working and get basic Umbraco API knowledge.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1701\">Umbraco has namespace “<span class=\"s40\" id=\"1702\">umbraco.cms.businesslogic.web‛ </span>that contains los of Class. Here I will discuss DocumentType only.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1703\"><br id=\"1704\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1705\"><p class=\"s41\" style=\"display: inline;\" id=\"1706\">Manual Work: “Create”</p><ul id=\"l31\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"1708\"><p class=\"s40\" style=\"display: inline;\" id=\"1709\">When you right click on Document Type and press ‚Create‛. You have to provide Document Type Name.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"1710\"><p class=\"s40\" style=\"display: inline;\" id=\"1711\">At that time Umbraco execute MakeNew() methods on server that methods are responsible to create Document Type that will effect on Database. <span style=\" color: #2B91AE;\" id=\"1712\">DocumentType</span>.MakeNew(<span style=\" color: #2B91AE;\" id=\"1713\">User</span>, docTypename).Save();</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"1714\"><p class=\"s40\" style=\"display: inline;\" id=\"1715\">User will be automatically assigned by Umbraco based on your backend login information, Note that not all uses have access to create document type. docTypename is Name of Document Type you provided first time. Save() is void methods, it will save Document Type to database. Saving to database means to make data available next time to use.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1716\"><br id=\"1717\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1718\"><p class=\"s41\" style=\"display: inline;\" id=\"1719\">Manual Work: “Add New Property”</p><ul id=\"l32\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"1721\"><p class=\"s40\" style=\"display: inline;\" id=\"1722\">Add new property will execute AddPropertyType(<span style=\" color: #2B91AE;\" id=\"1723\">DataTypeDefinition</span>, name, description) methods. Three parameters DataTypeDefinition, name and description and there is also more overloads on that methods.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"1724\"><p class=\"s40\" style=\"display: inline;\" id=\"1725\">DataTypeDefinition – Data Type you selected, Umbraco only use Id of Data Type. When you select data type, Umbraco automatically take id of data type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1726\"><br id=\"1727\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1728\"><p class=\"s41\" style=\"display: inline;\" id=\"1729\">Manual Work: “New Tab”</p><ul id=\"l33\"><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"1731\"><p class=\"s40\" style=\"display: inline;\" id=\"1732\">Umbraco execute AddVirtualTab(tabName) to add new tab, tabName is name of tab you provided.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1733\"><p class=\"s42\" style=\"display: inline;\" id=\"1734\">DocumentType</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1735\"><p class=\"s40\" style=\"display: inline;\" id=\"1736\">dt.AddVirtualTab(tabName);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1737\"><br id=\"1738\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1739\"><p class=\"s43\" style=\"display: inline;\" id=\"1740\"><a name=\"a33\" id=\"1741\">Setting Tabs on Generic Properties.</a></p><ul id=\"l34\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"1743\"><p class=\"s40\" style=\"display: inline;\" id=\"1744\">When you select tab to organize you preoperty Umbraco will assign tabs on that Property.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1745\"><p class=\"s42\" style=\"display: inline;\" id=\"1746\">DocumentType <span style=\" color: #000;\" id=\"1747\">dt;</span></p></li><li style=\"padding-top: 3pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1748\"><p class=\"s40\" style=\"display: inline;\" id=\"1749\">dt.SetTabOnPropertyType(PropertyType, <span style=\" color: #2B91AE;\" id=\"1750\">Tab </span>Id);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"1751\"><p class=\"s40\" style=\"display: inline;\" id=\"1752\">here property Type is type of new property and Tab Id is node id of Tabs you created, all Names are for visual representation of data and id or aliad is for machine or Umbraco system to represent object.</p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"1753\">-</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1754\"><p class=\"s43\" style=\"display: inline;\" id=\"1755\"><a name=\"a34\" id=\"1756\">Manual Work “Delete”</a></p><ul id=\"l35\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1758\"><p class=\"s40\" style=\"display: inline;\" id=\"1759\">If you would like to delete Document Type you will right click on document type and press ‚Delete‛.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1760\"><p class=\"s40\" style=\"display: inline;\" id=\"1761\">Umbraco will execute Delete() methods to delete document type.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1762\"><p class=\"s40\" style=\"display: inline;\" id=\"1763\">Here is an example</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1764\"><p class=\"s42\" style=\"display: inline;\" id=\"1765\">DocumentType<span style=\" color: #000;\" id=\"1766\">.GetByAlias(docAlias).delete();</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1767\"><p class=\"s40\" style=\"display: inline;\" id=\"1768\">First call GetByAlias() method to select document type by alias, also you can select document type by Id.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1769\"><p class=\"s40\" style=\"display: inline;\" id=\"1770\">Second Call Delete() method to delete Document,</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1771\"><p class=\"s40\" style=\"display: inline;\" id=\"1772\">This time you don’t need to save. Because Delete will delete selected document type from Database as well.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"1773\"><p class=\"s40\" style=\"display: inline;\" id=\"1774\">Whatever you made change on Umbraco, you have to press Save icon <span id=\"1775\"><img width=\"27\" height=\"26\" alt=\"image\" src=\"Image_046.jpg\" id=\"1776\"></span><span class=\"s28\" id=\"1777\">    </span>to save your work. That will execute Void methods Save().</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1778\"><br id=\"1779\"></p><p class=\"s40\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1780\">More Document Type API:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1781\"><br id=\"1782\"></p><p class=\"s40\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1783\">Here is more API listed, for full list of API, you need to download source code or decompile DLL files that provided by Umbraco binary.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1784\"><br id=\"1785\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1786\"><p class=\"s40\" style=\"display: inline;\" id=\"1787\">getVirtualTabs</p><ul id=\"l36\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1789\"><p class=\"s40\" style=\"display: inline;\" id=\"1790\">returns list of available tabs on document type</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1791\"><p class=\"s40\" style=\"display: inline;\" id=\"1792\">HasTemplate()</p><ul id=\"l37\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1794\"><p class=\"s40\" style=\"display: inline;\" id=\"1795\">Return bool value ,true if document type has template</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1796\"><p class=\"s40\" style=\"display: inline;\" id=\"1797\">allowedTemplates</p><ul id=\"l38\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1799\"><p class=\"s40\" style=\"display: inline;\" id=\"1800\">return List of Allowed templates.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1801\"><p class=\"s40\" style=\"display: inline;\" id=\"1802\">PropertyTypes</p><ul id=\"l39\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1804\"><p class=\"s40\" style=\"display: inline;\" id=\"1805\">Return list of Property types.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1806\"><p class=\"s40\" style=\"display: inline;\" id=\"1807\">HasChildren</p><ul id=\"l40\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1809\"><p class=\"s40\" style=\"display: inline;\" id=\"1810\">Return Bool Value, True if Document type has children document type.</p></li></ul></li></ul><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1811\">These are few mostly used API. To change value using API you can use visual studio. If field has “Set” methods you can change value using API.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1812\">Example:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1813\"><br id=\"1814\"></p><p class=\"s40\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 200%;text-align: left;\" id=\"1815\"><span style=\" color: #2B91AE;\" id=\"1816\">DocumentType</span>.GetByAlias(<span style=\" color: #A21515;\" id=\"1817\">\"NewsContainer\"</span>).Alias = <span style=\" color: #A21515;\" id=\"1818\">\"newNewsContainer\"</span>; It will change alias of News Container to ‘newNewsContainer’.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1819\"><br id=\"1820\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1821\"><a name=\"a35\" id=\"1822\">Chapter 04: Content</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"1823\"><br id=\"1824\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1825\"><br id=\"1826\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1827\"><span id=\"1828\"><img width=\"385\" height=\"1\" alt=\"image\" src=\"Image_047.png\" id=\"1829\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1830\"><br id=\"1831\"></p></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1832\" class=\"heading1832\"><a name=\"bookmark30\" id=\"1833\" style=\"color: lime;\">Content:</a></h2><div id=\"contentheading1832\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1834\">Content is one of the Section menu item in umbraco. Backend user will have access to content area. It contains articles or data that created by Editor based on document type. Lets Familiar with Envornment of Content if you Right Click over Content you can see different options. See captured screen bellow</p><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1835\">Create<span class=\"p\" id=\"1836\">: To create new content</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1837\"><br id=\"1838\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1839\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1840\">Republish Entire Sites: <span class=\"p\" id=\"1841\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1842\">Reload nodes: <span class=\"p\" id=\"1843\">To clear cache on server side, client sites and recreate new cache.</span></h4><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1844\">Create<span class=\"p\" id=\"1845\">: To create new content</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1846\"><br id=\"1847\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1848\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1849\">Republish Entire Sites: <span class=\"p\" id=\"1850\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1851\">Reload nodes: <span class=\"p\" id=\"1852\">To clear cache on server side, client sites and recreate new cache.</span></h4><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1853\"><span id=\"1854\"><img width=\"254\" height=\"407\" alt=\"image\" src=\"Image_048.jpg\" id=\"1855\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1856\"><br id=\"1857\"></p><h3 style=\"padding-top: 12pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1858\" class=\"heading1858\"><a name=\"bookmark31\" id=\"1859\" style=\"color: green;\">Creating Content:</a></h3><div id=\"contentheading1858\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1860\">It‟s a very simple process, if you click on Create it will show up new windows promoting you to type name of content and selecting option of Document Type in drop down list. After clicked on “Create” will create content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1861\"><span id=\"1862\"><img width=\"179\" height=\"196\" alt=\"image\" src=\"Image_049.jpg\" id=\"1863\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1864\">Name: name of content and it‟s not the title of article that will show up in end users. It‟s a name of content and only used in Content section, it will not show up to end users.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1865\">It‟s time to create Content for Vcard “SemicProvider” sites. First let‟s start with creating content for global settings<span class=\"s19\" id=\"1866\">. I will show you only for global settings, for rest of content you can repeat similar process.</span></p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1867\">Instruction: Right click on Content and Click on “Create” provide following information</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1868\">Name: “Setting sites”</p><p class=\"s8\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1869\">Document Type: select “Web Site Global Settings” from drop down list.</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1870\">Press “Create”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1871\"><br id=\"1872\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1873\">It will ask more information based on document type. Provide following info and press “Save” button. See highlighted color text. See captured screen “Image content”</p><p class=\"s19\" style=\"padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"1874\">Image: Content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1875\"><br id=\"1876\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1877\"><span id=\"1878\"><img width=\"547\" height=\"552\" alt=\"image\" src=\"Image_050.png\" id=\"1879\"></span></p><p class=\"s45\" style=\"padding-top: 4pt;padding-left: 92pt;text-indent: 0pt;text-align: left;\" id=\"1880\">Save Content <span class=\"p\" id=\"1881\">Save and Publish</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1882\"><br id=\"1883\"></p><p style=\"padding-left: 39pt;text-indent: 0pt;text-align: left;\" id=\"1884\">Preview</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1885\"><br id=\"1886\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1887\">Content Name</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1888\">Content Name</p><p style=\"padding-left: 348pt;text-indent: 0pt;text-align: left;\" id=\"1889\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1890\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1891\"><br id=\"1892\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1893\"><br id=\"1894\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1895\">Node Id of Content</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1896\">Node Id of Content</p><p style=\"padding-left: 348pt;text-indent: 0pt;text-align: left;\" id=\"1897\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1898\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1899\"><br id=\"1900\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1901\">Present Content to End</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1902\">Present Content to End</p><p style=\"padding-left: 350pt;text-indent: 0pt;text-align: left;\" id=\"1903\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1904\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1905\"><br id=\"1906\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1907\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1908\">Image content</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1909\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1910\">Image content</span></p><p style=\"padding-left: 4pt;text-indent: 0pt;text-align: left;\" id=\"1911\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1912\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1913\"><br id=\"1914\"></p><p style=\"padding-top: 11pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1915\">Did you remember Site Name, Slogan and Logo were created at Document Type “Web site global settings”? We added type properties Textstring for Site name and Slogan and type:Upload for Logo. Here in Content page we can type site name and slogan because we selected type:Textstring and we can upload image in logo because we selected type:Upload in Document Type “Web Site Global Settings”. Now I hope you understand concept of Document Type and relation between Content and Document Type:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1916\"><br id=\"1917\"></p><p class=\"s8\" style=\"padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1918\">Notes: Create content for “Developer”, “Solution” and “Semic” using document type “General Content”. It’s a same process as we created just now. After that you will be more familiar with Creating Content in Umbraco sites and relation of Document Type and content. Let’s See next image relations between content and Document Type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1919\"><span id=\"1920\"><img width=\"573\" height=\"427\" alt=\"image\" src=\"Image_051.png\" id=\"1921\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1922\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1923\">Content</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1924\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1925\">Content</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1926\"></p></div><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1927\" class=\"heading1927\"><a name=\"bookmark32\" id=\"1928\" style=\"color: green;\">Relations between Document Type and Content</a></h3><div id=\"contentheading1927\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"1929\"><br id=\"1930\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1931\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1932\">Document Type</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1933\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1934\">Document Type</span></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1935\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1936\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1937\"><br id=\"1938\"></p><p class=\"s10\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1939\"><span style=\" color: #F00;\" id=\"1940\">Red Long-dash arrow</span>: Name of Properties <span style=\" color: #00AF50;\" id=\"1941\">Green arrow</span>: Type of Properties</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1942\"><br id=\"1943\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1944\">To understand relation between Document Type and Content may be difficult for first time but when you practice more it will be easy to understand. See two images above and follow red and green arrow telling relation between Document Type and Content.</p><p class=\"s4\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"1945\">Delete Document Type<span class=\"s8\" id=\"1946\">: </span><span class=\"p\" id=\"1947\">if you delete Document Type all associated content will be also deleted from websites, it‟s not possible to undo or restore Document Type in case delete.</span></p><p class=\"s4\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1948\">Update Document Type Properties: <span class=\"p\" id=\"1949\">you can change document type property for example you can change property type from type Simple Editor to type Rich Text Editor, data will not be lost because both are related type, both editor allows editor to edit text as simple or rich text environment. When you change type from type Textstring to type Label or type Upload, in that case all content modified after document type property has changed will lost previous data because type are not similar. So changing property type may cost data lost.</span></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1950\">Delete Content: <span class=\"p\" id=\"1951\">you can delete content. Deleted items will moved to Recycle Bin so if you accidently delete any content no need to feel panic you can easily restore from Recycle bin directory.</span></h4></div><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1952\" class=\"heading1952\"><a name=\"bookmark33\" id=\"1953\" style=\"color: green;\">Explore content Properties:</a></h3><div id=\"contentheading1952\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-bottom: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1954\">There is more option for content that we created on Content section based on document type. Let‟s right click on “Setting site” content and explore more options. See captured screen.</p><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1955\">Create<span class=\"p\" id=\"1956\">: Create new child article example News Container.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1957\">Edit in Canvas: <span class=\"p\" id=\"1958\">will allows editor to edit content in Frontend using browser.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1959\">Delete<span class=\"p\" id=\"1960\">: Move content to Recycle Bin</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 122%;text-align: left;\" id=\"1961\">Move<span class=\"p\" id=\"1962\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1963\">: Copy content, Copy will not delete content</span></h4><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1964\">from old location</p><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1965\">Sort<span class=\"p\" id=\"1966\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1967\">Rollback<span class=\"p\" id=\"1968\">: allows to rollback content based on previous changed,</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1969\">Manage Hostnames: <span class=\"p\" id=\"1970\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1971\">Permission: <span class=\"p\" id=\"1972\">set up permission</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1973\">Publich Access: <span class=\"p\" id=\"1974\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1975\">Audit Trill<span class=\"p\" id=\"1976\">: list of history of content</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1977\">Notifications<span class=\"p\" id=\"1978\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1979\">Send to Translation: <span class=\"p\" id=\"1980\">used for multiple languages</span></h4><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1981\">Create<span class=\"p\" id=\"1982\">: Create new child article example News Container.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1983\">Edit in Canvas: <span class=\"p\" id=\"1984\">will allows editor to edit content in Frontend using browser.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1985\">Delete<span class=\"p\" id=\"1986\">: Move content to Recycle Bin</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 122%;text-align: left;\" id=\"1987\">Move<span class=\"p\" id=\"1988\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1989\">: Copy content, Copy will not delete content</span></h4><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1990\">from old location</p><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1991\">Sort<span class=\"p\" id=\"1992\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1993\">Rollback<span class=\"p\" id=\"1994\">: allows to rollback content based on previous changed,</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1995\">Manage Hostnames: <span class=\"p\" id=\"1996\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1997\">Permission: <span class=\"p\" id=\"1998\">set up permission</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1999\">Publich Access: <span class=\"p\" id=\"2000\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2001\">Audit Trill<span class=\"p\" id=\"2002\">: list of history of content</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"2003\">Notifications<span class=\"p\" id=\"2004\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2005\">Send to Translation: <span class=\"p\" id=\"2006\">used for multiple languages</span></h4><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2007\"><span id=\"2008\"><img width=\"180\" height=\"528\" alt=\"image\" src=\"Image_052.jpg\" id=\"2009\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2010\"><br id=\"2011\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2012\">Notes:</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2013\">I am not going to create content for other document types because creating</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2014\">content is same for all document type just you need to select different document type when you create content. You can easily follow my process to create content for other document type.</p><p style=\"padding-left: 5pt;text-indent: 35pt;line-height: 114%;text-align: justify;\" id=\"2015\">Creating News Container and News Article are a bit different. First Create Article on “News Container” after that right click on just created content (“News Container” Document type content), then create news article. You can see Document Type “News Article” is only option to choose if you followed me. That is Allowed child nodetypes that we set up in Document Type “Structure” property of “News Container” Document Type.</p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2016\">I have created more content for Semic Provider site. You can see captured screen and compare with your version.</p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2017\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\" style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2018\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\" style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2019\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2020\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2021\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\" style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2022\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\" style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2023\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2024\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2025\"><span id=\"2026\"><img width=\"298\" height=\"400\" alt=\"image\" src=\"Image_053.jpg\" id=\"2027\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2028\"><br id=\"2029\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2030\">We are just working in backend part of Semic Provider site. If you preview article you see empty page. No content its because we have not touch any Templates yet, templates are responsible to output content or to present data to end users. I will discuss later or about templates. When you preview your content Umbraco will insert red strip with white color text “Preview Mode-click to end” on top right cornner of browser. Umbraco provides notification to you about your are viewing on Preview Mode. To exit click browser will close automatically.</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2031\"><span id=\"2032\"><img width=\"424\" height=\"230\" alt=\"image\" src=\"Image_054.jpg\" id=\"2033\"></span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2034\">For now you can‟t preview you data because associated templates are empty.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2035\"><br id=\"2036\"></p><p class=\"s49\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2037\"><a name=\"bookmark34\" id=\"2038\">Content API:</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2039\"><br id=\"2040\"></p><p class=\"s50\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2041\">In Umbraco code Content is understood by Document so that creating content in Umbraco Backend means executing Document code in Umbraco Core code inside server. Core code is programming language written in C# language. Content API is very important, if you want to create content using API, for example if you move sites from another websites to Umbraco CMS site, probably you want to get all data or content from old site as archive. If there is 1000 of articles in old site, it‟s not good idea to import content manually. You have to think some sort of automatic process to import content. Here is basic API for Umbraco Content.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2042\"><span style=\" color: #00F;\" id=\"2043\">namespace </span>umbraco.cms.businesslogic.web contains Document Class. Creating Content means Executing <span style=\" color: #2B91AE;\" id=\"2044\">Document</span>.MakeNew() methods of Document Class.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2045\">MakeNew() takes four parameters</p><ul id=\"l41\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2047\"><p class=\"s52\" style=\"display: inline;\" id=\"2048\">1<span class=\"s54\" id=\"2049\">st </span>parameter String Title: its title of Content, that title shown in Content Tree.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2050\"><p class=\"s52\" style=\"display: inline;\" id=\"2051\">2<span class=\"s54\" id=\"2052\">nd </span>Parameter DocumentType: Document Type, when you select document</p><p class=\"s52\" style=\"padding-left: 41pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2053\">type Umbraco will automatically use that document type.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: justify;\" id=\"2054\"><p class=\"s52\" style=\"display: inline;\" id=\"2055\">3<span class=\"s54\" id=\"2056\">rd</span><span class=\"s55\" id=\"2057\"> </span>parameter User: Umbraco does not allow to crate content without valid and has access user. When you logged in Umbraco automatically take your login user and use to create document.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2058\"><p class=\"s52\" style=\"display: inline;\" id=\"2059\">4<span class=\"s54\" id=\"2060\">th </span>parameter parent id: it’s a hierarchy of content. If you want to</p><p class=\"s52\" style=\"padding-left: 41pt;text-indent: 0pt;text-align: justify;\" id=\"2061\">create content at root level you must provide parent id -1. In Semic Provider content ‘News Article’ is child of ‘news container’ in that case all news article’s content’s parent id is Node id of ‚news Container‛. Its means if you provide -1 as parent id, Content will be created at root level. If you provide node id of content, it will create content as child of provided node id content.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2062\"><p class=\"s52\" style=\"display: inline;\" id=\"2063\">Example:</p><ul id=\"l42\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2065\"><p class=\"s52\" style=\"display: inline;\" id=\"2066\">Document dt = Document.MakeNew(‚Developer‛,GeneralContent, User(0), -1);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2067\"><p class=\"s52\" style=\"display: inline;\" id=\"2068\">dt.Publish();</p><ul id=\"l43\"><li style=\"padding-left: 113pt;text-indent: -18pt;text-align: justify;\" id=\"2070\"><p class=\"s52\" style=\"display: inline;\" id=\"2071\">Description: Create document name ‚Developer‛ on Document Type ‚GeneralContent‛. Use user 0. 0 is admin user id and always exist on Umbraco system. -1 will create Document at Root level.</p></li><li style=\"padding-left: 113pt;text-indent: -18pt;text-align: justify;\" id=\"2072\"><p class=\"s52\" style=\"display: inline;\" id=\"2073\">Publish() method should be invoke to publish content or when you press Publish icon Umbraco execute publish() method</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2074\"><br id=\"2075\"></p></li></ul></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2076\"><p class=\"s50\" style=\"display: inline;\" id=\"2077\">Delete(): Delete method executed when you delete content.</p></li></ul><ul id=\"l44\"><li style=\"padding-left: 113pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2079\"><p class=\"s53\" style=\"display: inline;\" id=\"2080\"><span class=\"s50\" id=\"2081\">Example: </span>Document <span style=\" color: #000;\" id=\"2082\">dt = </span><span style=\" color: #00F;\" id=\"2083\">new </span>Document<span style=\" color: #000;\" id=\"2084\">(id);</span></p></li></ul><p class=\"s52\" style=\"padding-left: 185pt;text-indent: 0pt;text-align: left;\" id=\"2085\">dt.delete(); id is node id of content.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2086\">Delete() method will move content to Recycle Bin.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2087\"><br id=\"2088\"></p><p class=\"s50\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2089\">That is very basic of Umbraco API for Creating Content. For more details you can look inside umbraco.cms.businesslogic.web.document namespace. I strongly recommend looking source code and analyzing codes.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2090\"><br id=\"2091\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2092\"><a name=\"a36\" id=\"2093\">Chapter 05: Templates</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2094\"><br id=\"2095\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2096\"><br id=\"2097\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2098\"><span id=\"2099\"><img width=\"432\" height=\"1\" alt=\"image\" src=\"Image_055.png\" id=\"2100\"></span></p></div></div><h2 style=\"padding-top: 4pt; padding-left: 7pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2101\" class=\"heading2101\"><a name=\"bookmark35\" id=\"2102\" style=\"color: lime;\">Templates:</a></h2><div id=\"contentheading2101\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2103\">Purpose of templates is to present data to client or end users. Umbraco cms make totally separate visual presentation and content, to proof that concept you can preview any content we created before, we don‟t see any content on web it‟s just blank web page because we have not touch template means content is totally separated from visual presentation. Using templates we can present data or content to end users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2104\"><br id=\"2105\"></p><h4 style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2106\">Templates are user friendly: <span class=\"p\" id=\"2107\">The way you write code in template is same way as you write html code. You start with doc type deceleration, html, head, and body. No difference I will show you later. Only difference is to fetch data and insert into templates, fetching data can be done in different ways using alias, alias is created by Umbraco in Document Type creation period, use user control to fetch data, use xslt and xpath to fetch data using marco or use Razor Engine. I will focus in XSLT to fetch data from xml, use macro to render data to templates and present to end users.</span></h4><p style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2108\">CSS: the way we use css is not difference other than using in normal html page. It‟s very simple and you can copy your normal css text from text editor and paste to Umbraco CSS editing environment page. It will work as expected without any problem. Two ways are there to use CSS. One way is create css using Umbraco service or Create CSS file separate into normal text editor and place into “css” directory. You can also create your custom directory and use that, directory is not important; important is linking style sheet to templates. Linking style sheet is same as you use in normal html page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2109\"><span id=\"2110\"><img width=\"584\" height=\"298\" alt=\"image\" src=\"Image_056.png\" id=\"2111\"></span></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2112\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\"/&gt; that is use to link document is style.css file exist inside css directory.No worries Umbraco will also show you path you can copy path to href easily. Lets look captured screen.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2113\"><br id=\"2114\"></p><p class=\"s10\" style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2115\">Name: name of style sheet.</p><p class=\"s35\" style=\"padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2116\">Start writing your CSS code here</p><p class=\"s9\" style=\"padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2117\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"<span style=\" color: #538DD3;\" id=\"2118\">css/style.css</span>\"/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2119\"><br id=\"2120\"></p><p class=\"s10\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2121\">Note: I will not cover CSS explanation in howtoumbraco basic. Style.css will be available in CD.</p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2122\" class=\"heading2122\"><a name=\"bookmark36\" id=\"2123\" style=\"color: green;\">Template working Environment</a></h3><div id=\"contentheading2122\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"2124\"><br id=\"2125\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2126\"><span id=\"2127\"><img width=\"602\" height=\"326\" alt=\"image\" src=\"Image_057.png\" id=\"2128\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 124pt;text-indent: 0pt;text-align: left;\" id=\"2129\">1 2 3 4 5 6 7 8 9</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2130\"><br id=\"2131\"></p><ol id=\"l45\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"2133\"><p style=\"display: inline;\" id=\"2134\">Save button, whatever you made change on template, you need to press Save button to save your work.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2135\"><p style=\"display: inline;\" id=\"2136\">Insert Umbraco page field: use to insert page field. Using page field document type alias is used here to insert data into template. Umbraco will fetch and insert content on the fly. Alias that we had in document type are necessary in order to fetch content. By click on icon will list all page alias available to insert.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2137\"><span id=\"2138\"><img width=\"331\" height=\"271\" alt=\"image\" src=\"Image_058.jpg\" id=\"2139\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2140\">I am going to show one example: instruction: click on empty area at line 3 and Click on “Insert Umbraco Page field” number 2 icon. You can see new windows open with input options.</p><ul id=\"l46\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2142\"><p style=\"display: inline;\" id=\"2143\">Choose field: here you can get list of alias that you created at document type. If you want to follow me select “contentBody” from</p><p style=\"padding-left: 77pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2144\">dropdown list and press insert. It will insert filed. See captured screen bellow</p><p class=\"s29\" style=\"padding-left: 59pt;text-indent: 0pt;text-align: left;\" id=\"2145\">o  <span id=\"2146\"><img width=\"482\" height=\"73\" alt=\"image\" src=\"Image_059.jpg\" id=\"2147\"></span></p></li><li style=\"padding-top: 3pt;padding-left: 83pt;text-indent: -21pt;text-align: left;\" id=\"2148\"><p style=\"display: inline;\" id=\"2149\"><span class=\"s56\" id=\"2150\">&lt;</span><span style=\" color: #E26C09;\" id=\"2151\">umbraco:Item </span>field<span class=\"s56\" id=\"2152\">=</span>\"<span style=\" color: #76923B;\" id=\"2153\">contentBody</span>\" runat<span class=\"s56\" id=\"2154\">=</span>\"<span style=\" color: #76923B;\" id=\"2155\">server</span>\"<span class=\"s56\" id=\"2156\">&gt;&lt;/</span><span style=\" color: #E26C09;\" id=\"2157\">umbraco:Item</span><span class=\"s56\" id=\"2158\">&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2159\"><span id=\"2160\"><img width=\"597\" height=\"217\" alt=\"image\" src=\"Image_060.png\" id=\"2161\"></span></p></li><li style=\"padding-top: 2pt;padding-left: 80pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2162\"><p class=\"s58\" style=\"display: inline;\" id=\"2163\">&lt;Umbraco:Item runat=”server”&gt; &lt;/Umbraco:item&gt; will executed by Umbraco cms. In my case filed=”contentBody”, here Content that provided in Document type “General Content‟s property „Content Body‟ ” by editor on Content page will be inserted on the fly. So user will see content body data on web page. for more clear see diagram.</p></li></ul><h4 style=\"padding-left: 300pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2164\">Document Type: <span class=\"p\" id=\"2165\">General Content</span></h4><h4 style=\"padding-left: 300pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2166\">Tab: <span class=\"p\" id=\"2167\">Description </span>Property Name: <span class=\"p\" id=\"2168\">Content Body</span></h4><h4 style=\"padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2169\"><a name=\"a37\" id=\"2170\">Property Alias:</a></h4><p style=\"padding-top: 2pt;padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2171\">contentBody</p><h4 style=\"padding-top: 2pt;padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2172\">Type: <span class=\"p\" id=\"2173\">Richtext editor</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2174\"><br id=\"2175\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2176\"><span id=\"2177\"><img width=\"562\" height=\"111\" alt=\"image\" src=\"Image_061.png\" id=\"2178\"></span></p><h4 style=\"padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2179\">Content: <span class=\"p\" id=\"2180\">Home </span>Description: <span class=\"p\" id=\"2181\">welcome to semic provider.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2182\"><br id=\"2183\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2184\"><span id=\"2185\"><img width=\"475\" height=\"153\" alt=\"image\" src=\"Image_062.png\" id=\"2186\"></span></p><h4 style=\"padding-top: 10pt;padding-left: 192pt;text-indent: 0pt;text-align: center;\" id=\"2187\">Field: <span class=\"p\" id=\"2188\">contentBody</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2189\"><br id=\"2190\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2191\"><span id=\"2192\"><img width=\"561\" height=\"158\" alt=\"image\" src=\"Image_063.png\" id=\"2193\"></span></p><h4 style=\"padding-top: 10pt;padding-left: 19pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2194\">Preview of Content Home: <span class=\"p\" id=\"2195\">Now Umbraco fetching content to Web sites.</span></h4><p style=\"padding-left: 19pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2196\">1084.aspx where 1084 is node id of content Home.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2197\"><br id=\"2198\"></p><p class=\"s4\" style=\"padding-top: 4pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2199\">We created document type “General Content”, added new property “Content Body” with alias “contentBody” and type “Richtext editor”. In Content we add content on Richtext environment. In Template we use alias “contentBody” to fetch data that added on content using Richtext environment. It’s a core concept of Umbraco for templates.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2200\"><br id=\"2201\"></p></li><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2202\"><p style=\"display: inline;\" id=\"2203\">Insert Dictionary Field: Similar as Umbrcao page filed but it is used to insert Dictionary Items. Not covered in this “Howtoumbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2204\"><br id=\"2205\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2206\"><p style=\"display: inline;\" id=\"2207\">Insert Macro: it‟s a mostly used in templates and I will cover this Macro Chapter. Macro is very important chapter. Developer should not miss about Macro.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2208\"><br id=\"2209\"></p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2210\"><p style=\"display: inline;\" id=\"2211\">Insert Content Area Placeholder: We can easily create child templates in Umbraco, child has access to parents generic properties. Umbraco templates have great features “Inheritance Character” that child template can inject data to Parent template using “Insert Content Area Placeholder”, first you create Placeholder in parent template and in child template you insert content area. If you want follow me I want to use “Web Sites Global Settings” templates as Master templates or parent templates. Parent templates can have placeholder to inject data from child templates. Now let‟s insert Content area Placeholder at “Web Sites Global Settings” templates.</p><ul id=\"l47\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2213\"><p style=\"display: inline;\" id=\"2214\">Instruction:</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2215\"><p style=\"display: inline;\" id=\"2216\">Open “Web Site Global Setting” Template</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2217\"><p style=\"display: inline;\" id=\"2218\">First Click on any place at working environment where you would like to insert content Place holder. Crusher should blink now, Click on “Insert Content area Placeholder” it will open new windows now type placeholder name “ContentBody” and Press Insert. See captured screen highlighted code are just added.</p><p class=\"s29\" style=\"padding-left: 5pt;text-indent: 53pt;line-height: 118%;text-align: left;\" id=\"2219\">o <span id=\"2220\"><img width=\"416\" height=\"162\" alt=\"image\" src=\"Image_064.jpg\" id=\"2221\"></span><span class=\"s28\" id=\"2222\"> </span><span class=\"p\" id=\"2223\"> Inheritance Properties: </span><span class=\"s10\" id=\"2224\">Umbraco template support inheritance properties so we can easily share global setting in sites for example. Navigation bar, heading, logo and web layout are global setting that will remain same look and feel for different content. “Web Sites Global Settings” template contains such global settings. Now I want to inject content from child templates on that place holder “ContentBody” I just created above. To inject data from child template first I have to assign child template. Click on General Content Template, in Master template change from “none” to “Web Site Global Settings” and Save “General Content” template. You can see General Content Templates now moved from root level to child template of “Web site Global Settings” Template. See captured screen</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2225\"><br id=\"2226\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2227\"><span id=\"2228\"><img width=\"496\" height=\"147\" alt=\"image\" src=\"Image_065.jpg\" id=\"2229\"></span></p><p style=\"padding-top: 11pt;padding-left: 23pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2230\">-</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2231\"><p style=\"display: inline;\" id=\"2232\">Insert content Area: if parents‟ templates have content area placeholder, using insert content area we can insert content area placeholder at child templates. In my case general content is child of “Web Site Global Setting” template. Lets Insert Content area by clicking of “Insert Content Area” icon, select “ContentBody” placeholder and press insert. If you like to cancel, just press cancel. Umbraco content placeholder “ContentBody” inserted after Content place holder “ContentPlaceHolderDefault”. This content place holder is created default by Umbraco. Delete “ContentPlaceHolderDefault” from Template “General content” and Move Umbraco field “contentBody” inside content Placeholder “ContentBody”. Remember to save. If you follow me “General Content” Template code should be like bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2233\"><br id=\"2234\"></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2235\"><span class=\"s59\" style=\" background-color: #FF0;\" id=\"2236\">&lt;%</span><span class=\"s60\" id=\"2237\">@ </span><span class=\"s61\" id=\"2238\">Master </span><span class=\"s62\" id=\"2239\">Language</span><span class=\"s60\" id=\"2240\">=\"C#\" </span><span class=\"s62\" id=\"2241\">MasterPageFile</span><span class=\"s60\" id=\"2242\">=\"~/masterpages/WebSiteGlobalSettings.master\" </span><span class=\"s62\" id=\"2243\">AutoEventWireup</span><span class=\"s60\" id=\"2244\">=\"true\" </span><span class=\"s59\" style=\" background-color: #FF0;\" id=\"2245\">%&gt;</span></p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2246\">&lt;<span style=\" color: #800000;\" id=\"2247\">asp</span>:<span style=\" color: #800000;\" id=\"2248\">Content </span><span style=\" color: #F00;\" id=\"2249\">ID</span>=\"Content2\" <span style=\" color: #F00;\" id=\"2250\">ContentPlaceHolderId</span>=\"ContentBody\" <span style=\" color: #F00;\" id=\"2251\">runat</span>=\"server\"&gt;</p><p class=\"s63\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2252\">&lt;!-- Insert \"ContentBody\" markup here --&gt;</p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2253\">&lt;<span style=\" color: #800000;\" id=\"2254\">umbraco</span>:<span style=\" color: #800000;\" id=\"2255\">Item </span><span style=\" color: #F00;\" id=\"2256\">ID</span>=\"Item1\" <span style=\" color: #F00;\" id=\"2257\">field</span>=\"contentBody\" <span style=\" color: #F00;\" id=\"2258\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"2259\">umbraco</span>:<span style=\" color: #800000;\" id=\"2260\">Item</span>&gt;</p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2261\">&lt;/<span style=\" color: #800000;\" id=\"2262\">asp</span>:<span style=\" color: #800000;\" id=\"2263\">Content</span>&gt;</p><p style=\"padding-top: 10pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2264\">- Remember to preview your content after changed in your template<span style=\" color: #00F;\" id=\"2265\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2266\"><br id=\"2267\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2268\"><p style=\"display: inline;\" id=\"2269\">Insert Inline Razor Macro: Razor engine is used if you don‟t want to use Xslt to fetch data from xml file. Not covered in this “HowtoUmbraco Basic”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2270\"><br id=\"2271\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2272\"><p style=\"display: inline;\" id=\"2273\">Help: it will open documentation. Remember to read it if you need help.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2274\"><br id=\"2275\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2276\"><p style=\"display: inline;\" id=\"2277\">Working „Environment or area: Here you add all your template coding.</p></li></ol><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2278\">Template &lt;%@ Master Language= \"C#\" MasterPageFile= \"</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2279\">~/umbraco/masterpages/default.master\" AutoEventWireup=\"true\" %&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2280\"><br id=\"2281\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2282\">Description: all templates are inherited by default.master template, it‟s a Umbraco default master template.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2283\"><br id=\"2284\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2285\">Content Placeholder: all your html code should go inside Content place holder. If you want to follow me copy and paste code bellow in “Web Site Global Settings” Templates. Note: I am not going to explain code because here nothing new just added html tags. You can look yourself.</p></div><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2286\" class=\"heading2286\"><a name=\"bookmark37\" id=\"2287\" style=\"color: green;\">“Web Site Global Settings” Templates:</a></h3><div id=\"contentheading2286\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2288\">Note: if you are copying code from here, do not copy <span class=\"s56\" id=\"2289\">&lt;</span>%@ Master Language<span class=\"s56\" id=\"2290\">=</span>\"C#\" MasterPageFile<span class=\"s56\" id=\"2291\">=</span>\"~/umbraco/masterpages/default.master\" AutoEventWireup<span class=\"s56\" id=\"2292\">=</span>\"true\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2293\">%<span class=\"s56\" id=\"2294\">&gt;</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"2295\">line because Umbraco will insert that line automatically in that case Umbraco CMS throw out yellow screen of death with Error message “ <b id=\"2296\">Parser Error Message: </b>There can be only one 'master' directive.” To solve this problem make sure there is only one master page template exist on that template. If you want to follow me your “Web Site Global Settings” template code should looks like bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2297\"><br id=\"2298\"></p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2299\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"2300\">&lt;%</span><span class=\"s66\" id=\"2301\">@ </span><span class=\"s67\" id=\"2302\">Master </span><span class=\"s68\" id=\"2303\">Language</span><span class=\"s66\" id=\"2304\">=\"C#\" </span><span class=\"s68\" id=\"2305\">MasterPageFile</span><span class=\"s66\" id=\"2306\">=\"~/umbraco/masterpages/default.master\" </span><span class=\"s68\" id=\"2307\">AutoEventWireup</span><span class=\"s66\" id=\"2308\">=\"true\" </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"2309\">%&gt;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2310\"><span style=\" color: #800000;\" id=\"2311\">asp</span>:<span style=\" color: #800000;\" id=\"2312\">Content </span><span style=\" color: #F00;\" id=\"2313\">ContentPlaceHolderID</span>=\"ContentPlaceHolderDefault\" <span style=\" color: #F00;\" id=\"2314\">runat</span>=\"server\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2315\">&lt;<span style=\" color: #800000;\" id=\"2316\">html</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2317\">&lt;<span style=\" color: #800000;\" id=\"2318\">head</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2319\">&lt;<span style=\" color: #800000;\" id=\"2320\">link </span><span style=\" color: #F00;\" id=\"2321\">rel</span>=\"stylesheet\" <span style=\" color: #F00;\" id=\"2322\">type</span>=\"text/css\" <span style=\" color: #F00;\" id=\"2323\">href</span>=\"css/style.css\"/&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2324\">&lt;/<span style=\" color: #800000;\" id=\"2325\">head</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2326\">&lt;<span style=\" color: #800000;\" id=\"2327\">body</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2328\">&lt;<span style=\" color: #800000;\" id=\"2329\">div </span><span style=\" color: #F00;\" id=\"2330\">class</span>=\"head\"&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2331\">&lt;<span style=\" color: #800000;\" id=\"2332\">div </span><span style=\" color: #F00;\" id=\"2333\">class</span>=\"top\"&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2334\">&lt;<span style=\" color: #800000;\" id=\"2335\">div </span><span style=\" color: #F00;\" id=\"2336\">class</span>=\"title\"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2337\"><br id=\"2338\"></p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2339\">&lt;/<span style=\" color: #800000;\" id=\"2340\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"2341\">&lt;/<span style=\" color: #800000;\" id=\"2342\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"2343\">&lt;/<span style=\" color: #800000;\" id=\"2344\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2345\">&lt;<span style=\" color: #800000;\" id=\"2346\">div </span><span style=\" color: #F00;\" id=\"2347\">class</span>=\"navi\"&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2348\">&lt;<span style=\" color: #800000;\" id=\"2349\">div </span><span style=\" color: #F00;\" id=\"2350\">class</span>=\"navigation\"&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2351\">&lt;/<span style=\" color: #800000;\" id=\"2352\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2353\">&lt;/<span style=\" color: #800000;\" id=\"2354\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2355\">&lt;<span style=\" color: #800000;\" id=\"2356\">div </span><span style=\" color: #F00;\" id=\"2357\">class</span>=\"middle\"&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"2358\">&lt;<span style=\" color: #800000;\" id=\"2359\">div </span><span style=\" color: #F00;\" id=\"2360\">class</span>=\"content\" &gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2361\">&lt;<span style=\" color: #800000;\" id=\"2362\">asp</span>:<span style=\" color: #800000;\" id=\"2363\">ContentPlaceHolder </span><span style=\" color: #F00;\" id=\"2364\">Id</span>=\"ContentBody\" <span style=\" color: #F00;\" id=\"2365\">runat</span>=\"server\"&gt;</p><p class=\"s69\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2366\">&lt;!-- Insert default \"ContentBody\" markup here --&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2367\">&lt;/<span style=\" color: #800000;\" id=\"2368\">asp</span>:<span style=\" color: #800000;\" id=\"2369\">ContentPlaceHolder</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2370\">&lt;/<span style=\" color: #800000;\" id=\"2371\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2372\">&lt;/<span style=\" color: #800000;\" id=\"2373\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2374\">&lt;/<span style=\" color: #800000;\" id=\"2375\">body</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2376\">&lt;/<span style=\" color: #800000;\" id=\"2377\">html</span>&gt; &lt;/<span style=\" color: #800000;\" id=\"2378\">asp</span>:<span style=\" color: #800000;\" id=\"2379\">Content</span>&gt;</p></div><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2380\" class=\"heading2380\"><a name=\"bookmark38\" id=\"2381\" style=\"color: green;\">Template API:</a></h3><div id=\"contentheading2380\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2382\">Template API can be found using namespace <span class=\"s66\" id=\"2383\">using </span><span class=\"s70\" id=\"2384\">umbraco.cms.businesslogic.template;</span></p><ul id=\"l48\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"2386\"><p style=\"display: inline;\" id=\"2387\">Manual work Create Template:</p><ul id=\"l49\"><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2389\"><p style=\"display: inline;\" id=\"2390\">That manual work will execute <span style=\" color: #2B91AE;\" id=\"2391\">Template</span>.MakeNew(name, u);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2392\"><p style=\"display: inline;\" id=\"2393\">Name: name of Template</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"2394\"><p style=\"display: inline;\" id=\"2395\">U is user. Umbraco will automatically assign user when you logged in backend. If you want to create Template using API you should provide valid user, user should have access to create Template otherwise Umbraco will throughout exception.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: justify;\" id=\"2396\"><p style=\"display: inline;\" id=\"2397\">Manual work Delete</p><ul id=\"l50\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2399\"><p style=\"display: inline;\" id=\"2400\">It will execute Template.Delete() void methods.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2401\"><p style=\"display: inline;\" id=\"2402\">It‟s not possible to restore deleted templates.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: justify;\" id=\"2403\"><p style=\"display: inline;\" id=\"2404\">Setting master Template:</p><ul id=\"l51\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2406\"><p style=\"display: inline;\" id=\"2407\">Umbraco will execute Template. MasterTemplate = Template.Id;</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2408\"><p style=\"display: inline;\" id=\"2409\">Where Template.Id is node id of parent Template.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: justify;\" id=\"2410\"><p style=\"display: inline;\" id=\"2411\">Save:</p><ul id=\"l52\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"2413\"><p style=\"display: inline;\" id=\"2414\">Save button will execute Save() methods to save work. It will effect to Database see captured screen bellow as reference. I will not explain here but its not difficult to understand if you know basic knowledge of Sql server and Database.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2415\"><br id=\"2416\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2417\"><span id=\"2418\"><img width=\"616\" height=\"325\" alt=\"image\" src=\"Image_066.png\" id=\"2419\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2420\"><br id=\"2421\"></p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2422\">These results are from Database name „umbracodb‟ table „cmsTemplate‟. In your case database name can be deference as compared to mine.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2423\"><br id=\"2424\"></p><p class=\"s10\" style=\"padding-left: 23pt;text-indent: 0pt;text-align: justify;\" id=\"2425\">Notice:</p><p class=\"s10\" style=\"padding-top: 1pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2426\">I am not using anymore “insert page field” ways to fetch data in templates because if I fetch data using document type alias it will fetch data only if template are checked in Document type allowed templates. If templates are not associated with document type, Data will not be fetching using “Insert Page field” technique so that I am going to continue to fetch data using Xslt and use macro to render content to templates<span class=\"p\" id=\"2427\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2428\"><br id=\"2429\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2430\"><a name=\"a38\" id=\"2431\">Chapter 06: XSLT</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2432\"><br id=\"2433\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2434\"><br id=\"2435\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2436\"><span id=\"2437\"><img width=\"330\" height=\"1\" alt=\"image\" src=\"Image_067.png\" id=\"2438\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2439\"><br id=\"2440\"></p><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2441\" class=\"heading2441\"><a name=\"bookmark39\" id=\"2442\" style=\"color: lime;\">XSLT:</a></h2><div id=\"contentheading2441\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2443\">Xslt provides fast data fetching processing from xml file. All published content in your site are structured in xml format by Umbraco system. Xslt is the way to transfer xml data to html format, Xslt and Xpath are used together to provide rich service. Xpath is used to move pointer back and forth to crawl content in xml file or to move pointer from one node to another node. My assumption is you already familiar with Xslt and Xpath, I will directly going to show creating and using Xslt.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2444\"><br id=\"2445\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2446\"><a name=\"a39\" id=\"2447\">Using XSLT:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2448\"><br id=\"2449\"></p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2450\">Xslt transfer xml to html, using Xslt we are fetching data from xml and passing to template in Umbraco site. We need to create associated macro first, link that macro with Xslt and Use that macro in Template. Here macro works as bridge between Xslt and Template. Umbraco is user friendly so you don‟t have to worry about macro. Each time you check “Create Macro” when you create new Xslt, Umbraco will automatically generate Macro for you.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2451\"><br id=\"2452\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2453\"><span id=\"2454\"><img width=\"333\" height=\"495\" alt=\"image\" src=\"Image_068.png\" id=\"2455\"></span></p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2456\">Let‟s starts to work with Xslt Instruction:</p></div></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2457\"><p style=\"display: inline;\" id=\"2458\">Click “Developer” in Sections menu. “XSLT Files” menu is available inside Developer menu items. See captured screen: “Xslt.jpg”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2459\"><p style=\"display: inline;\" id=\"2460\">Right click on “XSLT Files” and Click “Create”. Umbraco open new windows: if you want to follow me provide these information</p><ul id=\"l53\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2462\"><p style=\"display: inline;\" id=\"2463\">Name: “GlobalSetting”</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2464\"><p style=\"display: inline;\" id=\"2465\">Choose a Template: Clean</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2466\"><p style=\"display: inline;\" id=\"2467\">Checked: Create Macro</p></li></ul></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2468\"><p style=\"display: inline;\" id=\"2469\">Press “Create” see captured screen bellow “XsltCreate.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2470\"><br id=\"2471\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2472\">“GlobalSetting.xslt” file must be created inside XSLT file menu at Developer section.</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2473\">Purpose of creating Globalsetting.xslt is to fetch Site name, site title and logo.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2474\"><br id=\"2475\"></p><p style=\"padding-left: 5pt;text-indent: 33pt;text-align: left;\" id=\"2476\">Xslt.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2477\"><br id=\"2478\"></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2479\">XsltCreate.jpg</p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2480\"><a name=\"bookmark40\" id=\"2481\">Xslt working environments:</a></h3><p style=\"text-indent: 0pt;text-align: left;\" id=\"2482\"><br id=\"2483\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2484\"><span id=\"2485\"><img width=\"616\" height=\"467\" alt=\"image\" src=\"Image_069.png\" id=\"2486\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"2487\">1 2 3 4 5 <span class=\"s72\" id=\"2488\">6 </span><span class=\"s73\" id=\"2489\">7</span></p><p class=\"s38\" style=\"padding-top: 9pt;padding-left: 78pt;text-indent: 0pt;text-align: center;\" id=\"2490\">8</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2491\"><br id=\"2492\"></p><p class=\"s38\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"2493\">9</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2494\"><br id=\"2495\"></p><p class=\"s38\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"2496\">A</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2497\"><br id=\"2498\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2499\"><br id=\"2500\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2501\">Image: xsltEnvironment.jpg</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2502\">Image: xsltEnvironment.jpg</p><p style=\"padding-left: 257pt;text-indent: 0pt;text-align: left;\" id=\"2503\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"2504\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2505\"><br id=\"2506\"></p><ol id=\"l54\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2508\"><p style=\"display: inline;\" id=\"2509\">Coding area: here you can type Xslt code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2510\"><br id=\"2511\"></p><ol id=\"l55\"><li style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2513\"><h4 style=\"display: inline;\" id=\"2514\">Save <span class=\"p\" id=\"2515\">Button To save work after changed</span></h4></li><li style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2516\"><h4 style=\"display: inline;\" id=\"2517\">Insert xslt:value of <span class=\"p\" id=\"2518\">: use to insert xslt value, you can also select prevalue. 3- </span>Insert xslt:variable : <span class=\"p\" id=\"2519\">use to insert xslt variable</span></h4></li></ol></li></ol><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2520\">4- <b id=\"2521\">Insert xslt:if </b>: use to insert condition statement if 5- <b id=\"2522\">Insert xslt:for-each : </b>use for looping purpose</p><ol id=\"l56\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2524\"><h4 style=\"display: inline;\" id=\"2525\">Insert xslt:choose : <span class=\"p\" id=\"2526\">use to insert choose condition statement</span></h4></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2527\"><h4 style=\"display: inline;\" id=\"2528\">Visualize Xslt: <span class=\"p\" id=\"2529\">it‟s a big feature in Umbraco. Using visualizes Xslt you can see what output will be made by your Xslt Code on templates. You can also choose different Content and see what will be output.</span></h4></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2530\"><h4 style=\"display: inline;\" id=\"2531\">Name <span class=\"p\" id=\"2532\">of xslt file</span></h4></li><li style=\"padding-top: 2pt;padding-left: 23pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2533\"><h4 style=\"display: inline;\" id=\"2534\">Skip testing: <span class=\"p\" id=\"2535\">if you checked on Skip Testing, Umbraco will not validate your Xslt code so you will not see any error message.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2536\"><br id=\"2537\"></p><h4 style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2538\"><a name=\"a40\" id=\"2539\">Coding Area:</a></h4></li></ol></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2540\"><p style=\"display: inline;\" id=\"2541\">It starts with xml deceleration and version, it is using xml version 1.0 and encoding utf-8. <span class=\"s19\" id=\"2542\">See at line 1 Image: xsltEnvironment.jpg</span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2543\"><p style=\"display: inline;\" id=\"2544\">You define replacement text yourself at Xslt using DTD<span class=\"s3\" id=\"2545\">14</span>. To use that features you have to have DTD schema knowledge. By default Umbraco inserted one entity.</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2546\">&lt;!DOCTYPE xsl:stylesheet [&lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2547\">here Enitity nbsp can be used anywhere in xslt. On execution time Umbraco replace nbsp with text „&amp;#x00A0;‟ that we defined at DOCTYPE Entity. <span class=\"s19\" id=\"2548\">See line 2 at Image xsltEnvironment.jpg</span></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2549\"><p style=\"display: inline;\" id=\"2550\">Stylesheet Declaration: You can extend Xslt further more using .NET Class libraries. In some cases Xslt may not enough to fetch data in such cases you can extend Xslt. You need to add your Xslt extension here in order to use it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2551\"><br id=\"2552\"></p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2553\"><a name=\"bookmark41\" id=\"2554\">.NET Class Registration</a></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2555\">Adding Assembly to Umbraco sites:</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2556\"><a name=\"a41\" id=\"2557\">Open ~/config/xsltExtensions.config file, here you add Assembly first.</a></p><p class=\"s76\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2558\">&lt;ext assembly=\"assemblyName\" type=\"assemblyName.namespace.type\" alias=\"custom\"&gt;</p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: justify;\" id=\"2559\">Assembly <b id=\"2560\">= location of your files</b></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2561\">Type <b id=\"2562\">= namespace name</b></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2563\"><a name=\"a42\" id=\"2564\">Alias </a><b id=\"2565\">= you use that alias at Xslt to refer assembly.</b></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2566\"><br id=\"2567\"></p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2568\">Add alias in xslt stylesheet.</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2569\"><a name=\"a43\" id=\"2570\">Xmlns:LocalName = alias from xsltExtesion registration LocalName is used inside Xslt templates</a></p><p class=\"s75\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2571\">Alias = alias that you define when you registered assembly name at</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2572\">~/config/xsltExtesion.config file</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2573\">Now you are ready to use .NET Class library in Xslt.</p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2574\">exclude-result-prefixes=\"Assembly Alias”</p><p class=\"s77\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2575\">Use exclude to prevent Xslt from outputting namespace name.</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2576\">Note: ~ means your Umbraco root installation directory level.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2577\"><p class=\"s64\" style=\"display: inline;\" id=\"2578\">&lt;<span style=\" color: #2B91AE;\" id=\"2579\">xsl:output </span><span style=\" color: #F00;\" id=\"2580\">method</span>=<span style=\" color: #000;\" id=\"2581\">\"</span>xml<span style=\" color: #000;\" id=\"2582\">\" </span><span style=\" color: #F00;\" id=\"2583\">omit-xml-declaration</span>=<span style=\" color: #000;\" id=\"2584\">\"</span>yes<span style=\" color: #000;\" id=\"2585\">\"</span>/&gt;</p><p class=\"s75\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2586\"><a name=\"a44\" id=\"2587\">It will omit xml deceleration output</a></p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2588\">Let‟s start to work with Umbraco Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2589\"><p class=\"s64\" style=\"display: inline;\" id=\"2590\">&lt;<span style=\" color: #2B91AE;\" id=\"2591\">xsl:param </span><span style=\" color: #F00;\" id=\"2592\">name</span>=<span style=\" color: #000;\" id=\"2593\">\"</span>currentPage<span style=\" color: #000;\" id=\"2594\">\"</span>/&gt;</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2595\"><p style=\"display: inline;\" id=\"2596\">It‟s a very use full param in Umbraco. Umbraco will insert current page data. Current page means page that Templates, Content and Document Type using specific Xslt file in other words currentPage means current page. Value of currentPage depends on article or Content you are visiting now. Let‟s try to output currentPage value and see what will be output.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2597\"><p class=\"s78\" style=\"display: inline;\" id=\"2598\">Template Match</p><p class=\"s78\" style=\"padding-left: 113pt;text-indent: 0pt;line-height: 12pt;text-align: center;\" id=\"2599\">&lt;<span style=\" color: #2B91AE;\" id=\"2600\">xsl:template </span><span style=\" color: #F00;\" id=\"2601\">match</span>=<span style=\" color: #000;\" id=\"2602\">\"</span>/<span style=\" color: #000;\" id=\"2603\">\"</span>&gt;</p><p class=\"s78\" style=\"padding-left: 150pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2604\">&lt;<span style=\" color: #2B91AE;\" id=\"2605\">xsl:copy-of </span><span style=\" color: #F00;\" id=\"2606\">select</span>=<span style=\" color: #000;\" id=\"2607\">\"</span>$currentPage<span style=\" color: #000;\" id=\"2608\">\" </span>/&gt;</p><p class=\"s78\" style=\"padding-left: 114pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2609\">&lt;/<span style=\" color: #2B91AE;\" id=\"2610\">xsl:template</span>&gt;</p><p class=\"s82\" style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"2611\">o <span class=\"s78\" id=\"2612\">All your logic or html output you code between opening and closing tags of &lt;xsl:template&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2613\"><br id=\"2614\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2615\"><span id=\"2616\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_070.png\" id=\"2617\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2618\">14 <span class=\"s10\" id=\"2619\">Document Type Definition</span></p></li><li style=\"padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2620\"><p class=\"s78\" style=\"display: inline;\" id=\"2621\">Here we use xsl:copy-of select=‛$currentPage‛ to output current page data.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2622\"><br id=\"2623\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2624\"><p class=\"s78\" style=\"display: inline;\" id=\"2625\">To see outp<span class=\"p\" id=\"2626\">ut value use “visualize Xslt” button at top-right corner of Edit xsl working environment. Make sure you choose first Content using “Choose…” menu. Select Content after press “Visualize XSLT” button. You should see some data if content has some data. See captured screen bellow.</span></p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2627\"><br id=\"2628\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2629\"><span id=\"2630\"><img width=\"544\" height=\"332\" alt=\"image\" src=\"Image_071.png\" id=\"2631\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"2632\">A B C</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 13pt;text-align: right;\" id=\"2633\">G</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2634\"><br id=\"2635\"></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2636\">D</p><p class=\"s38\" style=\"padding-top: 9pt;text-indent: 0pt;text-align: right;\" id=\"2637\">E</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2638\"><br id=\"2639\"></p><p class=\"s38\" style=\"padding-top: 12pt;padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"2640\">F</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2641\"><br id=\"2642\"></p><ol id=\"l57\"><ol id=\"l58\"><li style=\"padding-top: 4pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"2645\"><p style=\"display: inline;\" id=\"2646\">Title of Content: first time it must be empty.</p></li><li style=\"padding-top: 2pt;padding-left: 60pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2647\"><p style=\"display: inline;\" id=\"2648\">Delete: To delete selected Content. It will not delete content from Content Section, it will only delete from Visualize Xslt service.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2649\"><p style=\"display: inline;\" id=\"2650\">Choose..: you can easily change or alter Content to visualize XSLT and see different output based on XSLT code.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2651\"><p style=\"display: inline;\" id=\"2652\">Visualize Xslt Button: Press to visualize XSLT</p></li><li style=\"padding-top: 2pt;padding-left: 60pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2653\"><p style=\"display: inline;\" id=\"2654\">Encode: Checked if you want to see xml formatted data, uncheck to see only content.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2655\"><p style=\"display: inline;\" id=\"2656\">Output of XSLT: it‟s a result; it‟s an output of your Xslt code, its output currentPage value. Same value will insert into templates.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2657\"><p style=\"display: inline;\" id=\"2658\">Press “x” to close Visualize XSLT service.</p></li></ol></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"2659\"><br id=\"2660\"></p><p class=\"s83 heading2661\" style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2661\"><a name=\"bookmark42\" id=\"2662\" style=\"color: blue;\">Xml File umbraco.config</a></p><div id=\"contentheading2661\" style=\"border: 5px solid rgb(0, 0, 255);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2663\">I mentioned Xslt use to fetch data from xml file. You must wonder about what xml file? Where is that xml file? Why it‟s in xml file? And more questions.</p><ul id=\"l59\"><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2665\"><p style=\"display: inline;\" id=\"2666\">Umbraco generates Umbraco.config temporary file it‟s structured in xml format, every time when you made change on content or document type. Umbraco remind you to publish content. It means, when you made change on content Umbraco made change only on Database. Umbraco does not fetch data from database to present data to end users unless you extend it using other programming language. One reason is it is slow process to fetch data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2667\"><br id=\"2668\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2669\">from database as compared to fetching data from xml file. Database may store in separate machine or separate location in server that need to travel data that cause slower process. Umbraco use great idea generating temporary xml files, that xml files cached in memory. Using temporary xml file it‟s dramatically faster to fetch data using Xslt. To see temporary xml generated file you need to locate directory “App_Data” in website root level and find umbraco.config file. “~/App_data/umbraco.config”</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2670\"><p style=\"display: inline;\" id=\"2671\">Open umbraco.config file using Note pad or other software, if you open with Visual studio it will easy to navigate. See captured screen. Your version can be difference.</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2672\"><br id=\"2673\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2674\"><br id=\"2675\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2676\"><span id=\"2677\"><img width=\"616\" height=\"512\" alt=\"image\" src=\"Image_072.png\" id=\"2678\"></span></p><p style=\"padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"2679\">Image: Umbracoconfig.jpg</p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2680\"><a name=\"bookmark43\" id=\"2681\">Relationship between Document Type and Umbraco.config Xml</a></h3><p class=\"s19\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2682\">See Image: Umbracoconfig.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2683\"><br id=\"2684\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2685\">Line 1: <span class=\"p\" id=\"2686\">xml declaration</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2687\"><br id=\"2688\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2689\">Line 2 to line 10: <span class=\"p\" id=\"2690\">DTD schema information</span></h4><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"2691\">Line 13: <span class=\"p\" id=\"2692\">Umbraco Root Element. All Elements go inside root node. Root is parent element for all.</span></h4><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2693\">Line 14: <span class=\"p\" id=\"2694\">Umbraco starts generating xml elements and attributes based on our document type and content. Did you notice Alias that used in Document type is Elements here?</span></h4><ul id=\"l60\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2696\"><p style=\"display: inline;\" id=\"2697\">GeneralContent is alias of Document Type “General Content”. All attributes inside “GeneralContent” element are inserted by Umbraco automatically.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2698\"><p style=\"display: inline;\" id=\"2699\">Now let‟s look child element of “GeneralContent” Element. Two more element “contentTitle” and “contentBody” also created. If you notice that we added two new property “contentTitle” and “contentBody” in Document Type “General Content”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"2700\"><p style=\"display: inline;\" id=\"2701\">Here in umbraco.config xml these new property structured as child of Document Type element tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2702\"><p style=\"display: inline;\" id=\"2703\">Probably you need time to understand, you have to go back to Document Type, see carefully all alias. Come back to umbraco.config xml file and analyze yourself that helps you to understand better.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2704\"><br id=\"2705\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2706\">Line 14: attributes: Umbraco generates few attributes automatically. Most attributes are self explanatory so easier to understand. I feel some attributes need to describe here for Umbraco New developers.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2707\"><p class=\"s32\" style=\"display: inline;\" id=\"2708\">id <span class=\"s10\" id=\"2709\">: it‟s a node id of content each content has different node id</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2710\"><br id=\"2711\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2712\"><p class=\"s32\" style=\"display: inline;\" id=\"2713\">parentID<span class=\"s10\" id=\"2714\">: node id of parent element. If you notice in Content API chapter we pass parent id -1 value. Means create content at root level in content but actually it means create content as child of root element. Umbraco assign root element id = -1 see line 13 Image: “Umbracoconfig.jpg;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2715\"><br id=\"2716\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2717\"><p class=\"s32\" style=\"display: inline;\" id=\"2718\">level<span class=\"s10\" id=\"2719\">: level of content. 1 means at root level if you create child content it will be level 2</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2720\"><br id=\"2721\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2722\"><p class=\"s32\" style=\"display: inline;\" id=\"2723\">nodeName<span class=\"s10\" id=\"2724\">: It‟s not a contentTitle that you provide on document type content title property. it‟s a title of Content that appear at Content Tree Section.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2725\"><br id=\"2726\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2727\"><p class=\"s32\" style=\"display: inline;\" id=\"2728\">urlName<span class=\"s10\" id=\"2729\">: name of url, content access using urlName. Example /home.aspx will load contain id 1084. See line 14 Image: “Umbracoconfig.jpg;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2730\"><br id=\"2731\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2732\"><p class=\"s32\" style=\"display: inline;\" id=\"2733\">nodeType<span class=\"s10\" id=\"2734\">: node id of Document Type</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2735\"><p class=\"s32\" style=\"display: inline;\" id=\"2736\">How do you know Document Type Node id?</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2737\"><br id=\"2738\"></p><p class=\"s10\" style=\"padding-left: 59pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2739\">It‟s a tricky. Just mouse over Document Type at left bottom of browser , browser show JavaScript link like this “javascript:openNodeType(1054);” number between () is node id of Document Type.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2740\"><p class=\"s10\" style=\"display: inline;\" id=\"2741\"><b id=\"2742\">creatorID</b>: id of users who created content. 0 means administrator and always exist in Umbraco user, it has root level of access<span class=\"s20\" id=\"2743\">15</span>.</p></li></ul></div></div><h3 style=\"padding-top: 10pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2744\" class=\"heading2744\"><a name=\"bookmark44\" id=\"2745\" style=\"color: green;\">Fetching data:</a></h3><div id=\"contentheading2744\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"2746\">Let‟s take real example for Semic provider site and be clear about use of Xslt. Semic provider has logo, title and slogan as global items. For global items<span class=\"s3\" id=\"2747\">16</span>, we need to fetch value from siteName, slogan and logo element <span class=\"s19\" id=\"2748\">see line at 26, 27 and 28 respectively at Image:Umbracoconfig.jpg”</span>. Open GlobalSetting.xslt file and add highlighted code into GlobalSetting.xslt. See captured screen and Save Xslt.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2749\"><br id=\"2750\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2751\"><span id=\"2752\"><img width=\"616\" height=\"342\" alt=\"image\" src=\"Image_073.jpg\" id=\"2753\"></span></p><p style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2754\">All html tags are not important, only important is highlighted line. Description:</p><ul id=\"l61\"><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2756\"><p class=\"s78\" style=\"display: inline;\" id=\"2757\">&lt;<span style=\" color: #800000;\" id=\"2758\">xsl</span>:<span style=\" color: #800000;\" id=\"2759\">variable </span><span style=\" color: #F00;\" id=\"2760\">name</span>=\"items\" <span style=\" color: #F00;\" id=\"2761\">select</span>=\"$currentPage/ancestor-or-self::*</p><p class=\"s78\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2762\">/WebSiteGlobalSettings \"/&gt;</p><ul id=\"l62\"><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: justify;\" id=\"2764\"><p class=\"s81\" style=\"display: inline;\" id=\"2765\">Here $ represent variable in XSLT. variable name items will hold data from ‚WebSitesGlobalSettings‛ Element see line at 25 Image: <span class=\"s10\" id=\"2766\">“Umbracoconfig.jpg” page no: xx</span></p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2767\"><p class=\"s81\" style=\"display: inline;\" id=\"2768\">currentPage will select current page.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2769\"><p class=\"s81\" style=\"display: inline;\" id=\"2770\">ancestor-or-self:: move pointer back until root level.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2771\"><p class=\"s81\" style=\"display: inline;\" id=\"2772\">* select all that match</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2773\"><p class=\"s81\" style=\"display: inline;\" id=\"2774\">/ move one step further to child element.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2775\"><p class=\"s81\" style=\"display: inline;\" id=\"2776\">WebsitesGlobalSettings is element name.</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2777\"><p class=\"s78\" style=\"display: inline;\" id=\"2778\">&lt;<span style=\" color: #800000;\" id=\"2779\">xsl</span>:<span style=\" color: #800000;\" id=\"2780\">variable </span><span style=\" color: #F00;\" id=\"2781\">name</span>=\"logo\" <span style=\" color: #F00;\" id=\"2782\">select</span>=\"$items/logo\"/&gt;</p><ul id=\"l63\"><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2784\"><p class=\"s81\" style=\"display: inline;\" id=\"2785\">$items/logo will select logo element and hold data</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2786\"><p class=\"s78\" style=\"display: inline;\" id=\"2787\">&lt;<span style=\" color: #800000;\" id=\"2788\">xsl</span>:<span style=\" color: #800000;\" id=\"2789\">value-of </span><span style=\" color: #F00;\" id=\"2790\">select</span>=\"$items/slogan\"/&gt;</p><ul id=\"l64\"><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2792\"><p class=\"s81\" style=\"display: inline;\" id=\"2793\">$items/slogan: select value from slogan element</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2794\"><p class=\"s78\" style=\"display: inline;\" id=\"2795\">&lt;<span style=\" color: #800000;\" id=\"2796\">img </span><span style=\" color: #F00;\" id=\"2797\">src</span>=\"{$logo}\" <span style=\" color: #F00;\" id=\"2798\">alt</span>=\"semic provider logo; visual identity\"/&gt;</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: justify;\" id=\"2799\"><p class=\"s78\" style=\"display: inline;\" id=\"2800\">Insert value of logo variable. Using $ and followed by name means use of variable, encapsulated data with {}. {} means code inside {} will executed on server by Umbraco CMS.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2801\"><br id=\"2802\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2803\"><span id=\"2804\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_074.png\" id=\"2805\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2806\">15 <span class=\"s10\" id=\"2807\">Root level of access: access that can CRUD ; C-create, R-read, U-update, D-delete</span></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2808\">16 <span class=\"s10\" id=\"2809\">Items those are common for all. For example logo, website name.</span></p><p class=\"s78\" style=\"padding-top: 3pt;padding-left: 31pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2810\"><span class=\"s10\" id=\"2811\">- </span>&lt;<span style=\" color: #800000;\" id=\"2812\">xsl</span>:<span style=\" color: #800000;\" id=\"2813\">value-of </span><span style=\" color: #F00;\" id=\"2814\">select</span>=\"$items/siteName\"/&gt;</p><p class=\"s85\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2815\">o <span class=\"s81\" id=\"2816\">This line will select value of siteName element and output.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2817\"><br id=\"2818\"></p><p class=\"s41\" style=\"padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2819\"><a name=\"bookmark45\" id=\"2820\">Note: alt tag in img element is not compulsory but I strongly recommend having alt tag. It will help for web accessibility and SEO.</a></p><p class=\"s86\" style=\"padding-top: 9pt;padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2821\"><a name=\"a45\" id=\"2822\">Xslt for Navigation:</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2823\"><br id=\"2824\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2825\"><span id=\"2826\"><img width=\"581\" height=\"261\" alt=\"image\" src=\"Image_075.png\" id=\"2827\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2828\"><br id=\"2829\"></p><p style=\"padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2830\">This is another Xslt for Navigation bar. Create new Xslt. Provide name navigation and Checked Create Macro. Copy highlighted text. Note that html is not that much important these are for CSS and layout purpose.</p><p style=\"padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2831\">Description:</p><ul id=\"l65\"><li style=\"padding-top: 1pt;padding-left: 49pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2833\"><p style=\"display: inline;\" id=\"2834\">[string(useInNavigation) = '1'] condition match means select all GeneralContent Element from ~/App_Data/umbraco.config file where useInNavigation checked boxed should be checked. Remember that we added new property at “General Content” Document Type. If editor wants to use general content in navigation bar. Editor should Checked mark on “useInNavigation” when s/he creates content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2835\"><br id=\"2836\"></p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"2837\"><p style=\"display: inline;\" id=\"2838\">Nice Url: umbraco.library:NiceUrl(@id)</p><ul id=\"l66\"><li style=\"padding-top: 11pt;padding-left: 85pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"2840\"><p style=\"display: inline;\" id=\"2841\">NiceUrl(@node id) will generate user friendly nice Url. Remember that urlName are used example: home.aspx</p></li><li style=\"padding-top: 11pt;padding-left: 85pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2842\"><p style=\"display: inline;\" id=\"2843\">@id: it‟s an attribute of selected element at ~/App_Data/umbraco.config xml file. In my case it‟s a node id of content based on “General Content” document type. @ sysmbole represent get value from attributes. See Xslt, Xpath and xml for details.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2844\"><br id=\"2845\"></p><ul id=\"l67\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2847\"><p class=\"s56\" style=\"display: inline;\" id=\"2848\">&lt;<span class=\"p\" id=\"2849\">xsl:value-of select</span>=<span class=\"p\" id=\"2850\">\"contentTitle\"</span>/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2851\"><br id=\"2852\"></p><ul id=\"l68\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2854\"><p class=\"s56\" style=\"display: inline;\" id=\"2855\">Select value from contentTitle element</p></li></ul></li><li style=\"padding-top: 9pt;padding-left: 44pt;text-indent: -21pt;text-align: left;\" id=\"2856\"><p class=\"s56\" style=\"display: inline;\" id=\"2857\">&lt;<span class=\"p\" id=\"2858\">xsl:for-each select</span>=<span class=\"p\" id=\"2859\">\"$items\"</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2860\"><br id=\"2861\"></p><ul id=\"l69\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2863\"><p class=\"s56\" style=\"display: inline;\" id=\"2864\">Used to loop all existing content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2865\"><br id=\"2866\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2867\"><p class=\"s56\" style=\"display: inline;\" id=\"2868\">&lt;<span class=\"p\" id=\"2869\">xsl:if test</span>=<span class=\"p\" id=\"2870\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2871\"><br id=\"2872\"></p><ul id=\"l70\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 106%;text-align: left;\" id=\"2874\"><p class=\"s56\" style=\"display: inline;\" id=\"2875\">Here &amp;gt; means greater than. Test: means execute block of code only if result is more than zero. If items are less than zero no need to loop items.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2876\"><br id=\"2877\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2878\"><a name=\"a46\" id=\"2879\">Note: there is missing code in captured screen means missing code are generated by Umbraco Default and removed from here to reduce space.</a></h4><p class=\"s86\" style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2880\"><a name=\"bookmark46\" id=\"2881\">New Xslt file for News List items.</a></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"2882\">It will be exercise for you I create NewsList.xslt file, here I just include captured screen without description try to describe yourself. It‟s not big but need to knowledge of Xpath. Main purpose of this Xslt is to fetch content from 2<span class=\"s3\" id=\"2883\">nd </span>level menu contain. It will fetch News articles from ~/App_data/umbraco.config xml file. Captured screen are bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2884\"><br id=\"2885\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2886\"><span id=\"2887\"><img width=\"475\" height=\"383\" alt=\"image\" src=\"Image_076.jpg\" id=\"2888\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2889\"><br id=\"2890\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2891\"><a name=\"a47\" id=\"2892\">Chapter 07: Macro</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2893\"><br id=\"2894\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2895\"><br id=\"2896\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2897\"><span id=\"2898\"><img width=\"350\" height=\"1\" alt=\"image\" src=\"Image_077.png\" id=\"2899\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2900\"><br id=\"2901\"></p><h2 style=\"padding-top: 13pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2902\" class=\"heading2902\"><a name=\"bookmark47\" id=\"2903\" style=\"color: lime;\">Macro:</a></h2><div id=\"contentheading2902\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2904\">Marco is use as bridge between xslt, user control or other languages and templates, using macro we can render content or data from data source to templates and templates are responsible to present data to end users. Macro is very important part in Umbraco.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2905\"><span id=\"2906\"><img width=\"616\" height=\"437\" alt=\"image\" src=\"Image_078.png\" id=\"2907\"></span></p><h3 style=\"padding-top: 10pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" style=\"color: green;\">Macro working Environments:</a></h3><div id=\"contentheading2908\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s45\" style=\"padding-top: 8pt;padding-left: 119pt;text-indent: 0pt;text-align: left;\" id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2912\"><br id=\"2913\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2914\">C</p><p style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2915\">D</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2916\"><br id=\"2917\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2918\">E</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2919\"><br id=\"2920\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2921\">F</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2922\"><br id=\"2923\"></p><p style=\"padding-top: 10pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2924\">G</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2925\"><br id=\"2926\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2927\">H</p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: center;\" id=\"2928\">I</p><p style=\"padding-top: 4pt;padding-left: 314pt;text-indent: 0pt;text-align: left;\" id=\"2929\">J</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2930\"><br id=\"2931\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"2932\">K</p><p style=\"padding-top: 6pt;padding-left: 144pt;text-indent: 0pt;text-align: center;\" id=\"2933\">L</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2934\"><br id=\"2935\"></p><p style=\"padding-top: 4pt;padding-left: 145pt;text-indent: 0pt;text-align: center;\" id=\"2936\">M</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2937\"><br id=\"2938\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2939\"><br id=\"2940\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2943\"><p style=\"display: inline;\" id=\"2944\">Save button to save your work or settings</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2945\"><p style=\"display: inline;\" id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p style=\"padding-top: 3pt;padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2949\"><p style=\"display: inline;\" id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2951\"><p style=\"display: inline;\" id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2953\"><p style=\"display: inline;\" id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2955\"><p style=\"display: inline;\" id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2959\"><p style=\"display: inline;\" id=\"2960\">Show preview fetch data on Content Editor.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2961\"><p style=\"display: inline;\" id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2963\"><p style=\"display: inline;\" id=\"2964\">Cached per page: cached page based on requested page</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2965\"><p style=\"display: inline;\" id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2967\"><br id=\"2968\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2971\"><br id=\"2972\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2984\"><p class=\"s8\" style=\"display: inline;\" id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"2987\"><p class=\"s8\" style=\"display: inline;\" id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2989\"><p class=\"s8\" style=\"display: inline;\" id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2991\"><br id=\"2992\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" style=\"color: green;\">Using Macro into templates:</a></h3><div id=\"contentheading2994\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2996\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3000\"><p style=\"display: inline;\" id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3002\"><p style=\"display: inline;\" id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3004\"><p style=\"display: inline;\" id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3007\"><p style=\"display: inline;\" id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"3009\"><p style=\"display: inline;\" id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 262pt;text-align: left;\" id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li style=\"padding-top: 15pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3015\"><p class=\"s8\" style=\"display: inline;\" id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3018\"><br id=\"3019\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3020\"><p class=\"s8\" style=\"display: inline;\" id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3023\"><br id=\"3024\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3025\"><p class=\"s8\" style=\"display: inline;\" id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3028\"><br id=\"3029\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3030\"><p class=\"s8\" style=\"display: inline;\" id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3033\"><br id=\"3034\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3 style=\"padding-top: 9pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" style=\"color: green;\">Instruction to Insert Macro in Content Area:</a></h3></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3038\"><p style=\"display: inline;\" id=\"3039\">Open content “News”</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3040\"><p style=\"display: inline;\" id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3042\"><p style=\"display: inline;\" id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3045\"><p style=\"display: inline;\" id=\"3046\">Select Marco and Press Insert.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3047\"><br id=\"3048\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li style=\"padding-top: 4pt;padding-left: 76pt;text-indent: -18pt;text-align: left;\" id=\"3057\"><p style=\"display: inline;\" id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li style=\"padding-bottom: 2pt;padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3059\"><p style=\"display: inline;\" id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3065\"><br id=\"3066\"></p></li><li style=\"padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3067\"><p style=\"display: inline;\" id=\"3068\">All red dotted area denotes Macro areas.</p></li><li style=\"padding-top: 2pt;padding-left: 40pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"3069\"><p style=\"display: inline;\" id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3071\"><p style=\"display: inline;\" id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3073\"><br id=\"3074\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3075\"><br id=\"3076\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" style=\"color: green;\">Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"3079\"><br id=\"3080\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3081\"><p class=\"s42\" style=\"display: inline;\" id=\"3082\">Macro <span style=\" color: #000;\" id=\"3083\">macro = </span>Macro<span style=\" color: #000;\" id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3086\"><p class=\"s40\" style=\"display: inline;\" id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3088\"><p class=\"s40\" style=\"display: inline;\" id=\"3089\">macro.UseInEditor = <span style=\" color: #00F;\" id=\"3090\">true</span>;</p><ul id=\"l77\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3092\"><p class=\"s40\" style=\"display: inline;\" id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3094\"><p class=\"s40\" style=\"display: inline;\" id=\"3095\">macro.RenderContent = <span style=\" color: #00F;\" id=\"3096\">true</span>;</p><ul id=\"l78\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3098\"><p class=\"s40\" style=\"display: inline;\" id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3100\"><p class=\"s40\" style=\"display: inline;\" id=\"3101\">macro.Xslt = <span style=\" color: #A21515;\" id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3103\"><p class=\"s40\" style=\"display: inline;\" id=\"3104\">provide location of xslt file to use.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3105\"><p class=\"s40\" style=\"display: inline;\" id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3107\"><p class=\"s40\" style=\"display: inline;\" id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3110\"><br id=\"3111\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3112\">Chapter 08:</h1><h1 style=\"padding-top: 14pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3113\">Extending Umbraco CMS</h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"3114\"><br id=\"3115\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3116\"><br id=\"3117\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p style=\"padding-top: 9pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3125\">User control</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3126\">.NET Class Library Razor Engine XSLT</p><p style=\"padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3127\">Python</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3129\">Python is also not covered in this book.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3130\"><br id=\"3131\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" style=\"color: green;\">User Control:</a></h3><div id=\"contentheading3132\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3138\"><p style=\"display: inline;\" id=\"3139\">Add New User Control</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3140\"><p style=\"display: inline;\" id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3145\"><p style=\"display: inline;\" id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"3147\"><br id=\"3148\"></p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3149\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3150\"><br id=\"3151\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3152\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3153\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3154\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3155\">Save to Database</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3156\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3157\"><br id=\"3158\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3159\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3160\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3161\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3162\">Save to Database</p><p class=\"s10\" style=\"padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"3163\">\t\t</p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" style=\"color: green;\">Before start coding:</a></h3><div id=\"contentheading3164\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 108%;text-align: left;\" id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: justify;\" id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3182\"><br id=\"3183\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: justify;\" id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3202\"><br id=\"3203\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3207\">JavaScript.jpg </p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3208\">JavaScript.jpg </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3209\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3212\"><br id=\"3213\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3216\"><br id=\"3217\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"3225\"><p style=\"display: inline;\" id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"3227\"><p style=\"display: inline;\" id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3229\"><p style=\"display: inline;\" id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3231\"><p style=\"display: inline;\" id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3233\"><p style=\"display: inline;\" id=\"3234\">“Regex” means Regular Expression.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3235\"><br id=\"3236\"></p><h4 style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3239\"><br id=\"3240\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3246\"><br id=\"3247\"></p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3251\"><br id=\"3252\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3257\"><br id=\"3258\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3268\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3269\">Name: Email:</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3270\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3271\">Name: Email:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3272\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3273\">Generate Vcard</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3274\">Generate Vcard</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3275\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3276\">Press Submit</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3277\">Press Submit</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3278\"></p><p style=\"padding-top: 4pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3279\">Validate submitted Data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3280\"><br id=\"3281\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3282\"><br id=\"3283\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3284\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3285\">Sent By Email</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3286\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3287\">Sent By Email</p><p class=\"s10\" style=\"padding-left: 152pt;text-indent: 0pt;text-align: left;\" id=\"3288\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"3289\"> </span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3290\"><br id=\"3291\"></p><p style=\"padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3293\"><br id=\"3294\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3297\"><p style=\"display: inline;\" id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3300\"><p style=\"display: inline;\" id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3302\"><p style=\"display: inline;\" id=\"3303\">Create Upload button for Image or Photo</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3304\"><p style=\"display: inline;\" id=\"3305\">Create Button</p><ul id=\"l82\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3307\"><p style=\"display: inline;\" id=\"3308\">To submit data</p><h4 style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3311\"><p style=\"display: inline;\" id=\"3312\">Create Class</p><ul id=\"l83\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3314\"><p style=\"display: inline;\" id=\"3315\">To save data to Database</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3316\"><p style=\"display: inline;\" id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 54pt;text-align: left;\" id=\"3319\"><p style=\"display: inline;\" id=\"3320\">Validate input methods</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3321\"><p style=\"display: inline;\" id=\"3322\">Go Generate Vcard</p></li><li style=\"padding-left: 6pt;text-indent: 54pt;line-height: 107%;text-align: left;\" id=\"3323\"><p style=\"display: inline;\" id=\"3324\">Send Email Store Data to Database</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3325\"><br id=\"3326\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" style=\"color: green;\">Let’s Begin to code:</a></h3><div id=\"contentheading3332\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3335\"><p style=\"display: inline;\" id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3337\"><p style=\"display: inline;\" id=\"3338\">File -&gt; New --&gt; Project</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3339\"><p style=\"display: inline;\" id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3342\"><p style=\"display: inline;\" id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3344\"><p style=\"display: inline;\" id=\"3345\">Name: Vcard Generator</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3346\"><p style=\"display: inline;\" id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3348\"><p style=\"display: inline;\" id=\"3349\">Solution name: leave default, if you want you can change</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3350\"><p style=\"display: inline;\" id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"3353\"><p style=\"display: inline;\" id=\"3354\">It will Create new directory</p></li></ul></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3355\"><p style=\"display: inline;\" id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"3357\"><br id=\"3358\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3368\">It will open new windows</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3374\"><br id=\"3375\"></p><p style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;line-height: 158%;text-align: left;\" id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p style=\"padding-top: 8pt;text-indent: 0pt;text-align: right;\" id=\"3381\">Vcardcontrol.jp</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3382\"><br id=\"3383\"></p><p class=\"s27\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3384\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3385\"><br id=\"3386\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3387\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3388\"><br id=\"3389\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3390\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3391\"><br id=\"3392\"></p></div></div></div></div></div></li><li style=\"padding-left: 24pt;text-indent: -18pt;text-align: left;\" id=\"3393\"><p style=\"display: inline;\" id=\"3394\">It must create three files end with “.ascx”, “ascx.cs” and “ascx.designer.cs”.</p></li><li style=\"padding-top: 11pt;padding-left: 24pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"3395\"><p style=\"display: inline;\" id=\"3396\">Open VcardGenerator.ascx and Create Textbox, Button, Required Field validate and Custom Validate. See captured screen bellow</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"3397\"><br id=\"3398\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3399\"><span id=\"3400\"><img width=\"553\" height=\"493\" alt=\"image\" src=\"Image_095.png\" id=\"3401\"></span></p><p style=\"padding-top: 4pt;padding-left: 304pt;text-indent: 0pt;text-align: left;\" id=\"3402\">Add: Validation</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3403\"><br id=\"3404\"></p><p style=\"padding-top: 4pt;padding-left: 302pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3405\">Add: RequiredFieldValidator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3406\"><br id=\"3407\"></p><p style=\"padding-top: 4pt;padding-left: 295pt;text-indent: 0pt;text-align: left;\" id=\"3408\">Add: CustomValidator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3409\"><br id=\"3410\"></p><p style=\"padding-left: 295pt;text-indent: 0pt;text-align: left;\" id=\"3411\">* All are CustomValidator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3412\"><br id=\"3413\"></p><p style=\"padding-top: 4pt;padding-left: 306pt;text-indent: 0pt;text-align: left;\" id=\"3414\">Add: Eight TextBox</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3415\"><br id=\"3416\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3417\"><br id=\"3418\"></p><p style=\"padding-left: 306pt;text-indent: 0pt;text-align: left;\" id=\"3419\">Add: FileUpload</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3420\"><br id=\"3421\"></p><p style=\"padding-top: 10pt;padding-left: 306pt;text-indent: 0pt;text-align: left;\" id=\"3422\">Add: Add Buttom</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3423\"><br id=\"3424\"></p><p class=\"s27\" style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"3425\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3426\"><br id=\"3427\"></p><p style=\"padding-left: 74pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3428\">You are Visiting Design View. Click Source to view source Code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3429\"><br id=\"3430\"></p><p style=\"padding-top: 4pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"3431\">I placed in table format; you can remove these table formats using div if you like.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3432\"><br id=\"3433\"></p><ul id=\"l87\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"3435\"><p style=\"display: inline;\" id=\"3436\">ValidationSummary: Validation Summary is used to provide users validation summary, if there is any validation fail, it will show up list of validation error message, error message are customizable.</p><p class=\"s90\" style=\"padding-top: 10pt;padding-left: 23pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3437\">&lt;<span style=\" color: #800000;\" id=\"3438\">asp</span>:<span style=\" color: #800000;\" id=\"3439\">ValidationSummary </span><span style=\" color: #F00;\" id=\"3440\">ID</span>=\"ValidationSummary\" <span style=\" color: #F00;\" id=\"3441\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3442\">ForeColor</span>=\"#FF6666\" /&gt;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3443\"><p style=\"display: inline;\" id=\"3444\">Make sure you have runat=”server”, otherwise code does not execute at server.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3445\"><p style=\"display: inline;\" id=\"3446\">Add: TextBox</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3447\"><p class=\"s90\" style=\"display: inline;\" id=\"3448\">&lt;<span style=\" color: #800000;\" id=\"3449\">asp</span>:<span style=\" color: #800000;\" id=\"3450\">TextBox </span><span style=\" color: #F00;\" id=\"3451\">ID</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3452\">runat</span>=server&gt;&lt;/<span style=\" color: #800000;\" id=\"3453\">asp</span>:<span style=\" color: #800000;\" id=\"3454\">TextBox</span>&gt;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3455\"><p style=\"display: inline;\" id=\"3456\">This is example for textbox Name. Repeat same process for Street, PostalCode, City, Country, Phone, Email and WebSite.</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"3457\"><p style=\"display: inline;\" id=\"3458\">Each Textbox should have unique id so if you choose id that is self- explanatory it‟s easier to refer later on for example choose Textbox id “TextboxEmail” for email input textbox.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3459\"><p style=\"display: inline;\" id=\"3460\">Add: Required Filed Validator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3461\"><br id=\"3462\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3463\">In Vcard website Name an Email must provide so we need to add Required Field Validator. Go to Toolbox <span class=\"s89\" id=\"3464\"></span><span class=\"s28\" id=\"3465\"> </span>Validation <span class=\"s89\" id=\"3466\"></span><span class=\"s28\" id=\"3467\"> </span>click on “RequiredFieldValidator”</p><p class=\"s90\" style=\"padding-left: 7pt;text-indent: -2pt;text-align: left;\" id=\"3468\">&lt;<span style=\" color: #800000;\" id=\"3469\">asp</span>:<span style=\" color: #800000;\" id=\"3470\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"3471\">ID</span>=\"RequiredFieldValidatorName\" <span style=\" color: #F00;\" id=\"3472\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3473\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3474\">ErrorMessage</span>=\"Name Required\"&gt; &lt;/<span style=\" color: #800000;\" id=\"3475\">asp</span>:<span style=\" color: #800000;\" id=\"3476\">RequiredFieldValidator</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3477\"><br id=\"3478\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3479\"><p class=\"s91\" style=\"display: inline;\" id=\"3480\"><span class=\"p\" id=\"3481\">RequiredFieldValidator start and end with </span>asp<span style=\" color: #00F;\" id=\"3482\">:</span>RequiredFieldValidator tags.</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"3483\"><p style=\"display: inline;\" id=\"3484\">Important thing in RequiredFiledValidator is “ContorlToValidate”, here ControlToValidate is equal to “TextBoxName”. Please look carefully “TextBoxName” is the id of Input “TextBox” that we created for Name Input Data that means we are now making Input Filed Name is required Field. ErrorMessage is the message that will appear if client tries to send empty data.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3485\"><p style=\"display: inline;\" id=\"3486\">Repeat same process “RequiredFieldValidator” for Email as well.</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3487\"><p style=\"display: inline;\" id=\"3488\">Add: Custom Validator:</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3489\"><p style=\"display: inline;\" id=\"3490\">input field should be validate on server side. To add custom validator,</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3491\"><p style=\"display: inline;\" id=\"3492\">Go to Toolbox <span class=\"s89\" id=\"3493\"></span><span class=\"s28\" id=\"3494\"> </span>Validation <span class=\"s89\" id=\"3495\"></span><span class=\"s28\" id=\"3496\"> </span>click on “CustomValidation”</p><p class=\"s90\" style=\"padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3497\">&lt;<span style=\" color: #800000;\" id=\"3498\">asp</span>:<span style=\" color: #800000;\" id=\"3499\">CustomValidator </span><span style=\" color: #F00;\" id=\"3500\">ID</span>=\"CustomValidatorName\" <span style=\" color: #F00;\" id=\"3501\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3502\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3503\">ErrorMessage</span>=\"Name is not Valid\" <span style=\" color: #F00;\" id=\"3504\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3505\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3506\">asp</span>:<span style=\" color: #800000;\" id=\"3507\">CustomValidator</span>&gt;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"3508\"><p class=\"s91\" style=\"display: inline;\" id=\"3509\"><span class=\"p\" id=\"3510\">Custom Validator start and end with </span>asp<span style=\" color: #00F;\" id=\"3511\">:</span>CustomValidator tags.</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3512\"><p style=\"display: inline;\" id=\"3513\">controlToValidate=”TextBoxName” is we are validating Input TextBox Name.</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"3514\"><p style=\"display: inline;\" id=\"3515\">ErrorMessage. Message show up in Validation Summary list if input data is not valid.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: left;\" id=\"3516\"><p class=\"s91\" style=\"display: inline;\" id=\"3517\"><span class=\"p\" id=\"3518\">* text or character between </span>asp<span style=\" color: #00F;\" id=\"3519\">:</span>CustomValidator <span style=\" color: #000;\" id=\"3520\">start and end tags will show up where you placed </span>asp<span style=\" color: #00F;\" id=\"3521\">:</span>CustomValidator <span style=\" color: #000;\" id=\"3522\">tags if Data is not Valid.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 108%;text-align: justify;\" id=\"3523\"><p class=\"s92\" style=\"display: inline;\" id=\"3524\">Onservervalidate <span style=\" color: #00F;\" id=\"3525\">here we specify which methods should we run or is relevant. it is linking methods called “CustomValidatorName_ServerValidate” this method must be create at code page. Explained later one.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3526\"><p class=\"s92\" style=\"display: inline;\" id=\"3527\">Repeat similar process for Email, street, postal code, country, city, phone, email and website.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3528\"><p class=\"s92\" style=\"display: inline;\" id=\"3529\">For references see code at next page.</p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3530\">VcardControl.ascx</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3531\"><br id=\"3532\"></p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3533\">&lt;<span style=\" color: #800000;\" id=\"3534\">form </span><span style=\" color: #F00;\" id=\"3535\">id</span>=\"FormVcard\" <span style=\" color: #F00;\" id=\"3536\">runat</span>=\"server\"&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3537\">&lt;<span style=\" color: #800000;\" id=\"3538\">div </span><span style=\" color: #F00;\" id=\"3539\">class</span>=\"errorMessage\"&gt; &lt;<span style=\" color: #800000;\" id=\"3540\">asp</span>:<span style=\" color: #800000;\" id=\"3541\">Label </span><span style=\" color: #F00;\" id=\"3542\">ID</span>=\"LabelNotice\" <span style=\" color: #F00;\" id=\"3543\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3544\">Text</span>=\"\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3545\">asp</span>:<span style=\" color: #800000;\" id=\"3546\">Label</span>&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3547\">&lt;<span style=\" color: #800000;\" id=\"3548\">asp</span>:<span style=\" color: #800000;\" id=\"3549\">ValidationSummary </span><span style=\" color: #F00;\" id=\"3550\">ID</span>=\"ValidationSummary\" <span style=\" color: #F00;\" id=\"3551\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3552\">ForeColor</span>=\"#FF6666\" /&gt;&lt;/<span style=\" color: #800000;\" id=\"3553\">div</span>&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3554\">&lt;<span style=\" color: #800000;\" id=\"3555\">table </span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3556\">&lt;<span style=\" color: #800000;\" id=\"3557\">tr </span><span style=\" color: #F00;\" id=\"3558\">class</span>=\"name\"&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3559\">&lt;<span style=\" color: #800000;\" id=\"3560\">td</span>&gt; <span style=\" color: #000;\" id=\"3561\">Name: </span>&lt;/<span style=\" color: #800000;\" id=\"3562\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3563\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3564\">asp</span>:<span style=\" color: #800000;\" id=\"3565\">TextBox </span><span style=\" color: #F00;\" id=\"3566\">ID</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3567\">runat</span>=server&gt;&lt;/<span style=\" color: #800000;\" id=\"3568\">asp</span>:<span style=\" color: #800000;\" id=\"3569\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3570\">&lt;<span style=\" color: #800000;\" id=\"3571\">asp</span>:<span style=\" color: #800000;\" id=\"3572\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"3573\">ID</span>=\"RequiredFieldValidatorName\" <span style=\" color: #F00;\" id=\"3574\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3575\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3576\">ErrorMessage</span>=\"Name Required\" <span style=\" color: #F00;\" id=\"3577\">Font-Size</span>=\"Small\"</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3578\"><span style=\" color: #F00;\" id=\"3579\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3580\">asp</span>:<span style=\" color: #800000;\" id=\"3581\">RequiredFieldValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3582\">&lt;<span style=\" color: #800000;\" id=\"3583\">asp</span>:<span style=\" color: #800000;\" id=\"3584\">CustomValidator </span><span style=\" color: #F00;\" id=\"3585\">ID</span>=\"CustomValidatorName\" <span style=\" color: #F00;\" id=\"3586\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3587\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"3588\">ErrorMessage</span>=\"Name is not Valid\" <span style=\" color: #F00;\" id=\"3589\">ForeColor</span>=\"#CC0000\"</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3590\"><span style=\" color: #F00;\" id=\"3591\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3592\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3593\">asp</span>:<span style=\" color: #800000;\" id=\"3594\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3595\">&lt;/<span style=\" color: #800000;\" id=\"3596\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3597\">&lt;/<span style=\" color: #800000;\" id=\"3598\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3599\">&lt;<span style=\" color: #800000;\" id=\"3600\">tr </span><span style=\" color: #F00;\" id=\"3601\">class</span>=\"street\"&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3602\">&lt;<span style=\" color: #800000;\" id=\"3603\">td</span>&gt; <span style=\" color: #000;\" id=\"3604\">Street:</span>&lt;/<span style=\" color: #800000;\" id=\"3605\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3606\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3607\">asp</span>:<span style=\" color: #800000;\" id=\"3608\">TextBox </span><span style=\" color: #F00;\" id=\"3609\">ID</span>=\"TextBoxStreet\" <span style=\" color: #F00;\" id=\"3610\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3611\">asp</span>:<span style=\" color: #800000;\" id=\"3612\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3613\">&lt;/<span style=\" color: #800000;\" id=\"3614\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3615\">&lt;/<span style=\" color: #800000;\" id=\"3616\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3617\">&lt;<span style=\" color: #800000;\" id=\"3618\">tr </span><span style=\" color: #F00;\" id=\"3619\">class</span>=\"postalCode\"&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 22pt;text-align: left;\" id=\"3620\">&lt;<span style=\" color: #800000;\" id=\"3621\">td</span>&gt; <span style=\" color: #000;\" id=\"3622\">PostalCode:</span>&lt;/<span style=\" color: #800000;\" id=\"3623\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3624\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3625\">asp</span>:<span style=\" color: #800000;\" id=\"3626\">TextBox </span><span style=\" color: #F00;\" id=\"3627\">ID</span>=\"TextBoxPostalCode\" <span style=\" color: #F00;\" id=\"3628\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3629\">asp</span>:<span style=\" color: #800000;\" id=\"3630\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 22pt;text-align: justify;\" id=\"3631\">&lt;<span style=\" color: #800000;\" id=\"3632\">asp</span>:<span style=\" color: #800000;\" id=\"3633\">CustomValidator </span><span style=\" color: #F00;\" id=\"3634\">ID</span>=\"CustomValidatorPostalCode\" <span style=\" color: #F00;\" id=\"3635\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3636\">Font-Size</span>=\"Small\" <span style=\" color: #F00;\" id=\"3637\">ErrorMessage</span>=\"Postal Code 4 digit\" <span style=\" color: #F00;\" id=\"3638\">ControlToValidate</span>=\"TextBoxPostalCode\" <span style=\" color: #F00;\" id=\"3639\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3640\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3641\">asp</span>:<span style=\" color: #800000;\" id=\"3642\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3643\">&lt;/<span style=\" color: #800000;\" id=\"3644\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3645\">&lt;/<span style=\" color: #800000;\" id=\"3646\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3647\">&lt;<span style=\" color: #800000;\" id=\"3648\">tr </span><span style=\" color: #F00;\" id=\"3649\">class</span>=\"city\"&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3650\">&lt;<span style=\" color: #800000;\" id=\"3651\">td</span>&gt; <span style=\" color: #000;\" id=\"3652\">City:</span>&lt;/<span style=\" color: #800000;\" id=\"3653\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3654\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3655\">asp</span>:<span style=\" color: #800000;\" id=\"3656\">TextBox </span><span style=\" color: #F00;\" id=\"3657\">ID</span>=\"TextBoxCity\" <span style=\" color: #F00;\" id=\"3658\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3659\">asp</span>:<span style=\" color: #800000;\" id=\"3660\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3661\">&lt;/<span style=\" color: #800000;\" id=\"3662\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3663\">&lt;<span style=\" color: #800000;\" id=\"3664\">tr </span><span style=\" color: #F00;\" id=\"3665\">class</span>=\"country\"&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3666\">&lt;<span style=\" color: #800000;\" id=\"3667\">td</span>&gt; <span style=\" color: #000;\" id=\"3668\">Country:</span>&lt;/<span style=\" color: #800000;\" id=\"3669\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3670\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3671\">asp</span>:<span style=\" color: #800000;\" id=\"3672\">TextBox </span><span style=\" color: #F00;\" id=\"3673\">ID</span>=\"TextBoxCountry\" <span style=\" color: #F00;\" id=\"3674\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3675\">asp</span>:<span style=\" color: #800000;\" id=\"3676\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3677\">&lt;<span style=\" color: #800000;\" id=\"3678\">asp</span>:<span style=\" color: #800000;\" id=\"3679\">CustomValidator </span><span style=\" color: #F00;\" id=\"3680\">ID</span>=\"CustomValidatorCountry\" <span style=\" color: #F00;\" id=\"3681\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3682\">Font-Size</span>=\"Small\" <span style=\" color: #F00;\" id=\"3683\">ErrorMessage</span>=\"Country Not Valid\" <span style=\" color: #F00;\" id=\"3684\">ControlToValidate</span>=\"TextBoxCountry\"</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3685\"><span style=\" color: #F00;\" id=\"3686\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3687\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3688\">asp</span>:<span style=\" color: #800000;\" id=\"3689\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3690\">&lt;/<span style=\" color: #800000;\" id=\"3691\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3692\">&lt;/<span style=\" color: #800000;\" id=\"3693\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3694\">&lt;<span style=\" color: #800000;\" id=\"3695\">tr </span><span style=\" color: #F00;\" id=\"3696\">class</span>=\"phone\"&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 22pt;text-align: left;\" id=\"3697\">&lt;<span style=\" color: #800000;\" id=\"3698\">td</span>&gt; <span style=\" color: #000;\" id=\"3699\">Phone:</span><span style=\" color: #F00;\" id=\"3700\">&amp;nbsp; </span><span style=\" color: #000;\" id=\"3701\">+45</span>&lt;/<span style=\" color: #800000;\" id=\"3702\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3703\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3704\">asp</span>:<span style=\" color: #800000;\" id=\"3705\">TextBox </span><span style=\" color: #F00;\" id=\"3706\">ID</span>=\"TextBoxPhone\" <span style=\" color: #F00;\" id=\"3707\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3708\">asp</span>:<span style=\" color: #800000;\" id=\"3709\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3710\">&lt;<span style=\" color: #800000;\" id=\"3711\">asp</span>:<span style=\" color: #800000;\" id=\"3712\">CustomValidator </span><span style=\" color: #F00;\" id=\"3713\">ID</span>=\"CustomValidatorPhone\" <span style=\" color: #F00;\" id=\"3714\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3715\">Font-Size</span>=\"Small\" <span style=\" color: #F00;\" id=\"3716\">ErrorMessage</span>=\"Phone must be 8 digit, Without +45 \" <span style=\" color: #F00;\" id=\"3717\">ControlToValidate</span>=\"TextBoxPhone\"</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3718\"><span style=\" color: #F00;\" id=\"3719\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3720\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3721\">asp</span>:<span style=\" color: #800000;\" id=\"3722\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3723\">&lt;/<span style=\" color: #800000;\" id=\"3724\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3725\">&lt;/<span style=\" color: #800000;\" id=\"3726\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3727\">&lt;<span style=\" color: #800000;\" id=\"3728\">tr </span><span style=\" color: #F00;\" id=\"3729\">class</span>=\"email\"&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3730\">&lt;<span style=\" color: #800000;\" id=\"3731\">td</span>&gt; <span style=\" color: #000;\" id=\"3732\">Email: </span>&lt;/<span style=\" color: #800000;\" id=\"3733\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3734\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3735\">asp</span>:<span style=\" color: #800000;\" id=\"3736\">TextBox </span><span style=\" color: #F00;\" id=\"3737\">ID</span>=\"TextBoxEmail\" <span style=\" color: #F00;\" id=\"3738\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3739\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3740\">asp</span>:<span style=\" color: #800000;\" id=\"3741\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3742\">&lt;<span style=\" color: #800000;\" id=\"3743\">asp</span>:<span style=\" color: #800000;\" id=\"3744\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"3745\">ID</span>=\"RequiredFieldValidatorEmail\" <span style=\" color: #F00;\" id=\"3746\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3747\">Font-Size</span>=\"Small\" <span style=\" color: #F00;\" id=\"3748\">ErrorMessage</span>=\"Email Required\" <span style=\" color: #F00;\" id=\"3749\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span style=\" color: #000;\" id=\"3750\">Email</span></p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3751\"><span style=\" color: #000;\" id=\"3752\">Required</span>&lt;/<span style=\" color: #800000;\" id=\"3753\">asp</span>:<span style=\" color: #800000;\" id=\"3754\">RequiredFieldValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3755\">&lt;<span style=\" color: #800000;\" id=\"3756\">asp</span>:<span style=\" color: #800000;\" id=\"3757\">CustomValidator </span><span style=\" color: #F00;\" id=\"3758\">ID</span>=\"CustomValidatorEmail\" <span style=\" color: #F00;\" id=\"3759\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3760\">Font-Size</span>=\"Small\" <span style=\" color: #F00;\" id=\"3761\">ErrorMessage</span>=\"Email Not Valid\" <span style=\" color: #F00;\" id=\"3762\">ControlToValidate</span>=\"TextBoxEmail\" <span style=\" color: #F00;\" id=\"3763\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3764\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3765\">asp</span>:<span style=\" color: #800000;\" id=\"3766\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3767\">&lt;/<span style=\" color: #800000;\" id=\"3768\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3769\">&lt;/<span style=\" color: #800000;\" id=\"3770\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3771\">&lt;<span style=\" color: #800000;\" id=\"3772\">tr </span><span style=\" color: #F00;\" id=\"3773\">class</span>=\"website\"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3774\"><br id=\"3775\"></p><p class=\"s94\" style=\"padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3776\">&lt;<span style=\" color: #800000;\" id=\"3777\">td</span>&gt; <span style=\" color: #000;\" id=\"3778\">WebSite:</span>&lt;/<span style=\" color: #800000;\" id=\"3779\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3780\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3781\">asp</span>:<span style=\" color: #800000;\" id=\"3782\">TextBox </span><span style=\" color: #F00;\" id=\"3783\">ID</span>=\"TextBoxWebsite\" <span style=\" color: #F00;\" id=\"3784\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"3785\">asp</span>:<span style=\" color: #800000;\" id=\"3786\">TextBox</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: -11pt;text-align: left;\" id=\"3787\">&lt;<span style=\" color: #800000;\" id=\"3788\">asp</span>:<span style=\" color: #800000;\" id=\"3789\">CustomValidator </span><span style=\" color: #F00;\" id=\"3790\">ID</span>=\"CustomValidatorWebSite\" <span style=\" color: #F00;\" id=\"3791\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3792\">ErrorMessage</span>=\"Website not valid\" <span style=\" color: #F00;\" id=\"3793\">ControlToValidate</span>=\"TextBoxWebsite\" <span style=\" color: #F00;\" id=\"3794\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"3795\">*</span>&lt;/<span style=\" color: #800000;\" id=\"3796\">asp</span>:<span style=\" color: #800000;\" id=\"3797\">CustomValidator</span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3798\">&lt;/<span style=\" color: #800000;\" id=\"3799\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"3800\">&lt;/<span style=\" color: #800000;\" id=\"3801\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3802\">&lt;<span style=\" color: #800000;\" id=\"3803\">tr </span><span style=\" color: #F00;\" id=\"3804\">class</span>=\"photo\"&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3805\">&lt;<span style=\" color: #800000;\" id=\"3806\">td</span>&gt; <span style=\" color: #000;\" id=\"3807\">Photo:</span>&lt;/<span style=\" color: #800000;\" id=\"3808\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"3809\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3810\">asp</span>:<span style=\" color: #800000;\" id=\"3811\">FileUpload </span><span style=\" color: #F00;\" id=\"3812\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"3813\">runat</span>=\"server\" /&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3814\">&lt;/<span style=\" color: #800000;\" id=\"3815\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3816\">&lt;/<span style=\" color: #800000;\" id=\"3817\">tr</span>&gt;</p><p class=\"s94\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"3818\">&lt;<span style=\" color: #800000;\" id=\"3819\">tr </span>&gt;</p><p class=\"s94\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"3820\">&lt;<span style=\" color: #800000;\" id=\"3821\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"3822\"><span style=\" color: #F00;\" id=\"3823\">&amp;nbsp;</span>&lt;/<span style=\" color: #800000;\" id=\"3824\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3825\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"3826\">asp</span>:<span style=\" color: #800000;\" id=\"3827\">Button </span><span style=\" color: #F00;\" id=\"3828\">ID</span>=\"ButtonCreate\" <span style=\" color: #F00;\" id=\"3829\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3830\">Text</span>=\"Create\" <span style=\" color: #F00;\" id=\"3831\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span style=\" color: #800000;\" id=\"3832\">td</span>&gt;</p><p class=\"s94\" style=\"padding-left: 15pt;text-indent: 0pt;text-align: center;\" id=\"3833\">&lt;/<span style=\" color: #800000;\" id=\"3834\">tr</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3835\"><br id=\"3836\"></p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3837\">&lt;/<span style=\" color: #800000;\" id=\"3838\">table</span>&gt;</p><p class=\"s94\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3839\">&lt;/<span style=\" color: #800000;\" id=\"3840\">form</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3841\"><br id=\"3842\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"3843\">If you want to follow me, copy above code and paste it into your User Control Design View.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3844\">General description of “VcardControl.ascx” if you are new to ASP.NET user control</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3845\"><br id=\"3846\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3847\">Description: It start with form tags, you must include runat=”server” because we want to execute code at server side. And I added div class that used for style sheet and I used table to nicely format input fields.</p><p class=\"s90\" style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3848\"><span style=\" color: #800000;\" id=\"3849\">&lt;asp</span>:<span style=\" color: #800000;\" id=\"3850\">Label </span><span style=\" color: #F00;\" id=\"3851\">ID</span>=\"LabelNotice\" <span style=\" color: #F00;\" id=\"3852\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"3853\">Text</span>=\"\"&gt; it‟s a label that will use to show up conformation message to end users or client.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3854\"><br id=\"3855\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3856\"><p class=\"s90\" style=\"display: inline;\" id=\"3857\">&lt;table&gt; is starting table</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3858\"><p class=\"s90\" style=\"display: inline;\" id=\"3859\">&lt;tr&gt; it‟s a table row. One row contains multiple data cells so that we can use multiple &lt;td&gt; between opening and closing tags of table row &lt;tr&gt;. TD stands for “Table Data”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3860\"><p class=\"s90\" style=\"display: inline;\" id=\"3861\">&amp;nbsp; means white space.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3862\"><p class=\"s90\" style=\"display: inline;\" id=\"3863\">Closing tags of table row, table and form tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3864\"><p class=\"s90\" style=\"display: inline;\" id=\"3865\">All tags contain forward slash “/” means closing tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3866\"><p class=\"s90\" style=\"display: inline;\" id=\"3867\">Example &lt;/tr&gt; &lt;/td&gt;, &lt;/table&gt; tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"3868\"><p class=\"s92\" style=\"display: inline;\" id=\"3869\">Onclick is events that will executed when user clicks on Button. In our Vcard we crate button id “ButtonCreate” and called “ButtonCreat_Click” methods that is in code behind page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3870\"><br id=\"3871\"></p><p class=\"s93\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3872\">Code behind Page “<span class=\"p\" id=\"3873\">VcardControl.ascx.cs” page.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3874\"><br id=\"3875\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3876\">To open code behind page you can double click on button. For example let‟s double click at CustomValidator for Name. It will create “<span class=\"s90\" id=\"3877\">CustomValidatorName_ServerValidate</span>” methods at code behind page and links automatically at design view for you. Or you can manually add methods to code behind page and link manually at Design view. See captured screen bellow of code behind page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3878\"><br id=\"3879\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3880\"><span id=\"3881\"><img width=\"616\" height=\"331\" alt=\"image\" src=\"Image_096.png\" id=\"3882\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3883\"><br id=\"3884\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3885\"><p style=\"display: inline;\" id=\"3886\">Using is used to references other namespace</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3887\"><p class=\"s8\" style=\"display: inline;\" id=\"3888\">Namespace <span class=\"p\" id=\"3889\">“VCardGenerator” namespace name.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3890\"><p class=\"s8\" style=\"display: inline;\" id=\"3891\">Public <span class=\"p\" id=\"3892\">means public, available from outside</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3893\"><p class=\"s8\" style=\"display: inline;\" id=\"3894\">Colon <span class=\"p\" id=\"3895\">“:” means left side of class is inherited from right side of class</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3896\"><p class=\"s8\" style=\"display: inline;\" id=\"3897\">Partial Class<span class=\"p\" id=\"3898\">: it‟s not a single class; C# compiler will group all the partial classes together and treat as a single class.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3899\"><p class=\"s8\" style=\"display: inline;\" id=\"3900\">VcardControl <span class=\"p\" id=\"3901\">is name of class and it is inheritance from System.Web.Ui.Usercontrol</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3902\"><p class=\"s8\" style=\"display: inline;\" id=\"3903\">Protected <span class=\"p\" id=\"3904\">means, member is accessible within its class and by derived classes.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3905\"><p class=\"s8\" style=\"display: inline;\" id=\"3906\">Void<span class=\"p\" id=\"3907\">: it means do not return anything, just execute block of code that inside open curly and close curly brackets.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3908\"><p class=\"s8\" style=\"display: inline;\" id=\"3909\">Page Load<span class=\"p\" id=\"3910\">: it‟s a method that executed when page load at server, All code inside Page_Load will executed automatically when page loads.</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"3911\"><p style=\"display: inline;\" id=\"3912\">Be care full you should not write your code outside open and close curly brackets of Class. You have to place your code inside open and close curly brackets of Class. In our case “VcardControl class”, otherwise C# compiler will failed.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3913\"><br id=\"3914\"></p><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3915\" class=\"heading3915\"><a name=\"bookmark56\" id=\"3916\" style=\"color: green;\">CustomValidator for Name:</a></h3><div id=\"contentheading3915\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 35pt;text-align: justify;\" id=\"3917\">Let‟s Create CustomValidator for Name, Open Design View “VcardControl.ascx” and double click on CustomValidator that link to Name Textbox. If you follow me your code behind page should looks like this</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3918\"><br id=\"3919\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3920\"><span id=\"3921\"><img width=\"626\" height=\"120\" alt=\"image\" src=\"Image_097.png\" id=\"3922\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3923\"><br id=\"3924\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3925\"><p style=\"display: inline;\" id=\"3926\">Above captured screen is part of “VcardContro.ascx”</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3927\"><p style=\"display: inline;\" id=\"3928\">See second line of code, its TextBox and has id “TextBoxName”</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3929\"><p style=\"display: inline;\" id=\"3930\">See seventh line of code, ControlToValidate =”TextBoxName” . it means CustomValidator is linked to TextboxName.</p></li><li style=\"padding-left: 5pt;text-indent: 18pt;text-align: left;\" id=\"3931\"><p style=\"display: inline;\" id=\"3932\">See last line of onservervalidate=”CustomValidatorName_ServerValidate” onservervalidate is important, in above case it‟s equal to “CustomValidator_ServerValidate”. It must be same name methods that you specify between double quote in your code behind page. Let‟s create methods “CustomValidatorName_ServerValidate”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3933\"><br id=\"3934\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3935\"><span style=\" color: #00F;\" id=\"3936\">protected void </span>CustomValidatorName_ServerValidate(<span style=\" color: #00F;\" id=\"3937\">object </span>source, <span style=\" color: #2B91AE;\" id=\"3938\">ServerValidateEventArgs </span>args)</p><p class=\"s93\" style=\"padding-left: 26pt;text-indent: 0pt;text-align: left;\" id=\"3939\">{</p><p class=\"s93\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"3940\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s93\" style=\"padding-left: 26pt;text-indent: 0pt;text-align: left;\" id=\"3941\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3942\"><br id=\"3943\"></p></li><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3944\"><p style=\"display: inline;\" id=\"3945\">This is simple validation, here I get serverValidateEventArgs and stored in variable args.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3946\"><p style=\"display: inline;\" id=\"3947\">I called bool methods IsValid, if provided value‟s length is greater than zero it will set validate value equal to true otherwise it will set up false.</p></li><li style=\"padding-bottom: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3948\"><p style=\"display: inline;\" id=\"3949\">Here I pass values to RemoveSpeicalCharacter() methods because I want to replace all special character to secure websites.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3950\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"3951\">RemoveSpeicalCharacter() methods</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3952\">public string <span style=\" color: #000;\" id=\"3953\">RemoveSpecialCharacter(</span>string <span style=\" color: #000;\" id=\"3954\">input)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"3955\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3956\"><span style=\" color: #00F;\" id=\"3957\">return </span><span style=\" color: #2B91AE;\" id=\"3958\">Regex</span>.Replace(input, <span style=\" color: #A21515;\" id=\"3959\">\"[^0-9a-zA-Z. ]+\"</span>, <span style=\" color: #A21515;\" id=\"3960\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3961\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3962\"><br id=\"3963\"></p><ul id=\"l88\"><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3965\"><p style=\"display: inline;\" id=\"3966\">It is written in Regular expression.</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3967\"><p style=\"display: inline;\" id=\"3968\">Regex is regular expression can be use using Regex.</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"3969\"><p style=\"display: inline;\" id=\"3970\">Make sure to add <span class=\"s66\" id=\"3971\">using </span><span class=\"s70\" id=\"3972\">System.Text.RegularExpression before Namespace starts.</span></p></li></ul><p class=\"s27\" style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"3973\">-    <span class=\"p\" id=\"3974\">RemoveSpeicalCharacter() Method take one parameter string, it removes all character but not from 0 to 9 digits, from A to Z upper and lower case characters and period.</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3975\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"3976\">RemoveSpeicalCharacter() methods</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3977\">public string <span style=\" color: #000;\" id=\"3978\">RemoveSpecialCharacter(</span>string <span style=\" color: #000;\" id=\"3979\">input)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"3980\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3981\"><span style=\" color: #00F;\" id=\"3982\">return </span><span style=\" color: #2B91AE;\" id=\"3983\">Regex</span>.Replace(input, <span style=\" color: #A21515;\" id=\"3984\">\"[^0-9a-zA-Z. ]+\"</span>, <span style=\" color: #A21515;\" id=\"3985\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"3986\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3987\"><br id=\"3988\"></p><ul id=\"l89\"><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3990\"><p style=\"display: inline;\" id=\"3991\">It is written in Regular expression.</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3992\"><p style=\"display: inline;\" id=\"3993\">Regex is regular expression can be use using Regex.</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"3994\"><p style=\"display: inline;\" id=\"3995\">Make sure to add <span class=\"s66\" id=\"3996\">using </span><span class=\"s70\" id=\"3997\">System.Text.RegularExpression before Namespace starts.</span></p></li></ul><p class=\"s27\" style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"3998\">-    <span class=\"p\" id=\"3999\">RemoveSpeicalCharacter() Method take one parameter string, it removes all character but not from 0 to 9 digits, from A to Z upper and lower case characters and period.</span></p><p style=\"padding-left: 33pt;text-indent: 0pt;text-align: left;\" id=\"4000\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4001\"> </span></p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4002\" class=\"heading4002\"><a name=\"bookmark57\" id=\"4003\" style=\"color: green;\">Email Validation:</a></h3></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"4004\"><p style=\"display: inline;\" id=\"4005\">Email Validation:</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4006\"><p style=\"display: inline;\" id=\"4007\">I created methods ValidateEmail()<span class=\"s3\" id=\"4008\">25</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4009\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4010\">ValidateEmail </span><span class=\"s97\" style=\" background-color: #FF0;\" id=\"4011\">() methods:</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4012\">public bool <span style=\" color: #000;\" id=\"4013\">ValidateEmail(</span>string <span style=\" color: #000;\" id=\"4014\">email)</span></p><p class=\"s70\" style=\"padding-left: 22pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4015\">{ <span style=\" color: #00F;\" id=\"4016\">return </span><span style=\" color: #2B91AE;\" id=\"4017\">Regex</span>.IsMatch(email,</p><p class=\"s99\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4018\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4019\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span style=\" color: #000;\" id=\"4020\">+</span></p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 67pt;text-align: left;\" id=\"4021\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA- Z]\\.)+[a-zA-Z]{2,6}))$\"<span style=\" color: #000;\" id=\"4022\">); }</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4023\"><br id=\"4024\"></p><ul id=\"l90\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4026\"><p style=\"display: inline;\" id=\"4027\">This method has one parameter email; here input string email is compared with pattern. Pattern is “valid email character id” + “@” + “Domain or sub Domain name”. And finally returns true if pattern is match otherwise return false.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4028\"><p style=\"display: inline;\" id=\"4029\">Example:</p><ul id=\"l91\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4031\"><p class=\"s8\" style=\"display: inline;\" id=\"4032\">Jeevan_2np@yahoo.com <span class=\"p\" id=\"4033\">will return true</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 94%;text-align: left;\" id=\"4034\"><p class=\"s8\" style=\"display: inline;\" id=\"4035\">Jeevan_2np.at.the.rate.yahoo.com <span class=\"p\" id=\"4036\">will return false- because “@” is missing here. Email id must contain “@” symbol</span></p></li></ul></li></ul><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4037\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4038\">ValidateEmail </span><span class=\"s97\" style=\" background-color: #FF0;\" id=\"4039\">() methods:</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4040\">public bool <span style=\" color: #000;\" id=\"4041\">ValidateEmail(</span>string <span style=\" color: #000;\" id=\"4042\">email)</span></p><p class=\"s70\" style=\"padding-left: 22pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4043\">{ <span style=\" color: #00F;\" id=\"4044\">return </span><span style=\" color: #2B91AE;\" id=\"4045\">Regex</span>.IsMatch(email,</p><p class=\"s99\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4046\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4047\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span style=\" color: #000;\" id=\"4048\">+</span></p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 67pt;text-align: left;\" id=\"4049\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA- Z]\\.)+[a-zA-Z]{2,6}))$\"<span style=\" color: #000;\" id=\"4050\">); }</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4051\"><br id=\"4052\"></p><ul id=\"l92\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4054\"><p style=\"display: inline;\" id=\"4055\">This method has one parameter email; here input string email is compared with pattern. Pattern is “valid email character id” + “@” + “Domain or sub Domain name”. And finally returns true if pattern is match otherwise return false.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4056\"><p style=\"display: inline;\" id=\"4057\">Example:</p><ul id=\"l93\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4059\"><p class=\"s8\" style=\"display: inline;\" id=\"4060\">Jeevan_2np@yahoo.com <span class=\"p\" id=\"4061\">will return true</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 94%;text-align: left;\" id=\"4062\"><p class=\"s8\" style=\"display: inline;\" id=\"4063\">Jeevan_2np.at.the.rate.yahoo.com <span class=\"p\" id=\"4064\">will return false- because “@” is missing here. Email id must contain “@” symbol</span></p></li></ul></li></ul><p style=\"padding-left: 32pt;text-indent: 0pt;text-align: left;\" id=\"4065\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4066\"> </span></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"4067\"><p class=\"s93\" style=\"display: inline;\" id=\"4068\">Here is CustomEmailValidator Methods</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4069\"><br id=\"4070\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4071\"><span style=\" color: #00F;\" id=\"4072\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"4073\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4074\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4075\">{ args.IsValid = ValidateEmail(args.Value.ToString()); }</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4076\"><br id=\"4077\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4078\">Description: <span class=\"p\" id=\"4079\">args.Value.ToString() is holding value that user typed in Email input Textbox in Browser, passing that value to ValidateEmail() method will decide whether passing value is in valid email format or not. If it is valid it will set args.IsValid = true, if it is not valid it will set args.IsValid = false;</span></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4080\"><span style=\" color: #00F;\" id=\"4081\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"4082\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4083\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4084\">{ args.IsValid = ValidateEmail(args.Value.ToString()); }</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4085\"><br id=\"4086\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4087\">Description: <span class=\"p\" id=\"4088\">args.Value.ToString() is holding value that user typed in Email input Textbox in Browser, passing that value to ValidateEmail() method will decide whether passing value is in valid email format or not. If it is valid it will set args.IsValid = true, if it is not valid it will set args.IsValid = false;</span></p><p style=\"padding-left: 32pt;text-indent: 0pt;text-align: left;\" id=\"4089\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4090\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4091\"><br id=\"4092\"></p><h3 style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4093\" class=\"heading4093\"><a name=\"bookmark58\" id=\"4094\" style=\"color: green;\">Phone Validation:</a></h3><div id=\"contentheading4093\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"4095\"><br id=\"4096\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4097\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4098\">CustomValidatorPhone_ServerValidate:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4099\"><br id=\"4100\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4101\"><span style=\" color: #00F;\" id=\"4102\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"4103\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4104\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4105\">{</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4106\">if <span style=\" color: #000;\" id=\"4107\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4108\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4109\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4110\">}</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4111\">else</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4112\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4113\">args.IsValid = <span style=\" color: #00F;\" id=\"4114\">true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4115\">}</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4116\">}</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4117\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4118\">CustomValidatorPhone_ServerValidate:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4119\"><br id=\"4120\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4121\"><span style=\" color: #00F;\" id=\"4122\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"4123\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4124\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4125\">{</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4126\">if <span style=\" color: #000;\" id=\"4127\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4128\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4129\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4130\">}</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4131\">else</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4132\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4133\">args.IsValid = <span style=\" color: #00F;\" id=\"4134\">true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4135\">}</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4136\">}</p><p style=\"padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"4137\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4138\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4139\"><br id=\"4140\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4141\"><br id=\"4142\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4143\"><span id=\"4144\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_098.png\" id=\"4145\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"4146\">25 <a href=\"http://msdn.microsoft.com/en-us/library/01escwtf.aspx\" class=\"s11\" target=\"_blank\" id=\"4147\">Methods originally created by http://msdn.microsoft.com/en-us/library/01escwtf.aspx</a></p><p class=\"s93\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4148\">Description: “CustomValidatorPhone_ServerValidate”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4149\"><br id=\"4150\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4151\">First we check if user typed some value in Phone Number text box or not. If user typed some character on input text box its length must be greater than zero. If input value is great than zero, we need to validate whether it is valid phone number or not. We pass value to ValidatePhone() methods, ValidatePhone() method return true or false. If it is valid args.IsValid value is set to true, if not value is set to false.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4152\"><br id=\"4153\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4154\">Else statement execute if input value is empty or less than zero character length. It means user do not want to provide phone number on their Vcard so that args.IsValid is set to true.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4155\"><br id=\"4156\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4157\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4158\">ValidatePhone() methods:</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4159\">public bool <span style=\" color: #000;\" id=\"4160\">ValidatePhone(</span>string <span style=\" color: #000;\" id=\"4161\">input)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4162\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4163\"><span style=\" color: #00F;\" id=\"4164\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"4165\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"4166\">Regex </span>num = <span style=\" color: #00F;\" id=\"4167\">new </span><span style=\" color: #2B91AE;\" id=\"4168\">Regex</span>(<span style=\" color: #A21515;\" id=\"4169\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4170\">return <span style=\" color: #000;\" id=\"4171\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4172\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4173\">Description:</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4174\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span style=\" color: #00F;\" id=\"4175\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4176\">9 digits, it will return false because it’s not valid phone number.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4177\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4178\">ValidatePhone() methods:</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4179\">public bool <span style=\" color: #000;\" id=\"4180\">ValidatePhone(</span>string <span style=\" color: #000;\" id=\"4181\">input)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4182\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4183\"><span style=\" color: #00F;\" id=\"4184\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"4185\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"4186\">Regex </span>num = <span style=\" color: #00F;\" id=\"4187\">new </span><span style=\" color: #2B91AE;\" id=\"4188\">Regex</span>(<span style=\" color: #A21515;\" id=\"4189\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4190\">return <span style=\" color: #000;\" id=\"4191\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4192\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4193\">Description:</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4194\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span style=\" color: #00F;\" id=\"4195\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4196\">9 digits, it will return false because it’s not valid phone number.</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4197\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4198\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4199\"><br id=\"4200\"></p><p class=\"s100\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4201\">Validation for rest of Input Fields Street, PostalCode, City, Country, and Website are listed at appendix as complete code or putting all code together “Vcardcontrol.ascx.cs” page title. Please check appendix page for more details.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4202\"><br id=\"4203\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4204\"><a name=\"a59\" id=\"4205\">Create Button Events.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"4206\"><br id=\"4207\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4208\">End user submits data by clicking Create Button; here we have to do all processing steps. I have listed steps that need to do after end user clicks on “Create Button”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4209\"><br id=\"4210\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4211\"><p class=\"s93\" style=\"display: inline;\" id=\"4212\">Step 1: Hold or Store submitted data in a variable</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4213\"><br id=\"4214\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4215\"><p class=\"s93\" style=\"display: inline;\" id=\"4216\">Step 2: Validate and Remove special characters from submitted data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4217\"><br id=\"4218\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4219\"><p class=\"s93\" style=\"display: inline;\" id=\"4220\">Step 3: Upload Image to server and save it in server location if user choose image files.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4221\"><br id=\"4222\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4223\"><p class=\"s93\" style=\"display: inline;\" id=\"4224\">Step 4: Generate Vcard on the fly</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4225\"><br id=\"4226\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4227\"><p class=\"s93\" style=\"display: inline;\" id=\"4228\">Step 5: Send attach Email with Vcard</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4229\"><br id=\"4230\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"4231\"><p class=\"s93\" style=\"display: inline;\" id=\"4232\">Step 6: Store data to Database for later use.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4233\"><br id=\"4234\"></p><p class=\"s93\" style=\"padding-left: 23pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"4235\">Step 2 is already done for Email, Name and Phone. Rest of validation and remove special character are available at appendix page as complete code so that please check out appendix page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4236\"><br id=\"4237\"></p><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4238\" class=\"heading4238\"><a name=\"bookmark59\" id=\"4239\" style=\"color: green;\">Step 1: Hold or Store Submitted Data</a></h3><div id=\"contentheading4238\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4240\">-it‟s a very easy. See example for holding or retrieving value for Name from client side. <span style=\" color: #00F;\" id=\"4241\">string </span>name = RemoveSpecialCharacter(TextBoxName.Text); I have created string variable name, name is equal to TextBoxName.Text, here TextBoxName is id of TextBoxName and .Text means text value from input textbox. I passed text value from input textbox to method “RemoveSpecialCharacter()” to remove special character. At the end string name will be equal to data or value that user typed in textbox other then special characters.</p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"4242\">Repeat same process for rest of input data. See example as references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4243\"><br id=\"4244\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4245\"><br id=\"4246\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4247\">string <span style=\" color: #000;\" id=\"4248\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"4249\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"4250\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"4251\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4252\">string <span style=\" color: #000;\" id=\"4253\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4254\">string <span style=\" color: #000;\" id=\"4255\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"4256\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4257\"><br id=\"4258\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4259\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4260\">string <span style=\" color: #000;\" id=\"4261\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"4262\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"4263\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"4264\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4265\">string <span style=\" color: #000;\" id=\"4266\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4267\">string <span style=\" color: #000;\" id=\"4268\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"4269\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4270\"><br id=\"4271\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4272\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4273\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4274\"> </span></p></div><h3 style=\"padding-top: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4275\" class=\"heading4275\"><a name=\"bookmark60\" id=\"4276\" style=\"color: green;\">Step 2: Validate Data</a></h3><div id=\"contentheading4275\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4277\">Double click on “Create” button, visual studio will automatically add event and open code behind page. If you follow me it must be looks like bellow</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4278\"><br id=\"4279\"></p><p class=\"s93\" style=\"padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"4280\"><span style=\" color: #00F;\" id=\"4281\">protected void </span>ButtonCreate_Click(<span style=\" color: #00F;\" id=\"4282\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"4283\">EventArgs </span>e)</p><p class=\"s93\" style=\"padding-left: 26pt;text-indent: 0pt;text-align: left;\" id=\"4284\">{</p><p class=\"s90\" style=\"padding-left: 36pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4285\">if <span style=\" color: #000;\" id=\"4286\">(Page.IsValid)</span></p><p class=\"s93\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"4287\">{ // processing code goes here…….. }</p><p class=\"s93\" style=\"padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"4288\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4289\"><br id=\"4290\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4291\">Visual studio creates ButtonCreate_Click() method events automatically. I added if(Page.IsValid) statement. It is very important to check all validation must be true, Page.IsValid will check whether page is valid or not.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4292\"><br id=\"4293\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4294\">For example</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4295\"><span style=\" color: #00F;\" id=\"4296\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"4297\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4298\">ServerValidateEventArgs </span>args)</p><p style=\"padding-left: 17pt;text-indent: 0pt;text-align: left;\" id=\"4299\"><span class=\"s70\" id=\"4300\">{ </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4301\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4302\">; }</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4303\"><br id=\"4304\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4305\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4306\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span style=\" color: #00F;\" id=\"4307\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4308\">For example</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4309\"><span style=\" color: #00F;\" id=\"4310\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"4311\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4312\">ServerValidateEventArgs </span>args)</p><p style=\"padding-left: 17pt;text-indent: 0pt;text-align: left;\" id=\"4313\"><span class=\"s70\" id=\"4314\">{ </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4315\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4316\">; }</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4317\"><br id=\"4318\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4319\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4320\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span style=\" color: #00F;\" id=\"4321\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p style=\"padding-left: 4pt;text-indent: 0pt;text-align: left;\" id=\"4322\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4323\"> </span></p><p class=\"s93\" style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4324\">If there is any validation fails or has false value, error message will show up at error summary and will not execute if(Page.IsValid) {} block of code.</p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"4325\"><p class=\"s93\" style=\"display: inline;\" id=\"4326\">Note: Double back slash inside code is used to comments in c# programming language.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4327\"><br id=\"4328\"></p><h3 style=\"padding-top: 12pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4329\" class=\"heading4329\"><a name=\"bookmark61\" id=\"4330\" style=\"color: green;\">Step 3- Image Upload and Save to Server:</a></h3><div id=\"contentheading4329\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-bottom: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4331\">In Vcard, user is allowed to have Vcard with image, in order to generate vcard with image user should able to upload image using browse button. Add Upload Button, make Id is naming convention so upload button will be easy to recognize on code behind page. if you added Button it must look like bellow.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4332\">VcardControl.ascx</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4333\">&lt;<span style=\" color: #800000;\" id=\"4334\">asp</span>:<span style=\" color: #800000;\" id=\"4335\">FileUpload </span><span style=\" color: #F00;\" id=\"4336\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"4337\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4338\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4339\">VcardControl.ascx</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4340\">&lt;<span style=\" color: #800000;\" id=\"4341\">asp</span>:<span style=\" color: #800000;\" id=\"4342\">FileUpload </span><span style=\" color: #F00;\" id=\"4343\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"4344\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4345\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4346\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4347\"> </span></p><p class=\"s93\" style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 2pt;line-height: 117%;text-align: justify;\" id=\"4348\">In code behind page: using posted.saveas() methods, image will be uploaded to server. See code bellow as references. Your logic can be difference.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4349\"><br id=\"4350\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4351\"><span id=\"4352\"><img width=\"598\" height=\"588\" alt=\"image\" src=\"Image_099.png\" id=\"4353\"></span></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4354\">if <span style=\" color: #000;\" id=\"4355\">(FileUploadPhoto.PostedFile != </span>null <span style=\" color: #000;\" id=\"4356\">&amp;&amp; FileUploadPhoto.PostedFile.ContentLength</span></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4357\">&gt; 0)</p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4358\">{ <span style=\" color: #00F;\" id=\"4359\">string </span>guid = id.ToString(<span style=\" color: #A21515;\" id=\"4360\">\"N\"</span>);</p><p class=\"s70\" style=\"padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"4361\"><span style=\" color: #00F;\" id=\"4362\">string </span>imageDirectory = Server.MapPath(<span style=\" color: #A21515;\" id=\"4363\">\"vcardimage\"</span>); <span style=\" color: #00F;\" id=\"4364\">if </span>(<span style=\" color: #2B91AE;\" id=\"4365\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\" style=\"padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"4366\">{</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4367\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4368\">Server.MapPath(<span style=\" color: #A21515;\" id=\"4369\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4370\">}</p><p class=\"s66\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4371\">else</p><p class=\"s70\" style=\"padding-left: 68pt;text-indent: 0pt;text-align: left;\" id=\"4372\">{ <span style=\" color: #2B91AE;\" id=\"4373\">Directory</span>.CreateDirectory(Server.MapPath(<span style=\" color: #A21515;\" id=\"4374\">\"vcardimage\"</span>));</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4375\"><br id=\"4376\"></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4377\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span style=\" color: #A21515;\" id=\"4378\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"4379\">}</p><p class=\"s70\" style=\"padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"4380\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4381\"><br id=\"4382\"></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4383\">Description:</p><ul id=\"l94\"><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4385\"><p class=\"s70\" style=\"display: inline;\" id=\"4386\">Fist we ensure that user browse or select file and Content Length of file is greater than zero that can be achieve by using FileUploadPhoto.PostedFile != <span style=\" color: #00F;\" id=\"4387\">null (means posted files should not equal to null or empy) and </span>FileUploadPhoto.PostedFile.ContentLength &gt; 0 means length of file should be greater than zero. if file name and content length is greater than zero we go to next step.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4388\"><br id=\"4389\"></p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4390\"><p class=\"s70\" style=\"display: inline;\" id=\"4391\">Second: we make new guid, its unique id that system generates automatically, in theory guid is never be same or do not match each other. You may have raise questions here why do we need guid? We need because when user upload files we do not know what file name user has, if two user upload different file but same image file name and file type, system will overwride old files. To prevent from this we add extra string to file name so that file name will not be same even user upload more than one files on same name and file format.</p></li></ul></div></li></ul><p class=\"s101\" style=\"padding-left: 88pt;text-indent: -18pt;text-align: left;\" id=\"4392\">o <span class=\"s70\" id=\"4393\">To get guid id we should call Guid id = Guid.NewGuid(); and string guid = id.ToString(\"N\"); ‚N‛ means guid will formatted without ‚-‚ symbol. By default guid looks like in that format 0000-0000-0000. Using ‚N‛ will remove ‚-‚so that guid will be in format of 123456.</span></p><ul id=\"l95\"><li style=\"padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4395\"><p class=\"s70\" style=\"display: inline;\" id=\"4396\">Third: we check whether directory ‚vcardimage‛ exist or not. It is very important to make sure there must be directory to save files in Vcard case, all images goes insides ‚vcardimage‛ directory. You can choose different name if you like. If directory exist we save file</p><ul id=\"l96\"><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4398\"><p class=\"s98\" style=\"display: inline;\" id=\"4399\">Directory<span style=\" color: #000;\" id=\"4400\">.Exists(directory name) will check whether passed director exist or not.</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4401\"><p class=\"s70\" style=\"display: inline;\" id=\"4402\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\" style=\"padding-left: 82pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4403\">Server.MapPath(<span style=\" color: #A21515;\" id=\"4404\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4405\"><p class=\"s70\" style=\"display: inline;\" id=\"4406\">PostedFile.SaveAs() methods used to save posted file. Posted files means user submitted page to server by clicking buttons.</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4407\"><p class=\"s70\" style=\"display: inline;\" id=\"4408\">FileUploadPhoto is id of asp:FileUpload that we created at design view or at VcardControl.ascx page</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4409\"><p class=\"s70\" style=\"display: inline;\" id=\"4410\">Forth: if director does not exist ‚else‛ statement code will be executed so we create directory first and save image after that.</p><ul id=\"l97\"><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4412\"><p class=\"s98\" style=\"display: inline;\" id=\"4413\">Directory<span style=\" color: #000;\" id=\"4414\">.CreateDirectory(directory name) methods is used to make directory.</span></p></li></ul></li></ul><ul id=\"l98\"><li style=\"padding-top: 3pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4416\"><p class=\"s70\" style=\"display: inline;\" id=\"4417\">Third: we check whether directory ‚vcardimage‛ exist or not. It is very important to make sure there must be directory to save files in Vcard case, all images goes insides ‚vcardimage‛ directory. You can choose different name if you like. If directory exist we save file</p><ul id=\"l99\"><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4419\"><p class=\"s98\" style=\"display: inline;\" id=\"4420\">Directory<span style=\" color: #000;\" id=\"4421\">.Exists(directory name) will check whether passed director exist or not.</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4422\"><p class=\"s70\" style=\"display: inline;\" id=\"4423\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\" style=\"padding-left: 82pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4424\">Server.MapPath(<span style=\" color: #A21515;\" id=\"4425\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4426\"><p class=\"s70\" style=\"display: inline;\" id=\"4427\">PostedFile.SaveAs() methods used to save posted file. Posted files means user submitted page to server by clicking buttons.</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4428\"><p class=\"s70\" style=\"display: inline;\" id=\"4429\">FileUploadPhoto is id of asp:FileUpload that we created at design view or at VcardControl.ascx page</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4430\"><p class=\"s70\" style=\"display: inline;\" id=\"4431\">Forth: if director does not exist ‚else‛ statement code will be executed so we create directory first and save image after that.</p><ul id=\"l100\"><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"4433\"><p class=\"s98\" style=\"display: inline;\" id=\"4434\">Directory<span style=\" color: #000;\" id=\"4435\">.CreateDirectory(directory name) methods is used to make directory.</span></p></li></ul></li></ul><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4436\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4437\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4438\"><br id=\"4439\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4440\"><br id=\"4441\"></p><h3 style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4442\" class=\"heading4442\"><a name=\"bookmark62\" id=\"4443\" style=\"color: green;\">Step 4: Generate Vcard:</a></h3><div id=\"contentheading4442\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"4444\"><span id=\"4445\"><img width=\"606\" height=\"395\" alt=\"image\" src=\"Image_100.png\" id=\"4446\"></span></p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 35pt;line-height: 112%;text-align: justify;\" id=\"4447\">Now we have required information, validation and image. It‟s time to generate Vcard. Writing Vcard is no difference from writing file and adding text line to file. See bellow code as reference. Only difference is structure and data. If you want to know more about Vcard structure you can visit microformat official web sites at microformat.org. Also see references<span class=\"s3\" id=\"4448\">26</span>. Your idea may be difference than mine idea.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4449\"><br id=\"4450\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4451\"><br id=\"4452\"></p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4453\"><span class=\"p\" id=\"4454\">Methods Name: GenerateVcard() Parameters: </span>string <span style=\" color: #000;\" id=\"4455\">firstName, </span>string</p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4456\">streetAddress, <span style=\" color: #00F;\" id=\"4457\">string </span>zip, <span style=\" color: #00F;\" id=\"4458\">string </span>city, <span style=\" color: #00F;\" id=\"4459\">string </span>country, <span style=\" color: #00F;\" id=\"4460\">string </span>email, <span style=\" color: #00F;\" id=\"4461\">string </span>phone, <span style=\" color: #00F;\" id=\"4462\">string </span>web and <span style=\" color: #00F;\" id=\"4463\">string </span>image</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4464\"><span class=\"p\" id=\"4465\">Methods Name: GenerateVcard() Parameters: </span>string <span style=\" color: #000;\" id=\"4466\">firstName, </span>string</p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4467\">streetAddress, <span style=\" color: #00F;\" id=\"4468\">string </span>zip, <span style=\" color: #00F;\" id=\"4469\">string </span>city, <span style=\" color: #00F;\" id=\"4470\">string </span>country, <span style=\" color: #00F;\" id=\"4471\">string </span>email, <span style=\" color: #00F;\" id=\"4472\">string </span>phone, <span style=\" color: #00F;\" id=\"4473\">string </span>web and <span style=\" color: #00F;\" id=\"4474\">string </span>image</p><p style=\"padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"4475\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4476\"><br id=\"4477\"></p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4478\">Code:</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4479\">var <span style=\" color: #000;\" id=\"4480\">vcardStringBuilder = </span>new <span style=\" color: #2B91AE;\" id=\"4481\">StringBuilder</span><span style=\" color: #000;\" id=\"4482\">();</span></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4483\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4484\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4485\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4486\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"4487\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"4488\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"4489\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"4490\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"4491\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4492\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4493\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4494\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4495\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4496\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"4497\">\":\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"4498\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4499\">);</p><p class=\"s70\" style=\"text-indent: 73pt;text-align: left;\" id=\"4500\">vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"4501\">string</span>.Empty); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4502\">\"END:VCARD\"</span>);</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4503\">return <span style=\" color: #000;\" id=\"4504\">vcardStringBuilder.ToString();</span></p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4505\">Code:</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4506\">var <span style=\" color: #000;\" id=\"4507\">vcardStringBuilder = </span>new <span style=\" color: #2B91AE;\" id=\"4508\">StringBuilder</span><span style=\" color: #000;\" id=\"4509\">();</span></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4510\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4511\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4512\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4513\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"4514\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"4515\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"4516\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"4517\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"4518\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4519\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4520\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4521\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4522\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4523\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"4524\">\":\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"4525\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4526\">);</p><p class=\"s70\" style=\"text-indent: 73pt;text-align: left;\" id=\"4527\">vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"4528\">string</span>.Empty); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4529\">\"END:VCARD\"</span>);</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4530\">return <span style=\" color: #000;\" id=\"4531\">vcardStringBuilder.ToString();</span></p><p class=\"s10\" style=\"padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"4532\">\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4533\"><br id=\"4534\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4535\"><br id=\"4536\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4537\"><span id=\"4538\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_101.png\" id=\"4539\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"4540\"><a href=\"http://en.wikipedia.org/wiki/VCard\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"4541\">26 </a>http://en.wikipedia.org/wiki/VCard for vcard example</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4542\"><br id=\"4543\"></p><p style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4544\">Methods Name: GenerateVcard() Description:</p><ul id=\"l101\"><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4546\"><p style=\"display: inline;\" id=\"4547\">Start writing with line “<span class=\"s99\" id=\"4548\">BEGIN:VCARD</span><span class=\"s70\" id=\"4549\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li style=\"padding-top: 2pt;padding-left: 35pt;text-indent: -17pt;line-height: 14pt;text-align: left;\" id=\"4550\"><p class=\"s70\" style=\"display: inline;\" id=\"4551\">I append rest of information after ‚<span style=\" color: #A21515;\" id=\"4552\">BEGIN:VCARD</span>‛ before ‚<span style=\" color: #A21515;\" id=\"4553\">END:VCARD</span><span class=\"p\" id=\"4554\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li style=\"padding-left: 35pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4555\"><p class=\"s70\" style=\"display: inline;\" id=\"4556\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4557\"><p class=\"s70\" style=\"display: inline;\" id=\"4558\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4559\">o</p><p class=\"s70\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4560\">{</p><p style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4561\">Methods Name: GenerateVcard() Description:</p><ul id=\"l102\"><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4563\"><p style=\"display: inline;\" id=\"4564\">Start writing with line “<span class=\"s99\" id=\"4565\">BEGIN:VCARD</span><span class=\"s70\" id=\"4566\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li style=\"padding-top: 2pt;padding-left: 35pt;text-indent: -17pt;line-height: 14pt;text-align: left;\" id=\"4567\"><p class=\"s70\" style=\"display: inline;\" id=\"4568\">I append rest of information after ‚<span style=\" color: #A21515;\" id=\"4569\">BEGIN:VCARD</span>‛ before ‚<span style=\" color: #A21515;\" id=\"4570\">END:VCARD</span><span class=\"p\" id=\"4571\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li style=\"padding-left: 35pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4572\"><p class=\"s70\" style=\"display: inline;\" id=\"4573\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4574\"><p class=\"s70\" style=\"display: inline;\" id=\"4575\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4576\">o</p><p class=\"s70\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4577\">{</p><p style=\"padding-left: 13pt;text-indent: 0pt;text-align: left;\" id=\"4578\"></p><p class=\"s101\" style=\"text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4579\">o</p><p class=\"s101\" style=\"text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4580\">o</p><p style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4581\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4582\"><br id=\"4583\"></p><ul id=\"l103\"><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 10pt;text-align: left;\" id=\"4585\"><p class=\"s70\" style=\"display: inline;\" id=\"4586\">Make sure to specify ‚<span style=\" color: #A21515;\" id=\"4587\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4588\">actual image string.</p><ul id=\"l104\"><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4590\"><p class=\"s70\" style=\"display: inline;\" id=\"4591\">Here PHOTO: used to indicate Vcard contains image</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4592\"><p class=\"s70\" style=\"display: inline;\" id=\"4593\">Encoding: types of encode, in our case Base64</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4594\"><p class=\"s70\" style=\"display: inline;\" id=\"4595\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4596\"><p class=\"s70\" style=\"display: inline;\" id=\"4597\">Finally Vcard is return in format of String for further process.</p></li></ul><ul id=\"l105\"><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 10pt;text-align: left;\" id=\"4599\"><p class=\"s70\" style=\"display: inline;\" id=\"4600\">Make sure to specify ‚<span style=\" color: #A21515;\" id=\"4601\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4602\">actual image string.</p><ul id=\"l106\"><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4604\"><p class=\"s70\" style=\"display: inline;\" id=\"4605\">Here PHOTO: used to indicate Vcard contains image</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4606\"><p class=\"s70\" style=\"display: inline;\" id=\"4607\">Encoding: types of encode, in our case Base64</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4608\"><p class=\"s70\" style=\"display: inline;\" id=\"4609\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4610\"><p class=\"s70\" style=\"display: inline;\" id=\"4611\">Finally Vcard is return in format of String for further process.</p></li></ul><p style=\"padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"4612\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4613\"><br id=\"4614\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4615\"><span id=\"4616\"><img width=\"606\" height=\"362\" alt=\"image\" src=\"Image_102.png\" id=\"4617\"></span></p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4618\">public byte<span style=\" color: #000;\" id=\"4619\">[] ReadImage(</span>string <span style=\" color: #000;\" id=\"4620\">image)</span></p><p class=\"s66\" style=\"padding-left: 21pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4621\">return <span style=\" color: #2B91AE;\" id=\"4622\">File</span><span style=\" color: #000;\" id=\"4623\">.ReadAllBytes(image); }</span></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"4624\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span style=\" color: #2B91AE;\" id=\"4625\">Convert</span>.ToBase64String() methods.</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4626\">public byte<span style=\" color: #000;\" id=\"4627\">[] ReadImage(</span>string <span style=\" color: #000;\" id=\"4628\">image)</span></p><p class=\"s66\" style=\"padding-left: 21pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4629\">return <span style=\" color: #2B91AE;\" id=\"4630\">File</span><span style=\" color: #000;\" id=\"4631\">.ReadAllBytes(image); }</span></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"4632\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span style=\" color: #2B91AE;\" id=\"4633\">Convert</span>.ToBase64String() methods.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4634\"></p></div><h3 style=\"padding-top: 4pt; padding-left: 8pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4635\" class=\"heading4635\"><a name=\"bookmark63\" id=\"4636\" style=\"color: green;\">Step 5: Send attach Email with Vcard</a></h3><div id=\"contentheading4635\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4637\">After generating Vcard, Vcard needs to be delivered by Email attachment. Take a look bellow code how to send email using SMTP. I use gmx<span class=\"s3\" id=\"4638\">27 </span>as an example.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4639\"><br id=\"4640\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4641\">private void <span style=\" color: #000;\" id=\"4642\">SendVcard(</span>string <span style=\" color: #000;\" id=\"4643\">subject, </span>string <span style=\" color: #000;\" id=\"4644\">body, </span>string <span style=\" color: #000;\" id=\"4645\">email, </span>string <span style=\" color: #000;\" id=\"4646\">file)</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: -41pt;text-align: left;\" id=\"4647\">{ <span style=\" color: #00F;\" id=\"4648\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4649\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #2B91AE;\" id=\"4650\">MemoryStream </span>stream = <span style=\" color: #00F;\" id=\"4651\">new </span><span style=\" color: #2B91AE;\" id=\"4652\">MemoryStream</span>(byteArray); <span style=\" color: #2B91AE;\" id=\"4653\">MailMessage </span>message = <span style=\" color: #00F;\" id=\"4654\">new </span><span style=\" color: #2B91AE;\" id=\"4655\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4656\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4657\">message.From = <span style=\" color: #00F;\" id=\"4658\">new </span><span style=\" color: #2B91AE;\" id=\"4659\">MailAddress</span>(<span style=\" color: #A21515;\" id=\"4660\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4661\">SmtpClient <span style=\" color: #000;\" id=\"4662\">client = </span><span style=\" color: #00F;\" id=\"4663\">new </span>SmtpClient<span style=\" color: #000;\" id=\"4664\">();</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4665\"><span style=\" color: #2B91AE;\" id=\"4666\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4667\">new </span><span style=\" color: #2B91AE;\" id=\"4668\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4669\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4670\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\" style=\"padding-left: 193pt;text-indent: -102pt;text-align: left;\" id=\"4671\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span style=\" color: #00F;\" id=\"4672\">new</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 24pt;text-align: left;\" id=\"4673\"><span style=\" color: #2B91AE;\" id=\"4674\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"4675\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"4676\">\" password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"4677\">true</span>;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4678\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4679\">}</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4680\">Sender id= replace with your sender id</p><ul id=\"l107\"><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4682\"><p class=\"s70\" style=\"display: inline;\" id=\"4683\">User id = replace with real user id that has access to use SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4684\"><p class=\"s70\" style=\"display: inline;\" id=\"4685\">Password = replace with real valid password to access SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4686\"><p class=\"s70\" style=\"display: inline;\" id=\"4687\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4688\">private void <span style=\" color: #000;\" id=\"4689\">SendVcard(</span>string <span style=\" color: #000;\" id=\"4690\">subject, </span>string <span style=\" color: #000;\" id=\"4691\">body, </span>string <span style=\" color: #000;\" id=\"4692\">email, </span>string <span style=\" color: #000;\" id=\"4693\">file)</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: -41pt;text-align: left;\" id=\"4694\">{ <span style=\" color: #00F;\" id=\"4695\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4696\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #2B91AE;\" id=\"4697\">MemoryStream </span>stream = <span style=\" color: #00F;\" id=\"4698\">new </span><span style=\" color: #2B91AE;\" id=\"4699\">MemoryStream</span>(byteArray); <span style=\" color: #2B91AE;\" id=\"4700\">MailMessage </span>message = <span style=\" color: #00F;\" id=\"4701\">new </span><span style=\" color: #2B91AE;\" id=\"4702\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4703\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4704\">message.From = <span style=\" color: #00F;\" id=\"4705\">new </span><span style=\" color: #2B91AE;\" id=\"4706\">MailAddress</span>(<span style=\" color: #A21515;\" id=\"4707\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4708\">SmtpClient <span style=\" color: #000;\" id=\"4709\">client = </span><span style=\" color: #00F;\" id=\"4710\">new </span>SmtpClient<span style=\" color: #000;\" id=\"4711\">();</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4712\"><span style=\" color: #2B91AE;\" id=\"4713\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4714\">new </span><span style=\" color: #2B91AE;\" id=\"4715\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4716\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4717\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\" style=\"padding-left: 193pt;text-indent: -102pt;text-align: left;\" id=\"4718\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span style=\" color: #00F;\" id=\"4719\">new</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 24pt;text-align: left;\" id=\"4720\"><span style=\" color: #2B91AE;\" id=\"4721\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"4722\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"4723\">\" password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"4724\">true</span>;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4725\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4726\">}</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4727\">Sender id= replace with your sender id</p><ul id=\"l108\"><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4729\"><p class=\"s70\" style=\"display: inline;\" id=\"4730\">User id = replace with real user id that has access to use SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4731\"><p class=\"s70\" style=\"display: inline;\" id=\"4732\">Password = replace with real valid password to access SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4733\"><p class=\"s70\" style=\"display: inline;\" id=\"4734\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4735\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4736\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4737\"><br id=\"4738\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4739\"><span id=\"4740\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_103.png\" id=\"4741\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4742\"><a href=\"http://www.gmx.com/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"4743\">27 </a><span style=\" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 10pt;\" id=\"4744\">www.gmx.com </span>is free smtp provider as gmail.com, yahoo.com and hotmail.com need upgrade to use their smtp service using API.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4745\"><br id=\"4746\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"4747\">Description:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4748\"><br id=\"4749\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 10pt;text-align: left;\" id=\"4750\">Description: <span style=\" color: #000;\" id=\"4751\">input </span>string <span style=\" color: #000;\" id=\"4752\">subject, </span>string <span style=\" color: #000;\" id=\"4753\">body, </span>string <span style=\" color: #000;\" id=\"4754\">email and </span>string <span style=\" color: #000;\" id=\"4755\">file are parameters, required to send email.</span></p><ul id=\"l109\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4757\"><p class=\"s70\" style=\"display: inline;\" id=\"4758\"><span style=\" color: #00F;\" id=\"4759\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4760\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l110\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4762\"><p class=\"s70\" style=\"display: inline;\" id=\"4763\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4764\"><p class=\"s70\" style=\"display: inline;\" id=\"4765\">MemoryStream is used to write bytes into memory</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4766\"><p class=\"s98\" style=\"display: inline;\" id=\"4767\">MailMessage <span style=\" color: #000;\" id=\"4768\">message = </span><span style=\" color: #00F;\" id=\"4769\">new </span>MailMessage<span style=\" color: #000;\" id=\"4770\">();</span></p><ul id=\"l111\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4772\"><p class=\"s98\" style=\"display: inline;\" id=\"4773\">instantiate MailMessage</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4774\"><p class=\"s70\" style=\"display: inline;\" id=\"4775\">added receiver address, subject, sender</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4776\"><p class=\"s70\" style=\"display: inline;\" id=\"4777\">using Attachment we can attach files into email</p><ul id=\"l112\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4779\"><p class=\"s70\" style=\"display: inline;\" id=\"4780\"><span style=\" color: #2B91AE;\" id=\"4781\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4782\">new </span><span style=\" color: #2B91AE;\" id=\"4783\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4784\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4785\"><p class=\"s70\" style=\"display: inline;\" id=\"4786\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4787\"><p class=\"s70\" style=\"display: inline;\" id=\"4788\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 10pt;text-align: left;\" id=\"4789\">Description: <span style=\" color: #000;\" id=\"4790\">input </span>string <span style=\" color: #000;\" id=\"4791\">subject, </span>string <span style=\" color: #000;\" id=\"4792\">body, </span>string <span style=\" color: #000;\" id=\"4793\">email and </span>string <span style=\" color: #000;\" id=\"4794\">file are parameters, required to send email.</span></p><ul id=\"l113\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4796\"><p class=\"s70\" style=\"display: inline;\" id=\"4797\"><span style=\" color: #00F;\" id=\"4798\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4799\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l114\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4801\"><p class=\"s70\" style=\"display: inline;\" id=\"4802\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4803\"><p class=\"s70\" style=\"display: inline;\" id=\"4804\">MemoryStream is used to write bytes into memory</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4805\"><p class=\"s98\" style=\"display: inline;\" id=\"4806\">MailMessage <span style=\" color: #000;\" id=\"4807\">message = </span><span style=\" color: #00F;\" id=\"4808\">new </span>MailMessage<span style=\" color: #000;\" id=\"4809\">();</span></p><ul id=\"l115\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4811\"><p class=\"s98\" style=\"display: inline;\" id=\"4812\">instantiate MailMessage</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4813\"><p class=\"s70\" style=\"display: inline;\" id=\"4814\">added receiver address, subject, sender</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4815\"><p class=\"s70\" style=\"display: inline;\" id=\"4816\">using Attachment we can attach files into email</p><ul id=\"l116\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4818\"><p class=\"s70\" style=\"display: inline;\" id=\"4819\"><span style=\" color: #2B91AE;\" id=\"4820\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4821\">new </span><span style=\" color: #2B91AE;\" id=\"4822\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4823\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4824\"><p class=\"s70\" style=\"display: inline;\" id=\"4825\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4826\"><p class=\"s70\" style=\"display: inline;\" id=\"4827\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4828\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4829\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4830\"><br id=\"4831\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"4832\">Here Vcard is sent to Email address, it make sure that email address should be valid and right person, but it also cause user may need to check spam email.</p></div><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4833\" class=\"heading4833\"><a name=\"bookmark64\" id=\"4834\" style=\"color: green;\">What if server or SMTP fails to send email?</a></h3><div id=\"contentheading4833\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"4835\">Lets create option for incase SMTP fails to send email. See code bellow</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4836\"><br id=\"4837\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4838\"><br id=\"4839\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4840\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4841\">/// <span style=\" color: #008000;\" id=\"4842\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4843\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4844\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"4845\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"4846\">public void </span><span style=\" color: #000;\" id=\"4847\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"4848\">byte </span><span style=\" color: #000;\" id=\"4849\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4850\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4851\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"4852\">true</span>;</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 5pt;text-align: left;\" id=\"4853\">Response.ContentType = <span style=\" color: #A21515;\" id=\"4854\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"4855\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"4856\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"4857\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"4858\">);</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4859\">Response.Charset = <span style=\" color: #A21515;\" id=\"4860\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4861\">HttpContext<span style=\" color: #000;\" id=\"4862\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4863\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4864\"><br id=\"4865\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4866\">Description: I will describe very shortly.</p><ul id=\"l117\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4868\"><p class=\"s70\" style=\"display: inline;\" id=\"4869\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4870\"><p class=\"s70\" style=\"display: inline;\" id=\"4871\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4872\"><p class=\"s70\" style=\"display: inline;\" id=\"4873\">clear any content if there is any by calling Clear() methods.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4874\"><p class=\"s70\" style=\"display: inline;\" id=\"4875\">Set buffer true</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4876\"><p class=\"s70\" style=\"display: inline;\" id=\"4877\">Content type is Vcard</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4878\"><p class=\"s70\" style=\"display: inline;\" id=\"4879\">Add headers and File name</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4880\"><p class=\"s70\" style=\"display: inline;\" id=\"4881\">Start writing Vcard by using BinaryWriter() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4882\"><p class=\"s70\" style=\"display: inline;\" id=\"4883\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4884\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4885\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4886\">/// <span style=\" color: #008000;\" id=\"4887\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4888\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4889\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"4890\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"4891\">public void </span><span style=\" color: #000;\" id=\"4892\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"4893\">byte </span><span style=\" color: #000;\" id=\"4894\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4895\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4896\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"4897\">true</span>;</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 5pt;text-align: left;\" id=\"4898\">Response.ContentType = <span style=\" color: #A21515;\" id=\"4899\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"4900\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"4901\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"4902\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"4903\">);</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4904\">Response.Charset = <span style=\" color: #A21515;\" id=\"4905\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4906\">HttpContext<span style=\" color: #000;\" id=\"4907\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4908\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4909\"><br id=\"4910\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4911\">Description: I will describe very shortly.</p><ul id=\"l118\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4913\"><p class=\"s70\" style=\"display: inline;\" id=\"4914\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4915\"><p class=\"s70\" style=\"display: inline;\" id=\"4916\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4917\"><p class=\"s70\" style=\"display: inline;\" id=\"4918\">clear any content if there is any by calling Clear() methods.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4919\"><p class=\"s70\" style=\"display: inline;\" id=\"4920\">Set buffer true</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4921\"><p class=\"s70\" style=\"display: inline;\" id=\"4922\">Content type is Vcard</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4923\"><p class=\"s70\" style=\"display: inline;\" id=\"4924\">Add headers and File name</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4925\"><p class=\"s70\" style=\"display: inline;\" id=\"4926\">Start writing Vcard by using BinaryWriter() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4927\"><p class=\"s70\" style=\"display: inline;\" id=\"4928\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4929\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4930\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4931\"> </span></p></div><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4932\" class=\"heading4932\"><a name=\"bookmark65\" id=\"4933\" style=\"color: green;\">Step 6: Store data to Database for later use</a></h3><div id=\"contentheading4932\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4934\">In this step we will store Vcard data into Database for later use. To store data, first we need to ensure that table and fields are exits into database. Here is over view of logic how I am going to do this job done.</p><ol id=\"l119\"><li style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 18pt;text-align: left;\" id=\"4936\"><p style=\"display: inline;\" id=\"4937\">Create table and fields into Database</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4938\"><br id=\"4939\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"4940\"><p style=\"display: inline;\" id=\"4941\">Check table before insert data.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4942\"><br id=\"4943\"></p></li><li style=\"padding-left: 6pt;text-indent: 18pt;line-height: 175%;text-align: left;\" id=\"4944\"><p style=\"display: inline;\" id=\"4945\">Insert data into table and fields using Umbraco system Create Table and Fields into Database<span class=\"s3\" id=\"4946\">28</span></p></li></ol><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4947\">There are many way to create table and fields into database. You may create using Sql Server Management Studio or you can create using C# code. Here I will explain sustainable way to program.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4948\"><br id=\"4949\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4950\"><span id=\"4951\"><img width=\"617\" height=\"475\" alt=\"image\" src=\"Image_104.png\" id=\"4952\"></span></p><p class=\"s10\" style=\"padding-top: 4pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4953\">Creating Table and Fields:</p><p class=\"s78\" style=\"padding-top: 1pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4954\">string <span style=\" color: #000;\" id=\"4955\">queryString = </span><span style=\" color: #A21515;\" id=\"4956\">@\" CREATE TABLE [vcardimage](</span></p><p class=\"s106\" style=\"padding-left: 148pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"4957\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s106\" style=\"padding-left: 148pt;text-indent: 5pt;text-align: left;\" id=\"4958\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s106\" style=\"padding-left: 148pt;text-indent: 0pt;text-align: left;\" id=\"4959\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"4960\">;</span></p><p class=\"s81\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4961\">I have created queryString first. CREATE TABLE [ table name ] is used to create table. Fields are added inside open and close brackets.</p><ul id=\"l120\"><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4963\"><p class=\"s106\" style=\"display: inline;\" id=\"4964\">[id] [int] IDENTITY(1,1) NOT NULL <span style=\" color: #000;\" id=\"4965\">means: [id] is field name, [int] short form of integer is its property, (1,1) means increase automatically by +1, NOT NULL means field id should not be null it must contains data.</span></p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4966\"><p class=\"s106\" style=\"display: inline;\" id=\"4967\">[name] [nvarchar] (250) NULL, [name]: field name is name, its property is nvarchar and (250) means its maximum capacity, Null means name field may be null or empty</p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4968\"><p class=\"s81\" style=\"display: inline;\" id=\"4969\">Street, country, phone, email, website and imageguid are similar as Name field</p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4970\"><p class=\"s81\" style=\"display: inline;\" id=\"4971\">postalCode and DateTime has different properties int (integer) and Datetime respectively.</p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4972\"><p class=\"s81\" style=\"display: inline;\" id=\"4973\">For more details check Sql query languages.</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"4974\"><br id=\"4975\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4976\"><br id=\"4977\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4978\"><span id=\"4979\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_105.png\" id=\"4980\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4981\">28 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"4982\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4983\">%E2%80%93-comments</p><p class=\"s19\" style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4984\">Note: Given creating table and fields example are only for MsSql database, if you using MySql database code may be difference<span class=\"p\" id=\"4985\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4986\"><br id=\"4987\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4988\">Executing queryString:</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4989\">Follow the steps:</p><ul id=\"l121\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4991\"><p style=\"display: inline;\" id=\"4992\">Create sql command object</p><ul id=\"l122\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4994\"><p class=\"s98\" style=\"display: inline;\" id=\"4995\"><span class=\"p\" id=\"4996\">using </span>SqlCommand <span style=\" color: #000;\" id=\"4997\">command = </span><span style=\" color: #00F;\" id=\"4998\">new </span>SqlCommand<span style=\" color: #000;\" id=\"4999\">(queryString, connection)</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5000\"><p class=\"s70\" style=\"display: inline;\" id=\"5001\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5002\"><p class=\"s70\" style=\"display: inline;\" id=\"5003\">To reuse Umbraco connection string use folling code</p><ul id=\"l123\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5005\"><p class=\"s98\" style=\"display: inline;\" id=\"5006\">SqlConnection <span style=\" color: #000;\" id=\"5007\">connection = </span><span style=\" color: #00F;\" id=\"5008\">new </span>SqlConnection<span style=\" color: #000;\" id=\"5009\">(</span>GlobalSettings<span style=\" color: #000;\" id=\"5010\">.DbDSN);</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5011\"><p class=\"s70\" style=\"display: inline;\" id=\"5012\">Make sure to add reference <span style=\" color: #00F;\" id=\"5013\">using </span>umbraco before use <span style=\" color: #2B91AE;\" id=\"5014\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5015\"><p class=\"s70\" style=\"display: inline;\" id=\"5016\">Open database connection using connection.Open();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5017\"><p class=\"s70\" style=\"display: inline;\" id=\"5018\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5019\"><p class=\"s70\" style=\"display: inline;\" id=\"5020\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"5021\"><p class=\"s70\" style=\"display: inline;\" id=\"5022\">connection.Close();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"5023\"><p class=\"s70\" style=\"display: inline;\" id=\"5024\">Finally close connection by calling Close() methods.</p></li></ul><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5025\">Executing queryString:</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5026\">Follow the steps:</p><ul id=\"l124\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"5028\"><p style=\"display: inline;\" id=\"5029\">Create sql command object</p><ul id=\"l125\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"5031\"><p class=\"s98\" style=\"display: inline;\" id=\"5032\"><span class=\"p\" id=\"5033\">using </span>SqlCommand <span style=\" color: #000;\" id=\"5034\">command = </span><span style=\" color: #00F;\" id=\"5035\">new </span>SqlCommand<span style=\" color: #000;\" id=\"5036\">(queryString, connection)</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5037\"><p class=\"s70\" style=\"display: inline;\" id=\"5038\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5039\"><p class=\"s70\" style=\"display: inline;\" id=\"5040\">To reuse Umbraco connection string use folling code</p><ul id=\"l126\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5042\"><p class=\"s98\" style=\"display: inline;\" id=\"5043\">SqlConnection <span style=\" color: #000;\" id=\"5044\">connection = </span><span style=\" color: #00F;\" id=\"5045\">new </span>SqlConnection<span style=\" color: #000;\" id=\"5046\">(</span>GlobalSettings<span style=\" color: #000;\" id=\"5047\">.DbDSN);</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5048\"><p class=\"s70\" style=\"display: inline;\" id=\"5049\">Make sure to add reference <span style=\" color: #00F;\" id=\"5050\">using </span>umbraco before use <span style=\" color: #2B91AE;\" id=\"5051\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5052\"><p class=\"s70\" style=\"display: inline;\" id=\"5053\">Open database connection using connection.Open();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5054\"><p class=\"s70\" style=\"display: inline;\" id=\"5055\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5056\"><p class=\"s70\" style=\"display: inline;\" id=\"5057\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"5058\"><p class=\"s70\" style=\"display: inline;\" id=\"5059\">connection.Close();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"5060\"><p class=\"s70\" style=\"display: inline;\" id=\"5061\">Finally close connection by calling Close() methods.</p></li></ul><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5062\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5063\"> </span></p><p class=\"s93\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5064\">Code all in one for CreateTable methods</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5065\"><br id=\"5066\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5067\"><span id=\"5068\"><img width=\"621\" height=\"478\" alt=\"image\" src=\"Image_106.png\" id=\"5069\"></span></p><p class=\"s107\" style=\"padding-top: 3pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"5070\">private static bool <span style=\" color: #000;\" id=\"5071\">CreateTable(</span>string <span style=\" color: #000;\" id=\"5072\">tableName)</span></p><p class=\"s108\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5073\">{</p><p class=\"s107\" style=\"padding-left: 74pt;text-indent: 0pt;text-align: left;\" id=\"5074\">try</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;text-align: left;\" id=\"5075\">{</p><p style=\"padding-top: 9pt;padding-left: 15pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5076\">Never forget to put code block inside try{} catch{}.</p><p class=\"s109\" style=\"padding-left: 15pt;text-indent: 79pt;text-align: left;\" id=\"5077\">SqlConnection <span style=\" color: #000;\" id=\"5078\">connection = </span><span style=\" color: #00F;\" id=\"5079\">new </span>SqlConnection<span style=\" color: #000;\" id=\"5080\">(</span>GlobalSettings<span style=\" color: #000;\" id=\"5081\">.DbDSN);</span></p><p class=\"s107\" style=\"padding-left: 94pt;text-indent: 0pt;text-align: left;\" id=\"5082\">string <span style=\" color: #000;\" id=\"5083\">queryString =</span></p><p class=\"s110\" style=\"padding-left: 114pt;text-indent: 0pt;text-align: left;\" id=\"5084\">@\" CREATE TABLE [vcardimage](</p><p class=\"s110\" style=\"padding-left: 134pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5085\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s110\" style=\"padding-left: 134pt;text-indent: 4pt;text-align: left;\" id=\"5086\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s110\" style=\"padding-left: 134pt;text-indent: 0pt;text-align: left;\" id=\"5087\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"5088\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5089\"><br id=\"5090\"></p><p class=\"s109\" style=\"padding-left: 15pt;text-indent: 44pt;text-align: left;\" id=\"5091\">SqlCommand <span style=\" color: #000;\" id=\"5092\">command = </span><span style=\" color: #00F;\" id=\"5093\">new </span>SqlCommand<span style=\" color: #000;\" id=\"5094\">(queryString, connection);</span></p><p class=\"s108\" style=\"padding-left: 94pt;text-indent: 0pt;text-align: left;\" id=\"5095\">connection.Open(); command.ExecuteNonQuery(); connection.Close(); <span style=\" color: #00F;\" id=\"5096\">return true</span>;</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5097\">}</p><p class=\"s107\" style=\"padding-left: 74pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5098\">catch</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;text-align: left;\" id=\"5099\">{</p><p class=\"s107\" style=\"padding-left: 94pt;text-indent: 0pt;text-align: left;\" id=\"5100\">return false<span style=\" color: #000;\" id=\"5101\">;</span></p><p style=\"padding-top: 5pt;padding-left: 15pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5102\">First it will try to execute code if there is nothing wrong it will return true. It means table and fields successfully created. If there is anything wrong while executing code it will catch those errors and return false. False means table and fields did not create successfully.</p><p style=\"padding-top: 10pt;padding-left: 15pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5103\">Using Try {} Catch{} page does not break on yellow dead screen if something</p><p style=\"padding-left: 15pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"5104\">goes wrong.</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"5105\">}</p><p class=\"s108\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5106\">}</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5107\"><a name=\"a60\" id=\"5108\">Check Table exist:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5109\"><br id=\"5110\"></p><p class=\"s93\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5111\">Using Umbraco system we can easily check table name see code bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5112\"><br id=\"5113\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5114\">CheckTable() methods.</p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5115\">private static bool <span style=\" color: #000;\" id=\"5116\">CheckTable(</span>string <span style=\" color: #000;\" id=\"5117\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5118\">{</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 0pt;text-align: left;\" id=\"5119\"><span style=\" color: #2B91AE;\" id=\"5120\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"5121\">new </span><span style=\" color: #2B91AE;\" id=\"5122\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"5123\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"5124\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5125\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5126\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5127\"><br id=\"5128\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5129\">Make sure to add reference: <span style=\" color: #00F;\" id=\"5130\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5131\">CheckTable() methods.</p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5132\">private static bool <span style=\" color: #000;\" id=\"5133\">CheckTable(</span>string <span style=\" color: #000;\" id=\"5134\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5135\">{</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 0pt;text-align: left;\" id=\"5136\"><span style=\" color: #2B91AE;\" id=\"5137\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"5138\">new </span><span style=\" color: #2B91AE;\" id=\"5139\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"5140\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"5141\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5142\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5143\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5144\"><br id=\"5145\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5146\">Make sure to add reference: <span style=\" color: #00F;\" id=\"5147\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"5148\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5149\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5150\"><br id=\"5151\"></p><p class=\"s93\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5152\">Intert Data:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5153\"><br id=\"5154\"></p><p class=\"s93\" style=\"padding-top: 2pt;text-indent: 0pt;text-align: left;\" id=\"5155\">database. see code bellow.</p><p class=\"s93\" style=\"padding-top: 2pt;text-indent: 0pt;text-align: left;\" id=\"5156\">database. see code bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5157\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5158\"><span id=\"5159\"><img width=\"628\" height=\"517\" alt=\"image\" src=\"Image_107.png\" id=\"5160\"></span></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5161\">InsertTable() Methods:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5162\"><br id=\"5163\"></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5164\">public static bool <span style=\" color: #000;\" id=\"5165\">InsertTable(</span>string <span style=\" color: #000;\" id=\"5166\">name, </span>string <span style=\" color: #000;\" id=\"5167\">street, </span>string <span style=\" color: #000;\" id=\"5168\">postalcode, </span>string <span style=\" color: #000;\" id=\"5169\">country, </span>string <span style=\" color: #000;\" id=\"5170\">phone, </span>string <span style=\" color: #000;\" id=\"5171\">email, </span>string <span style=\" color: #000;\" id=\"5172\">website, </span>string <span style=\" color: #000;\" id=\"5173\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5174\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: -5pt;text-align: left;\" id=\"5175\"><span style=\" color: #00F;\" id=\"5176\">string </span>tableName = <span style=\" color: #A21515;\" id=\"5177\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"5178\">try</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5179\">{</p><p class=\"s66\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5180\">if <span style=\" color: #000;\" id=\"5181\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5182\">{CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5183\">ISqlHelper <span style=\" color: #000;\" id=\"5184\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"5185\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 104pt;text-align: left;\" id=\"5186\">@\"insert into \"<span style=\" color: #000;\" id=\"5187\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"5188\">+</span></p><p class=\"s99\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5189\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5190\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"5191\">,</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5192\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5193\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5194\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5195\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5196\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5197\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5198\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5199\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5200\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5201\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"5202\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"5203\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5204\">}</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5205\"><span style=\" color: #00F;\" id=\"5206\">catch</span>(<span style=\" color: #2B91AE;\" id=\"5207\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5208\">{</p><p class=\"s66\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5209\">return false<span style=\" color: #000;\" id=\"5210\">;</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5211\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5212\"><br id=\"5213\"></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5214\">}</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5215\">InsertTable() Methods:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5216\"><br id=\"5217\"></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5218\">public static bool <span style=\" color: #000;\" id=\"5219\">InsertTable(</span>string <span style=\" color: #000;\" id=\"5220\">name, </span>string <span style=\" color: #000;\" id=\"5221\">street, </span>string <span style=\" color: #000;\" id=\"5222\">postalcode, </span>string <span style=\" color: #000;\" id=\"5223\">country, </span>string <span style=\" color: #000;\" id=\"5224\">phone, </span>string <span style=\" color: #000;\" id=\"5225\">email, </span>string <span style=\" color: #000;\" id=\"5226\">website, </span>string <span style=\" color: #000;\" id=\"5227\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5228\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: -5pt;text-align: left;\" id=\"5229\"><span style=\" color: #00F;\" id=\"5230\">string </span>tableName = <span style=\" color: #A21515;\" id=\"5231\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"5232\">try</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5233\">{</p><p class=\"s66\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5234\">if <span style=\" color: #000;\" id=\"5235\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5236\">{CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5237\">ISqlHelper <span style=\" color: #000;\" id=\"5238\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"5239\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 104pt;text-align: left;\" id=\"5240\">@\"insert into \"<span style=\" color: #000;\" id=\"5241\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"5242\">+</span></p><p class=\"s99\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5243\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5244\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"5245\">,</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5246\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5247\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5248\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5249\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5250\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5251\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5252\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5253\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5254\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5255\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"5256\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"5257\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5258\">}</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5259\"><span style=\" color: #00F;\" id=\"5260\">catch</span>(<span style=\" color: #2B91AE;\" id=\"5261\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5262\">{</p><p class=\"s66\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5263\">return false<span style=\" color: #000;\" id=\"5264\">;</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5265\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5266\"><br id=\"5267\"></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5268\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5269\"></p><p class=\"s93\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5270\">If there is no table exist, we can create table using Create<span class=\"s111\" id=\"5271\">29 </span>Table() methods<span class=\"s111\" id=\"5272\">30</span>, it‟s time to insert data into</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5273\"><br id=\"5274\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"5275\"><span id=\"5276\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_108.png\" id=\"5277\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5278\">29 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"5279\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5280\">%E2%80%93-comments</p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"5281\">30 <span class=\"s10\" id=\"5282\">See createTable() methods on previous chapter.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5283\"><br id=\"5284\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5285\">Description of <span class=\"s70\" id=\"5286\">InsertTable() Methods:</span></p><ul id=\"l127\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5288\"><p class=\"s70\" style=\"display: inline;\" id=\"5289\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5290\"><p class=\"s70\" style=\"display: inline;\" id=\"5291\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5292\"><p class=\"s70\" style=\"display: inline;\" id=\"5293\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5294\"><p class=\"s70\" style=\"display: inline;\" id=\"5295\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5296\"><p class=\"s70\" style=\"display: inline;\" id=\"5297\">Forth if not return false. Something happen wrong.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5298\"><p class=\"s70\" style=\"display: inline;\" id=\"5299\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5300\">Note: make sure to reference <span style=\" color: #00F;\" id=\"5301\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5302\">Description of <span class=\"s70\" id=\"5303\">InsertTable() Methods:</span></p><ul id=\"l128\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5305\"><p class=\"s70\" style=\"display: inline;\" id=\"5306\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5307\"><p class=\"s70\" style=\"display: inline;\" id=\"5308\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5309\"><p class=\"s70\" style=\"display: inline;\" id=\"5310\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5311\"><p class=\"s70\" style=\"display: inline;\" id=\"5312\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5313\"><p class=\"s70\" style=\"display: inline;\" id=\"5314\">Forth if not return false. Something happen wrong.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5315\"><p class=\"s70\" style=\"display: inline;\" id=\"5316\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5317\">Note: make sure to reference <span style=\" color: #00F;\" id=\"5318\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5319\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5320\"> </span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5321\">Putting all code together.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5322\"><br id=\"5323\"></p><p style=\"padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"5324\"><span class=\"s112\" style=\" background-color: #FF0;\" id=\"5325\">VcardControl.ascx.cs</span></p><p style=\"padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"5326\"><span class=\"s112\" style=\" background-color: #FF0;\" id=\"5327\">For complete code, please visit appendix page and find page title “VcardControl.ascx.cs”.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5328\"><br id=\"5329\"></p></div><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5330\" class=\"heading5330\"><a name=\"bookmark66\" id=\"5331\" style=\"color: green;\">Implement User Control:</a></h3><div id=\"contentheading5330\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5332\">Until now we just finish creating usercontrol in Visual studio, its time to publish visual studio project, publishing visual studio project generate different types of files but we only need two types of files. Dot (.) dll file and .ascx file. Dll and .ascx (usercontrol) files should be copied into Umbraco site. <u id=\"5333\">DLL file goes inside bin directory of Umbraco site and .ascx file goes to “Usercontrol” directory of Umbraco sites</u>. Follow the steps</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5334\"><br id=\"5335\"></p><ul id=\"l129\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5337\"><p class=\"s93\" style=\"display: inline;\" id=\"5338\">First publish visual project</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5339\"><br id=\"5340\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5341\"><p class=\"s93\" style=\"display: inline;\" id=\"5342\">To publish project go to Build <span class=\"s114\" id=\"5343\"></span><span class=\"s115\" id=\"5344\"> </span>Publish + your visual project name</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5345\"><br id=\"5346\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5347\"><p class=\"s93\" style=\"display: inline;\" id=\"5348\">In my case publish VcardGenerator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5349\"><br id=\"5350\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5351\"><p class=\"s93\" style=\"display: inline;\" id=\"5352\">See captured screen for references</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"5353\"><br id=\"5354\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5355\"><span id=\"5356\"><img width=\"585\" height=\"266\" alt=\"image\" src=\"Image_109.png\" id=\"5357\"></span></p><p style=\"padding-top: 4pt;padding-left: 282pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5358\">Select “File System” from</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5359\"><br id=\"5360\"></p><p class=\"s10\" style=\"padding-top: 11pt;padding-left: 289pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5361\">Browse desire location to publish web site, in my case VcardPublish <span class=\"p\" id=\"5362\">directory in Desktop.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5363\"><br id=\"5364\"></p><p class=\"s116\" style=\"padding-top: 3pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"5365\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5366\"><br id=\"5367\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5368\"><span id=\"5369\"><img width=\"148\" height=\"66\" alt=\"image\" src=\"Image_110.png\" id=\"5370\"></span></p><p style=\"padding-top: 4pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"5371\">Press</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5372\"><br id=\"5373\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5374\"><br id=\"5375\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5376\">Let‟s open published items director. In my case “VcardPublish” directory it must contain at least one directory “bin” and one user control “VcardControl” see “VcardPublish.jpg” and “VcardPublish.bin.jpg” image bellow</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5377\"><br id=\"5378\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5379\"><span id=\"5380\"><img width=\"560\" height=\"640\" alt=\"image\" src=\"Image_111.png\" id=\"5381\"></span></p><p class=\"s88\" style=\"padding-top: 4pt;padding-left: 12pt;text-indent: 0pt;text-align: left;\" id=\"5382\">VcardPublish.jpg    </p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: right;\" id=\"5383\">directory</p><p class=\"s16\" style=\"padding-left: 8pt;text-indent: -8pt;line-height: 12pt;text-align: right;\" id=\"5384\">I placed cms.dll,</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: right;\" id=\"5385\">directory</p><p class=\"s16\" style=\"padding-left: 8pt;text-indent: -8pt;line-height: 12pt;text-align: right;\" id=\"5386\">I placed cms.dll,</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5387\"></p><p style=\"padding-top: 7pt;padding-left: 204pt;text-indent: 0pt;text-align: left;\" id=\"5388\">VcardPublish.bin.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5389\"><br id=\"5390\"></p><p style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5391\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5392\">VcardPublish.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;text-align: left;\" id=\"5393\">It contains</p><p style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5394\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5395\">VcardPublish.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;text-align: left;\" id=\"5396\">It contains</p><p style=\"padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5397\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5398\"><br id=\"5399\"></p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5400\">called “ref”</p><p class=\"s16\" style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"5401\">umbraco.dll,</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5402\">called “ref”</p><p class=\"s16\" style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"5403\">umbraco.dll,</p><p style=\"padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5404\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5405\"><br id=\"5406\"></p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5407\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p style=\"padding-top: 6pt;text-indent: 0pt;text-align: left;\" id=\"5408\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5409\">VcardPublish.bin.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5410\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 112%;text-align: left;\" id=\"5411\">be copied into Umbraco directory.</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5412\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p style=\"padding-top: 6pt;text-indent: 0pt;text-align: left;\" id=\"5413\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5414\">VcardPublish.bin.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5415\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 112%;text-align: left;\" id=\"5416\">be copied into Umbraco directory.</p><p style=\"padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5417\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5418\"><br id=\"5419\"></p><p style=\"padding-top: 4pt;padding-left: 142pt;text-indent: 0pt;text-align: left;\" id=\"5420\"><span class=\"s118\" style=\" background-color: #C0C0C0;\" id=\"5421\">UmbracoWebDirectory.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5422\"><br id=\"5423\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5424\"><br id=\"5425\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5426\">- <b id=\"5427\">Asp.net User Control files should goes inside “usercontrols” directory</b></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5428\"><br id=\"5429\"></p><p class=\"s100\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5430\">- VCardGenerator.DLL file goes inside “Bin” Directory see images “<span class=\"h4\" id=\"5431\">VcardPublish.jpg”,</span></p><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5432\"><a name=\"a61\" id=\"5433\">“VcardPublish.bin.jpg” and “UmbracoWebDirectory.jpg”.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5434\"><br id=\"5435\"></p><h3 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"5436\"><a name=\"bookmark67\" id=\"5437\">Create Macro to use User Control.</a></h3><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"5438\">Copying Asp.net User Control to “usercontrol” directory and relevant DLL file into “bin” directory is not enough to use User Control, using User Control to Asp.net and using User Control to Umbraco site is different. In Umbraco site we can use User Control creating associated Marco. See image “vcard.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5439\"><br id=\"5440\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5441\"><span id=\"5442\"><img width=\"590\" height=\"384\" alt=\"image\" src=\"Image_112.png\" id=\"5443\"></span></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5444\">Select</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5445\"><br id=\"5446\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5447\">Check “Use in</p><p class=\"s88\" style=\"padding-top: 6pt;padding-left: 217pt;text-indent: 0pt;text-align: center;\" id=\"5448\">Vcard.jpg                 </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5449\"><br id=\"5450\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5451\"><br id=\"5452\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5453\">I created User Control “vcard”, selected User Control “VcardControl.ascx” Umbraco automatically add directory “usercontrol” and I checked “use in Editor”. Checked in “use in editor” will make macro available to use in Content Rich text editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5454\"><br id=\"5455\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"5456\">Let‟s create content and insert Vcard macro in content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5457\"><br id=\"5458\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"5459\">Open Umbraco back end also called Umbraco Back Office. Go to Section “Content” click “Create New. Choose “General Content” Document Type. Click “Description” Tab and navigate Insert Macro near insert image icon</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5460\"><br id=\"5461\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5462\"><span id=\"5463\"><img width=\"604\" height=\"218\" alt=\"image\" src=\"Image_113.png\" id=\"5464\"></span></p><p class=\"s45\" style=\"padding-top: 4pt;padding-left: 143pt;text-indent: 0pt;text-align: left;\" id=\"5465\">Description <span class=\"p\" id=\"5466\">Insert Macro</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5467\"><br id=\"5468\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5469\">Select <b id=\"5470\">Vcard</b></p><p style=\"padding-top: 2pt;text-indent: 0pt;text-align: right;\" id=\"5471\">from Drop down</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5472\"><br id=\"5473\"></p><p style=\"padding-top: 10pt;padding-left: 99pt;text-indent: 0pt;text-align: left;\" id=\"5474\">Press OK</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5475\"><br id=\"5476\"></p><p class=\"s93\" style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"5477\">After pressing OK Button, you must see macro inserted into content; it looks like red dotted boarder line. See image bellow for reference.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5478\"><br id=\"5479\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5480\"><span id=\"5481\"><img width=\"309\" height=\"114\" alt=\"image\" src=\"Image_114.png\" id=\"5482\"></span></p><p class=\"s119\" style=\"padding-top: 1pt;padding-left: 121pt;text-indent: 0pt;text-align: left;\" id=\"5483\">Vcardcontent.jpg       </p><p class=\"s119\" style=\"padding-top: 1pt;padding-left: 121pt;text-indent: 0pt;text-align: left;\" id=\"5484\">Vcardcontent.jpg       </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5485\"></p><p class=\"s93\" style=\"padding-top: 4pt;padding-left: 247pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5486\">A macro area is highlighted. See image “vcardcontent.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5487\"><br id=\"5488\"></p><p class=\"s100\" style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5489\">Lets Preview Vcard Content by clicking Preview Icon:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5490\"><br id=\"5491\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5492\">If you are following me, preview must look like this.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5493\"><br id=\"5494\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5495\"><span id=\"5496\"><img width=\"606\" height=\"704\" alt=\"image\" src=\"Image_115.png\" id=\"5497\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5498\"><span id=\"5499\"><img width=\"277\" height=\"342\" alt=\"image\" src=\"Image_116.png\" id=\"5500\"></span></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"5501\">1</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5502\"><br id=\"5503\"></p><p style=\"padding-top: 11pt;padding-left: 2pt;text-indent: 0pt;text-align: center;\" id=\"5504\">2</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5505\"><br id=\"5506\"></p><p style=\"padding-left: 175pt;text-indent: 0pt;text-align: left;\" id=\"5507\">3 4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5508\"><br id=\"5509\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5510\">5</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5511\"><br id=\"5512\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5513\"><br id=\"5514\"></p><p style=\"text-indent: 0pt;text-align: right;\" id=\"5515\">6</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5516\"><br id=\"5517\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5518\"><br id=\"5519\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5520\"><br id=\"5521\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5522\"><br id=\"5523\"></p><p style=\"text-indent: 0pt;text-align: center;\" id=\"5524\">7</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5525\"><br id=\"5526\"></p><p style=\"text-indent: 0pt;text-align: center;\" id=\"5527\">7</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5528\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5529\"><br id=\"5530\"></p><ul id=\"l130\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5532\"><p class=\"s120\" style=\"display: inline;\" id=\"5533\">- <span class=\"s121\" id=\"5534\">107 - </span>| <span class=\"s122\" id=\"5535\">W r i t t e n B y J i v a</span></p></li></ul><ol id=\"l131\"><li style=\"padding-top: 10pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"5537\"><p style=\"display: inline;\" id=\"5538\">Red strip: preview mode</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5539\"><br id=\"5540\"></p><p class=\"s122\" style=\"text-indent: 0pt;text-align: left;\" id=\"5541\">n T h a p a</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5542\"><br id=\"5543\"></p><p class=\"s122\" style=\"text-indent: 0pt;text-align: left;\" id=\"5544\">n T h a p a</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5545\"></p></li><li style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"5546\"><p style=\"display: inline;\" id=\"5547\">Vcard navigation bar show up 3- Input text box, Image upload,</p></li></ol><p style=\"padding-left: 43pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"5548\">Create button environments</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5549\"><br id=\"5550\"></p><ol id=\"l132\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5552\"><p style=\"display: inline;\" id=\"5553\">Error Summary. Press “Create” button without typing. It show up required field errors</p></li><li style=\"padding-top: 10pt;padding-left: 25pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"5554\"><p style=\"display: inline;\" id=\"5555\">Name: required error message 6- Email: Required error message</p></li></ol><ol id=\"l133\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5557\"><p style=\"display: inline;\" id=\"5558\">Validation: email validation works. I tried to input “jeevan_2np at yahoo.com” email id, which does not contain</p><p style=\"padding-left: 43pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5559\">@ character, validation is not pass, it show up error message.</p><h2 style=\"padding-top: 3pt; padding-left: 20pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5560\" class=\"heading5560\"><a name=\"bookmark68\" id=\"5561\" style=\"color: lime;\">Extending Xslt Using .NET Class</a></h2><div id=\"contentheading5560\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 20pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5562\">In many cases Xslt may not be enough to fetch data or to process data in that case you can easily extend XSLT using .NET Class. Here I show how to use it, In Vcard website, people may interested to see recent Vcard. Name and address are fetched using .NET Class to extend XSLT.</p><p style=\"padding-top: 10pt;padding-left: 20pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5563\">Let‟s add Class. If you followed me, add new class in Visual studio VCardGenerator solution where we created User Controls. I choose class name “RecentVcard” and press Add. See captured screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5564\"><br id=\"5565\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5566\"><span id=\"5567\"><img width=\"652\" height=\"689\" alt=\"image\" src=\"Image_117.png\" id=\"5568\"></span></p><ol id=\"l134\"><li style=\"padding-top: 4pt;padding-left: 367pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5570\"><p style=\"display: inline;\" id=\"5571\">Recently added Class “RecentVcard.cs”</p></li><li style=\"padding-top: 10pt;padding-left: 367pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5572\"><p style=\"display: inline;\" id=\"5573\">I added two references, umbraco.DataLayer and Umbraco.</p></li><li style=\"padding-top: 10pt;padding-left: 367pt;text-indent: -18pt;text-align: right;\" id=\"5574\"><p style=\"display: inline;\" id=\"5575\">Method Name</p></li></ol></div></li></ol><p class=\"s45\" style=\"text-indent: 0pt;text-align: right;\" id=\"5576\">2 <span class=\"s123\" id=\"5577\">1 </span><span class=\"p\" id=\"5578\">GetVcardData().</span></p><p class=\"s27\" style=\"padding-top: 9pt;text-indent: 0pt;line-height: 12pt;text-align: right;\" id=\"5579\"><a name=\"a62\" id=\"5580\">- </a><span class=\"h4\" id=\"5581\">GetVcardData()</span></p><p class=\"s124\" style=\"padding-left: 202pt;text-indent: 0pt;line-height: 18pt;text-align: left;\" id=\"5582\">3 <b id=\"5583\">method is going to</b></p><h4 style=\"padding-top: 2pt;padding-left: 367pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5584\">use in XSLT so that it must be public access modifier and Static method declaration<span class=\"p\" id=\"5585\">.</span></h4><p class=\"s93\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 117%;text-align: left;\" id=\"5586\">Requirements: when you extend .NET Class you should have some basic knowledge which I did not cover here. My assumption is you already know basic things about</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5587\"><br id=\"5588\"></p><ol id=\"l135\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5590\"><p class=\"s93\" style=\"display: inline;\" id=\"5591\">Adding References, in my case I am using Umbraco system to fetch data; you need to add Umbraco.DataLayer and Umraco references in your Visual Project.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5592\"><br id=\"5593\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5594\"><p class=\"s93\" style=\"display: inline;\" id=\"5595\">Know how to select data from MsSql and sorting data (ascending or descending)</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5596\"><br id=\"5597\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"5598\"><p class=\"s93\" style=\"display: inline;\" id=\"5599\">In Vcard web Recent Vcard will be selected top 10 lists from database and should be order by latest Vcard should be at top.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5600\"><br id=\"5601\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5602\"><p class=\"s93\" style=\"display: inline;\" id=\"5603\">Looping. You should know how to loop data using while or foreach.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5604\"><br id=\"5605\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"5606\"><p class=\"s93\" style=\"display: inline;\" id=\"5607\">Know about static methods and where to use it. If you want to use methods in XSLT it must be declear as static and public access modifier.</p></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"5608\"><br id=\"5609\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5610\">Code inside GetVcardData() method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5611\"><br id=\"5612\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"5613\">I am going use ISqlHelper class provided by Umbraco to fetch data from Database, but you can fetch using asp.net way if you like. Here I show you to fetch data from Database using Umbraco. See code bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5614\"><br id=\"5615\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5616\"><span id=\"5617\"><img width=\"603\" height=\"521\" alt=\"image\" src=\"Image_118.png\" id=\"5618\"></span></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 13pt;text-indent: 0pt;text-align: left;\" id=\"5619\">public static string <span style=\" color: #000;\" id=\"5620\">GetVcardData()</span></p><p class=\"s70\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5621\">{</p><p class=\"s98\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5622\">ISqlHelper <span style=\" color: #000;\" id=\"5623\">getVcard = </span>DataLayerHelper<span style=\" color: #000;\" id=\"5624\">.CreateSqlHelper(</span>GlobalSettings<span style=\" color: #000;\" id=\"5625\">.DbDSN);</span></p><p class=\"s98\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5626\">IRecordsReader <span style=\" color: #000;\" id=\"5627\">read = getVcard.ExecuteReader(</span><span style=\" color: #A21515;\" id=\"5628\">@\"select top 10 id, name, country</span></p><p class=\"s99\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5629\">from vcardimage where id &gt; @id order by id desc\"<span style=\" color: #000;\" id=\"5630\">, getVcard.CreateParameter(</span>\"@id\"<span style=\" color: #000;\" id=\"5631\">, </span>\"0\"<span style=\" color: #000;\" id=\"5632\">));</span></p><p class=\"s70\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5633\"><span style=\" color: #00F;\" id=\"5634\">string </span>data = <span style=\" color: #A21515;\" id=\"5635\">\"\"</span>; <span style=\" color: #00F;\" id=\"5636\">while </span>(read.Read())</p><p class=\"s70\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5637\">{</p><p class=\"s70\" style=\"padding-left: 85pt;text-indent: 0pt;text-align: left;\" id=\"5638\">data += <span style=\" color: #A21515;\" id=\"5639\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span style=\" color: #A21515;\" id=\"5640\">\"name\"</span>) +</p><p class=\"s99\" style=\"padding-left: 86pt;text-indent: 0pt;text-align: left;\" id=\"5641\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span style=\" color: #000;\" id=\"5642\">+ read.GetString(</span>\"country\"<span style=\" color: #000;\" id=\"5643\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span style=\" color: #000;\" id=\"5644\">;</span></p><p class=\"s70\" style=\"padding-left: 76pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5645\">}</p><p class=\"s99\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5646\"><span style=\" color: #00F;\" id=\"5647\">return </span>\"&lt;ul&gt;\" <span style=\" color: #000;\" id=\"5648\">+ data + </span>\"&lt;/ul\"<span style=\" color: #000;\" id=\"5649\">;</span></p><p class=\"s70\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5650\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5651\"><br id=\"5652\"></p><p class=\"s40\" style=\"padding-top: 2pt;padding-left: 13pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"5653\">Description:</p><ul id=\"l136\"><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"5655\"><p class=\"s40\" style=\"display: inline;\" id=\"5656\">ISqlHelper object used to connect to database, GlobalSettings.DbDSN is use to retrieve database connection string from web.config file.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: justify;\" id=\"5657\"><p class=\"s40\" style=\"display: inline;\" id=\"5658\">IRecorderReader object contains method ExecuteReader(). ExecuteReater() has two parameters, first parameters is query string and second is parameters.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"5659\"><p class=\"s40\" style=\"display: inline;\" id=\"5660\">‚Select to 10 id, name, country‛ means select id, name and country from table name vcardimage and order by desc (desending) order.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"5661\"><p class=\"s40\" style=\"display: inline;\" id=\"5662\">I use while loop to loop data.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"5663\"><p class=\"s40\" style=\"display: inline;\" id=\"5664\">By calling GetString() methods Umbraco retrieve data as</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"5665\"><span id=\"5666\"><img width=\"648\" height=\"422\" alt=\"image\" src=\"Image_119.png\" id=\"5667\"></span></p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5668\"><span class=\"p\" id=\"5669\">If you are following me, RecentVcard class should looks like bellow, see captured screen. Now you need to publish your website. Go to </span>Build <span class=\"s89\" id=\"5670\"></span><span class=\"s28\" id=\"5671\"> </span>Publish VCardGenerator<span class=\"p\" id=\"5672\">. Select </span>Publish Method <span class=\"s89\" id=\"5673\"></span><span class=\"s28\" id=\"5674\"> </span>file System<span class=\"p\" id=\"5675\">. Select </span>Target Location <span class=\"p\" id=\"5676\">and press “</span>Publish<span class=\"p\" id=\"5677\">” button. It should generate </span>VCardControl.dll <span class=\"p\" id=\"5678\">file inside “Bin” Directory of your published directory. Copy that </span>VCardControl.dll <span class=\"p\" id=\"5679\">file to Umbraco website “</span>Bin<span class=\"p\" id=\"5680\">” Directory. If you are following me, you should already copied </span>VCardControl.dll <span class=\"p\" id=\"5681\">file into Umbraco website “</span>Bin<span class=\"p\" id=\"5682\">” Directory during User Control topics. You should replace old </span>VCardControl.dll <span class=\"p\" id=\"5683\">file with new </span>VCardControl.dll <span class=\"p\" id=\"5684\">file. We can register our </span>RecentVcard <span class=\"p\" id=\"5685\">class into Umbraco website </span>xsltExtensions.config <span class=\"p\" id=\"5686\">file.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5687\"><br id=\"5688\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5689\"><br id=\"5690\"></p><p class=\"s88\" style=\"padding-left: 63pt;text-indent: 0pt;text-align: left;\" id=\"5691\">RecentVcard     </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5692\"><br id=\"5693\"></p><p class=\"s88\" style=\"padding-left: 63pt;text-indent: 0pt;text-align: left;\" id=\"5694\">RecentVcard     </p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"5695\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5696\"><br id=\"5697\"></p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: justify;\" id=\"5698\">Overview of <i id=\"5699\">VCardGenerator </i>visual studio solution</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5700\"><br id=\"5701\"></p><ul id=\"l137\"><li style=\"padding-left: 44pt;text-indent: -18pt;text-align: left;\" id=\"5703\"><p style=\"display: inline;\" id=\"5704\">One user Control “VcardControl.ascx” use to generate Vcard</p></li><li style=\"padding-top: 11pt;padding-left: 44pt;text-indent: -18pt;text-align: left;\" id=\"5705\"><p style=\"display: inline;\" id=\"5706\">One Class “RecentVcard.cs” use to fetch data from Database</p></li><li style=\"padding-top: 11pt;padding-left: 44pt;text-indent: -18pt;text-align: left;\" id=\"5707\"><p style=\"display: inline;\" id=\"5708\">Added two references</p></li></ul><ol id=\"l138\"><li style=\"padding-top: 11pt;padding-left: 80pt;text-indent: -18pt;text-align: left;\" id=\"5710\"><p style=\"display: inline;\" id=\"5711\">Umbraco.DataLayer</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5712\"><br id=\"5713\"></p></li><li style=\"padding-left: 80pt;text-indent: -18pt;text-align: left;\" id=\"5714\"><p style=\"display: inline;\" id=\"5715\">Umbraco</p></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"5716\"><br id=\"5717\"></p><p style=\"padding-left: 62pt;text-indent: 0pt;text-align: left;\" id=\"5718\">See code line 5 and 6 in RecentVcard Class.</p><h3 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5719\"><a name=\"bookmark69\" id=\"5720\">Registering .NET Class on config file</a></h3><p style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 35pt;line-height: 112%;text-align: justify;\" id=\"5721\"><i id=\"5722\">RecentVcard </i>class returns latest ten list of recent vcard from database, before to use <i id=\"5723\">RecentVcard </i>class, Umbraco requires registering first. We can use <i id=\"5724\">RecentVcard </i>class only after registering <i id=\"5725\">RecentVard </i>class into Umbraco <i id=\"5726\">xsltExtensions.config </i>file. <i id=\"5727\">xsltExtesion.config </i>file is xml file which can be found inside “config” directory in Umbraco website. Go To “config” directory and open <i id=\"5728\">xsltExtension.config </i>file. You can either use visual studio or other software program, I am using Notepad ++<span class=\"s3\" id=\"5729\">31 </span>open source software. See captured screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5730\"><span id=\"5731\"><img width=\"644\" height=\"678\" alt=\"image\" src=\"Image_120.png\" id=\"5732\"></span></p><p style=\"padding-top: 2pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"5733\"><span class=\"s125\" id=\"5734\">1 </span><span class=\"s126\" style=\" background-color: #FF0;\" id=\"5735\">xsltExtension.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5736\"><br id=\"5737\"></p><p style=\"padding-top: 4pt;padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5738\">2</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5739\"><br id=\"5740\"></p><p class=\"s127\" style=\"padding-top: 4pt;padding-left: 48pt;text-indent: 0pt;text-align: center;\" id=\"5741\">5                                                                     <span class=\"p\" id=\"5742\">3                 4</span></p><ol id=\"l139\"><li style=\"padding-top: 9pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5744\"><p style=\"display: inline;\" id=\"5745\">File location of xsltExtensions.config</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5746\"><p style=\"display: inline;\" id=\"5747\">Assembly name “VcardGenerator”</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5748\"><p style=\"display: inline;\" id=\"5749\">Type = first one before dot is Namespace</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5750\"><p style=\"display: inline;\" id=\"5751\">Type = second after dot is Class name</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5752\"><p style=\"display: inline;\" id=\"5753\">Alias : it is use in Xslt to refer assembly</p></li></ol><h4 style=\"padding-top: 2pt;padding-left: 138pt;text-indent: 0pt;text-align: left;\" id=\"5754\"><a name=\"a63\" id=\"5755\">Did you get confuse?</a></h4><h4 style=\"padding-top: 2pt;padding-left: 138pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5756\">See image bellow “VCardGenerator.extension.jpg” and match number.</h4><p style=\"padding-left: 138pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"5757\">Make changed in your xsltExtensions.config file as mine see image xsltExtension.jpg if you want to follow me.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5758\"><br id=\"5759\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5760\">2</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5761\"><br id=\"5762\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;\" id=\"5763\">3 4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5764\"><br id=\"5765\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;\" id=\"5766\">4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5767\"><br id=\"5768\"></p><p style=\"padding-top: 4pt;padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5769\"><a name=\"a64\" id=\"5770\"><span class=\"s128\" style=\" background-color: #FF0;\" id=\"5771\">VCardGenerator.extension.jpg</span></a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5772\"><br id=\"5773\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"5774\"><span id=\"5775\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_121.png\" id=\"5776\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5777\"><a href=\"http://notepad-plus-plus.org/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"5778\">31 </a><a href=\"http://notepad-plus-plus.org/\" class=\"s11\" target=\"_blank\" id=\"5779\">http://notepad-plus-plus.org/</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5780\"><br id=\"5781\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5782\"><br id=\"5783\"></p><p style=\"padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5784\">After made change on xsltExtensions.config file, make sure to save changed.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5785\"><br id=\"5786\"></p><h4 style=\"padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5787\"><a name=\"a65\" id=\"5788\">Extending XSLT using .net Class Practice</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5789\"><br id=\"5790\"></p><p style=\"padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5791\">We have now VCardGenerator.dll file inside “Bin” directory and we also registered our Class on “xsltExtentions.config” file. Remember alias we specified at “xsltExtensions.config” file. If you are following me, alias is “recentvcard”.</p><h4 style=\"padding-top: 10pt;padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5792\"><a name=\"a66\" id=\"5793\">Create Xslt:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5794\"><br id=\"5795\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5796\"><span id=\"5797\"><img width=\"332\" height=\"203\" alt=\"image\" src=\"Image_122.jpg\" id=\"5798\"></span></p><p style=\"padding-top: 4pt;padding-left: 263pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5799\">I have created new xslt for Recent Vcard, see captured screen left. Go to backend part of umbraco website, Select <span class=\"s89\" id=\"5800\"></span><span class=\"s28\" id=\"5801\"> </span>Developer <span class=\"s89\" id=\"5802\"></span><span class=\"s28\" id=\"5803\"> </span>XSLT Files <span class=\"s89\" id=\"5804\"></span><span class=\"s28\" id=\"5805\"> </span>Right Click and click on “Create”.</p><p style=\"padding-top: 10pt;padding-left: 263pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"5806\">Filename: “ RecentVcard” Choose a Template: “Clean”</p><p style=\"padding-left: 21pt;text-indent: 242pt;line-height: 114%;text-align: left;\" id=\"5807\">Checked: “Create Macro” by checked in Umbraco will create matching macro for us automatically,</p><p style=\"padding-top: 9pt;padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5808\">Press <span class=\"s89\" id=\"5809\"></span><span class=\"s28\" id=\"5810\"> </span><i id=\"5811\">Create </i>Button.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5812\"><br id=\"5813\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5814\"><span id=\"5815\"><img width=\"419\" height=\"109\" alt=\"image\" src=\"Image_123.png\" id=\"5816\"></span></p><p class=\"s8\" style=\"padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5817\">Open “RecentVcard.xslt”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5818\"><br id=\"5819\"></p><p style=\"padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5820\">We can registered .net class inside xsl:stylesheet, using xslns. See the captured screen right. See highlighted area on</p><p style=\"padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5821\">right image, if you already worked with Xslt you may know xmlns. Xmlns is xml namespace for a document. After colon you provide namespace name, I choose “recentVcard”. You can choose different if you want. Use urn colon alias that you specified at xsltExtensions.config” see “xsltExtension.jpg” image, I my case alias is “recentvcard”. URN is Uniform Resource Name.</p><p style=\"padding-top: 9pt;padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5822\">public static method inside .NET class can be access using xml namespace in XSLT. In RecentVcard Class has one static public methods called <i id=\"5823\">GetVcardData()</i>. To access that public method we can use namespace colon and method name. If there are any parameters, we can easily pass. See example bellow how I accessed GetVcardData() method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5824\"><br id=\"5825\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5826\"><br id=\"5827\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5828\"><span id=\"5829\"><img width=\"623\" height=\"17\" alt=\"image\" src=\"Image_124.jpg\" id=\"5830\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5831\"><br id=\"5832\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5833\"><span id=\"5834\"><img width=\"638\" height=\"217\" alt=\"image\" src=\"Image_125.png\" id=\"5835\"></span></p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"5836\">Use xml namespace Specify method after</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5837\">Tips: xml namespace and methods are separated by colon</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5838\">Tips: xml namespace and methods are separated by colon</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5839\"></p><p style=\"padding-top: 2pt;padding-left: 165pt;text-indent: 0pt;text-align: left;\" id=\"5840\">colon.</p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5841\">Use disable-out-escaping= “yes”. It means that do not escape special character because method GetVcardData() returns html tags, ul, li, span tags.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5842\"><br id=\"5843\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5844\"><br id=\"5845\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5846\"><span id=\"5847\"><img width=\"610\" height=\"431\" alt=\"image\" src=\"Image_126.jpg\" id=\"5848\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5849\">Code all in one:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5850\"><br id=\"5851\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5852\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"5853\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5854\"><br id=\"5855\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5856\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5857\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"5858\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5859\"><br id=\"5860\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5861\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5862\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5863\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5864\"><br id=\"5865\"></p></div><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5866\" class=\"heading5866\"><a name=\"bookmark70\" id=\"5867\" style=\"color: green;\">Modify Macro:</a></h3><div id=\"contentheading5866\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5868\">Once you have XSLT, you can insert Xslt into templates, in my case I am going to insert into Content. So we need to check “Use in editor” option. Go to <span class=\"s89\" id=\"5869\"></span>Macros <span class=\"s89\" id=\"5870\"></span><span class=\"s28\" id=\"5871\"> </span>Open “Recent Vcard” <span class=\"s89\" id=\"5872\"></span><span class=\"s28\" id=\"5873\"> </span>checked on “Use in Editor” and Remember to “S<i id=\"5874\">ave”</i>. See captured screen bellow for references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5875\"><br id=\"5876\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5877\"><span id=\"5878\"><img width=\"638\" height=\"535\" alt=\"image\" src=\"Image_127.png\" id=\"5879\"></span></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"5880\">By selecting “Use in editor” makes macro available to use in content section.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5881\"><span id=\"5882\"><img width=\"386\" height=\"271\" alt=\"image\" src=\"Image_128.jpg\" id=\"5883\"></span></p><h4 style=\"padding-top: 4pt;padding-left: 22pt;text-indent: 0pt;text-align: left;\" id=\"5884\"><a name=\"a67\" id=\"5885\">Create Content: “Recent Vcard”</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5886\"><br id=\"5887\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5888\">Go to Content Section <span class=\"s89\" id=\"5889\"></span><span class=\"s28\" id=\"5890\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5891\"></span><span class=\"s28\" id=\"5892\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5893\">Go to Content Section <span class=\"s89\" id=\"5894\"></span><span class=\"s28\" id=\"5895\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5896\"></span><span class=\"s28\" id=\"5897\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p style=\"padding-left: 243pt;text-indent: 0pt;text-align: left;\" id=\"5898\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5899\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5900\"><br id=\"5901\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5902\"><span id=\"5903\"><img width=\"634\" height=\"231\" alt=\"image\" src=\"Image_129.png\" id=\"5904\"></span></p><p style=\"padding-left: 34pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5905\">It should create Content “Recent Vcard” and visible at left side menu. Provide following information. “Content Title”: Recent Card and checked in use in Navigation so that “Recent Vcard” will show up in navigation bar</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5906\"><br id=\"5907\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5908\"><span id=\"5909\"><img width=\"648\" height=\"298\" alt=\"image\" src=\"Image_130.png\" id=\"5910\"></span></p><p style=\"padding-top: 4pt;padding-left: 188pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5911\">Click on Tab“Description” and Insert Macro on content area. Select Marco “Recent Vcard”, after inserting Macro “RecentVcard”. Click on Tab “Preoperties” Select Template “General Content” and Press “Save and Publish Icon”. Create few Vcard and check. It should show up on web site.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5912\"><br id=\"5913\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5914\">Preview content by click on preview icon.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5915\"><br id=\"5916\"></p><p style=\"padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5917\">If you are following me, Vcard website should look like bellow captured screen.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5918\"><br id=\"5919\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5920\"><span id=\"5921\"><img width=\"638\" height=\"274\" alt=\"image\" src=\"Image_131.png\" id=\"5922\"></span></p><h2 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5923\" class=\"heading5923\"><a name=\"bookmark71\" id=\"5924\" style=\"color: lime;\">Page not Found Error:</a></h2><div id=\"contentheading5923\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5925\">It is nice to replace default Umbraco error HTTP handler, there are many error handler 500, 404 and 403 etc. 404 error are page not found error, due to some reason, accidental file deletion, dead links and user request not existing page causes HTTP 404 errors. Umbraco handles 404 errors by showing its default error message. We can easily override 404 errors with custom page. First let‟s see Umbraco default error 404 page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5926\"><br id=\"5927\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5928\"><span id=\"5929\"><img width=\"638\" height=\"414\" alt=\"image\" src=\"Image_132.png\" id=\"5930\"></span></p><p style=\"padding-top: 11pt;padding-left: 49pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5931\">I requested not existing page /test.aspx page, which was not exist. Umbraco handle 404 error. See highlighted text, it explain well, what to do. Sometimes it may not enough so need to extra work or needs to add extra code in web.config file.</p><h3 style=\"padding-top: 7pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5932\" class=\"heading5932\"><a name=\"bookmark72\" id=\"5933\" style=\"color: green;\">Create Custom 404 error page.</a></h3><div id=\"contentheading5932\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5934\">I am creating simple 404 error page. If you want to follow me go <span class=\"s89\" id=\"5935\"></span>Content <span class=\"s89\" id=\"5936\"></span><span class=\"s28\" id=\"5937\"> </span>Right click and click on “Create”. Name: “Page not Found” and Select “General Content” Document Type. Do not check “Use in Navigation” because I don‟t want to show this page into navigation. This page should be displayed only if 404 errors occur. Go to Tab “Title” provide content title “Page Not Found”, Go to Tab “Description” and type “Requested page not found, temporarily unavailable or an out-of-date bookmark/favorite” Go to Tab “Properties” Template <span class=\"s89\" id=\"5938\"></span><span class=\"s28\" id=\"5939\"> </span>“General Content”. Finally press “Save and Publish Icon”. Hold a second on Properties tab and look id of content because Umbraco needs content id. See “pagenotfound.jpg” image as references. Each content item gets unique id. We need to specify unique id of items into umbracoSettings.config files.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5940\"><br id=\"5941\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5942\"><span id=\"5943\"><img width=\"609\" height=\"373\" alt=\"image\" src=\"Image_133.png\" id=\"5944\"></span></p><p style=\"padding-top: 11pt;padding-left: 292pt;text-indent: 0pt;text-align: left;\" id=\"5945\">pagenotfound.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5946\"><br id=\"5947\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5948\"><br id=\"5949\"></p><p style=\"padding-left: 342pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5950\">In my case node id or unique id for content “Page not found” is 1098. You may have different node or unique id</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5951\"><br id=\"5952\"></p></div><h3 style=\"padding-top: 4pt; padding-left: 11pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5953\" class=\"heading5953\"><a name=\"bookmark73\" id=\"5954\" style=\"color: green;\">Modifying umbracoSettings.config file:</a></h3><div id=\"contentheading5953\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 54pt;line-height: 115%;text-align: left;\" id=\"5955\">umbracoSettings.config file can be found inside “config” directory, open umbracoSettings.config file using notepad or other program. It‟s xml document, find</p><p style=\"padding-left: 11pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5956\">&lt;errors&gt; elements inside umbracoSettings.config. <i id=\"5957\">errors </i>element contain child <i id=\"5958\">error404 </i>element. Set its value to node id of content, in my case 1098 and Save umbracoSettings.config file. See captured screen bellow for references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5959\"><br id=\"5960\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5961\"><br id=\"5962\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5963\"><span id=\"5964\"><img width=\"317\" height=\"147\" alt=\"image\" src=\"Image_134.png\" id=\"5965\"></span></p><p class=\"s10\" style=\"padding-left: 211pt;text-indent: 0pt;text-align: left;\" id=\"5966\">Umbraco <span class=\"p\" id=\"5967\">error404.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5968\"><br id=\"5969\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5970\"><span id=\"5971\"><img width=\"594\" height=\"317\" alt=\"image\" src=\"Image_135.png\" id=\"5972\"></span></p><p class=\"s64\" style=\"padding-top: 4pt;padding-left: 102pt;text-indent: 0pt;text-align: left;\" id=\"5973\"><span style=\" color: #000;\" id=\"5974\">Note: in some cases Umbraco 404 error may override by IIS (internet Information Service) or IIS may not hand over 404 error to Umbraco to handle in such case 404 error page will end up with ugly yellow dead screen page. To prevent from this we can specify by telling IIS not to handle, instead hand over all 404 error to Asp.net web site in our case Umbraco site by adding few lines of code into web.config file. Web.config file can be found in root directory of Umbraco System. Find system.webserver elements and add new element </span>&lt;<span style=\" color: #A21515;\" id=\"5975\">httpErrors </span><span style=\" color: #F00;\" id=\"5976\">existingResponse</span>=<span style=\" color: #000;\" id=\"5977\">\"</span>PassThrough<span style=\" color: #000;\" id=\"5978\">\" </span>/&gt; <span style=\" color: #000;\" id=\"5979\">inside system.webserver elements. Using existingRespone= “passThrough” means IIS does not override custom errors.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5980\"><br id=\"5981\"></p></div></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5982\" class=\"heading5982\"><a name=\"bookmark74\" id=\"5983\" style=\"color: lime;\">Conclusion:</a></h2><div id=\"contentheading5982\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"5984\"><br id=\"5985\"></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5986\">Learning process is not difficult if we start from basic, every complex system begins with basic and simple structure. Here I provided basic concept of Umbraco using examples rather than theory. I use Vcard as a case to demonstrate practical examples of basic concept of Umbraco. Vcard was virtual website it does not exist on live but concept that I used in Vcard was easy to understand how to start building Umbraco website from scratch. I started to show installation of Umbraco cms, most of new developer faces many problems to install. Developing Umbraco site from empty Umbraco installation is great challenge to new developer but it‟s a way to learn Umbraco from inside, I started to build Vcard site from scratch, empty Umbraco installation. Creating DocumentType, Template and Content is core of Umbraco CMS. If you reading books from beginning without skipping chapter you should be able to understand connection between DocumentType, Template and Content. I provided information about fetching data from xml using xslt and extending xslt using</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5987\">.net class provided basic concept of how to extend Umbraco. All these concepts and examples can be used for your own purpose and needs. You are familiar with how to fetch and insert data from database to Umbraco and Umbraco to Database, extending Umbraco using Xslt, user control and .net class. In last chapter I provided how to solve umbraco 404 error default page problem with custom 404 errors page in case you get errors. I also touch about security on website which will provide knowledge to secure Umbraco site even though security is not basic on Umbraco sites.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5988\"><br id=\"5989\"></p></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading5990\" class=\"heading5990\"><a name=\"bookmark75\" id=\"5991\" style=\"color: lime;\">References:</a></h2><div id=\"contentheading5990\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"5992\">Taken date: May-17-2011 Xslt and Xpath</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5993\"><a href=\"http://www.w3schools.com/xsl/\" id=\"5994\">http://www.w3schools.com/xsl/</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5995\"><br id=\"5996\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5997\">Umbraco to Database and Database to Umbraco</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5998\"><br id=\"5999\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"6000\">http://our.umbraco.org/forum/developers/api-questions/12248-Get-value-from-base- into-database</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"6001\">http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205--- comments</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"6002\"><a href=\"http://our.umbraco.org/wiki\" class=\"a\" target=\"_blank\" id=\"6003\">Wiki </a><a href=\"http://our.umbraco.org/wiki\" target=\"_blank\" id=\"6004\">http://our.umbraco.org/wiki</a></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"6005\">http://our.umbraco.org/wiki/recommendations/recommended-reading-for-net- developers</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6006\"><br id=\"6007\"></p></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading6008\" class=\"heading6008\"><a name=\"bookmark76\" id=\"6009\" style=\"color: lime;\">Extra files:</a></h2><div id=\"contentheading6008\" style=\"border: 5px solid rgb(0, 255, 0);\"><h3 style=\"padding-top: 12pt; padding-bottom: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading6010\" class=\"heading6010\"><a name=\"bookmark77\" id=\"6011\" style=\"color: green;\">Web grid.</a></h3><div id=\"contentheading6010\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"6012\"><span id=\"6013\"><img width=\"599\" height=\"371\" alt=\"image\" src=\"Image_136.jpg\" id=\"6014\"></span></p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6015\"><a name=\"bookmark78\" id=\"6016\">File “VcardControl.ascx”</a></h3><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6017\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"6018\">&lt;%</span><span class=\"s66\" id=\"6019\">@ </span><span class=\"s67\" id=\"6020\">Control </span><span class=\"s68\" id=\"6021\">Language</span><span class=\"s66\" id=\"6022\">=\"C#\" </span><span class=\"s68\" id=\"6023\">AutoEventWireup</span><span class=\"s66\" id=\"6024\">=\"true\" </span><span class=\"s68\" id=\"6025\">CodeBehind</span><span class=\"s66\" id=\"6026\">=\"VcardControl.ascx.cs\" </span><span class=\"s68\" id=\"6027\">Inherits</span><span class=\"s66\" id=\"6028\">=\"VCardGenerator.VcardControl\" </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"6029\">%&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6030\"><br id=\"6031\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6032\">&lt;<span style=\" color: #800000;\" id=\"6033\">form </span><span style=\" color: #F00;\" id=\"6034\">id</span>=\"FormVcard\" <span style=\" color: #F00;\" id=\"6035\">runat</span>=\"server\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6036\">&lt;<span style=\" color: #800000;\" id=\"6037\">div </span><span style=\" color: #F00;\" id=\"6038\">class</span>=\"errorMessage\"&gt;</p><p class=\"s66\" style=\"padding-left: 19pt;text-indent: 0pt;text-align: center;\" id=\"6039\">&lt;<span style=\" color: #800000;\" id=\"6040\">asp</span>:<span style=\" color: #800000;\" id=\"6041\">Label </span><span style=\" color: #F00;\" id=\"6042\">ID</span>=\"LabelNotice\" <span style=\" color: #F00;\" id=\"6043\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6044\">Text</span>=\"\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6045\">asp</span>:<span style=\" color: #800000;\" id=\"6046\">Label</span>&gt;</p><p class=\"s66\" style=\"padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"6047\">&lt;<span style=\" color: #800000;\" id=\"6048\">asp</span>:<span style=\" color: #800000;\" id=\"6049\">ValidationSummary </span><span style=\" color: #F00;\" id=\"6050\">ID</span>=\"ValidationSummary\" <span style=\" color: #F00;\" id=\"6051\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6052\">ForeColor</span>=\"#FF6666\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6053\">/&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6054\">&lt;/<span style=\" color: #800000;\" id=\"6055\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6056\">&lt;<span style=\" color: #800000;\" id=\"6057\">table </span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6058\">&lt;<span style=\" color: #800000;\" id=\"6059\">tr </span><span style=\" color: #F00;\" id=\"6060\">class</span>=\"name\"&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6061\">&lt;<span style=\" color: #800000;\" id=\"6062\">td</span>&gt; <span style=\" color: #000;\" id=\"6063\">Name: </span>&lt;/<span style=\" color: #800000;\" id=\"6064\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6065\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6066\">asp</span>:<span style=\" color: #800000;\" id=\"6067\">TextBox </span><span style=\" color: #F00;\" id=\"6068\">ID</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6069\">runat</span>=server&gt;&lt;/<span style=\" color: #800000;\" id=\"6070\">asp</span>:<span style=\" color: #800000;\" id=\"6071\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6072\">&lt;<span style=\" color: #800000;\" id=\"6073\">asp</span>:<span style=\" color: #800000;\" id=\"6074\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"6075\">ID</span>=\"RequiredFieldValidatorName\" <span style=\" color: #F00;\" id=\"6076\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6077\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6078\">ErrorMessage</span>=\"Name Required\" <span style=\" color: #F00;\" id=\"6079\">Font-</span></p><p class=\"s68\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6080\">Size<span style=\" color: #00F;\" id=\"6081\">=\"Small\"</span></p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6082\"><span style=\" color: #F00;\" id=\"6083\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6084\">asp</span>:<span style=\" color: #800000;\" id=\"6085\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6086\">&lt;<span style=\" color: #800000;\" id=\"6087\">asp</span>:<span style=\" color: #800000;\" id=\"6088\">CustomValidator </span><span style=\" color: #F00;\" id=\"6089\">ID</span>=\"CustomValidatorName\" <span style=\" color: #F00;\" id=\"6090\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6091\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6092\">ErrorMessage</span>=\"Name is not Valid\" <span style=\" color: #F00;\" id=\"6093\">ForeColor</span>=\"#CC0000\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6094\"><span style=\" color: #F00;\" id=\"6095\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6096\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6097\">asp</span>:<span style=\" color: #800000;\" id=\"6098\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6099\">&lt;/<span style=\" color: #800000;\" id=\"6100\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6101\">&lt;/<span style=\" color: #800000;\" id=\"6102\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6103\">&lt;<span style=\" color: #800000;\" id=\"6104\">tr </span><span style=\" color: #F00;\" id=\"6105\">class</span>=\"street\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6106\">&lt;<span style=\" color: #800000;\" id=\"6107\">td</span>&gt; <span style=\" color: #000;\" id=\"6108\">Street:</span>&lt;/<span style=\" color: #800000;\" id=\"6109\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6110\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6111\">asp</span>:<span style=\" color: #800000;\" id=\"6112\">TextBox </span><span style=\" color: #F00;\" id=\"6113\">ID</span>=\"TextBoxStreet\" <span style=\" color: #F00;\" id=\"6114\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6115\">asp</span>:<span style=\" color: #800000;\" id=\"6116\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6117\">&lt;/<span style=\" color: #800000;\" id=\"6118\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6119\">&lt;/<span style=\" color: #800000;\" id=\"6120\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6121\">&lt;<span style=\" color: #800000;\" id=\"6122\">tr </span><span style=\" color: #F00;\" id=\"6123\">class</span>=\"postalCode\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6124\">&lt;<span style=\" color: #800000;\" id=\"6125\">td</span>&gt; <span style=\" color: #000;\" id=\"6126\">PostalCode:</span>&lt;/<span style=\" color: #800000;\" id=\"6127\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6128\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6129\">asp</span>:<span style=\" color: #800000;\" id=\"6130\">TextBox </span><span style=\" color: #F00;\" id=\"6131\">ID</span>=\"TextBoxPostalCode\" <span style=\" color: #F00;\" id=\"6132\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6133\">asp</span>:<span style=\" color: #800000;\" id=\"6134\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6135\">&lt;<span style=\" color: #800000;\" id=\"6136\">asp</span>:<span style=\" color: #800000;\" id=\"6137\">CustomValidator </span><span style=\" color: #F00;\" id=\"6138\">ID</span>=\"CustomValidatorPostalCode\" <span style=\" color: #F00;\" id=\"6139\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6140\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6141\">ErrorMessage<span style=\" color: #00F;\" id=\"6142\">=\"Postal Code 4 digit\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6143\">=\"TextBoxPostalCode\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6144\"><br id=\"6145\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6146\"><span style=\" color: #F00;\" id=\"6147\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6148\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6149\">asp</span>:<span style=\" color: #800000;\" id=\"6150\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6151\">&lt;/<span style=\" color: #800000;\" id=\"6152\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6153\">&lt;/<span style=\" color: #800000;\" id=\"6154\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6155\">&lt;<span style=\" color: #800000;\" id=\"6156\">tr </span><span style=\" color: #F00;\" id=\"6157\">class</span>=\"city\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6158\">&lt;<span style=\" color: #800000;\" id=\"6159\">td</span>&gt; <span style=\" color: #000;\" id=\"6160\">City:</span>&lt;/<span style=\" color: #800000;\" id=\"6161\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6162\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6163\">asp</span>:<span style=\" color: #800000;\" id=\"6164\">TextBox </span><span style=\" color: #F00;\" id=\"6165\">ID</span>=\"TextBoxCity\" <span style=\" color: #F00;\" id=\"6166\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6167\">asp</span>:<span style=\" color: #800000;\" id=\"6168\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6169\">&lt;/<span style=\" color: #800000;\" id=\"6170\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6171\">&lt;<span style=\" color: #800000;\" id=\"6172\">tr </span><span style=\" color: #F00;\" id=\"6173\">class</span>=\"country\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6174\">&lt;<span style=\" color: #800000;\" id=\"6175\">td</span>&gt; <span style=\" color: #000;\" id=\"6176\">Country:</span>&lt;/<span style=\" color: #800000;\" id=\"6177\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6178\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6179\">asp</span>:<span style=\" color: #800000;\" id=\"6180\">TextBox </span><span style=\" color: #F00;\" id=\"6181\">ID</span>=\"TextBoxCountry\" <span style=\" color: #F00;\" id=\"6182\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6183\">asp</span>:<span style=\" color: #800000;\" id=\"6184\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6185\">&lt;<span style=\" color: #800000;\" id=\"6186\">asp</span>:<span style=\" color: #800000;\" id=\"6187\">CustomValidator </span><span style=\" color: #F00;\" id=\"6188\">ID</span>=\"CustomValidatorCountry\" <span style=\" color: #F00;\" id=\"6189\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6190\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6191\">ErrorMessage<span style=\" color: #00F;\" id=\"6192\">=\"Country Not Valid\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6193\">=\"TextBoxCountry\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6194\"><br id=\"6195\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6196\"><span style=\" color: #F00;\" id=\"6197\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6198\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6199\">asp</span>:<span style=\" color: #800000;\" id=\"6200\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6201\">&lt;/<span style=\" color: #800000;\" id=\"6202\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6203\">&lt;/<span style=\" color: #800000;\" id=\"6204\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6205\">&lt;<span style=\" color: #800000;\" id=\"6206\">tr </span><span style=\" color: #F00;\" id=\"6207\">class</span>=\"phone\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6208\">&lt;<span style=\" color: #800000;\" id=\"6209\">td</span>&gt; <span style=\" color: #000;\" id=\"6210\">Phone:</span><span style=\" color: #F00;\" id=\"6211\">&amp;nbsp; </span><span style=\" color: #000;\" id=\"6212\">+45</span>&lt;/<span style=\" color: #800000;\" id=\"6213\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6214\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6215\">asp</span>:<span style=\" color: #800000;\" id=\"6216\">TextBox </span><span style=\" color: #F00;\" id=\"6217\">ID</span>=\"TextBoxPhone\" <span style=\" color: #F00;\" id=\"6218\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6219\">asp</span>:<span style=\" color: #800000;\" id=\"6220\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6221\">&lt;<span style=\" color: #800000;\" id=\"6222\">asp</span>:<span style=\" color: #800000;\" id=\"6223\">CustomValidator </span><span style=\" color: #F00;\" id=\"6224\">ID</span>=\"CustomValidatorPhone\" <span style=\" color: #F00;\" id=\"6225\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6226\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6227\">ErrorMessage<span style=\" color: #00F;\" id=\"6228\">=\"Phone must be 8 digit, Without +45 \" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6229\">=\"TextBoxPhone\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6230\"><br id=\"6231\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6232\"><span style=\" color: #F00;\" id=\"6233\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6234\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6235\">asp</span>:<span style=\" color: #800000;\" id=\"6236\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6237\">&lt;/<span style=\" color: #800000;\" id=\"6238\">td</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6239\"><br id=\"6240\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6241\">&lt;/<span style=\" color: #800000;\" id=\"6242\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6243\">&lt;<span style=\" color: #800000;\" id=\"6244\">tr </span><span style=\" color: #F00;\" id=\"6245\">class</span>=\"email\"&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6246\">&lt;<span style=\" color: #800000;\" id=\"6247\">td</span>&gt; <span style=\" color: #000;\" id=\"6248\">Email: </span>&lt;/<span style=\" color: #800000;\" id=\"6249\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6250\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6251\">asp</span>:<span style=\" color: #800000;\" id=\"6252\">TextBox </span><span style=\" color: #F00;\" id=\"6253\">ID</span>=\"TextBoxEmail\" <span style=\" color: #F00;\" id=\"6254\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6255\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6256\">asp</span>:<span style=\" color: #800000;\" id=\"6257\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6258\">&lt;<span style=\" color: #800000;\" id=\"6259\">asp</span>:<span style=\" color: #800000;\" id=\"6260\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"6261\">ID</span>=\"RequiredFieldValidatorEmail\" <span style=\" color: #F00;\" id=\"6262\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6263\">Font-Size</span>=\"Small\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"6264\"><span style=\" color: #F00;\" id=\"6265\">ErrorMessage</span>=\"Email Required\" <span style=\" color: #F00;\" id=\"6266\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span style=\" color: #000;\" id=\"6267\">Email Required</span>&lt;/<span style=\" color: #800000;\" id=\"6268\">asp</span>:<span style=\" color: #800000;\" id=\"6269\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6270\">&lt;<span style=\" color: #800000;\" id=\"6271\">asp</span>:<span style=\" color: #800000;\" id=\"6272\">CustomValidator </span><span style=\" color: #F00;\" id=\"6273\">ID</span>=\"CustomValidatorEmail\" <span style=\" color: #F00;\" id=\"6274\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6275\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6276\">ErrorMessage<span style=\" color: #00F;\" id=\"6277\">=\"Email Not Valid\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6278\">=\"TextBoxEmail\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6279\"><br id=\"6280\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6281\"><span style=\" color: #F00;\" id=\"6282\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6283\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6284\">asp</span>:<span style=\" color: #800000;\" id=\"6285\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6286\">&lt;/<span style=\" color: #800000;\" id=\"6287\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6288\">&lt;/<span style=\" color: #800000;\" id=\"6289\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6290\">&lt;<span style=\" color: #800000;\" id=\"6291\">tr </span><span style=\" color: #F00;\" id=\"6292\">class</span>=\"website\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6293\">&lt;<span style=\" color: #800000;\" id=\"6294\">td</span>&gt; <span style=\" color: #000;\" id=\"6295\">WebSite:</span>&lt;/<span style=\" color: #800000;\" id=\"6296\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6297\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6298\">asp</span>:<span style=\" color: #800000;\" id=\"6299\">TextBox </span><span style=\" color: #F00;\" id=\"6300\">ID</span>=\"TextBoxWebsite\" <span style=\" color: #F00;\" id=\"6301\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6302\">asp</span>:<span style=\" color: #800000;\" id=\"6303\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6304\">&lt;<span style=\" color: #800000;\" id=\"6305\">asp</span>:<span style=\" color: #800000;\" id=\"6306\">CustomValidator </span><span style=\" color: #F00;\" id=\"6307\">ID</span>=\"CustomValidatorWebSite\" <span style=\" color: #F00;\" id=\"6308\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6309\">ErrorMessage</span>=\"Website not valid\" <span style=\" color: #F00;\" id=\"6310\">ControlToValidate</span>=\"TextBoxWebsite\"</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6311\"><br id=\"6312\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6313\"><span style=\" color: #F00;\" id=\"6314\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6315\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6316\">asp</span>:<span style=\" color: #800000;\" id=\"6317\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6318\">&lt;/<span style=\" color: #800000;\" id=\"6319\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"6320\">&lt;/<span style=\" color: #800000;\" id=\"6321\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6322\">&lt;<span style=\" color: #800000;\" id=\"6323\">tr </span><span style=\" color: #F00;\" id=\"6324\">class</span>=\"photo\"&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6325\">&lt;<span style=\" color: #800000;\" id=\"6326\">td</span>&gt; <span style=\" color: #000;\" id=\"6327\">Photo:</span>&lt;/<span style=\" color: #800000;\" id=\"6328\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6329\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6330\">asp</span>:<span style=\" color: #800000;\" id=\"6331\">FileUpload </span><span style=\" color: #F00;\" id=\"6332\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"6333\">runat</span>=\"server\" /&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6334\">&lt;/<span style=\" color: #800000;\" id=\"6335\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6336\">&lt;/<span style=\" color: #800000;\" id=\"6337\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6338\">&lt;<span style=\" color: #800000;\" id=\"6339\">tr </span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6340\">&lt;<span style=\" color: #800000;\" id=\"6341\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"6342\"><span style=\" color: #F00;\" id=\"6343\">&amp;nbsp;</span>&lt;/<span style=\" color: #800000;\" id=\"6344\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6345\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6346\">asp</span>:<span style=\" color: #800000;\" id=\"6347\">Button </span><span style=\" color: #F00;\" id=\"6348\">ID</span>=\"ButtonCreate\" <span style=\" color: #F00;\" id=\"6349\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6350\">Text</span>=\"Create\"</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6351\"><span style=\" color: #F00;\" id=\"6352\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span style=\" color: #800000;\" id=\"6353\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6354\">&lt;/<span style=\" color: #800000;\" id=\"6355\">tr</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6356\"><br id=\"6357\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6358\">&lt;/<span style=\" color: #800000;\" id=\"6359\">table</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6360\">&lt;/<span style=\" color: #800000;\" id=\"6361\">form</span>&gt;</p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6362\"><a name=\"a68\" id=\"6363\"><span class=\"p\" id=\"6364\">File </span></a><span class=\"s128\" style=\" background-color: #FF0;\" id=\"6365\">VcardControl.ascx.cs</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6366\"><br id=\"6367\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6368\">using <span style=\" color: #000;\" id=\"6369\">System;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6370\">using <span style=\" color: #000;\" id=\"6371\">System.Collections.Generic; </span>using <span style=\" color: #000;\" id=\"6372\">System.Linq;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6373\">using <span style=\" color: #000;\" id=\"6374\">System.Web;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6375\">using <span style=\" color: #000;\" id=\"6376\">umbraco.DataLayer.SqlHelpers.SqlServer; </span>using <span style=\" color: #000;\" id=\"6377\">umbraco.DataLayer;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6378\">using <span style=\" color: #000;\" id=\"6379\">umbraco;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6380\">using <span style=\" color: #000;\" id=\"6381\">System.Data.SqlClient;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6382\">using <span style=\" color: #000;\" id=\"6383\">System.Text.RegularExpressions; </span>using <span style=\" color: #000;\" id=\"6384\">System.Web.UI.WebControls; </span>using <span style=\" color: #000;\" id=\"6385\">System.IO;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6386\">using <span style=\" color: #000;\" id=\"6387\">System.Text; </span>using <span style=\" color: #000;\" id=\"6388\">System.Net.Mail; </span>using <span style=\" color: #000;\" id=\"6389\">System.Net;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6390\"><br id=\"6391\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6392\">namespace <span style=\" color: #000;\" id=\"6393\">VCardGenerator</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6394\">{</p><p class=\"s98\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6395\"><span style=\" color: #00F;\" id=\"6396\">public partial class </span>VcardControl <span style=\" color: #000;\" id=\"6397\">: System.Web.UI.</span>UserControl</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6398\">{</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6399\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6400\">/// <span style=\" color: #008000;\" id=\"6401\">Handles the Load event of the Page control.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6402\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6403\">/// &lt;param name=\"sender\"&gt;<span style=\" color: #008000;\" id=\"6404\">The source of the event.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6405\">/// &lt;param name=\"e\"&gt;<span style=\" color: #008000;\" id=\"6406\">The </span>&lt;see cref=\"System.EventArgs\"/&gt; <span style=\" color: #008000;\" id=\"6407\">instance containing the event data.</span>&lt;/param&gt;</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6408\"><span style=\" color: #00F;\" id=\"6409\">protected void </span>Page_Load(<span style=\" color: #00F;\" id=\"6410\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6411\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6412\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6413\"><br id=\"6414\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6415\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6416\"><br id=\"6417\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6418\"><span style=\" color: #00F;\" id=\"6419\">protected void </span>ButtonCreate_Click(<span style=\" color: #00F;\" id=\"6420\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6421\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6422\">{</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6423\">if <span style=\" color: #000;\" id=\"6424\">(Page.IsValid)</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6425\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6426\"><span style=\" color: #2B91AE;\" id=\"6427\">Guid </span>id = <span style=\" color: #2B91AE;\" id=\"6428\">Guid</span>.NewGuid(); <span style=\" color: #00F;\" id=\"6429\">string </span>imgFile = <span style=\" color: #A21515;\" id=\"6430\">\"noimage\"</span>;</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6431\">string <span style=\" color: #000;\" id=\"6432\">name = RemoveSpecialCharacter(TextBoxName.Text);</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6433\">string <span style=\" color: #000;\" id=\"6434\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"6435\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"6436\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"6437\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6438\">string <span style=\" color: #000;\" id=\"6439\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: justify;\" id=\"6440\">string <span style=\" color: #000;\" id=\"6441\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"6442\">phone = RemoveSpecialCharacter(TextBoxPhone.Text); </span>if <span style=\" color: #000;\" id=\"6443\">(FileUploadPhoto.PostedFile != </span>null <span style=\" color: #000;\" id=\"6444\">&amp;&amp;</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6445\">FileUploadPhoto.PostedFile.ContentLength &gt; 0)</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6446\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6447\"><span style=\" color: #00F;\" id=\"6448\">string </span>guid = id.ToString(<span style=\" color: #A21515;\" id=\"6449\">\"N\"</span>);</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6450\"><span style=\" color: #00F;\" id=\"6451\">string </span>imageDirectory = Server.MapPath(<span style=\" color: #A21515;\" id=\"6452\">\"vcardimage\"</span>); <span style=\" color: #00F;\" id=\"6453\">if </span>(<span style=\" color: #2B91AE;\" id=\"6454\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6455\">{</p><p class=\"s70\" style=\"padding-left: 151pt;text-indent: -20pt;text-align: left;\" id=\"6456\">FileUploadPhoto.PostedFile.SaveAs( Server.MapPath(<span style=\" color: #A21515;\" id=\"6457\">\"/vcardimage/\" </span>+ guid +</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6458\">FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6459\">}</p><p class=\"s66\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6460\">else</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6461\">{</p><p class=\"s70\" style=\"padding-left: 130pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6462\"><span style=\" color: #2B91AE;\" id=\"6463\">Directory</span>.CreateDirectory(Server.MapPath(<span style=\" color: #A21515;\" id=\"6464\">\"vcardimage\"</span>));</p><p class=\"s70\" style=\"padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6465\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span style=\" color: #A21515;\" id=\"6466\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6467\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6468\"><br id=\"6469\"></p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6470\">imgFile = imageDirectory + <span style=\" color: #A21515;\" id=\"6471\">\"/\" </span>+ guid + FileUploadPhoto.FileName; SendVcard(<span style=\" color: #A21515;\" id=\"6472\">\"Your Vcard:\"</span>,</p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 156pt;text-align: left;\" id=\"6473\">\"Your vcard is ready. Please open Attachment. \\n Thank you very much \\n Semic Provider\"<span style=\" color: #000;\" id=\"6474\">,</span></p><p class=\"s70\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"6475\">email,</p><p class=\"s70\" style=\"padding-left: 161pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6476\">GenerateVcard(name, streetaddress, zip, city, country,</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6477\">email, phone, web, imgFile));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6478\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6479\">\"VCard has been sent to \" </span>+ email;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6480\">}</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6481\">else</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6482\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6483\">SendVcard(<span style=\" color: #A21515;\" id=\"6484\">\"Vcard:\"</span>, <span style=\" color: #A21515;\" id=\"6485\">\"Your vcard is ready. Please open Attachment.</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6486\">\\n Thank you very much \\n Semic Provider\"<span style=\" color: #000;\" id=\"6487\">,</span></p><p class=\"s70\" style=\"padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"6488\">email,</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 104pt;text-align: left;\" id=\"6489\">GenerateVcard(name, streetaddress, zip, city, country, email, phone, web, imgFile));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6490\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6491\">\"VCard has been sent to \" </span>+ email;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6492\"><br id=\"6493\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6494\">imgFile);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6495\"><br id=\"6496\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6497\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6498\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6499\">InsertTable(name, streetaddress, zip, country, phone, email, web,</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6500\"><br id=\"6501\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6502\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6503\"><br id=\"6504\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6505\"><br id=\"6506\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6507\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6508\">/// <span style=\" color: #008000;\" id=\"6509\">Generates the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6510\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6511\">/// &lt;param name=\"firstName\"&gt;<span style=\" color: #008000;\" id=\"6512\">The first name.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6513\">/// &lt;param name=\"streetAddress\"&gt;<span style=\" color: #008000;\" id=\"6514\">The street address.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6515\">/// &lt;param name=\"zip\"&gt;<span style=\" color: #008000;\" id=\"6516\">The zip.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6517\">/// &lt;param name=\"city\"&gt;<span style=\" color: #008000;\" id=\"6518\">The city.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6519\">/// &lt;param name=\"country\"&gt;<span style=\" color: #008000;\" id=\"6520\">The country.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6521\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6522\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6523\">/// &lt;param name=\"phone\"&gt;<span style=\" color: #008000;\" id=\"6524\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6525\">/// &lt;param name=\"web\"&gt;<span style=\" color: #008000;\" id=\"6526\">The web.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6527\">/// &lt;param name=\"image\"&gt;<span style=\" color: #008000;\" id=\"6528\">The image.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6529\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6530\">vcard string </span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6531\">public string <span style=\" color: #000;\" id=\"6532\">GenerateVcard(</span>string <span style=\" color: #000;\" id=\"6533\">firstName, </span>string <span style=\" color: #000;\" id=\"6534\">streetAddress, </span>string <span style=\" color: #000;\" id=\"6535\">zip, </span>string <span style=\" color: #000;\" id=\"6536\">city, </span>string <span style=\" color: #000;\" id=\"6537\">country, </span>string <span style=\" color: #000;\" id=\"6538\">email, </span>string <span style=\" color: #000;\" id=\"6539\">phone, </span>string <span style=\" color: #000;\" id=\"6540\">web, </span>string <span style=\" color: #000;\" id=\"6541\">image)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6542\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6543\"><span style=\" color: #00F;\" id=\"6544\">string </span>url = <span style=\" color: #A21515;\" id=\"6545\">\"\"</span>; <span style=\" color: #00F;\" id=\"6546\">if </span>(web.Length &gt; 0)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6547\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6548\">url = <span style=\" color: #A21515;\" id=\"6549\">\"http://\" </span>+ web.Replace(<span style=\" color: #A21515;\" id=\"6550\">\"http\"</span>, <span style=\" color: #A21515;\" id=\"6551\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6552\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6553\"><span style=\" color: #00F;\" id=\"6554\">var </span>vcardStringBuilder = <span style=\" color: #00F;\" id=\"6555\">new </span><span style=\" color: #2B91AE;\" id=\"6556\">StringBuilder</span>(); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6557\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6558\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6559\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"6560\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"6561\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"6562\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"6563\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"6564\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6565\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6566\">\"URL;type=pref:\" </span>+ url);</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6567\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6568\">\"EMAIL:\" </span>+ email); <span style=\" color: #00F;\" id=\"6569\">if </span>(image != <span style=\" color: #A21515;\" id=\"6570\">\"noimage\"</span>)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6571\">{</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6572\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6573\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"6574\">\":\"</span>);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6575\"><br id=\"6576\"></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: -83pt;text-align: left;\" id=\"6577\">vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"6578\">Convert</span>.ToBase64String(ReadImage(image))); vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"6579\">string</span>.Empty);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6580\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6581\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6582\">\"END:VCARD\"</span>); <span style=\" color: #00F;\" id=\"6583\">return </span>vcardStringBuilder.ToString();</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6584\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6585\"><br id=\"6586\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6587\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6588\">/// <span style=\" color: #008000;\" id=\"6589\">Reads the image.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6590\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6591\">/// &lt;param name=\"image\"&gt;<span style=\" color: #008000;\" id=\"6592\">The image.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6593\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6594\">image bytes </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6595\">public byte</span><span style=\" color: #000;\" id=\"6596\">[] ReadImage(</span><span style=\" color: #00F;\" id=\"6597\">string </span><span style=\" color: #000;\" id=\"6598\">image)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6599\">{</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"6600\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6601\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6602\"><br id=\"6603\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6604\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6605\"><br id=\"6606\"></p><p class=\"s66\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6607\">return <span style=\" color: #2B91AE;\" id=\"6608\">File</span><span style=\" color: #000;\" id=\"6609\">.ReadAllBytes(image);</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6610\"><span style=\" color: #00F;\" id=\"6611\">catch </span>(<span style=\" color: #2B91AE;\" id=\"6612\">Exception </span>ex)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6613\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6614\"><span style=\" color: #00F;\" id=\"6615\">return </span><span style=\" color: #2B91AE;\" id=\"6616\">File</span>.ReadAllBytes(Server.MapPath(<span style=\" color: #A21515;\" id=\"6617\">\"media/logo-vcard.png\"</span>));</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6618\">}</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6619\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6620\"><br id=\"6621\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6622\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6623\">/// <span style=\" color: #008000;\" id=\"6624\">Sends the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6625\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6626\">/// &lt;param name=\"subject\"&gt;<span style=\" color: #008000;\" id=\"6627\">The subject.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6628\">/// &lt;param name=\"body\"&gt;<span style=\" color: #008000;\" id=\"6629\">The body.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6630\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6631\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6632\">/// &lt;param name=\"file\"&gt;<span style=\" color: #008000;\" id=\"6633\">The file.</span>&lt;/param&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6634\">private void <span style=\" color: #000;\" id=\"6635\">SendVcard(</span>string <span style=\" color: #000;\" id=\"6636\">subject, </span>string <span style=\" color: #000;\" id=\"6637\">body, </span>string <span style=\" color: #000;\" id=\"6638\">email, </span>string <span style=\" color: #000;\" id=\"6639\">file)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6640\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6641\"><span style=\" color: #00F;\" id=\"6642\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"6643\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #00F;\" id=\"6644\">try</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6645\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6646\"><br id=\"6647\"></p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6648\">MemoryStream <span style=\" color: #000;\" id=\"6649\">stream = </span><span style=\" color: #00F;\" id=\"6650\">new </span>MemoryStream<span style=\" color: #000;\" id=\"6651\">(byteArray); </span>MailMessage <span style=\" color: #000;\" id=\"6652\">message = </span><span style=\" color: #00F;\" id=\"6653\">new </span>MailMessage<span style=\" color: #000;\" id=\"6654\">(); message.Subject = subject;</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6655\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6656\">message.From = <span style=\" color: #00F;\" id=\"6657\">new </span><span style=\" color: #2B91AE;\" id=\"6658\">MailAddress</span>(<a href=\"mailto:jeevan_2np@yahoo.com\" class=\"s130\" target=\"_blank\" id=\"6659\">\"sender id example: </a><span style=\" color: #A21515;\" id=\"6660\">jeevan_2np@yahoo.com\"</span>);</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6661\">message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6662\">SmtpClient <span style=\" color: #000;\" id=\"6663\">client = </span><span style=\" color: #00F;\" id=\"6664\">new </span>SmtpClient<span style=\" color: #000;\" id=\"6665\">();</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6666\"><span style=\" color: #2B91AE;\" id=\"6667\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"6668\">new </span><span style=\" color: #2B91AE;\" id=\"6669\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"6670\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6671\">client.Host = <span style=\" color: #A21515;\" id=\"6672\">\"smtp address\"</span>; client.Port = smtp port number;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6673\">client.Credentials = <span style=\" color: #00F;\" id=\"6674\">new </span><span style=\" color: #2B91AE;\" id=\"6675\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"6676\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"6677\">\"password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"6678\">true</span>;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6679\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6680\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6681\">catch</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6682\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6683\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6684\">\"Internal Error\"</span>;</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6685\">DownloadVcard(byteArray);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6686\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6687\"><br id=\"6688\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6689\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6690\"><br id=\"6691\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6692\"><span style=\" color: #00F;\" id=\"6693\">protected void </span>CustomValidatorName_ServerValidate(<span style=\" color: #00F;\" id=\"6694\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6695\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6696\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6697\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6698\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6699\"><br id=\"6700\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6701\"><span style=\" color: #00F;\" id=\"6702\">protected void </span>CustomValidatorPostalCode_ServerValidate(<span style=\" color: #00F;\" id=\"6703\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6704\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6705\">{</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"6706\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6707\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6708\"><br id=\"6709\"></p><p class=\"s66\" style=\"padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6710\">if <span style=\" color: #000;\" id=\"6711\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6712\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6713\">args.IsValid = RemoveSpecialCharacter(args.Value).Length == 4;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6714\">}</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6715\">else</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6716\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6717\">args.IsValid = <span style=\" color: #00F;\" id=\"6718\">true</span>;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6719\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6720\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6721\">catch <span style=\" color: #000;\" id=\"6722\">{ args.IsValid = </span>false<span style=\" color: #000;\" id=\"6723\">; }</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6724\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6725\"><br id=\"6726\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6727\"><span style=\" color: #00F;\" id=\"6728\">protected void </span>CustomValidatorCountry_ServerValidate(<span style=\" color: #00F;\" id=\"6729\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6730\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6731\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6732\"><br id=\"6733\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6734\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6735\"><br id=\"6736\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6737\"><span style=\" color: #00F;\" id=\"6738\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"6739\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6740\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6741\">{</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6742\">if <span style=\" color: #000;\" id=\"6743\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6744\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6745\"><br id=\"6746\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6747\">}</p><p class=\"s66\" style=\"text-indent: 0pt;text-align: right;\" id=\"6748\">else</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6749\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6750\"><br id=\"6751\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6752\">}</p><p class=\"s70\" style=\"padding-left: 10pt;text-indent: 0pt;text-align: center;\" id=\"6753\">}</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"6754\">args.IsValid = ValidatePhone(args.Value);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6755\"><br id=\"6756\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"6757\">args.IsValid = <span style=\" color: #00F;\" id=\"6758\">true</span>;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6759\"><br id=\"6760\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6761\"><span style=\" color: #00F;\" id=\"6762\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"6763\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6764\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6765\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6766\">args.IsValid = ValidateEmail(args.Value.ToString());</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6767\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6768\"><br id=\"6769\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6770\"><span style=\" color: #00F;\" id=\"6771\">protected void </span>CustomValidatorWebSite_ServerValidate(<span style=\" color: #00F;\" id=\"6772\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6773\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6774\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6775\"><br id=\"6776\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6777\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6778\"><br id=\"6779\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6780\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6781\">/// <span style=\" color: #008000;\" id=\"6782\">Validates the phone.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6783\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-top: 2pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6784\">/// &lt;param name=\"input\"&gt;<span style=\" color: #008000;\" id=\"6785\">The input.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6786\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6787\">true if it valid </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6788\">public bool </span><span style=\" color: #000;\" id=\"6789\">ValidatePhone(</span><span style=\" color: #00F;\" id=\"6790\">string </span><span style=\" color: #000;\" id=\"6791\">input)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6792\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6793\"><span style=\" color: #00F;\" id=\"6794\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"6795\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"6796\">Regex </span>num = <span style=\" color: #00F;\" id=\"6797\">new </span><span style=\" color: #2B91AE;\" id=\"6798\">Regex</span>(<span style=\" color: #A21515;\" id=\"6799\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6800\">return <span style=\" color: #000;\" id=\"6801\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6802\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6803\"><br id=\"6804\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6805\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6806\">/// <span style=\" color: #008000;\" id=\"6807\">Validates the email.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6808\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6809\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6810\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6811\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6812\">true on valid email </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6813\">public bool </span><span style=\" color: #000;\" id=\"6814\">ValidateEmail(</span><span style=\" color: #00F;\" id=\"6815\">string </span><span style=\" color: #000;\" id=\"6816\">email)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6817\">{</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"6818\">return <span style=\" color: #2B91AE;\" id=\"6819\">Regex</span><span style=\" color: #000;\" id=\"6820\">.IsMatch(email,</span></p><p class=\"s99\" style=\"padding-left: 72pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6821\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"6822\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span style=\" color: #000;\" id=\"6823\">+</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 67pt;text-align: left;\" id=\"6824\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a- zA-Z]{2,6}))$\"<span style=\" color: #000;\" id=\"6825\">);</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6826\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6827\"><br id=\"6828\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6829\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6830\">/// <span style=\" color: #008000;\" id=\"6831\">Removes the special character.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6832\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6833\">/// &lt;param name=\"input\"&gt;<span style=\" color: #008000;\" id=\"6834\">The input.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6835\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6836\">secure string </span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6837\">public string <span style=\" color: #000;\" id=\"6838\">RemoveSpecialCharacter(</span>string <span style=\" color: #000;\" id=\"6839\">input)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6840\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6841\"><span style=\" color: #00F;\" id=\"6842\">return </span><span style=\" color: #2B91AE;\" id=\"6843\">Regex</span>.Replace(input, <span style=\" color: #A21515;\" id=\"6844\">\"[^0-9a-zA-Z. ]+\"</span>, <span style=\" color: #A21515;\" id=\"6845\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6846\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6847\"><br id=\"6848\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6849\"><span style=\" color: #00F;\" id=\"6850\">protected void </span>TextBoxEmail_TextChanged(<span style=\" color: #00F;\" id=\"6851\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6852\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6853\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6854\"><br id=\"6855\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6856\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6857\"><br id=\"6858\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6859\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6860\">/// <span style=\" color: #008000;\" id=\"6861\">Creates the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6862\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6863\">/// &lt;param name=\"tableName\"&gt;<span style=\" color: #008000;\" id=\"6864\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6865\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6866\">true if table created</span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6867\">private static bool </span><span style=\" color: #000;\" id=\"6868\">CreateTable(</span><span style=\" color: #00F;\" id=\"6869\">string </span><span style=\" color: #000;\" id=\"6870\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6871\">{</p><p class=\"s66\" style=\"text-indent: 0pt;text-align: right;\" id=\"6872\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6873\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6874\"><br id=\"6875\"></p><p class=\"s70\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6876\"><span style=\" color: #2B91AE;\" id=\"6877\">SqlConnection </span>connection = <span style=\" color: #00F;\" id=\"6878\">new </span><span style=\" color: #2B91AE;\" id=\"6879\">SqlConnection</span>(<span style=\" color: #2B91AE;\" id=\"6880\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"6881\">string </span>queryString =</p><p class=\"s99\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6882\">@\" CREATE TABLE [vcardimage](</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6883\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 5pt;text-align: left;\" id=\"6884\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 0pt;text-align: left;\" id=\"6885\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"6886\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6887\"><br id=\"6888\"></p><p class=\"s98\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6889\">SqlCommand <span style=\" color: #000;\" id=\"6890\">command = </span><span style=\" color: #00F;\" id=\"6891\">new </span>SqlCommand<span style=\" color: #000;\" id=\"6892\">(queryString, connection);</span></p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6893\">connection.Open(); command.ExecuteNonQuery(); connection.Close();</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6894\">return true<span style=\" color: #000;\" id=\"6895\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6896\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6897\">catch</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6898\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6899\">return false<span style=\" color: #000;\" id=\"6900\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6901\">}</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6902\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6903\"><br id=\"6904\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6905\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6906\">/// <span style=\" color: #008000;\" id=\"6907\">Checks the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6908\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6909\">/// &lt;param name=\"tableName\"&gt;<span style=\" color: #008000;\" id=\"6910\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6911\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6912\">true if table exist </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6913\">private static bool </span><span style=\" color: #000;\" id=\"6914\">CheckTable(</span><span style=\" color: #00F;\" id=\"6915\">string </span><span style=\" color: #000;\" id=\"6916\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6917\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6918\"><span style=\" color: #2B91AE;\" id=\"6919\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"6920\">new </span><span style=\" color: #2B91AE;\" id=\"6921\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"6922\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"6923\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6924\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6925\"><br id=\"6926\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6927\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6928\">/// <span style=\" color: #008000;\" id=\"6929\">Inserts the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6930\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6931\">/// &lt;param name=\"name\"&gt;<span style=\" color: #008000;\" id=\"6932\">The name.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6933\">/// &lt;param name=\"street\"&gt;<span style=\" color: #008000;\" id=\"6934\">The street.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6935\">/// &lt;param name=\"postalcode\"&gt;<span style=\" color: #008000;\" id=\"6936\">The postalcode.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6937\">/// &lt;param name=\"country\"&gt;<span style=\" color: #008000;\" id=\"6938\">The country.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6939\">/// &lt;param name=\"phone\"&gt;<span style=\" color: #008000;\" id=\"6940\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6941\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6942\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6943\">/// &lt;param name=\"website\"&gt;<span style=\" color: #008000;\" id=\"6944\">The website.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6945\">/// &lt;param name=\"imageguid\"&gt;<span style=\" color: #008000;\" id=\"6946\">The imageguid.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6947\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6948\">true on successul data insert</span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6949\">public static bool <span style=\" color: #000;\" id=\"6950\">InsertTable(</span>string <span style=\" color: #000;\" id=\"6951\">name, </span>string <span style=\" color: #000;\" id=\"6952\">street, </span>string <span style=\" color: #000;\" id=\"6953\">postalcode, </span>string <span style=\" color: #000;\" id=\"6954\">country, </span>string <span style=\" color: #000;\" id=\"6955\">phone, </span>string <span style=\" color: #000;\" id=\"6956\">email, </span>string <span style=\" color: #000;\" id=\"6957\">website, </span>string <span style=\" color: #000;\" id=\"6958\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6959\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6960\"><span style=\" color: #00F;\" id=\"6961\">string </span>tableName = <span style=\" color: #A21515;\" id=\"6962\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"6963\">try</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6964\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6965\">if <span style=\" color: #000;\" id=\"6966\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6967\">{ CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6968\">ISqlHelper <span style=\" color: #000;\" id=\"6969\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"6970\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6971\">@\"insert into \" <span style=\" color: #000;\" id=\"6972\">+ tableName + </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"6973\">+</span></p><p class=\"s99\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6974\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6975\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"6976\">,</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6977\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6978\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6979\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6980\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6981\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6982\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6983\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6984\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6985\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6986\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"6987\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"6988\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6989\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6990\"><span style=\" color: #00F;\" id=\"6991\">catch </span>(<span style=\" color: #2B91AE;\" id=\"6992\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6993\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6994\">return false<span style=\" color: #000;\" id=\"6995\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6996\"><br id=\"6997\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6998\"><br id=\"6999\"></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7000\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7001\"><br id=\"7002\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7003\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7004\"><br id=\"7005\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7006\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7007\">/// <span style=\" color: #008000;\" id=\"7008\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7009\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7010\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"7011\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"7012\">public void </span><span style=\" color: #000;\" id=\"7013\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"7014\">byte </span><span style=\" color: #000;\" id=\"7015\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7016\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7017\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"7018\">true</span>;</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7019\">Response.ContentType = <span style=\" color: #A21515;\" id=\"7020\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"7021\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"7022\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7023\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"7024\">);</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7025\">Response.Charset = <span style=\" color: #A21515;\" id=\"7026\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7027\">HttpContext<span style=\" color: #000;\" id=\"7028\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7029\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7030\">}</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7031\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7032\"><br id=\"7033\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7034\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"7035\">GlobalSetting.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7036\"><br id=\"7037\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7038\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7039\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: -6pt;line-height: 114%;text-align: left;\" id=\"7040\">&lt;xsl:stylesheet version=\"1.0\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7041\"><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7042\">xmlns:xsl=\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml=\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library=\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon=\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes=\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath=\"urn:Exslt.ExsltMath\" xmlns:Exslt.ExsltRegularExpressions=\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings=\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets=\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7043\">exclude-result-prefixes=\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7044\"><br id=\"7045\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7046\">&lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7047\">&lt;xsl:param name=\"currentPage\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7048\">&lt;xsl:template match=\"/\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"7049\">&lt;!-- start writing XSLT --&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7050\">&lt;xsl:variable name=\"items\" select=\"$currentPage/ancestor-or-self::*</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7051\">/WebSiteGlobalSettings \"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7052\">&lt;xsl:variable name=\"logo\" select=\"$items/logo\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7053\">&lt;div class=\"vcard\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7054\">&lt;div class=\"logo\"&gt;&lt;a href=\"/\" title=\"start page\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7055\">&lt;img src=\"{$logo}\" alt=\"semic provider logo; visual identity\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: center;\" id=\"7056\">&lt;/a&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7057\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7058\">&lt;div class=\"fn\" &gt;</p><p style=\"padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"7059\">&lt;xsl:value-of select=\"$items/siteName\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7060\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7061\">&lt;h4&gt; &lt;xsl:value-of select=\"$items/slogan\"/&gt; &lt;/h4&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7062\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7063\">&lt;/xsl:template&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7064\">&lt;/xsl:stylesheet&gt;</p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7065\">Navigation.xslt</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7066\"><br id=\"7067\"></p><p style=\"padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7068\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7069\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7070\">&lt;<span class=\"p\" id=\"7071\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7072\">version<span class=\"s56\" id=\"7073\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7074\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7075\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7076\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7077\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7078\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7079\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7080\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7081\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7082\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7083\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7084\">=</span>\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7085\">exclude-result-prefixes<span class=\"s56\" id=\"7086\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7087\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7088\">&lt;<span class=\"p\" id=\"7089\">xsl:output method</span>=<span class=\"p\" id=\"7090\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7091\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7092\">&lt;<span class=\"p\" id=\"7093\">xsl:param name</span>=<span class=\"p\" id=\"7094\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7095\">&lt;<span class=\"p\" id=\"7096\">xsl:template match</span>=<span class=\"p\" id=\"7097\">\"/\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7098\">&lt;<span class=\"p\" id=\"7099\">xsl:variable name</span>=<span class=\"p\" id=\"7100\">\"items\" select</span>=<span class=\"p\" id=\"7101\">\"$currentPage/ancestor-or-self::*</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7102\">/GeneralContent [string(useInNavigation) = '1'] \"<span class=\"s56\" id=\"7103\">/&gt;</span></p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7104\">&lt;<span class=\"p\" id=\"7105\">xsl:if test</span>=<span class=\"p\" id=\"7106\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7107\">&lt;<span class=\"p\" id=\"7108\">ul</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7109\">&lt;<span class=\"p\" id=\"7110\">xsl:for-each select</span>=<span class=\"p\" id=\"7111\">\"$items\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7112\">&lt;<span class=\"p\" id=\"7113\">xsl:if test</span>=<span class=\"p\" id=\"7114\">\"$currentPage/@id = @id\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7115\">&lt;<span class=\"p\" id=\"7116\">li class</span>=<span class=\"p\" id=\"7117\">\"current\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7118\">&lt;<span class=\"p\" id=\"7119\">xsl:value-of select</span>=<span class=\"p\" id=\"7120\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7121\">&lt;/<span class=\"p\" id=\"7122\">li</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7123\">&lt;/<span class=\"p\" id=\"7124\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"7125\">&lt;<span class=\"p\" id=\"7126\">xsl:if test</span>=<span class=\"p\" id=\"7127\">\"$currentPage/@id != @id\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7128\">&lt;<span class=\"p\" id=\"7129\">li class</span>=<span class=\"p\" id=\"7130\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 35pt;text-indent: 0pt;text-align: left;\" id=\"7131\">&lt;<span class=\"p\" id=\"7132\">a href</span>=<span class=\"p\" id=\"7133\">\"{umbraco.library:NiceUrl(@id)}\" title</span>=<span class=\"p\" id=\"7134\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7135\">&lt;<span class=\"p\" id=\"7136\">xsl:value-of select</span>=<span class=\"p\" id=\"7137\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"7138\">&lt;/<span class=\"p\" id=\"7139\">a</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7140\">&lt;/<span class=\"p\" id=\"7141\">li</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7142\">&lt;/<span class=\"p\" id=\"7143\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7144\">&lt;/<span class=\"p\" id=\"7145\">xsl:for-each</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7146\">&lt;/<span class=\"p\" id=\"7147\">ul</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7148\">&lt;/<span class=\"p\" id=\"7149\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7150\">&lt;/<span class=\"p\" id=\"7151\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7152\">&lt;/<span class=\"p\" id=\"7153\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7154\"><br id=\"7155\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7156\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7157\">NewsList.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7158\"><br id=\"7159\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7160\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7161\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7162\">&lt;<span class=\"p\" id=\"7163\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7164\">version<span class=\"s56\" id=\"7165\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7166\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7167\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7168\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7169\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7170\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7171\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7172\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7173\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7174\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7175\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7176\">=</span>\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7177\">exclude-result-prefixes<span class=\"s56\" id=\"7178\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7179\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7180\">&lt;<span class=\"p\" id=\"7181\">xsl:output method</span>=<span class=\"p\" id=\"7182\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7183\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7184\">&lt;<span class=\"p\" id=\"7185\">xsl:param name</span>=<span class=\"p\" id=\"7186\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7187\">&lt;<span class=\"p\" id=\"7188\">xsl:template match</span>=<span class=\"p\" id=\"7189\">\"/\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7190\">&lt;<span class=\"p\" id=\"7191\">xsl:variable name</span>=<span class=\"p\" id=\"7192\">\"newsItems\" select</span>=<span class=\"p\" id=\"7193\">\"$currentPage/ancestor-or-self::*</span></p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7194\">/NewsContainer/NewsArticle \"<span class=\"s56\" id=\"7195\">/&gt;</span></p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7196\">&lt;<span class=\"p\" id=\"7197\">xsl:variable name</span>=<span class=\"p\" id=\"7198\">\"numberofnewsitems\" select</span>=<span class=\"p\" id=\"7199\">\"/macro/numberofnewsitems\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7200\">&lt;<span class=\"p\" id=\"7201\">xsl:if test</span>=<span class=\"p\" id=\"7202\">\"count($newsItems) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7203\">&lt;<span class=\"p\" id=\"7204\">xsl:for-each select</span>=<span class=\"p\" id=\"7205\">\"$newsItems\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"7206\">&lt;<span class=\"p\" id=\"7207\">xsl:sort select</span>=<span class=\"p\" id=\"7208\">\"@createDate\" order</span>=<span class=\"p\" id=\"7209\">\"ascending\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"7210\">&lt;<span class=\"p\" id=\"7211\">xsl:if test</span>=<span class=\"p\" id=\"7212\">\"position() &amp;lt;=$numberofnewsitems\" </span>&gt; &lt;<span class=\"p\" id=\"7213\">div clas</span>=<span class=\"p\" id=\"7214\">\"newsItem\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 27pt;text-indent: 0pt;text-align: center;\" id=\"7215\">&lt;<span class=\"p\" id=\"7216\">h3</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7217\">&lt;<span class=\"p\" id=\"7218\">a href</span>=<span class=\"p\" id=\"7219\">\"{umbraco.library:NiceUrl(@id)}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 45pt;text-indent: 0pt;text-align: left;\" id=\"7220\">&lt;<span class=\"p\" id=\"7221\">xsl:value-of select</span>=<span class=\"p\" id=\"7222\">\"newsTitle\" </span>/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7223\"><br id=\"7224\"></p><p class=\"s56\" style=\"padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7225\">&lt;/<span class=\"p\" id=\"7226\">a</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: center;\" id=\"7227\">&lt;/<span class=\"p\" id=\"7228\">h3</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7229\">&lt;<span class=\"p\" id=\"7230\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7231\">&lt;<span class=\"p\" id=\"7232\">xsl:value-of select</span>=<span class=\"p\" id=\"7233\">\"newsBody\" disable-output-escaping</span>=<span class=\"p\" id=\"7234\">\"yes\" </span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7235\">&lt;/<span class=\"p\" id=\"7236\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7237\">&lt;<span class=\"p\" id=\"7238\">p</span>&gt;</p><p style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7239\">Last update: <span class=\"s56\" id=\"7240\">&lt;</span>xsl:value-of select<span class=\"s56\" id=\"7241\">=</span>\"@updateDate\" <span class=\"s56\" id=\"7242\">/&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7243\"><br id=\"7244\"></p><p class=\"s56\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"7245\">&lt;/<span class=\"p\" id=\"7246\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: center;\" id=\"7247\">&lt;/<span class=\"p\" id=\"7248\">div</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7249\">&lt;/<span class=\"p\" id=\"7250\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7251\">&lt;/<span class=\"p\" id=\"7252\">xsl:for-each</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7253\">&lt;/<span class=\"p\" id=\"7254\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"7255\">&lt;/<span class=\"p\" id=\"7256\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"7257\">&lt;/<span class=\"p\" id=\"7258\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7259\"><br id=\"7260\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7261\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7262\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7263\"><br id=\"7264\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7265\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7266\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7267\">&lt;<span class=\"p\" id=\"7268\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7269\">version<span class=\"s56\" id=\"7270\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7271\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7272\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7273\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:recentVcard<span class=\"s56\" id=\"7274\">=</span>\"urn:recentvcard\" xmlns:umbraco.library<span class=\"s56\" id=\"7275\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7276\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7277\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7278\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7279\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7280\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7281\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7282\">=</span>\"urn:Exslt.ExsltSets\" xmlns:recentvcard<span class=\"s56\" id=\"7283\">=</span>\"urn:recentvcard\" exclude-result-prefixes<span class=\"s56\" id=\"7284\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets recentvcard \"<span class=\"s56\" id=\"7285\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7286\">&lt;<span class=\"p\" id=\"7287\">xsl:output method</span>=<span class=\"p\" id=\"7288\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7289\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7290\">&lt;<span class=\"p\" id=\"7291\">xsl:param name</span>=<span class=\"p\" id=\"7292\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7293\">&lt;<span class=\"p\" id=\"7294\">xsl:template match</span>=<span class=\"p\" id=\"7295\">\"/\"</span>&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7296\">&lt;!-- start writing XSLT --&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7297\">&lt;<span class=\"p\" id=\"7298\">xsl:value-of select</span>=<span class=\"p\" id=\"7299\">\"recentVcard:GetVcardData()\" disable-output-escaping</span>=<span class=\"p\" id=\"7300\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7301\">&lt;/<span class=\"p\" id=\"7302\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7303\">&lt;/<span class=\"p\" id=\"7304\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7305\"><br id=\"7306\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7307\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7308\">RecentVcard.cs</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7309\"><br id=\"7310\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7311\">using <span style=\" color: #000;\" id=\"7312\">System;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7313\">using <span style=\" color: #000;\" id=\"7314\">System.Collections.Generic; </span>using <span style=\" color: #000;\" id=\"7315\">System.Linq;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7316\">using <span style=\" color: #000;\" id=\"7317\">System.Web;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7318\">using <span style=\" color: #000;\" id=\"7319\">umbraco.DataLayer; </span>using <span style=\" color: #000;\" id=\"7320\">umbraco;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7321\">namespace <span style=\" color: #000;\" id=\"7322\">VCardGenerator</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7323\">{</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7324\">public class <span style=\" color: #2B91AE;\" id=\"7325\">RecentVcard</span></p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7326\">{</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7327\">public static string <span style=\" color: #000;\" id=\"7328\">GetVcardData()</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7329\">{</p><p class=\"s98\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"7330\">ISqlHelper <span style=\" color: #000;\" id=\"7331\">getVcard = </span>DataLayerHelper<span style=\" color: #000;\" id=\"7332\">.CreateSqlHelper(</span>GlobalSettings<span style=\" color: #000;\" id=\"7333\">.DbDSN);</span></p><p class=\"s98\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7334\">IRecordsReader <span style=\" color: #000;\" id=\"7335\">read = getVcard.ExecuteReader(</span><span style=\" color: #A21515;\" id=\"7336\">@\"select top 10 id, name,</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7337\">country</p><p class=\"s99\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7338\">from vcardimage where id &gt; @id order by id desc\"<span style=\" color: #000;\" id=\"7339\">,</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7340\">getVcard.CreateParameter(<span style=\" color: #A21515;\" id=\"7341\">\"@id\"</span>, <span style=\" color: #A21515;\" id=\"7342\">\"0\"</span>));</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7343\"><span style=\" color: #00F;\" id=\"7344\">string </span>data = <span style=\" color: #A21515;\" id=\"7345\">\"\"</span>; <span style=\" color: #00F;\" id=\"7346\">while </span>(read.Read())</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7347\">{</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"7348\">data += <span style=\" color: #A21515;\" id=\"7349\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span style=\" color: #A21515;\" id=\"7350\">\"name\"</span>) +</p><p class=\"s99\" style=\"padding-left: 104pt;text-indent: 0pt;text-align: left;\" id=\"7351\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span style=\" color: #000;\" id=\"7352\">+ read.GetString(</span>\"country\"<span style=\" color: #000;\" id=\"7353\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span style=\" color: #000;\" id=\"7354\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7355\">}</p><p class=\"s99\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7356\"><span style=\" color: #00F;\" id=\"7357\">return </span>\"&lt;ul&gt;\" <span style=\" color: #000;\" id=\"7358\">+ data + </span>\"&lt;/ul\"<span style=\" color: #000;\" id=\"7359\">;</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7360\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7361\">}</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7362\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7363\"><span id=\"7364\"><img width=\"602\" height=\"851\" alt=\"image\" src=\"Image_137.png\" id=\"7365\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7366\"><br id=\"7367\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7368\"><br id=\"7369\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7370\"><br id=\"7371\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7372\">About Writer</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7373\">Name: Jivan Thapa</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7374\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p style=\"padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;line-height: 159%;text-align: left;\" id=\"7375\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7376\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7377\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7378\">jeevan_2np@yahoo.com</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7379\"><br id=\"7380\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7381\">About Writer</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7382\">Name: Jivan Thapa</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7383\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p style=\"padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;line-height: 159%;text-align: left;\" id=\"7384\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7385\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7386\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7387\">jeevan_2np@yahoo.com</a></p><p style=\"padding-left: 30pt;text-indent: 0pt;text-align: left;\" id=\"7388\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"7389\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7390\"><br id=\"7391\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7392\"><br id=\"7393\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7394\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7395\">Here I covered:</p><ul id=\"l140\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7397\"><p style=\"display: inline;\" id=\"7398\">Document Type</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7399\"><p style=\"display: inline;\" id=\"7400\">Template</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7401\"><p style=\"display: inline;\" id=\"7402\">Content</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7403\"><p style=\"display: inline;\" id=\"7404\">Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7405\"><p style=\"display: inline;\" id=\"7406\">Extending Umbraco using .net class and User Control</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7407\"><p style=\"display: inline;\" id=\"7408\">And more ….</p></li></ul><p style=\"padding-top: 11pt;text-indent: 0pt;text-align: right;\" id=\"7409\">Jivan Thapa</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7410\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7411\">Here I covered:</p><ul id=\"l141\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7413\"><p style=\"display: inline;\" id=\"7414\">Document Type</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7415\"><p style=\"display: inline;\" id=\"7416\">Template</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7417\"><p style=\"display: inline;\" id=\"7418\">Content</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7419\"><p style=\"display: inline;\" id=\"7420\">Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7421\"><p style=\"display: inline;\" id=\"7422\">Extending Umbraco using .net class and User Control</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7423\"><p style=\"display: inline;\" id=\"7424\">And more ….</p></li></ul><p style=\"padding-top: 11pt;text-indent: 0pt;text-align: right;\" id=\"7425\">Jivan Thapa</p><p style=\"padding-left: 30pt;text-indent: 0pt;text-align: left;\" id=\"7426\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"7427\"> </span></p></div></div><p id=\"endOfDocument\"></p></div></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading617\" class=\"heading617\"><a name=\"bookmark13\" id=\"618\" >Database</a><span class=\"h4\" id=\"619\">:</span></h3>","pageStyleReducedContent":"<div id=\"contentheading617\" ><p  id=\"620\">Create Empty Database, you can give any name as you like for this purpose I gave name “umbracodb” and created user account name “root”. Make sure user should have database admin access otherwise Umbraco will not install properly.</p><p  id=\"621\">Instruction:</p><p  id=\"622\"><br id=\"623\"></p><ul id=\"l12\"><li  id=\"625\"><p  id=\"626\">Open Sql Server Management studio and login as “Windows Authentication”</p></li><li  id=\"627\"><p  id=\"628\">Right click on Database and click on “New Database”. Provide database name and click ok. <span class=\"s19\" id=\"629\">See Image: umbracodb.image</span></p></li><li  id=\"630\"><p  id=\"631\">Expand “Security” on left side menu. Right click on Login and click on “New Login”</p></li><li  id=\"632\"><p  id=\"633\">Type login name and check “SQL server authentication” and provide password. Uncheck “Enforce password Policy” if you are new to Sql server and press OK. Windows will disappear. In my case I create login name “root” and password “root”</p></li><li  id=\"634\"><p  id=\"635\">Expand Security tree from left side menu until last child where you can see new login added <span class=\"s19\" id=\"636\">See Image: user.image </span>and click on that login name. it will open Login Properties</p></li><li  id=\"637\"><p  id=\"638\">Select “User Mapping” it will list all available database and check new database that you are going to use for Umbraco and in “Database Role Membership” checked on “db owner”, “dbladmin”, “datawrite” and “datareader”,.</p></li><li  id=\"639\"><p  id=\"640\">Disconnect current working database and try to connect using new user id and password. This time do not select “windows authentication”. You should be select “Sql Server Authentication” this will activate Login and Password input textbox. You must be able to login to database. If you get any error please repeat database setting process.</p></li><li  id=\"641\"><p  id=\"642\">If you success to log in using your new user id and password and database that assign to Umbraco is listed on right side menu than your database setup is ready for Umbraco.</p></li><li  id=\"643\"><p  id=\"644\">See screen shot for references</p><p  id=\"645\"><br id=\"646\"></p><p  id=\"647\"><span id=\"648\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_007.png\" id=\"649\"></span></p><p  id=\"650\"><a href=\"http://www.youtube.com/jeevan2np%23p/a/u/0/DMXw7aeSG54\"  target=\"_blank\" id=\"651\">1 </a><a href=\"http://www.youtube.com/jeevan2np%23p/a/u/0/DMXw7aeSG54\" class=\"s11\" target=\"_blank\" id=\"652\">http://www.youtube.com/jeevan2np#p/a/u/0/DMXw7aeSG54</a></p><p  id=\"653\"><span id=\"654\"><img width=\"624\" height=\"367\" alt=\"image\" src=\"Image_008.png\" id=\"655\"></span></p><p class=\"s21\"  id=\"656\">Umbracodb.image <span class=\"s22\" id=\"657\">User.image</span></p><p  id=\"658\"><br id=\"659\"></p><p  id=\"660\">Notes:</p><p  id=\"661\">Here I did not include about MySql<span class=\"s3\" id=\"662\">2 </span>Database. MySql server is free server and mostly used in Apache server. MySql Server is developed and maintained by Oracle Corporation. Most of PHP web application like Joomla<span class=\"s3\" id=\"663\">3 </span>CMS, Drupal <span class=\"s3\" id=\"664\">4</span>, Wordpress<span class=\"s3\" id=\"665\">5 </span>CMS use MySql server.</p><p  id=\"666\"><a href=\"http://www.mysql.com/\" class=\"a\" target=\"_blank\" id=\"667\">Your case can be difference from here in that case you can installed Mysql database from official sites at </a>www.mysql.com. When you install Mysql Server please read documentation provided on official sites and follow each step carefully otherwise MySql database may not work as expected.</p><p  id=\"668\">Creating user, database, setting database permission for user, changing password can be difference for MySql Database as instruction provided to Mssql database. If you decided to use MySql server for Umbraco CMS it‟s your responsibility to find out more details about MySql set up because here I will not conver MySql database.</p><p  id=\"669\"><br id=\"670\"></p><p  id=\"671\"><span id=\"672\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_009.png\" id=\"673\"></span></p><p  id=\"674\"><a href=\"http://www.mysql.com/\"  target=\"_blank\" id=\"675\">2 </a><a href=\"http://www.mysql.com/\" class=\"s11\" target=\"_blank\" id=\"676\">http://www.mysql.com/</a></p><p  id=\"677\"><a href=\"http://www.joomla.org/\"  target=\"_blank\" id=\"678\">3 </a><a href=\"http://www.joomla.org/\" class=\"s11\" target=\"_blank\" id=\"679\">www.joomla.org</a></p><p  id=\"680\"><a href=\"http://www.drupal.org/\"  target=\"_blank\" id=\"681\">4 </a><a href=\"http://www.drupal.org/\" class=\"s11\" target=\"_blank\" id=\"682\">www.drupal.org</a></p><p  id=\"683\"><a href=\"http://www.wordpress.org/\"  target=\"_blank\" id=\"684\">5 </a><a href=\"http://www.wordpress.org/\" class=\"s11\" target=\"_blank\" id=\"685\">www.wordpress.org</a></p><h3  id=\"heading686\" class=\"heading686\"><a name=\"bookmark14\" id=\"687\" >Directory</a><span class=\"p\" id=\"688\">:</span></h3><div id=\"contentheading686\" ><p  id=\"689\"><br id=\"690\"></p><p  id=\"691\">Directory is location for physical files, all Umbraco files goes or placed inside domain name directory. I will define directory from two points of view one from server and one from local machine.</p><p  id=\"692\"><b id=\"693\">Server: </b>If you buy web hosting including domain and space. You can see there is “httpdocs”<span class=\"s3\" id=\"694\">6 </span>directory that is main directory for your website. All Umbraco files should be placed within main directory. Do not place Umbraco files inside sub directory because Umbraco does not support until version 4.7 and I can‟t say about later version until its release. All Umbraco files directory should be placed without</p><p  id=\"695\">renaming into root directory.</p><h4  id=\"696\">Local Machine: <span class=\"p\" id=\"697\">I am installing Umbraco in local machine so that I will focus here more. First you need to Create Directory and give name “HowToUmbraco” in my case but you can give different name. Follow instructions.</span></h4></div></li><li  id=\"698\"><p  id=\"699\">Create Directory in hard disk.</p><p  id=\"700\"><span id=\"701\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_010.png\" id=\"702\"></span></p><p  id=\"703\"><span id=\"704\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_011.png\" id=\"705\"></span></p><p  id=\"706\"><span id=\"707\"><img width=\"26\" height=\"8\" alt=\"image\" src=\"Image_012.png\" id=\"708\"></span></p></li><li  id=\"709\"><p  id=\"710\">Right click on it, click on Properties Security Edit Add</p></li><li  id=\"711\"><p  id=\"712\">Type “Network Service” and press OK</p></li><li  id=\"713\"><p  id=\"714\">Select “Network service” and Checked “Modify”</p></li><li  id=\"715\"><p  id=\"716\">Press Apply and Press OK until it close property windows.</p><p  id=\"717\"><span id=\"718\"><img width=\"358\" height=\"401\" alt=\"image\" src=\"Image_013.jpg\" id=\"719\"></span></p></li><li  id=\"720\"><p  id=\"721\">Your Directory is ready to use for Umbraco websites.</p><p  id=\"722\"><br id=\"723\"></p><p  id=\"724\"><br id=\"725\"></p><p  id=\"726\">Here I Created Directory “HowToUmbraco” in Drive D: and checked “Modify” file permission for “Network Service”</p><p  id=\"727\">Here I Created Directory “HowToUmbraco” in Drive D: and checked “Modify” file permission for “Network Service”</p><p  id=\"728\"><span  id=\"729\"> </span></p><p  id=\"730\"><br id=\"731\"></p><p  id=\"732\"><span id=\"733\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_014.png\" id=\"734\"></span></p><p class=\"s20\"  id=\"735\">6 <a href=\"http://www.dollar2host.com/\" class=\"s11\" target=\"_blank\" id=\"736\">“httpdoc” directory may not same name for all. It‟s based on my experienced with www.dollar2host.com</a></p><h3  id=\"heading737\" class=\"heading737\"><a name=\"bookmark15\" id=\"738\" >Turn On IIS Service</a></h3><div id=\"contentheading737\" ><p  id=\"739\">Here I assume that your machine is windows 7. To turn on IIS service follow instructions.</p><p  id=\"740\"><br id=\"741\"></p><p  id=\"742\"><span id=\"743\"><img width=\"295\" height=\"389\" alt=\"image\" src=\"Image_015.jpg\" id=\"744\"></span></p><ul id=\"l13\"><li  id=\"746\"><p  id=\"747\">Type “Turn Windows features on or off” in Search Box and press Enter</p><p  id=\"748\">It will open new windows. Navigate Internet Information Service and expand its tree.</p></li><li  id=\"749\"><p  id=\"750\">Navigate</p><p  id=\"751\"><br id=\"752\"></p><p  id=\"753\">-World Wide Web Service</p><p  id=\"754\"><br id=\"755\"></p><p  id=\"756\">-Application Development Feature</p><p  id=\"757\"><br id=\"758\"></p></li><li  id=\"759\"><p  id=\"760\">Checked</p><p  id=\"761\"><br id=\"762\"></p><ul id=\"l14\"><li  id=\"764\"><p  id=\"765\">NET Extensibility</p><p  id=\"766\"><br id=\"767\"></p></li><li  id=\"768\"><p  id=\"769\">ASP.NET</p><p  id=\"770\"><br id=\"771\"></p></li><li  id=\"772\"><p  id=\"773\">Server-Side Includes</p><p  id=\"774\"><br id=\"775\"></p></li></ul></li><li  id=\"776\"><p  id=\"777\">Press OK</p><p  id=\"778\"><br id=\"779\"></p><p  id=\"780\">Wait until “Turn Windows Features On or Off” Close automatically.</p><p  id=\"781\"><br id=\"782\"></p><p  id=\"783\"><span id=\"784\"><img width=\"256\" height=\"184\" alt=\"image\" src=\"Image_016.jpg\" id=\"785\"></span></p><p class=\"s8\"  id=\"786\">Test your IIS Server</p><p  id=\"787\"><br id=\"788\"></p><p  id=\"789\">Type “localhost” in your browser it will open default IIS websites (see left image) and also check using drive C:// “Inetpub” directory should be created by IIS Service. If there is a directory and</p><p  id=\"790\">localhost returns default websites<span class=\"s3\" id=\"791\">7 </span>means</p><p  id=\"792\">IIS is ready to use.</p><p class=\"s21\"  id=\"793\">Defaultwebsites.image</p><p  id=\"794\"><br id=\"795\"></p><p  id=\"796\"><span id=\"797\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_017.png\" id=\"798\"></span></p><p class=\"s20\"  id=\"799\">7 <span class=\"s10\" id=\"800\">See image defaultwebsites.image</span></p><p  id=\"801\"><br id=\"802\"></p><h3  id=\"heading803\" class=\"heading803\"><a name=\"bookmark16\" id=\"804\" >IIS Set Up</a></h3><div id=\"contentheading803\" ><p  id=\"805\">Until now we just turn on IIS7 in local machine. Here I will explain about Application Pool and other relevant topic to IIS and Umbraco CMS. Let‟s open Internet Information Service (IIS) Manager. To open IIS manager type “IIS” in search box windows search result will show up “internet Information Service” and press OK. It will open IIS manager windows. See screen bellow</p><p  id=\"806\"><span id=\"807\"><img width=\"605\" height=\"347\" alt=\"image\" src=\"Image_018.jpg\" id=\"808\"></span></p><p  id=\"809\">General Description of IIS Manager environment</p><p  id=\"810\"><br id=\"811\"></p><h4  id=\"812\"><a name=\"a18\" id=\"813\">Connections</a><span class=\"p\" id=\"814\">:</span></h4><p  id=\"815\"><br id=\"816\"></p><p  id=\"817\">List of all websites that created by users. By default there one website name is “Default Web Site” which is IIS created automatically when we Turn On Internet Information Service from “Turn windows features on or off” program.</p><h4  id=\"818\"><a name=\"a19\" id=\"819\">Application Pools:</a></h4><p  id=\"820\"><br id=\"821\"></p><p  id=\"822\">According to Microsoft, when you run IIS 6.0 in worker process isolation mode, you can separate different Web applications and Web sites into groups known as <i id=\"823\">application pools</i>. An <i id=\"824\">application pool </i>is a group of one or more URLs that are served by a worker process or set of worker processes. Any Web directory or virtual</p><p  id=\"825\">directory can be assigned to an application pool. For more details you can follow link provided in reference<span class=\"s3\" id=\"826\">8</span>.</p><h4  id=\"827\"><a name=\"a20\" id=\"828\">Sites:</a></h4><p  id=\"829\"><br id=\"830\"></p><p  id=\"831\">You can create new sites inside your local IIS manager. Here we are going to create new websites for our Vcard Project. Sites menu contains list of created sites into your local machine. You can edit, delete and create easily by right clicking on specific sites.</p><h4  id=\"832\"><a name=\"a21\" id=\"833\">Create new site:</a></h4><p  id=\"834\"><br id=\"835\"></p><p  id=\"836\">Instruction:</p><p  id=\"837\"><br id=\"838\"></p></div></li></ul></div></li><li  id=\"839\"><p  id=\"840\">Right click on Site menu on left side at communications. If you did not see “sites” expand left menu tree.</p></li><li  id=\"841\"><p  id=\"842\">Click on “Add Web Site”</p></li><li  id=\"843\"><p  id=\"844\">Provide valid information see captured screen for references.</p><ul id=\"l15\"><li  id=\"846\"><p  id=\"847\">Site name “<span  id=\"848\">howtoumbraco</span>” – you can give your own name if you like</p></li><li  id=\"849\"><p  id=\"850\">“Application Pool” is created automatically but I recommend changing it so that click on “Select” button at right side. It will list all available application pool. Select “<span  id=\"851\">ASP.NET v4.0</span>” for Umbraco 4.7 and press OK.</p><p  id=\"852\"><br id=\"853\"></p><p  id=\"854\"><br id=\"855\"></p><p  id=\"856\"><span id=\"857\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_019.png\" id=\"858\"></span></p><p class=\"s10\"  id=\"859\"><a href=\"http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/67e39bd8-317e-4cf6-\"  target=\"_blank\" id=\"860\">8 </a>http://www.microsoft.com/technet/prodtechnol/WindowsServer2003/Library/IIS/67e39bd8-317e-4cf6- b675-6431d4425248.mspx?mfr=true</p></li><li  id=\"861\"><p  id=\"862\">Physical Path: this is important part here so click on browse button right side and locate directory where you created before for Umbraco installation. In my case “<span  id=\"863\">HowToUmbraco</span>” directory in drive D:</p></li><li  id=\"864\"><p  id=\"865\">Binding: I changed port number to 8080 you can leave default but I</p></li></ul><p  id=\"866\"><span id=\"867\"><img width=\"322\" height=\"362\" alt=\"image\" src=\"Image_020.jpg\" id=\"868\"></span></p><p  id=\"869\">recommend to change it. You can specify any port number if it‟s not used or occupied by other application like Skype. In my case Skype already use default port number <span  id=\"870\">80 </span>so that I need to change it something else. So I change to <span  id=\"871\">8080</span>. Remember that if you change port number you have to provide port number every time when you access your websites via browser.</p><p  id=\"872\">Press OK:</p><p  id=\"873\"><br id=\"874\"></p><p  id=\"875\">You have successfully create sites and assign application pool “Asp.net v4.0”.</p><p  id=\"876\"><br id=\"877\"></p><p class=\"s24\"  id=\"878\"><a name=\"bookmark17\" id=\"879\">TESTING IIS</a><span class=\"h4\" id=\"880\">:</span></p><p  id=\"881\">It is necessary to test our site and setting we have done before, everything should work perfectly. To test newly created site follow these steps:</p></li><li  id=\"882\"><p  id=\"883\">Open Notepad</p></li><li  id=\"884\"><p  id=\"885\">Copy and paste that line of code without changing it. Copy code bellow</p><p class=\"s23\"  id=\"886\">&lt;% Response.write(\" welcome to 'How to Umbraco Basic'\") %&gt;</p><p  id=\"887\"><br id=\"888\"></p></li><li  id=\"889\"><p  id=\"890\">Click on Save. Now be very careful Naming is very important here. Give file name <span  id=\"891\">DefaultTest </span>and end with <span  id=\"892\">.aspx </span>without space so your file name must be “<span  id=\"893\">DefaultTest.aspx</span>” without quote. Now save that file inside Umbraco installation directory in my case I saved <span  id=\"894\">DefaultTest.aspx </span>file inside “<span  id=\"895\">HowToUmbraco</span>” Directory.</p></li><li  id=\"896\"><p  id=\"897\">Open Browser and type <span  id=\"898\">localhost:8080/DefaultTest.aspx </span>here <span  id=\"899\">8080 </span>is port number that I changed before, if you did not change port number “<span  id=\"900\">localhost/DefaultTest.aspx</span>” will be enough.</p></li><li  id=\"901\"><p  id=\"902\">If you can see <span  id=\"903\">welcome to 'How to Umbraco Basic' </span>message in browser. That means your sites is working if you did not see that message or get some error please repeat Previous Chapter.</p><p  id=\"904\"><br id=\"905\"></p><h4  id=\"906\"><a name=\"a22\" id=\"907\">Modifying your Sites:</a></h4><p  id=\"908\"><br id=\"909\"></p><p  id=\"910\">If you like to modify your sites properties or other settings your can click on your sites and on middle and right side you can see more options available to edit. For example:</p></li><li  id=\"911\"><p  id=\"912\">Edit bindings, Permission and basic settings</p></li><li  id=\"913\"><p  id=\"914\">Advanced settings</p></li><li  id=\"915\"><p  id=\"916\">View application, add virtual directory</p></li><li  id=\"917\"><p  id=\"918\">Edit SMTP or Email setting, database connection strings, SSL, Handler Mappings etc.</p></li><li  id=\"919\"><p  id=\"920\">For more details you can visit Microsoft official sites for IIS.</p><p  id=\"921\"><br id=\"922\"></p><p class=\"s10\"  id=\"923\">References:</p><p  id=\"924\"><br id=\"925\"></p><p class=\"s10\"  id=\"926\">IIS</p><p  id=\"927\"><br id=\"928\"></p><p class=\"s10\"  id=\"929\">Taken date April 13, 2011</p><p class=\"s10\"  id=\"930\"><a href=\"http://www.microsoft.com/downloads/en/details.aspx?FamilyID=32c54c37-7530-4fc0-bd20-\" class=\"s11\" target=\"_blank\" id=\"931\">http://www.iis.net </a>http://www.microsoft.com/downloads/en/details.aspx?FamilyID=32c54c37-7530-4fc0-bd20- 177a3e5330b7</p><p class=\"s10\"  id=\"932\">Notepad is out of box software provided by Microsoft.</p><h3  id=\"heading933\" class=\"heading933\"><a name=\"bookmark18\" id=\"934\" >Downloading Umbraco files:</a></h3><div id=\"contentheading933\" ><p  id=\"935\">It‟s time to download Umbraco latest file from official site. Official site contains list of Umbraco release, most resent Umbraco release version is highly focused in download site. I recommend downloading latest version because every new release contains bug fix from previous version, added extra new features and improved better than previous release. Here you can argue that new version of Umbraco also contains new bugs and it may take longer time to fix because it‟s a new release. You are not wrong but my point is we all are here to learn new thing and challenge new problem, help others and get help from others so do not compromise to face new challenge and learn more, technology never becomes perfect, it‟s a process of learning from history, face new challenge in present and improve it better for future.</p><p  id=\"936\">In my personal opinion I download one or two previous release then latest release version only for client websites because earlier version of release has known bugs and can be solved very fast because someone or other developer might be already faced or fixed such bugs. But in my local host or for my testing purpose I always download latest release because I always want to face new bugs that nobody discovered it and have a fun with that bugs. In this Vcard project I will download latest version of Umbraco release 4.7.</p></div><h3  id=\"heading937\" class=\"heading937\"><a name=\"bookmark19\" id=\"938\" >What to Download?</a></h3><div id=\"contentheading937\" ><p class=\"s26\"  id=\"939\"><a href=\"http://umbraco.com/download\" class=\"a\" target=\"_blank\" id=\"940\">Now you get overview of downloading Umbraco. It‟s a good questions what to download? If you visit </a>http://umbraco.com/download <a href=\"http://umbraco.codeplex.com/releases/\" class=\"a\" target=\"_blank\" id=\"941\">sites to download, you can easily install using “Web Platform Installer”. Web platform Installer is Microsoft free software use to install program. Here I will not use “Web Platform Installer” because I want to show you more options. Visit Umbraco release or let‟s follow this link </a>http://umbraco.codeplex.com/releases/<span class=\"p\" id=\"942\">. This websites contains all Umbraco release version. On left menu side you can see current release version. Inside rectangle box you can see details of latest release version, for example Rating, Release date, update, Reviews, Number of Download etc. here look for Dev Status: if it‟s say stable it means it‟s a believe to be ready to use. On right side menu bar you can see pervious release of Umbraco. I said not to use Web Platform Installer to install Umbraco because it will install new release. If you would like to install other version then you need to browse codeplex for all releases.</span></p><p  id=\"943\">Let‟s back to main questions what to download? I would say first describe yourself and decide what to download. Here are three main categories so you need to choose one categories yourself based on your programming skills and .NET language skills.</p><h4  id=\"944\">Categories Basic <span class=\"p\" id=\"945\">– if you have basic knowledge of C#, object oriented program, MsSql database, if you know how to use usercontrol, webservices and classes to asp.net websites than I said its very basic to Umbraco so you can download Recommended Download by Umbraco sites. It‟s a binaries file.</span></h4><p  id=\"946\"><br id=\"947\"></p><h4  id=\"948\">Categories Tester <span class=\"p\" id=\"949\">- if you have advanced level of C#, Object Oriented program knowledge and if you do not want to use mssql database but want to test Umbraco than you are as a tester. Please download “Umbraco x.x.x WebDeploy NET n.n” here x.x.x is Umbraco Release version and n.n is .NET frame work version. Until this book release its “Umbraco 4.7.0 WebDeploy NET 4.0” so download that files and test Umbraco without using MSSQL database.</span></h4><h4  id=\"950\">Categories Advanced <a href=\"http://umbraco.codeplex.com/SourceControl/list/changesets\" class=\"a\" target=\"_blank\" id=\"951\">– If you can analyze other‟s c# code and have knowledge of Object Oriented Program, database and other programming language then you can download Source code from here </a><span  id=\"952\">http://umbraco.codeplex.com/SourceControl/list/changesets </span><span class=\"p\" id=\"953\">and have a fun with source code.</span></h4><p  id=\"954\"><br id=\"955\"></p><p  id=\"956\"><span id=\"957\"><img width=\"529\" height=\"331\" alt=\"image\" src=\"Image_021.jpg\" id=\"958\"></span></p><p  id=\"959\"><br id=\"960\"></p><p  id=\"961\">My personal opinion: I download Binary files for client websites development and I download source code files for learning purpose. I strongly recommend you to download source code because using source code files we can easily debug and see how Umbraco works. It‟s a good way to learn Umbraco. For Vcard project I download binary files, binary files are recommended by Umbraco official.</p><p  id=\"962\"><br id=\"963\"></p></div><h3  id=\"heading964\" class=\"heading964\"><a name=\"bookmark20\" id=\"965\" >Unzip ZIP format</a></h3><div id=\"contentheading964\" ><p  id=\"966\">Umbraco downloaded files are compressed in ZIP format, I guess you already worked with zip format; one important thing for Umbraco zip file before extract is to unblock it. Make sure you unblock zip file before extract.</p><p  id=\"967\">Instruction:</p><p  id=\"968\"><br id=\"969\"></p></div></li><li  id=\"970\"><p  id=\"971\">Right click on Umbraco files that you just downloaded and click on Properties</p></li><li  id=\"972\"><p  id=\"973\">Click On “Unblock” and press OK</p></li><li  id=\"974\"><p  id=\"975\">Extract files by Right click on zip files and click on “Extract All”</p></li><li  id=\"976\"><p  id=\"977\">Your extractor can be difference from I have one. But purpose is to extract all files.</p><p  id=\"978\"><br id=\"979\"></p><p  id=\"980\"><span id=\"981\"><img width=\"485\" height=\"456\" alt=\"image\" src=\"Image_022.png\" id=\"982\"></span></p></li><li  id=\"983\"><p  id=\"984\">Copy all extracted files, do not copy “build” directory<span class=\"s3\" id=\"985\">9</span>. Go inside “build” directory and copy all files from there.</p></li><li  id=\"986\"><p  id=\"987\">Paste all files inside “HowToUmbraco” directory if you follow me. Otherwise paste all Umbraco extracted files to your directory where you have decided to use. If you get confused go back to “Directory” topic and follow each step.</p></li><li  id=\"988\"><p  id=\"989\">If you followed me your “HowToUmbraco” directory must look like this see screen</p><p  id=\"990\"><span id=\"991\"><img width=\"316\" height=\"501\" alt=\"image\" src=\"Image_023.png\" id=\"992\"></span></p><p class=\"s27\"  id=\"993\">-</p><p  id=\"994\"><br id=\"995\"></p><p  id=\"996\">If yours file structure is same as above captured image then you are ready to install Umbraco.</p><p  id=\"997\"><br id=\"998\"></p><p  id=\"999\"><span id=\"1000\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_024.png\" id=\"1001\"></span></p><p class=\"s20\"  id=\"1002\">9 <span class=\"s10\" id=\"1003\">You can also copy “build” directory in your case, if you want to follow me copy directory and files that have inside build directory.</span></p><h3  id=\"heading1004\" class=\"heading1004\"><a name=\"bookmark21\" id=\"1005\" >Install Umbraco step by step guide</a></h3><div id=\"contentheading1004\" ><p  id=\"1006\">To install Umbraco Follow these process Instruction:</p></div></li><li  id=\"1007\"><p  id=\"1008\">Browser you websites using browser and type localhost:8080</p></li><li  id=\"1009\"><p  id=\"1010\">Here 8080 is port number if you did not change your port number just type localhost</p></li><li  id=\"1011\"><p  id=\"1012\">You  must  see  Umbraco  welcome  page  click  <span id=\"1013\"><img width=\"100\" height=\"29\" alt=\"image\" src=\"Image_025.jpg\" id=\"1014\"></span><span class=\"s28\" id=\"1015\">    </span>on “Lets get Started”</p></li><li  id=\"1016\"><p  id=\"1017\">Even its free open source CMS you need to follow rules to use Umbraco read license, term and conditions. More details can be found on official websites of Umbraco, Accept the license for Umbraco CMS. To accept license click “Accept and continue”</p></li><li  id=\"1018\"><p  id=\"1019\">You are now in step 3. This step is more fun.</p></li><li  id=\"1020\"><p  id=\"1021\">By providing not enough file permission to “Network service” or “application pool” in Umbraco installation directory will thrown out notification message “files permission are not ready” in such case you will not see this step 3, go back to file permission setting and come back later. If everything is ok you can see more option here</p><p class=\"s27\"  id=\"1022\">-     <span id=\"1023\"><img width=\"375\" height=\"90\" alt=\"image\" src=\"Image_026.jpg\" id=\"1024\"></span></p></li><li  id=\"1025\"><p  id=\"1026\">Four options are here and all four options have on radio button. Why it‟s in radio button, reason is Radio button allows to choose only one option at a time, in Umbraco it is not possible<span class=\"s3\" id=\"1027\">10 </span>to use two different databases at a same time that‟s why they have radio button to make sure to choose one database.</p></li></ul><ul id=\"l16\"><li  id=\"1029\"><p  id=\"1030\">If you want to follow me until now click on first one “I …. Have a blank Sql server. <span class=\"s19\" id=\"1031\">Also see “What to Download?” topics page 25 </span>“</p></li><li  id=\"1032\"><p  id=\"1033\">If you are planning to test Umbraco select second option “I want to use SQl CE4,….” It does not require database. <span class=\"s19\" id=\"1034\">see “Categories Tester?” page 26</span></p></li><li  id=\"1035\"><p  id=\"1036\">If you are advanced user select third option this will allows developer to type connection string. <span class=\"s19\" id=\"1037\">Also see “Categories Advanced” page 26</span></p></li></ul><p  id=\"1038\"><br id=\"1039\"></p><p  id=\"1040\"><span id=\"1041\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_027.png\" id=\"1042\"></span></p><p class=\"s20\"  id=\"1043\">10 <span class=\"s10\" id=\"1044\">It is possible to use more than one database by extending umbraco using .net class. It is not possible to use multiple database during installation period.</span></p><p  id=\"1045\"><br id=\"1046\"></p><ul id=\"l17\"><li  id=\"1048\"><p  id=\"1049\">if you need help click on last one.</p></li><li  id=\"1050\"><p  id=\"1051\">I click on first one so Umbraco provides more option to select database type. I am using mssql, so I am selecting Microsoft SQL server.</p></li><li  id=\"1052\"><p  id=\"1053\">Your case can be deference if you plan to use MySql server than you need to find yourself how to connect to Mysql server, I am not going to include here.</p></li><li  id=\"1054\"><p  id=\"1055\">After click on first option or choice it will provide more input fields for sql connection details. See captured screen for reference your case can be deference. If you are following me it will be same as in captured screen bellow.</p></li><li  id=\"1056\"><p  id=\"1057\">Here is description</p><ul id=\"l18\"><li  id=\"1059\"><p  id=\"1060\">Server= location of sql server, in mycase its .\\sqlepress, you can also use remote server database if you have for example server=”www.example.com\\sqlexpress”</p></li><li  id=\"1061\"><p  id=\"1062\">Database name: Name of database that we created for Umbraco cms in database topic</p></li><li  id=\"1063\"><p  id=\"1064\">Username: user that has access on database that we created for Umbraco</p></li><li  id=\"1065\"><p  id=\"1066\">Password: password that assign to user to login sql server</p></li></ul></li></ul><p  id=\"1067\"><span id=\"1068\"><img width=\"465\" height=\"355\" alt=\"image\" src=\"Image_028.jpg\" id=\"1069\"></span></p><p  id=\"1070\">database.</p><p  id=\"1071\"><br id=\"1072\"></p><p class=\"s27\"  id=\"1073\">-</p><p  id=\"1074\"><br id=\"1075\"></p><ul id=\"l19\"><li  id=\"1077\"><p  id=\"1078\">Press “Install”</p></li><li  id=\"1079\"><p  id=\"1080\">If server location, database name, username and password are correct then it will take only few minute to setup database for Umbraco, during this process Umbraco show up progress bar. If Umbraco show up any error or notice. Correct error based on error message provided by Umbraco and continue to install Umbraco</p></li><li  id=\"1081\"><p  id=\"1082\">Press “Continue” now you are in step 4</p><p  id=\"1083\"><span id=\"1084\"><img width=\"322\" height=\"317\" alt=\"image\" src=\"Image_029.jpg\" id=\"1085\"></span></p></li><li  id=\"1086\"><p  id=\"1087\">Step 4 is for Create user; here you have to provide User information. That user will be supper administrator and have elevator access or root level of access to Umbraco Backend.</p><ul id=\"l20\"><li  id=\"1089\"><p  id=\"1090\">Name: name for supper administrator account</p></li><li  id=\"1091\"><p  id=\"1092\">Email: email of supper administrator account</p></li><li  id=\"1093\"><p  id=\"1094\">Username: user name use to identify user.</p></li><li  id=\"1095\"><p  id=\"1096\">Password: secrete code to gain access</p></li><li  id=\"1097\"><p  id=\"1098\">See captured screen as a reference.</p><p  id=\"1099\"><br id=\"1100\"></p><p class=\"s29\"  id=\"1101\">o</p></li></ul></li><li  id=\"1102\"><p  id=\"1103\">Click “Create user”</p><p  id=\"1104\">Step 5: select starter kits.</p><p  id=\"1105\"><br id=\"1106\"></p><p  id=\"1107\"><span id=\"1108\"><img width=\"585\" height=\"232\" alt=\"image\" src=\"Image_030.jpg\" id=\"1109\"></span></p><p  id=\"1110\"><br id=\"1111\"></p><p  id=\"1112\">You can choose any one for your sites. It will install selected starter kits. It contains Templates, xslt, css and other extra files based on selected starter kits. This is good way to learn for new Umbraco developer. By installing out of box starter kits will provide guidance to new user about how templates, add XSLT, Document types, Macro, CSS etc works in Umbraco. By analyzing starter kits help developer to learn quickly and get familiar with environments.</p><p  id=\"1113\">I will start from scratch that‟s why I am not going to install any starter kits but you can install if you want. I will click last one “no thanks”. It will not install anything do not worry I will create later on. If you want to follow me click on “No thanks” and Click “Yes”.</p><p  id=\"1114\"><b id=\"1115\">Final step: </b>you are done now click on “Set up your new websites” it will redirect to administrator control panel that is Backend of Umbraco sites<span class=\"s3\" id=\"1116\">11</span>.</p><p  id=\"1117\"><br id=\"1118\"></p><p  id=\"1119\"><span id=\"1120\"><img width=\"601\" height=\"76\" alt=\"image\" src=\"Image_031.jpg\" id=\"1121\"></span></p><p  id=\"1122\">Note: if you browse you sites you will see Umbraco notice “Looks like there's still work to do”. It‟s because we did not set up our Umbraco sites. I will show step by step guide to set up.</p><h4  id=\"1123\"><a name=\"a23\" id=\"1124\">Note: to install starter kits, it should be connected to internet. Being offline may not work to install starter kits.</a></h4><p  id=\"1125\"><br id=\"1126\"></p><p  id=\"1127\"><br id=\"1128\"></p><p  id=\"1129\"><span id=\"1130\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_032.png\" id=\"1131\"></span></p><p class=\"s20\"  id=\"1132\">11 <span class=\"s10\" id=\"1133\">Also called back office.</span></p><p  id=\"1134\"><span id=\"1135\"><img width=\"602\" height=\"441\" alt=\"image\" src=\"Image_033.png\" id=\"1136\"></span></p><h2  id=\"heading1137\" class=\"heading1137\"><a name=\"bookmark22\" id=\"1138\" >Back End Working Environment</a></h2><div id=\"contentheading1137\" ><p  id=\"1139\">1 2 3 4 5</p><p  id=\"1140\"><br id=\"1141\"></p><p  id=\"1142\">6 8 9 10</p><p  id=\"1143\"><br id=\"1144\"></p><p  id=\"1145\">13</p><p  id=\"1146\">7</p><p  id=\"1147\"><br id=\"1148\"></p><p  id=\"1149\">11</p><p  id=\"1150\"><br id=\"1151\"></p><p  id=\"1152\">12</p><p  id=\"1153\"><br id=\"1154\"></p><p  id=\"1155\"><br id=\"1156\"></p><ol id=\"l21\"><li  id=\"1158\"><p  id=\"1159\">Create: it‟s dynamic, will change based on Section item see number 12.</p><p  id=\"1160\"><br id=\"1161\"></p></li><li  id=\"1162\"><p  id=\"1163\">Search: type text to search content</p><p  id=\"1164\"><br id=\"1165\"></p></li><li  id=\"1166\"><p  id=\"1167\">About: To view Umbraco installed version, licensed and other information.</p><p  id=\"1168\"><br id=\"1169\"></p></li><li  id=\"1170\"><p  id=\"1171\">Help: external link, will open Wiki page about Umbraco</p><p  id=\"1172\"><br id=\"1173\"></p></li><li  id=\"1174\"><p  id=\"1175\">Logout: click to log out. It will contain login user name</p><p  id=\"1176\"><br id=\"1177\"></p></li><li  id=\"1178\"><p  id=\"1179\">Content: it‟s a dynamic, will changed based on Section Items see number 12</p></li><li  id=\"1180\"><p  id=\"1181\">Secondary items or child items of Main Items.</p><p  id=\"1182\"><br id=\"1183\"></p></li><li  id=\"1184\"><p  id=\"1185\">Get Started: Umbraco provides information, news and external links</p><p  id=\"1186\"><br id=\"1187\"></p></li><li  id=\"1188\"><p  id=\"1189\">Latest edits: list latest change you have made on you site. 10)Change Password: change admin password. Password is hashed</p></li></ol><ol id=\"l22\"><li  id=\"1191\"><p  id=\"1192\">Section: Main menu items, we can add custom section. Not covered here</p><p  id=\"1193\"><br id=\"1194\"></p></li><li  id=\"1195\"><p  id=\"1196\">Section Items: Items inside section. Sub Menu part of Section Menu. Mostly used in developing Umbraco, creating content and other</p></li></ol><p  id=\"1197\"><br id=\"1198\"></p><p  id=\"1199\">administrator purpose. Umbraco come up with six default section items Content, Media, User, Settings, Developer and Members.</p><p  id=\"1200\">Content: here editor create articles, edit, upload image. It‟s not technical stuff</p><p  id=\"1201\"><br id=\"1202\"></p><p  id=\"1203\">Media: it contains Media items. Image, Video, Audio is mostly Media items. Uploaded files go inside Media section. Using .net control developer can easily use others Directory to store files on their needs and requirements.</p><p  id=\"1204\">User: contains list of Users. All registered user are listed under User. Here you can set up user id, password, Email, permission and other personal information.</p><ul id=\"l23\"><li  id=\"1206\"><p  id=\"1207\">Users</p></li><li  id=\"1208\"><p  id=\"1209\">User types</p></li><li  id=\"1210\"><p  id=\"1211\">User Permission Members: it contains</p></li><li  id=\"1212\"><p  id=\"1213\">Members</p></li><li  id=\"1214\"><p  id=\"1215\">Member Groups</p></li><li  id=\"1216\"><p  id=\"1217\">Member types</p><p  id=\"1218\">Settings: widely used in this “how to Umbraco”. Setting used to set up umbraco site. It contains</p></li><li  id=\"1219\"><p  id=\"1220\">Document Type</p></li><li  id=\"1221\"><p  id=\"1222\">Templates</p></li><li  id=\"1223\"><p  id=\"1224\">Style Sheet</p></li><li  id=\"1225\"><p  id=\"1226\">Scripts</p></li><li  id=\"1227\"><p  id=\"1228\">Dictionary</p></li><li  id=\"1229\"><p  id=\"1230\">Language</p></li><li  id=\"1231\"><p  id=\"1232\">Media types</p><p  id=\"1233\"><br id=\"1234\"></p><p  id=\"1235\">Developer: it contains all technical stuff.</p><p  id=\"1236\"><br id=\"1237\"></p></li><li  id=\"1238\"><p  id=\"1239\">Cache browser</p></li><li  id=\"1240\"><p  id=\"1241\">Data Types</p></li><li  id=\"1242\"><p  id=\"1243\">Macro</p></li><li  id=\"1244\"><p  id=\"1245\">Packages</p></li><li  id=\"1246\"><p  id=\"1247\">Scripting Files</p></li><li  id=\"1248\"><p  id=\"1249\">Xslt Files</p></li></ul><p  id=\"1250\"><br id=\"1251\"></p><h1  id=\"1252\"><a name=\"a24\" id=\"1253\">Chapter 03: Document Type</a></h1><p  id=\"1254\"><br id=\"1255\"></p><p  id=\"1256\"><br id=\"1257\"></p><p  id=\"1258\"><span id=\"1259\"><img width=\"529\" height=\"1\" alt=\"image\" src=\"Image_034.png\" id=\"1260\"></span></p></div><h2  id=\"heading1261\" class=\"heading1261\"><a name=\"bookmark23\" id=\"1262\" >Document Type:</a></h2><div id=\"contentheading1261\" ><p  id=\"1263\">Document type is a core feature<span class=\"s3\" id=\"1264\">12 </span>of Umbraco cms; it is out of box document type feature. If you already work with Drupal CMS, you might be working with CCK (Content Construction Kit), Document Type is exactly same purpose as CCK that allows you to create fields.</p><p  id=\"1265\">Document type is a group of fields, that controls fields and fields are used to input data by content creator or editor while creating content on Umbraco sites. Content is second step after Document Type so that Document type structures the input fields, creates environment to add or create new content and facilitate content creating services to Editor.</p><p  id=\"1266\"><br id=\"1267\"></p></div><h2  id=\"heading1268\" class=\"heading1268\"><a name=\"bookmark24\" id=\"1269\" >Document Type for Developers:</a></h2><div id=\"contentheading1268\" ><p  id=\"1270\">Developer creates document type based on groups of data that needs to be saved to and provides rich service to manage data and customize input fields.</p><p  id=\"1271\">You may still not clear what document type is so I am going to give one example as vcard case. Vcard websites I called “Semic Provider” has many fields like</p><ul id=\"l24\"><li  id=\"1273\"><p  id=\"1274\">Logo</p></li><li  id=\"1275\"><p  id=\"1276\">Title of Websites “Semic Provider” and</p></li><li  id=\"1277\"><p  id=\"1278\">Slogan “Where content is understood by human and machine”.</p><p  id=\"1279\">As a developer I want to provide a service to client so s/he can upload Logo, edit title of websites and slogan. Developer could do hard coding text into templates to display logo, title of websites and slogan but client can‟t change it later if s/he decided to change it. Client wants cms because s/he wants to control content without having knowledge of technical stuff like editing templates so as a developer we should provide more control over content. Logo, Title of Website and slogan are not same for all time; they can be changed later by client. To solve that problem we need to create Document type.</p><p  id=\"1280\">Document type is not single subject it‟s more complex for new Umbraco developer. I am going to look more details about document types. It contains Properties, Info, Structure and Tabs.</p><h4  id=\"1281\">Properties<span class=\"p\" id=\"1282\">: it‟s an input field that you create in document type, has more properties</span></h4></li><li  id=\"1283\"><p  id=\"1284\">Name: name of your input field</p></li><li  id=\"1285\"><p  id=\"1286\">Alias: alias used to retrieve value or fetch value that properties have</p></li><li  id=\"1287\"><p  id=\"1288\">Type: input type for example , Text box, upload, Button, check box etc. these are based on Data Type</p></li><li  id=\"1289\"><p  id=\"1290\">Tab- by default properties is assign to generic properties but you can assign to your custom tabs</p><p  id=\"1291\"><br id=\"1292\"></p><p  id=\"1293\"><span id=\"1294\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_035.png\" id=\"1295\"></span></p><p class=\"s10\"  id=\"1296\"><a href=\"http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder-\"  target=\"_blank\" id=\"1297\">12 </a>http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder- introduction/document-types official video about Document Type introduction</p><h4  id=\"1298\">Tabs<span class=\"p\" id=\"1299\">: Tabs is name of group for example name, age, address and email properties of person can be group together with tabs “personal Details” so in Tabs we create “Personal Details” and in Property tab we assign name, age, address and email properties to “Personal Details” tab. Tab and Tabs should not be confuse. Tabs, Properties, Structure and Info have save level inside Document Type tree and tab is child of Properties.</span></h4><p  id=\"1300\"><br id=\"1301\"></p><h4  id=\"1302\">Structure<span class=\"p\" id=\"1303\">: Document type can have parent or child document Type here you check what‟s should be parent or child document type is allowed</span></h4><h4  id=\"1304\">Info<span class=\"p\" id=\"1305\">: it‟s not that much important as Properties, Tabs and Structure. Here you can assign template and other general setting or get more information about Document Type. More available settings inside Info are listed below. </span><span class=\"s10\" id=\"1306\">These are taken from official Umbraco sites. Please visit references.</span></h4><ul id=\"l25\"><li  id=\"1308\"><p  id=\"1309\">Name: name of Document Type</p></li><li  id=\"1310\"><p  id=\"1311\">Alias: alias of Document Type, use by Umbraco and developer when they work with Umbraco API and CodeInProject.</p></li><li  id=\"1312\"><p  id=\"1313\">Thumbnail: Thumb image of Document Type displayed on create page dialog.</p></li><li  id=\"1314\"><p  id=\"1315\">Icon: Icon of Document Type.</p><p  id=\"1316\"><br id=\"1317\"></p></li><li  id=\"1318\"><p  id=\"1319\">Description: Description of Document Type.</p><p  id=\"1320\"><br id=\"1321\"></p></li><li  id=\"1322\"><p  id=\"1323\">Allowed Template. It is use to present data to end uses. If you fetch data using Xslt you can make document type without templates but Content based on that document type will not be able to provide preview mode if there is no associated template. One Document Type can have more than one template.</p></li><li  id=\"1324\"><p  id=\"1325\">Default Templates: that is a default template of document type. And used by Document Type</p></li></ul></li></ul><p class=\"s30\"  id=\"1326\"><a name=\"bookmark25\" id=\"1327\">Visual Diagram</a><span class=\"s31\" id=\"1328\">13 </span>for Document Type<span class=\"h3\" id=\"1329\">:</span></p><p  id=\"1330\"><br id=\"1331\"></p><p  id=\"1332\"><span id=\"1333\"><img width=\"607\" height=\"165\" alt=\"image\" src=\"Image_036.png\" id=\"1334\"></span></p><p class=\"s32\"  id=\"1335\">Document Type <span class=\"s10\" id=\"1336\">Name: </span><span class=\"s33\" id=\"1337\">Properties:</span></p><p class=\"s34\"  id=\"1338\">- <span class=\"s35\" id=\"1339\">Alias: </span><span class=\"s33\" id=\"1340\">Tabs:</span></p><p  id=\"1341\"><br id=\"1342\"></p><h4  id=\"1343\">Create Content <span class=\"s36\" id=\"1344\">Properties and Tabs </span><span class=\"p\" id=\"1345\">of Document type</span></h4><p  id=\"1346\"><br id=\"1347\"></p><h4  id=\"1348\"><a name=\"a25\" id=\"1349\">Templates</a><span class=\"p\" id=\"1350\">:</span></h4><p class=\"s23\"  id=\"1351\">Alias <span  id=\"1352\">of Document Type‟s Properties</span></p><p  id=\"1353\"><br id=\"1354\"></p><h4  id=\"1355\"><a name=\"a26\" id=\"1356\">Presentation of Content</a></h4><p  id=\"1357\">End Users</p><p  id=\"1358\"><br id=\"1359\"></p><p  id=\"1360\"><span id=\"1361\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_037.png\" id=\"1362\"></span></p><p class=\"s3\"  id=\"1363\">13 <span class=\"s10\" id=\"1364\">These diagrams are my own concept and may be other developer argues with Diagrams. There is no official diagram for Document Type.</span></p><p class=\"s10\"  id=\"1365\">References taken dates April 14, 2011</p><p  id=\"1366\">Diagram show, first create Document Type, second create Content based on Document Type Properties, use Alias of Document Type‟s properties and display data to End users.</p><p  id=\"1367\"><br id=\"1368\"></p><h4  id=\"1369\"><a name=\"a27\" id=\"1370\">Practical: let’s create Document Type for “Sites Setting”</a></h4><h3  id=\"1371\"><a name=\"bookmark26\" id=\"1372\">Document Type Generic Properties: </a><span id=\"1373\"><img width=\"294\" height=\"22\" alt=\"image\" src=\"Image_038.jpg\" id=\"1374\"></span></h3><p  id=\"1375\">Instruction:</p><ul id=\"l26\"><li  id=\"1377\"><p  id=\"1378\">open Backend of Umbraco sites (your site /Umbraco/) in my case localhost:8080/umbraco/</p></li><li  id=\"1379\"><p  id=\"1380\">Provide login credentials user id and password (my case “admin” “root” login and password respectively)</p></li><li  id=\"1381\"><p  id=\"1382\">Click Setting on Section at bottom left corner, it will list all available features on Setting on top left corner. Expand Document Type</p></li><li  id=\"1383\"><p  id=\"1384\">If you follow me Document Type must be empty so nothing will happen it‟s because I decided not to install any starter kits. Now I will create new document Type</p></li><li  id=\"1385\"><p  id=\"1386\">Right Click on Document Type and Click “Create”. New windows popup.</p></li><li  id=\"1387\"><p  id=\"1388\">Master Document Type: select none…</p></li><li  id=\"1389\"><p  id=\"1390\">Name: name for Document Type I choose “Web Site Global Setting” but you can choose different if you want. Its name of document type.</p></li><li  id=\"1391\"><p  id=\"1392\">By Default “Create matching templates” is checked so leave default, it will create matching templates and we will use that templates as master templates.</p></li><li  id=\"1393\"><p  id=\"1394\">Press “Create” Button</p></li><li  id=\"1395\"><p  id=\"1396\">Now Umbraco created new document Type and provide more option to input.</p></li><li  id=\"1397\"><p  id=\"1398\">Click “Web site global Setting” to open document type. It will open four properties Info, Structure, Generic Properties and Tabs</p></li><li  id=\"1399\"><p  id=\"1400\">Info: if you want to follow me provide these information</p><ul id=\"l27\"><li  id=\"1402\"><p class=\"s8\"  id=\"1403\">Name <span class=\"p\" id=\"1404\">and </span>Alias <span class=\"p\" id=\"1405\">is not recommended to change because it will effect whole system</span></p></li><li  id=\"1406\"><p class=\"s8\"  id=\"1407\">Icon<span class=\"p\" id=\"1408\">: Setting Agent. Select from dropdown</span></p></li><li  id=\"1409\"><p class=\"s8\"  id=\"1410\">Thumbnail<span class=\"p\" id=\"1411\">: developer.png select from dropdown</span></p></li><li  id=\"1412\"><p class=\"s8\"  id=\"1413\">Description<span class=\"p\" id=\"1414\">: “Manage your websites. Here you can set up your global sites. Example change logo, slogan etc.”</span></p></li><li  id=\"1415\"><p class=\"s8\"  id=\"1416\">Allowed templates <span class=\"p\" id=\"1417\">and </span>Default Templates <span class=\"p\" id=\"1418\">leave default do not change it.</span></p></li><li  id=\"1419\"><h4  id=\"1420\"><a name=\"a28\" id=\"1421\">Remember to save before jump to next property</a><span class=\"p\" id=\"1422\">.</span></h4></li><li  id=\"1423\"><p  id=\"1424\">You must see balloon success message at bottom right corner if anything goes wrong it will show up balloon message with error details.</p></li></ul></li><li  id=\"1425\"><p  id=\"1426\">Structure: leave Default</p></li><li  id=\"1427\"><p  id=\"1428\">Tabs: do not create for this document type</p></li><li  id=\"1429\"><p  id=\"1430\">Generic Properties: click on Generic Properties. It‟s a most important in document Type. Click on “Add New Property”.</p></li><li  id=\"1431\"><p  id=\"1432\">It will expand fields to input data, if you want to follow me provide these information without quotes</p><ul id=\"l28\"><li  id=\"1434\"><p class=\"s8\"  id=\"1435\">Name<span class=\"p\" id=\"1436\">: “Site Name”</span></p></li><li  id=\"1437\"><p class=\"s8\"  id=\"1438\">Alias<span class=\"p\" id=\"1439\">: Leave Default, Umbraco will generate for you</span></p></li><li  id=\"1440\"><p class=\"s8\"  id=\"1441\">Type<span class=\"p\" id=\"1442\">: Textstring , select from Drop down menu</span></p></li><li  id=\"1443\"><p class=\"s8\"  id=\"1444\">Tab<span class=\"p\" id=\"1445\">: Leave Default</span></p></li><li  id=\"1446\"><p class=\"s8\"  id=\"1447\">Mandator<span class=\"p\" id=\"1448\">: checked, means, it should not be empty</span></p></li><li  id=\"1449\"><p class=\"s8\"  id=\"1450\">Validation<span class=\"p\" id=\"1451\">: for now leave empty</span></p></li><li  id=\"1452\"><p class=\"s8\"  id=\"1453\">Description<span class=\"p\" id=\"1454\">: “Your Site Name”</span></p></li><li  id=\"1455\"><h4  id=\"1456\"><a name=\"a29\" id=\"1457\">Remember to save before jump to next properties</a><span class=\"p\" id=\"1458\">.</span></h4></li><li  id=\"1459\"><p  id=\"1460\">You can see balloon “success message” at bottom right corner if anything goes wrong it will show up balloon message with error details, correct error based on error message and Save again.</p><p  id=\"1461\">See captured screen as references.</p><p  id=\"1462\"><br id=\"1463\"></p><p  id=\"1464\"><br id=\"1465\"></p><p  id=\"1466\">Document</p><p  id=\"1467\">Save</p><p  id=\"1468\">Document Type</p><p  id=\"1469\">Add New Property</p><p  id=\"1470\">Document</p><p  id=\"1471\">Save</p><p  id=\"1472\">Document Type</p><p  id=\"1473\">Add New Property</p><p class=\"s10\"  id=\"1474\"><span  id=\"1475\"> </span><span  id=\"1476\"> </span>\t\t</p><p  id=\"1477\"><br id=\"1478\"></p><p  id=\"1479\"><span id=\"1480\"><img width=\"602\" height=\"546\" alt=\"image\" src=\"Image_039.png\" id=\"1481\"></span></p><p  id=\"1482\">Delete</p><p  id=\"1483\">Delete</p><p  id=\"1484\"></p><p  id=\"1485\">Settings</p><p  id=\"1486\">Settings</p><p  id=\"1487\"></p><p  id=\"1488\">Drop Down Menu <span class=\"s37\" id=\"1489\">Expand </span><span class=\"s10\" id=\"1490\">collapse Property</span></p><p  id=\"1491\"><br id=\"1492\"></p><p  id=\"1493\">Drag and Drop</p><p  id=\"1494\">Drag and Drop</p><p  id=\"1495\"><span  id=\"1496\"> </span></p><p  id=\"1497\"><br id=\"1498\"></p><p  id=\"1499\"><br id=\"1500\"></p><h4  id=\"1501\">Drag and Drop: <span class=\"p\" id=\"1502\">To sort property order, Umbraco automatically saves sorted order. </span>Delete: <span class=\"p\" id=\"1503\">To delete Property Type, if you delete property type it will delete all content relevant to that particular Property Type</span></h4><h4  id=\"1504\">Expand collapse Icon. <span class=\"p\" id=\"1505\">It will allows to expand or Collapse property Menu</span></h4><h4  id=\"1506\">Add New Property: <span class=\"p\" id=\"1507\">To Add new property</span></h4><h4  id=\"1508\">DropDown Menu: <span class=\"p\" id=\"1509\">to select value from Types or assign property to Tabs.</span></h4><p  id=\"1510\">You must save manually after change; Umbraco does not automatically save for you.</p><h4  id=\"1511\">Alias<span class=\"p\" id=\"1512\">: alias is case sensitive and if you modify alias you may lose data if you are not sure how alias works. It‟s better not to change it in case you have to do so please make sure update in other parts of Umbraco system when you used that alias to fetch data. Alias is used to fetch data by Umbraco.</span></h4><p  id=\"1513\"><br id=\"1514\"></p><h4  id=\"1515\">Type<span class=\"p\" id=\"1516\">: there are many types out of box available, for example, Rich text editors, True/False, Textstring, Upload, all are called Data Type I will discuss later. Changing type will lost data in content editing page but will still remain on database unless you save content after type changed. It‟s better not to change so make decision before you decide what type should be used.</span></h4><p  id=\"1517\">Some tips: if you want simple text editor select simple text editor, Textstring allows only to type text, Rich text editor will allows more rich features to content editor.</p><p  id=\"1518\"><br id=\"1519\"></p><h4  id=\"1520\"><a name=\"a30\" id=\"1521\">Note:</a></h4><h4  id=\"1522\">Repeat Same Process for <i id=\"1523\">Name</i>: “Slogan”, <i id=\"1524\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1525\">Type</i>: Textstring, <i id=\"1526\">Mandatory</i>: Checked, <i id=\"1527\">Description</i>: “Slogan here”</h4><p  id=\"1528\"><br id=\"1529\"></p><h4  id=\"1530\">Repeat Same Process for <i id=\"1531\">Name</i>: “Logo”, <i id=\"1532\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1533\">Type</i>: Upload, <i id=\"1534\">Mandatory</i>: leave default, <i id=\"1535\">Description</i>: “Upload logo here”.</h4><h4  id=\"1536\"><a name=\"a31\" id=\"1537\">Notes: Type: upload allows content Creator to upload Image or files while create content, Type: Textstring allows to type text in input text field.</a></h4><p  id=\"1538\"><br id=\"1539\"></p><p  id=\"1540\">Let‟s see our final web grid how it look likes and create more Document Type for Semic website. See captured screen bellow.</p><p  id=\"1541\"><br id=\"1542\"></p><p class=\"s38\"  id=\"1543\">1</p><p class=\"s38\"  id=\"1544\">2</p><p class=\"s38\"  id=\"1545\">1</p><p class=\"s38\"  id=\"1546\">2</p><p class=\"s10\"  id=\"1547\">\t</p><p  id=\"1548\"><br id=\"1549\"></p><p class=\"s38\"  id=\"1550\">3</p><p class=\"s38\"  id=\"1551\">3</p><p  id=\"1552\"></p><p  id=\"1553\"><br id=\"1554\"></p><p  id=\"1555\"><br id=\"1556\"></p><p class=\"s38\"  id=\"1557\">4</p><p class=\"s38\"  id=\"1558\">4</p><p  id=\"1559\"></p><p  id=\"1560\"><br id=\"1561\"></p><p class=\"s38\"  id=\"1562\">5</p><p class=\"s38\"  id=\"1563\">5</p><p  id=\"1564\"></p><p  id=\"1565\"><br id=\"1566\"></p><p  id=\"1567\"><span id=\"1568\"><img width=\"616\" height=\"384\" alt=\"image\" src=\"Image_040.png\" id=\"1569\"></span></p><ol id=\"l29\"><li  id=\"1571\"><p  id=\"1572\">Logo</p></li><li  id=\"1573\"><p  id=\"1574\">Title</p></li><li  id=\"1575\"><p  id=\"1576\">Slogan</p></li><li  id=\"1577\"><p  id=\"1578\">Navigation Bar</p></li><li  id=\"1579\"><p  id=\"1580\">Body</p></li></ol><h3  id=\"heading1581\" class=\"heading1581\"><a name=\"bookmark27\" id=\"1582\" >Document Type “Tabs</a><span class=\"s3\" id=\"1583\">” </span><span id=\"1584\"><img width=\"400\" height=\"25\" alt=\"image\" src=\"Image_041.jpg\" id=\"1585\"></span></h3><div id=\"contentheading1581\" ><p  id=\"1586\">Here we just finished document type for global settings, but little document type is still remaining, take a look at navigation bar. There is title of Article like “News”, “Solution”, “Semic” and “Contact”. Now it‟s time to create Document type for these articles. I will introduce input pattern here, Input Pattern is fields or value that needs to provide when Editor creates content (Article) on Content page.</p><p  id=\"1587\">Input Pattern is “Title” and “Body”. Title is a title of article that shows up in navigation bar, Body is text or description of Title that show up when user click on particular title in navigation bar. For example if user clicks on “News” Title it will show up Description of News, in my case it will show up recent news details. Here “news”, “Solution” and “Semic” have only two Input Pattern title and Body, it means we can create many article with different title and body on same input pattern. So let‟s create one Document Type that can implement Two Input Pattern. Now let‟s create new document type “General Content” and also check matching templates and Press OK. If you want to follow me repeat same process as above to add new properties</p><p  id=\"1588\">Add following properties into “General Content”</p><p  id=\"1589\"><br id=\"1590\"></p></div></li></ul></li><li  id=\"1591\"><p class=\"s8\"  id=\"1592\">Before Adding Following Properties. Create first Two Tabs “Title” and “Description”.</p></li><li  id=\"1593\"><p class=\"s8\"  id=\"1594\">Type Tab name and Press “New tab” it will create new tab</p><p  id=\"1595\"><span id=\"1596\"><img width=\"472\" height=\"167\" alt=\"image\" src=\"Image_042.jpg\" id=\"1597\"></span></p><ul id=\"l30\"><li  id=\"1599\"><p class=\"s8\"  id=\"1600\">Name: name of Tabs you created</p></li><li  id=\"1601\"><p class=\"s8\"  id=\"1602\">Sort order: ordering number of tabs, lower sort order number will appear at top of the grater sort order number in “Generic Properties”</p></li><li  id=\"1603\"><p class=\"s8\"  id=\"1604\">Delete: To delete tabs, related property will automatically assign to Generic Properties if tabs is deleted.</p><p  id=\"1605\"><br id=\"1606\"></p></li></ul></li><li  id=\"1607\"><p  id=\"1608\">Name: “Content <i id=\"1609\">Title”</i>, Alias: Use Default, Type: <i id=\"1610\">Textstring</i>, Tab, use Default, Mandator: <i id=\"1611\">checked</i>, Description: <i id=\"1612\">Article Title</i></p></li><li  id=\"1613\"><p  id=\"1614\">Name: “Content <i id=\"1615\">Body”</i>, Alias, Use Default, Type: <i id=\"1616\">Rich Text Editor</i>, Tab, use Default, Mandator: <i id=\"1617\">checked</i>, Description: <i id=\"1618\">Body text here for Article</i></p></li><li  id=\"1619\"><p  id=\"1620\">Name: “<i id=\"1621\">Use in Navigation”</i>, Alias, Use Default, Type: <i id=\"1622\">True/False</i>, Tab, use Default, Mandatory: <i id=\"1623\">checked</i>, Description: <i id=\"1624\">Checked to show content in Navigation bar.</i></p><p  id=\"1625\">-</p><p class=\"s8\"  id=\"1626\">See captured screen as references for Document type “Tabs”</p><p  id=\"1627\"><br id=\"1628\"></p><p  id=\"1629\">Name of Property</p><p  id=\"1630\">Alias of Property</p><p  id=\"1631\">Type of Property</p><p  id=\"1632\">Name of Property</p><p  id=\"1633\">Alias of Property</p><p  id=\"1634\">Type of Property</p><p  id=\"1635\"><span  id=\"1636\"> </span><span  id=\"1637\"> </span><span  id=\"1638\"> </span></p><p  id=\"1639\"><br id=\"1640\"></p><p  id=\"1641\"><span id=\"1642\"><img width=\"534\" height=\"404\" alt=\"image\" src=\"Image_043.png\" id=\"1643\"></span></p><h3  id=\"heading1644\" class=\"heading1644\"><a name=\"bookmark28\" id=\"1645\" >Document Type Structure: </a><span id=\"1646\"><img width=\"345\" height=\"27\" alt=\"image\" src=\"Image_044.jpg\" id=\"1647\"></span></h3><div id=\"contentheading1644\" ><p  id=\"1648\">It‟s a little bit tricky, news items are added each time if there is new things happen, so we need to create two Document Types. One Document Type is for News Container and another for news article. News Container is like a container that contains news article.</p><p class=\"s39\"  id=\"1649\">Purpose: <span class=\"p\" id=\"1650\">Umbraco developer can set up hierarchy structure so it will limit or prevent from creating non relevant content to content editor. For example I want only news items inside News Container, we want to mange content or data. I don‟t want to create any content that is not news items inside News container, to achieve that goal I can set up structure to News Container Document Type so it will only allows to create child content only relevant to news article. Let‟s begin to create Two Document Type “News Container” and “News Article”</span></p><p  id=\"1651\">Instruction: process is similar to create News Container Document Type as above mentioned.</p><p  id=\"1652\">Document Type “News Container”</p></div></li><li  id=\"1653\"><p  id=\"1654\">Create, Document Type “News Container”</p></li><li  id=\"1655\"><p  id=\"1656\">Name: “<i id=\"1657\">News Items”</i>, Alias: Use Default, Type: <i id=\"1658\">Label</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1659\">it’s a news container”.</i></p></li><li  id=\"1660\"><p class=\"s8\"  id=\"1661\">Remember to Save</p><p  id=\"1662\">Document Type “News Article”</p></li><li  id=\"1663\"><p  id=\"1664\">Create Document Type “News Article”</p></li><li  id=\"1665\"><p  id=\"1666\">Name: <i id=\"1667\">News Title</i>, Alias: Use Default, Type: <i id=\"1668\">Textstring</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1669\">News Title”.</i></p></li><li  id=\"1670\"><p class=\"s8\"  id=\"1671\">Remember to Save</p></li><li  id=\"1672\"><p  id=\"1673\">Name: “<i id=\"1674\">News Body”</i>, Alias: Use Default, Type: <i id=\"1675\">simple Editor</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1676\">news details”.</i></p></li><li  id=\"1677\"><p class=\"s8\"  id=\"1678\">Remember to Save</p><p class=\"s8\"  id=\"1679\">Let’s set up structure Open “Structure” of Document Type “News Container” as checked document type you want to set up as child nodetypes. In my case “News Article” see screen bellow.</p><p  id=\"1680\"><br id=\"1681\"></p><p  id=\"1682\"><span id=\"1683\"><img width=\"413\" height=\"243\" alt=\"image\" src=\"Image_045.png\" id=\"1684\"></span></p><p  id=\"1685\"><br id=\"1686\"></p><h4  id=\"1687\"><a name=\"a32\" id=\"1688\">Creating Child Document Type</a></h4><p  id=\"1689\"><br id=\"1690\"></p><p  id=\"1691\">There are two ways of creating child Document Type.</p><p  id=\"1692\">First Ways. If you remember that we selected none “Master Document Type” when we created document type for global Setting, News Container and General Content. If you want to create child document type you can select desire master document type while you are creating Document Type first time.</p><p  id=\"1693\">Second Way: second way to create child document type is Right click on Document Type that you want to use as master Document Type and Click on “Create”. This is another way to create child document type.</p><p  id=\"1694\">Purpose: creating child document type allows Developer to reuse properties that have in master document type.</p><p  id=\"1695\"><br id=\"1696\"></p><p class=\"s8\"  id=\"1697\">Notes: Do not forget to play around all types of Child Document type, Structure, Info, Properties, Tabs, Validation and different Data Types or Type etc.</p><h3  id=\"heading1698\" class=\"heading1698\"><a name=\"bookmark29\" id=\"1699\" >Document Type API:</a></h3><div id=\"contentheading1698\" ><p  id=\"1700\">We are creating document type manually by right click on Document Type using backend of Umbraco site. It‟s also technical stuff and you need to know Umbraco stuff to set up, if you want to be a Umbraco developer in future, you should not look on top to ocean, you have to go more deep until bottom of ocean. Umbraco CMS will convert all your manual work in programming language and execute code. Let‟s look what‟s happening inside Umbraco when you manually create document type, how it‟s working and get basic Umbraco API knowledge.</p><p  id=\"1701\">Umbraco has namespace “<span class=\"s40\" id=\"1702\">umbraco.cms.businesslogic.web‛ </span>that contains los of Class. Here I will discuss DocumentType only.</p><p  id=\"1703\"><br id=\"1704\"></p></div></li><li  id=\"1705\"><p class=\"s41\"  id=\"1706\">Manual Work: “Create”</p><ul id=\"l31\"><li  id=\"1708\"><p class=\"s40\"  id=\"1709\">When you right click on Document Type and press ‚Create‛. You have to provide Document Type Name.</p></li><li  id=\"1710\"><p class=\"s40\"  id=\"1711\">At that time Umbraco execute MakeNew() methods on server that methods are responsible to create Document Type that will effect on Database. <span  id=\"1712\">DocumentType</span>.MakeNew(<span  id=\"1713\">User</span>, docTypename).Save();</p></li><li  id=\"1714\"><p class=\"s40\"  id=\"1715\">User will be automatically assigned by Umbraco based on your backend login information, Note that not all uses have access to create document type. docTypename is Name of Document Type you provided first time. Save() is void methods, it will save Document Type to database. Saving to database means to make data available next time to use.</p><p  id=\"1716\"><br id=\"1717\"></p></li></ul></li><li  id=\"1718\"><p class=\"s41\"  id=\"1719\">Manual Work: “Add New Property”</p><ul id=\"l32\"><li  id=\"1721\"><p class=\"s40\"  id=\"1722\">Add new property will execute AddPropertyType(<span  id=\"1723\">DataTypeDefinition</span>, name, description) methods. Three parameters DataTypeDefinition, name and description and there is also more overloads on that methods.</p></li><li  id=\"1724\"><p class=\"s40\"  id=\"1725\">DataTypeDefinition – Data Type you selected, Umbraco only use Id of Data Type. When you select data type, Umbraco automatically take id of data type.</p><p  id=\"1726\"><br id=\"1727\"></p></li></ul></li><li  id=\"1728\"><p class=\"s41\"  id=\"1729\">Manual Work: “New Tab”</p><ul id=\"l33\"><li  id=\"1731\"><p class=\"s40\"  id=\"1732\">Umbraco execute AddVirtualTab(tabName) to add new tab, tabName is name of tab you provided.</p></li><li  id=\"1733\"><p class=\"s42\"  id=\"1734\">DocumentType</p></li><li  id=\"1735\"><p class=\"s40\"  id=\"1736\">dt.AddVirtualTab(tabName);</p><p  id=\"1737\"><br id=\"1738\"></p></li></ul></li><li  id=\"1739\"><p class=\"s43\"  id=\"1740\"><a name=\"a33\" id=\"1741\">Setting Tabs on Generic Properties.</a></p><ul id=\"l34\"><li  id=\"1743\"><p class=\"s40\"  id=\"1744\">When you select tab to organize you preoperty Umbraco will assign tabs on that Property.</p></li><li  id=\"1745\"><p class=\"s42\"  id=\"1746\">DocumentType <span  id=\"1747\">dt;</span></p></li><li  id=\"1748\"><p class=\"s40\"  id=\"1749\">dt.SetTabOnPropertyType(PropertyType, <span  id=\"1750\">Tab </span>Id);</p></li><li  id=\"1751\"><p class=\"s40\"  id=\"1752\">here property Type is type of new property and Tab Id is node id of Tabs you created, all Names are for visual representation of data and id or aliad is for machine or Umbraco system to represent object.</p><p  id=\"1753\">-</p></li></ul></li><li  id=\"1754\"><p class=\"s43\"  id=\"1755\"><a name=\"a34\" id=\"1756\">Manual Work “Delete”</a></p><ul id=\"l35\"><li  id=\"1758\"><p class=\"s40\"  id=\"1759\">If you would like to delete Document Type you will right click on document type and press ‚Delete‛.</p></li><li  id=\"1760\"><p class=\"s40\"  id=\"1761\">Umbraco will execute Delete() methods to delete document type.</p></li><li  id=\"1762\"><p class=\"s40\"  id=\"1763\">Here is an example</p></li><li  id=\"1764\"><p class=\"s42\"  id=\"1765\">DocumentType<span  id=\"1766\">.GetByAlias(docAlias).delete();</span></p></li><li  id=\"1767\"><p class=\"s40\"  id=\"1768\">First call GetByAlias() method to select document type by alias, also you can select document type by Id.</p></li><li  id=\"1769\"><p class=\"s40\"  id=\"1770\">Second Call Delete() method to delete Document,</p></li><li  id=\"1771\"><p class=\"s40\"  id=\"1772\">This time you don’t need to save. Because Delete will delete selected document type from Database as well.</p></li></ul></li><li  id=\"1773\"><p class=\"s40\"  id=\"1774\">Whatever you made change on Umbraco, you have to press Save icon <span id=\"1775\"><img width=\"27\" height=\"26\" alt=\"image\" src=\"Image_046.jpg\" id=\"1776\"></span><span class=\"s28\" id=\"1777\">    </span>to save your work. That will execute Void methods Save().</p><p  id=\"1778\"><br id=\"1779\"></p><p class=\"s40\"  id=\"1780\">More Document Type API:</p><p  id=\"1781\"><br id=\"1782\"></p><p class=\"s40\"  id=\"1783\">Here is more API listed, for full list of API, you need to download source code or decompile DLL files that provided by Umbraco binary.</p><p  id=\"1784\"><br id=\"1785\"></p></li><li  id=\"1786\"><p class=\"s40\"  id=\"1787\">getVirtualTabs</p><ul id=\"l36\"><li  id=\"1789\"><p class=\"s40\"  id=\"1790\">returns list of available tabs on document type</p></li></ul></li><li  id=\"1791\"><p class=\"s40\"  id=\"1792\">HasTemplate()</p><ul id=\"l37\"><li  id=\"1794\"><p class=\"s40\"  id=\"1795\">Return bool value ,true if document type has template</p></li></ul></li><li  id=\"1796\"><p class=\"s40\"  id=\"1797\">allowedTemplates</p><ul id=\"l38\"><li  id=\"1799\"><p class=\"s40\"  id=\"1800\">return List of Allowed templates.</p></li></ul></li><li  id=\"1801\"><p class=\"s40\"  id=\"1802\">PropertyTypes</p><ul id=\"l39\"><li  id=\"1804\"><p class=\"s40\"  id=\"1805\">Return list of Property types.</p></li></ul></li><li  id=\"1806\"><p class=\"s40\"  id=\"1807\">HasChildren</p><ul id=\"l40\"><li  id=\"1809\"><p class=\"s40\"  id=\"1810\">Return Bool Value, True if Document type has children document type.</p></li></ul></li></ul><p  id=\"1811\">These are few mostly used API. To change value using API you can use visual studio. If field has “Set” methods you can change value using API.</p><p  id=\"1812\">Example:</p><p  id=\"1813\"><br id=\"1814\"></p><p class=\"s40\"  id=\"1815\"><span  id=\"1816\">DocumentType</span>.GetByAlias(<span  id=\"1817\">\"NewsContainer\"</span>).Alias = <span  id=\"1818\">\"newNewsContainer\"</span>; It will change alias of News Container to ‘newNewsContainer’.</p><p  id=\"1819\"><br id=\"1820\"></p><h1  id=\"1821\"><a name=\"a35\" id=\"1822\">Chapter 04: Content</a></h1><p  id=\"1823\"><br id=\"1824\"></p><p  id=\"1825\"><br id=\"1826\"></p><p  id=\"1827\"><span id=\"1828\"><img width=\"385\" height=\"1\" alt=\"image\" src=\"Image_047.png\" id=\"1829\"></span></p><p  id=\"1830\"><br id=\"1831\"></p></div><h2  id=\"heading1832\" class=\"heading1832\"><a name=\"bookmark30\" id=\"1833\" >Content:</a></h2><div id=\"contentheading1832\" ><p  id=\"1834\">Content is one of the Section menu item in umbraco. Backend user will have access to content area. It contains articles or data that created by Editor based on document type. Lets Familiar with Envornment of Content if you Right Click over Content you can see different options. See captured screen bellow</p><h4  id=\"1835\">Create<span class=\"p\" id=\"1836\">: To create new content</span></h4><p  id=\"1837\"><br id=\"1838\"></p><p  id=\"1839\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4  id=\"1840\">Republish Entire Sites: <span class=\"p\" id=\"1841\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4  id=\"1842\">Reload nodes: <span class=\"p\" id=\"1843\">To clear cache on server side, client sites and recreate new cache.</span></h4><h4  id=\"1844\">Create<span class=\"p\" id=\"1845\">: To create new content</span></h4><p  id=\"1846\"><br id=\"1847\"></p><p  id=\"1848\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4  id=\"1849\">Republish Entire Sites: <span class=\"p\" id=\"1850\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4  id=\"1851\">Reload nodes: <span class=\"p\" id=\"1852\">To clear cache on server side, client sites and recreate new cache.</span></h4><p class=\"s10\"  id=\"1853\"><span id=\"1854\"><img width=\"254\" height=\"407\" alt=\"image\" src=\"Image_048.jpg\" id=\"1855\"></span>\t</p><p  id=\"1856\"><br id=\"1857\"></p><h3  id=\"heading1858\" class=\"heading1858\"><a name=\"bookmark31\" id=\"1859\" >Creating Content:</a></h3><div id=\"contentheading1858\" ><p  id=\"1860\">It‟s a very simple process, if you click on Create it will show up new windows promoting you to type name of content and selecting option of Document Type in drop down list. After clicked on “Create” will create content.</p><p  id=\"1861\"><span id=\"1862\"><img width=\"179\" height=\"196\" alt=\"image\" src=\"Image_049.jpg\" id=\"1863\"></span></p><p  id=\"1864\">Name: name of content and it‟s not the title of article that will show up in end users. It‟s a name of content and only used in Content section, it will not show up to end users.</p><p  id=\"1865\">It‟s time to create Content for Vcard “SemicProvider” sites. First let‟s start with creating content for global settings<span class=\"s19\" id=\"1866\">. I will show you only for global settings, for rest of content you can repeat similar process.</span></p><p class=\"s8\"  id=\"1867\">Instruction: Right click on Content and Click on “Create” provide following information</p><p class=\"s8\"  id=\"1868\">Name: “Setting sites”</p><p class=\"s8\"  id=\"1869\">Document Type: select “Web Site Global Settings” from drop down list.</p><p class=\"s8\"  id=\"1870\">Press “Create”</p><p  id=\"1871\"><br id=\"1872\"></p><p  id=\"1873\">It will ask more information based on document type. Provide following info and press “Save” button. See highlighted color text. See captured screen “Image content”</p><p class=\"s19\"  id=\"1874\">Image: Content</p><p  id=\"1875\"><br id=\"1876\"></p><p  id=\"1877\"><span id=\"1878\"><img width=\"547\" height=\"552\" alt=\"image\" src=\"Image_050.png\" id=\"1879\"></span></p><p class=\"s45\"  id=\"1880\">Save Content <span class=\"p\" id=\"1881\">Save and Publish</span></p><p  id=\"1882\"><br id=\"1883\"></p><p  id=\"1884\">Preview</p><p  id=\"1885\"><br id=\"1886\"></p><p  id=\"1887\">Content Name</p><p  id=\"1888\">Content Name</p><p  id=\"1889\"><span  id=\"1890\"> </span></p><p  id=\"1891\"><br id=\"1892\"></p><p  id=\"1893\"><br id=\"1894\"></p><p  id=\"1895\">Node Id of Content</p><p  id=\"1896\">Node Id of Content</p><p  id=\"1897\"><span  id=\"1898\"> </span></p><p  id=\"1899\"><br id=\"1900\"></p><p  id=\"1901\">Present Content to End</p><p  id=\"1902\">Present Content to End</p><p  id=\"1903\"><span  id=\"1904\"> </span></p><p  id=\"1905\"><br id=\"1906\"></p><p  id=\"1907\"><span class=\"s46\"  id=\"1908\">Image content</span></p><p  id=\"1909\"><span class=\"s46\"  id=\"1910\">Image content</span></p><p  id=\"1911\"><span  id=\"1912\"> </span></p><p  id=\"1913\"><br id=\"1914\"></p><p  id=\"1915\">Did you remember Site Name, Slogan and Logo were created at Document Type “Web site global settings”? We added type properties Textstring for Site name and Slogan and type:Upload for Logo. Here in Content page we can type site name and slogan because we selected type:Textstring and we can upload image in logo because we selected type:Upload in Document Type “Web Site Global Settings”. Now I hope you understand concept of Document Type and relation between Content and Document Type:</p><p  id=\"1916\"><br id=\"1917\"></p><p class=\"s8\"  id=\"1918\">Notes: Create content for “Developer”, “Solution” and “Semic” using document type “General Content”. It’s a same process as we created just now. After that you will be more familiar with Creating Content in Umbraco sites and relation of Document Type and content. Let’s See next image relations between content and Document Type.</p><p  id=\"1919\"><span id=\"1920\"><img width=\"573\" height=\"427\" alt=\"image\" src=\"Image_051.png\" id=\"1921\"></span></p><p  id=\"1922\"><span class=\"s46\"  id=\"1923\">Content</span></p><p  id=\"1924\"><span class=\"s46\"  id=\"1925\">Content</span></p><p  id=\"1926\"></p></div><h3  id=\"heading1927\" class=\"heading1927\"><a name=\"bookmark32\" id=\"1928\" >Relations between Document Type and Content</a></h3><div id=\"contentheading1927\" ><p  id=\"1929\"><br id=\"1930\"></p><p  id=\"1931\"><span class=\"s46\"  id=\"1932\">Document Type</span></p><p  id=\"1933\"><span class=\"s46\"  id=\"1934\">Document Type</span></p><p  id=\"1935\"><span  id=\"1936\"> </span></p><p  id=\"1937\"><br id=\"1938\"></p><p class=\"s10\"  id=\"1939\"><span  id=\"1940\">Red Long-dash arrow</span>: Name of Properties <span  id=\"1941\">Green arrow</span>: Type of Properties</p><p  id=\"1942\"><br id=\"1943\"></p><p  id=\"1944\">To understand relation between Document Type and Content may be difficult for first time but when you practice more it will be easy to understand. See two images above and follow red and green arrow telling relation between Document Type and Content.</p><p class=\"s4\"  id=\"1945\">Delete Document Type<span class=\"s8\" id=\"1946\">: </span><span class=\"p\" id=\"1947\">if you delete Document Type all associated content will be also deleted from websites, it‟s not possible to undo or restore Document Type in case delete.</span></p><p class=\"s4\"  id=\"1948\">Update Document Type Properties: <span class=\"p\" id=\"1949\">you can change document type property for example you can change property type from type Simple Editor to type Rich Text Editor, data will not be lost because both are related type, both editor allows editor to edit text as simple or rich text environment. When you change type from type Textstring to type Label or type Upload, in that case all content modified after document type property has changed will lost previous data because type are not similar. So changing property type may cost data lost.</span></p><h4  id=\"1950\">Delete Content: <span class=\"p\" id=\"1951\">you can delete content. Deleted items will moved to Recycle Bin so if you accidently delete any content no need to feel panic you can easily restore from Recycle bin directory.</span></h4></div><h3  id=\"heading1952\" class=\"heading1952\"><a name=\"bookmark33\" id=\"1953\" >Explore content Properties:</a></h3><div id=\"contentheading1952\" ><p  id=\"1954\">There is more option for content that we created on Content section based on document type. Let‟s right click on “Setting site” content and explore more options. See captured screen.</p><h4  id=\"1955\">Create<span class=\"p\" id=\"1956\">: Create new child article example News Container.</span></h4><h4  id=\"1957\">Edit in Canvas: <span class=\"p\" id=\"1958\">will allows editor to edit content in Frontend using browser.</span></h4><h4  id=\"1959\">Delete<span class=\"p\" id=\"1960\">: Move content to Recycle Bin</span></h4><h4  id=\"1961\">Move<span class=\"p\" id=\"1962\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1963\">: Copy content, Copy will not delete content</span></h4><p  id=\"1964\">from old location</p><h4  id=\"1965\">Sort<span class=\"p\" id=\"1966\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4  id=\"1967\">Rollback<span class=\"p\" id=\"1968\">: allows to rollback content based on previous changed,</span></h4><h4  id=\"1969\">Manage Hostnames: <span class=\"p\" id=\"1970\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4  id=\"1971\">Permission: <span class=\"p\" id=\"1972\">set up permission</span></h4><h4  id=\"1973\">Publich Access: <span class=\"p\" id=\"1974\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4  id=\"1975\">Audit Trill<span class=\"p\" id=\"1976\">: list of history of content</span></h4><h4  id=\"1977\">Notifications<span class=\"p\" id=\"1978\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4  id=\"1979\">Send to Translation: <span class=\"p\" id=\"1980\">used for multiple languages</span></h4><h4  id=\"1981\">Create<span class=\"p\" id=\"1982\">: Create new child article example News Container.</span></h4><h4  id=\"1983\">Edit in Canvas: <span class=\"p\" id=\"1984\">will allows editor to edit content in Frontend using browser.</span></h4><h4  id=\"1985\">Delete<span class=\"p\" id=\"1986\">: Move content to Recycle Bin</span></h4><h4  id=\"1987\">Move<span class=\"p\" id=\"1988\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1989\">: Copy content, Copy will not delete content</span></h4><p  id=\"1990\">from old location</p><h4  id=\"1991\">Sort<span class=\"p\" id=\"1992\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4  id=\"1993\">Rollback<span class=\"p\" id=\"1994\">: allows to rollback content based on previous changed,</span></h4><h4  id=\"1995\">Manage Hostnames: <span class=\"p\" id=\"1996\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4  id=\"1997\">Permission: <span class=\"p\" id=\"1998\">set up permission</span></h4><h4  id=\"1999\">Publich Access: <span class=\"p\" id=\"2000\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4  id=\"2001\">Audit Trill<span class=\"p\" id=\"2002\">: list of history of content</span></h4><h4  id=\"2003\">Notifications<span class=\"p\" id=\"2004\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4  id=\"2005\">Send to Translation: <span class=\"p\" id=\"2006\">used for multiple languages</span></h4><p class=\"s10\"  id=\"2007\"><span id=\"2008\"><img width=\"180\" height=\"528\" alt=\"image\" src=\"Image_052.jpg\" id=\"2009\"></span>\t</p><p  id=\"2010\"><br id=\"2011\"></p><p  id=\"2012\">Notes:</p><p  id=\"2013\">I am not going to create content for other document types because creating</p><p  id=\"2014\">content is same for all document type just you need to select different document type when you create content. You can easily follow my process to create content for other document type.</p><p  id=\"2015\">Creating News Container and News Article are a bit different. First Create Article on “News Container” after that right click on just created content (“News Container” Document type content), then create news article. You can see Document Type “News Article” is only option to choose if you followed me. That is Allowed child nodetypes that we set up in Document Type “Structure” property of “News Container” Document Type.</p><p  id=\"2016\">I have created more content for Semic Provider site. You can see captured screen and compare with your version.</p><p class=\"s8\"  id=\"2017\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\"  id=\"2018\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\"  id=\"2019\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2020\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s8\"  id=\"2021\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\"  id=\"2022\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\"  id=\"2023\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2024\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s10\"  id=\"2025\"><span id=\"2026\"><img width=\"298\" height=\"400\" alt=\"image\" src=\"Image_053.jpg\" id=\"2027\"></span>\t</p><p  id=\"2028\"><br id=\"2029\"></p><p  id=\"2030\">We are just working in backend part of Semic Provider site. If you preview article you see empty page. No content its because we have not touch any Templates yet, templates are responsible to output content or to present data to end users. I will discuss later or about templates. When you preview your content Umbraco will insert red strip with white color text “Preview Mode-click to end” on top right cornner of browser. Umbraco provides notification to you about your are viewing on Preview Mode. To exit click browser will close automatically.</p><p  id=\"2031\"><span id=\"2032\"><img width=\"424\" height=\"230\" alt=\"image\" src=\"Image_054.jpg\" id=\"2033\"></span></p><p  id=\"2034\">For now you can‟t preview you data because associated templates are empty.</p><p  id=\"2035\"><br id=\"2036\"></p><p class=\"s49\"  id=\"2037\"><a name=\"bookmark34\" id=\"2038\">Content API:</a></p><p  id=\"2039\"><br id=\"2040\"></p><p class=\"s50\"  id=\"2041\">In Umbraco code Content is understood by Document so that creating content in Umbraco Backend means executing Document code in Umbraco Core code inside server. Core code is programming language written in C# language. Content API is very important, if you want to create content using API, for example if you move sites from another websites to Umbraco CMS site, probably you want to get all data or content from old site as archive. If there is 1000 of articles in old site, it‟s not good idea to import content manually. You have to think some sort of automatic process to import content. Here is basic API for Umbraco Content.</p><p class=\"s52\"  id=\"2042\"><span  id=\"2043\">namespace </span>umbraco.cms.businesslogic.web contains Document Class. Creating Content means Executing <span  id=\"2044\">Document</span>.MakeNew() methods of Document Class.</p><p class=\"s52\"  id=\"2045\">MakeNew() takes four parameters</p><ul id=\"l41\"><li  id=\"2047\"><p class=\"s52\"  id=\"2048\">1<span class=\"s54\" id=\"2049\">st </span>parameter String Title: its title of Content, that title shown in Content Tree.</p></li><li  id=\"2050\"><p class=\"s52\"  id=\"2051\">2<span class=\"s54\" id=\"2052\">nd </span>Parameter DocumentType: Document Type, when you select document</p><p class=\"s52\"  id=\"2053\">type Umbraco will automatically use that document type.</p></li><li  id=\"2054\"><p class=\"s52\"  id=\"2055\">3<span class=\"s54\" id=\"2056\">rd</span><span class=\"s55\" id=\"2057\"> </span>parameter User: Umbraco does not allow to crate content without valid and has access user. When you logged in Umbraco automatically take your login user and use to create document.</p></li><li  id=\"2058\"><p class=\"s52\"  id=\"2059\">4<span class=\"s54\" id=\"2060\">th </span>parameter parent id: it’s a hierarchy of content. If you want to</p><p class=\"s52\"  id=\"2061\">create content at root level you must provide parent id -1. In Semic Provider content ‘News Article’ is child of ‘news container’ in that case all news article’s content’s parent id is Node id of ‚news Container‛. Its means if you provide -1 as parent id, Content will be created at root level. If you provide node id of content, it will create content as child of provided node id content.</p></li><li  id=\"2062\"><p class=\"s52\"  id=\"2063\">Example:</p><ul id=\"l42\"><li  id=\"2065\"><p class=\"s52\"  id=\"2066\">Document dt = Document.MakeNew(‚Developer‛,GeneralContent, User(0), -1);</p></li><li  id=\"2067\"><p class=\"s52\"  id=\"2068\">dt.Publish();</p><ul id=\"l43\"><li  id=\"2070\"><p class=\"s52\"  id=\"2071\">Description: Create document name ‚Developer‛ on Document Type ‚GeneralContent‛. Use user 0. 0 is admin user id and always exist on Umbraco system. -1 will create Document at Root level.</p></li><li  id=\"2072\"><p class=\"s52\"  id=\"2073\">Publish() method should be invoke to publish content or when you press Publish icon Umbraco execute publish() method</p><p  id=\"2074\"><br id=\"2075\"></p></li></ul></li></ul></li><li  id=\"2076\"><p class=\"s50\"  id=\"2077\">Delete(): Delete method executed when you delete content.</p></li></ul><ul id=\"l44\"><li  id=\"2079\"><p class=\"s53\"  id=\"2080\"><span class=\"s50\" id=\"2081\">Example: </span>Document <span  id=\"2082\">dt = </span><span  id=\"2083\">new </span>Document<span  id=\"2084\">(id);</span></p></li></ul><p class=\"s52\"  id=\"2085\">dt.delete(); id is node id of content.</p><p class=\"s52\"  id=\"2086\">Delete() method will move content to Recycle Bin.</p><p  id=\"2087\"><br id=\"2088\"></p><p class=\"s50\"  id=\"2089\">That is very basic of Umbraco API for Creating Content. For more details you can look inside umbraco.cms.businesslogic.web.document namespace. I strongly recommend looking source code and analyzing codes.</p><p  id=\"2090\"><br id=\"2091\"></p><h1  id=\"2092\"><a name=\"a36\" id=\"2093\">Chapter 05: Templates</a></h1><p  id=\"2094\"><br id=\"2095\"></p><p  id=\"2096\"><br id=\"2097\"></p><p  id=\"2098\"><span id=\"2099\"><img width=\"432\" height=\"1\" alt=\"image\" src=\"Image_055.png\" id=\"2100\"></span></p></div></div><h2  id=\"heading2101\" class=\"heading2101\"><a name=\"bookmark35\" id=\"2102\" >Templates:</a></h2><div id=\"contentheading2101\" ><p  id=\"2103\">Purpose of templates is to present data to client or end users. Umbraco cms make totally separate visual presentation and content, to proof that concept you can preview any content we created before, we don‟t see any content on web it‟s just blank web page because we have not touch template means content is totally separated from visual presentation. Using templates we can present data or content to end users.</p><p  id=\"2104\"><br id=\"2105\"></p><h4  id=\"2106\">Templates are user friendly: <span class=\"p\" id=\"2107\">The way you write code in template is same way as you write html code. You start with doc type deceleration, html, head, and body. No difference I will show you later. Only difference is to fetch data and insert into templates, fetching data can be done in different ways using alias, alias is created by Umbraco in Document Type creation period, use user control to fetch data, use xslt and xpath to fetch data using marco or use Razor Engine. I will focus in XSLT to fetch data from xml, use macro to render data to templates and present to end users.</span></h4><p  id=\"2108\">CSS: the way we use css is not difference other than using in normal html page. It‟s very simple and you can copy your normal css text from text editor and paste to Umbraco CSS editing environment page. It will work as expected without any problem. Two ways are there to use CSS. One way is create css using Umbraco service or Create CSS file separate into normal text editor and place into “css” directory. You can also create your custom directory and use that, directory is not important; important is linking style sheet to templates. Linking style sheet is same as you use in normal html page.</p><p  id=\"2109\"><span id=\"2110\"><img width=\"584\" height=\"298\" alt=\"image\" src=\"Image_056.png\" id=\"2111\"></span></p><p  id=\"2112\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\"/&gt; that is use to link document is style.css file exist inside css directory.No worries Umbraco will also show you path you can copy path to href easily. Lets look captured screen.</p><p  id=\"2113\"><br id=\"2114\"></p><p class=\"s10\"  id=\"2115\">Name: name of style sheet.</p><p class=\"s35\"  id=\"2116\">Start writing your CSS code here</p><p class=\"s9\"  id=\"2117\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"<span  id=\"2118\">css/style.css</span>\"/&gt;</p><p  id=\"2119\"><br id=\"2120\"></p><p class=\"s10\"  id=\"2121\">Note: I will not cover CSS explanation in howtoumbraco basic. Style.css will be available in CD.</p><h3  id=\"heading2122\" class=\"heading2122\"><a name=\"bookmark36\" id=\"2123\" >Template working Environment</a></h3><div id=\"contentheading2122\" ><p  id=\"2124\"><br id=\"2125\"></p><p  id=\"2126\"><span id=\"2127\"><img width=\"602\" height=\"326\" alt=\"image\" src=\"Image_057.png\" id=\"2128\"></span></p><p class=\"s38\"  id=\"2129\">1 2 3 4 5 6 7 8 9</p><p  id=\"2130\"><br id=\"2131\"></p><ol id=\"l45\"><li  id=\"2133\"><p  id=\"2134\">Save button, whatever you made change on template, you need to press Save button to save your work.</p></li><li  id=\"2135\"><p  id=\"2136\">Insert Umbraco page field: use to insert page field. Using page field document type alias is used here to insert data into template. Umbraco will fetch and insert content on the fly. Alias that we had in document type are necessary in order to fetch content. By click on icon will list all page alias available to insert.</p><p  id=\"2137\"><span id=\"2138\"><img width=\"331\" height=\"271\" alt=\"image\" src=\"Image_058.jpg\" id=\"2139\"></span></p><p  id=\"2140\">I am going to show one example: instruction: click on empty area at line 3 and Click on “Insert Umbraco Page field” number 2 icon. You can see new windows open with input options.</p><ul id=\"l46\"><li  id=\"2142\"><p  id=\"2143\">Choose field: here you can get list of alias that you created at document type. If you want to follow me select “contentBody” from</p><p  id=\"2144\">dropdown list and press insert. It will insert filed. See captured screen bellow</p><p class=\"s29\"  id=\"2145\">o  <span id=\"2146\"><img width=\"482\" height=\"73\" alt=\"image\" src=\"Image_059.jpg\" id=\"2147\"></span></p></li><li  id=\"2148\"><p  id=\"2149\"><span class=\"s56\" id=\"2150\">&lt;</span><span  id=\"2151\">umbraco:Item </span>field<span class=\"s56\" id=\"2152\">=</span>\"<span  id=\"2153\">contentBody</span>\" runat<span class=\"s56\" id=\"2154\">=</span>\"<span  id=\"2155\">server</span>\"<span class=\"s56\" id=\"2156\">&gt;&lt;/</span><span  id=\"2157\">umbraco:Item</span><span class=\"s56\" id=\"2158\">&gt;</span></p><p  id=\"2159\"><span id=\"2160\"><img width=\"597\" height=\"217\" alt=\"image\" src=\"Image_060.png\" id=\"2161\"></span></p></li><li  id=\"2162\"><p class=\"s58\"  id=\"2163\">&lt;Umbraco:Item runat=”server”&gt; &lt;/Umbraco:item&gt; will executed by Umbraco cms. In my case filed=”contentBody”, here Content that provided in Document type “General Content‟s property „Content Body‟ ” by editor on Content page will be inserted on the fly. So user will see content body data on web page. for more clear see diagram.</p></li></ul><h4  id=\"2164\">Document Type: <span class=\"p\" id=\"2165\">General Content</span></h4><h4  id=\"2166\">Tab: <span class=\"p\" id=\"2167\">Description </span>Property Name: <span class=\"p\" id=\"2168\">Content Body</span></h4><h4  id=\"2169\"><a name=\"a37\" id=\"2170\">Property Alias:</a></h4><p  id=\"2171\">contentBody</p><h4  id=\"2172\">Type: <span class=\"p\" id=\"2173\">Richtext editor</span></h4><p  id=\"2174\"><br id=\"2175\"></p><p  id=\"2176\"><span id=\"2177\"><img width=\"562\" height=\"111\" alt=\"image\" src=\"Image_061.png\" id=\"2178\"></span></p><h4  id=\"2179\">Content: <span class=\"p\" id=\"2180\">Home </span>Description: <span class=\"p\" id=\"2181\">welcome to semic provider.</span></h4><p  id=\"2182\"><br id=\"2183\"></p><p  id=\"2184\"><span id=\"2185\"><img width=\"475\" height=\"153\" alt=\"image\" src=\"Image_062.png\" id=\"2186\"></span></p><h4  id=\"2187\">Field: <span class=\"p\" id=\"2188\">contentBody</span></h4><p  id=\"2189\"><br id=\"2190\"></p><p  id=\"2191\"><span id=\"2192\"><img width=\"561\" height=\"158\" alt=\"image\" src=\"Image_063.png\" id=\"2193\"></span></p><h4  id=\"2194\">Preview of Content Home: <span class=\"p\" id=\"2195\">Now Umbraco fetching content to Web sites.</span></h4><p  id=\"2196\">1084.aspx where 1084 is node id of content Home.</p><p  id=\"2197\"><br id=\"2198\"></p><p class=\"s4\"  id=\"2199\">We created document type “General Content”, added new property “Content Body” with alias “contentBody” and type “Richtext editor”. In Content we add content on Richtext environment. In Template we use alias “contentBody” to fetch data that added on content using Richtext environment. It’s a core concept of Umbraco for templates.</p><p  id=\"2200\"><br id=\"2201\"></p></li><li  id=\"2202\"><p  id=\"2203\">Insert Dictionary Field: Similar as Umbrcao page filed but it is used to insert Dictionary Items. Not covered in this “Howtoumbraco” basic.</p><p  id=\"2204\"><br id=\"2205\"></p></li><li  id=\"2206\"><p  id=\"2207\">Insert Macro: it‟s a mostly used in templates and I will cover this Macro Chapter. Macro is very important chapter. Developer should not miss about Macro.</p><p  id=\"2208\"><br id=\"2209\"></p></li><li  id=\"2210\"><p  id=\"2211\">Insert Content Area Placeholder: We can easily create child templates in Umbraco, child has access to parents generic properties. Umbraco templates have great features “Inheritance Character” that child template can inject data to Parent template using “Insert Content Area Placeholder”, first you create Placeholder in parent template and in child template you insert content area. If you want follow me I want to use “Web Sites Global Settings” templates as Master templates or parent templates. Parent templates can have placeholder to inject data from child templates. Now let‟s insert Content area Placeholder at “Web Sites Global Settings” templates.</p><ul id=\"l47\"><li  id=\"2213\"><p  id=\"2214\">Instruction:</p></li><li  id=\"2215\"><p  id=\"2216\">Open “Web Site Global Setting” Template</p></li><li  id=\"2217\"><p  id=\"2218\">First Click on any place at working environment where you would like to insert content Place holder. Crusher should blink now, Click on “Insert Content area Placeholder” it will open new windows now type placeholder name “ContentBody” and Press Insert. See captured screen highlighted code are just added.</p><p class=\"s29\"  id=\"2219\">o <span id=\"2220\"><img width=\"416\" height=\"162\" alt=\"image\" src=\"Image_064.jpg\" id=\"2221\"></span><span class=\"s28\" id=\"2222\"> </span><span class=\"p\" id=\"2223\"> Inheritance Properties: </span><span class=\"s10\" id=\"2224\">Umbraco template support inheritance properties so we can easily share global setting in sites for example. Navigation bar, heading, logo and web layout are global setting that will remain same look and feel for different content. “Web Sites Global Settings” template contains such global settings. Now I want to inject content from child templates on that place holder “ContentBody” I just created above. To inject data from child template first I have to assign child template. Click on General Content Template, in Master template change from “none” to “Web Site Global Settings” and Save “General Content” template. You can see General Content Templates now moved from root level to child template of “Web site Global Settings” Template. See captured screen</span></p><p  id=\"2225\"><br id=\"2226\"></p><p  id=\"2227\"><span id=\"2228\"><img width=\"496\" height=\"147\" alt=\"image\" src=\"Image_065.jpg\" id=\"2229\"></span></p><p  id=\"2230\">-</p></li></ul></li><li  id=\"2231\"><p  id=\"2232\">Insert content Area: if parents‟ templates have content area placeholder, using insert content area we can insert content area placeholder at child templates. In my case general content is child of “Web Site Global Setting” template. Lets Insert Content area by clicking of “Insert Content Area” icon, select “ContentBody” placeholder and press insert. If you like to cancel, just press cancel. Umbraco content placeholder “ContentBody” inserted after Content place holder “ContentPlaceHolderDefault”. This content place holder is created default by Umbraco. Delete “ContentPlaceHolderDefault” from Template “General content” and Move Umbraco field “contentBody” inside content Placeholder “ContentBody”. Remember to save. If you follow me “General Content” Template code should be like bellow.</p><p  id=\"2233\"><br id=\"2234\"></p><p  id=\"2235\"><span class=\"s59\"  id=\"2236\">&lt;%</span><span class=\"s60\" id=\"2237\">@ </span><span class=\"s61\" id=\"2238\">Master </span><span class=\"s62\" id=\"2239\">Language</span><span class=\"s60\" id=\"2240\">=\"C#\" </span><span class=\"s62\" id=\"2241\">MasterPageFile</span><span class=\"s60\" id=\"2242\">=\"~/masterpages/WebSiteGlobalSettings.master\" </span><span class=\"s62\" id=\"2243\">AutoEventWireup</span><span class=\"s60\" id=\"2244\">=\"true\" </span><span class=\"s59\"  id=\"2245\">%&gt;</span></p><p class=\"s60\"  id=\"2246\">&lt;<span  id=\"2247\">asp</span>:<span  id=\"2248\">Content </span><span  id=\"2249\">ID</span>=\"Content2\" <span  id=\"2250\">ContentPlaceHolderId</span>=\"ContentBody\" <span  id=\"2251\">runat</span>=\"server\"&gt;</p><p class=\"s63\"  id=\"2252\">&lt;!-- Insert \"ContentBody\" markup here --&gt;</p><p class=\"s60\"  id=\"2253\">&lt;<span  id=\"2254\">umbraco</span>:<span  id=\"2255\">Item </span><span  id=\"2256\">ID</span>=\"Item1\" <span  id=\"2257\">field</span>=\"contentBody\" <span  id=\"2258\">runat</span>=\"server\"&gt;&lt;/<span  id=\"2259\">umbraco</span>:<span  id=\"2260\">Item</span>&gt;</p><p class=\"s60\"  id=\"2261\">&lt;/<span  id=\"2262\">asp</span>:<span  id=\"2263\">Content</span>&gt;</p><p  id=\"2264\">- Remember to preview your content after changed in your template<span  id=\"2265\">.</span></p><p  id=\"2266\"><br id=\"2267\"></p></li><li  id=\"2268\"><p  id=\"2269\">Insert Inline Razor Macro: Razor engine is used if you don‟t want to use Xslt to fetch data from xml file. Not covered in this “HowtoUmbraco Basic”.</p><p  id=\"2270\"><br id=\"2271\"></p></li><li  id=\"2272\"><p  id=\"2273\">Help: it will open documentation. Remember to read it if you need help.</p><p  id=\"2274\"><br id=\"2275\"></p></li><li  id=\"2276\"><p  id=\"2277\">Working „Environment or area: Here you add all your template coding.</p></li></ol><p  id=\"2278\">Template &lt;%@ Master Language= \"C#\" MasterPageFile= \"</p><p  id=\"2279\">~/umbraco/masterpages/default.master\" AutoEventWireup=\"true\" %&gt;</p><p  id=\"2280\"><br id=\"2281\"></p><p  id=\"2282\">Description: all templates are inherited by default.master template, it‟s a Umbraco default master template.</p><p  id=\"2283\"><br id=\"2284\"></p><p  id=\"2285\">Content Placeholder: all your html code should go inside Content place holder. If you want to follow me copy and paste code bellow in “Web Site Global Settings” Templates. Note: I am not going to explain code because here nothing new just added html tags. You can look yourself.</p></div><h3  id=\"heading2286\" class=\"heading2286\"><a name=\"bookmark37\" id=\"2287\" >“Web Site Global Settings” Templates:</a></h3><div id=\"contentheading2286\" ><p  id=\"2288\">Note: if you are copying code from here, do not copy <span class=\"s56\" id=\"2289\">&lt;</span>%@ Master Language<span class=\"s56\" id=\"2290\">=</span>\"C#\" MasterPageFile<span class=\"s56\" id=\"2291\">=</span>\"~/umbraco/masterpages/default.master\" AutoEventWireup<span class=\"s56\" id=\"2292\">=</span>\"true\"</p><p  id=\"2293\">%<span class=\"s56\" id=\"2294\">&gt;</span></p><p  id=\"2295\">line because Umbraco will insert that line automatically in that case Umbraco CMS throw out yellow screen of death with Error message “ <b id=\"2296\">Parser Error Message: </b>There can be only one 'master' directive.” To solve this problem make sure there is only one master page template exist on that template. If you want to follow me your “Web Site Global Settings” template code should looks like bellow.</p><p  id=\"2297\"><br id=\"2298\"></p><p  id=\"2299\"><span class=\"s65\"  id=\"2300\">&lt;%</span><span class=\"s66\" id=\"2301\">@ </span><span class=\"s67\" id=\"2302\">Master </span><span class=\"s68\" id=\"2303\">Language</span><span class=\"s66\" id=\"2304\">=\"C#\" </span><span class=\"s68\" id=\"2305\">MasterPageFile</span><span class=\"s66\" id=\"2306\">=\"~/umbraco/masterpages/default.master\" </span><span class=\"s68\" id=\"2307\">AutoEventWireup</span><span class=\"s66\" id=\"2308\">=\"true\" </span><span class=\"s65\"  id=\"2309\">%&gt;</span></p><p class=\"s66\"  id=\"2310\"><span  id=\"2311\">asp</span>:<span  id=\"2312\">Content </span><span  id=\"2313\">ContentPlaceHolderID</span>=\"ContentPlaceHolderDefault\" <span  id=\"2314\">runat</span>=\"server\"&gt;</p><p class=\"s66\"  id=\"2315\">&lt;<span  id=\"2316\">html</span>&gt;</p><p class=\"s66\"  id=\"2317\">&lt;<span  id=\"2318\">head</span>&gt;</p><p class=\"s66\"  id=\"2319\">&lt;<span  id=\"2320\">link </span><span  id=\"2321\">rel</span>=\"stylesheet\" <span  id=\"2322\">type</span>=\"text/css\" <span  id=\"2323\">href</span>=\"css/style.css\"/&gt;</p><p class=\"s66\"  id=\"2324\">&lt;/<span  id=\"2325\">head</span>&gt;</p><p class=\"s66\"  id=\"2326\">&lt;<span  id=\"2327\">body</span>&gt;</p><p class=\"s66\"  id=\"2328\">&lt;<span  id=\"2329\">div </span><span  id=\"2330\">class</span>=\"head\"&gt;</p><p class=\"s66\"  id=\"2331\">&lt;<span  id=\"2332\">div </span><span  id=\"2333\">class</span>=\"top\"&gt;</p><p class=\"s66\"  id=\"2334\">&lt;<span  id=\"2335\">div </span><span  id=\"2336\">class</span>=\"title\"&gt;</p><p  id=\"2337\"><br id=\"2338\"></p><p class=\"s66\"  id=\"2339\">&lt;/<span  id=\"2340\">div</span>&gt;</p><p class=\"s66\"  id=\"2341\">&lt;/<span  id=\"2342\">div</span>&gt;</p><p class=\"s66\"  id=\"2343\">&lt;/<span  id=\"2344\">div</span>&gt;</p><p class=\"s66\"  id=\"2345\">&lt;<span  id=\"2346\">div </span><span  id=\"2347\">class</span>=\"navi\"&gt;</p><p class=\"s66\"  id=\"2348\">&lt;<span  id=\"2349\">div </span><span  id=\"2350\">class</span>=\"navigation\"&gt;</p><p class=\"s66\"  id=\"2351\">&lt;/<span  id=\"2352\">div</span>&gt;</p><p class=\"s66\"  id=\"2353\">&lt;/<span  id=\"2354\">div</span>&gt;</p><p class=\"s66\"  id=\"2355\">&lt;<span  id=\"2356\">div </span><span  id=\"2357\">class</span>=\"middle\"&gt;</p><p class=\"s66\"  id=\"2358\">&lt;<span  id=\"2359\">div </span><span  id=\"2360\">class</span>=\"content\" &gt;</p><p class=\"s66\"  id=\"2361\">&lt;<span  id=\"2362\">asp</span>:<span  id=\"2363\">ContentPlaceHolder </span><span  id=\"2364\">Id</span>=\"ContentBody\" <span  id=\"2365\">runat</span>=\"server\"&gt;</p><p class=\"s69\"  id=\"2366\">&lt;!-- Insert default \"ContentBody\" markup here --&gt;</p><p class=\"s66\"  id=\"2367\">&lt;/<span  id=\"2368\">asp</span>:<span  id=\"2369\">ContentPlaceHolder</span>&gt;</p><p class=\"s66\"  id=\"2370\">&lt;/<span  id=\"2371\">div</span>&gt;</p><p class=\"s66\"  id=\"2372\">&lt;/<span  id=\"2373\">div</span>&gt;</p><p class=\"s66\"  id=\"2374\">&lt;/<span  id=\"2375\">body</span>&gt;</p><p class=\"s66\"  id=\"2376\">&lt;/<span  id=\"2377\">html</span>&gt; &lt;/<span  id=\"2378\">asp</span>:<span  id=\"2379\">Content</span>&gt;</p></div><h3  id=\"heading2380\" class=\"heading2380\"><a name=\"bookmark38\" id=\"2381\" >Template API:</a></h3><div id=\"contentheading2380\" ><p  id=\"2382\">Template API can be found using namespace <span class=\"s66\" id=\"2383\">using </span><span class=\"s70\" id=\"2384\">umbraco.cms.businesslogic.template;</span></p><ul id=\"l48\"><li  id=\"2386\"><p  id=\"2387\">Manual work Create Template:</p><ul id=\"l49\"><li  id=\"2389\"><p  id=\"2390\">That manual work will execute <span  id=\"2391\">Template</span>.MakeNew(name, u);</p></li><li  id=\"2392\"><p  id=\"2393\">Name: name of Template</p></li><li  id=\"2394\"><p  id=\"2395\">U is user. Umbraco will automatically assign user when you logged in backend. If you want to create Template using API you should provide valid user, user should have access to create Template otherwise Umbraco will throughout exception.</p></li></ul></li><li  id=\"2396\"><p  id=\"2397\">Manual work Delete</p><ul id=\"l50\"><li  id=\"2399\"><p  id=\"2400\">It will execute Template.Delete() void methods.</p></li><li  id=\"2401\"><p  id=\"2402\">It‟s not possible to restore deleted templates.</p></li></ul></li><li  id=\"2403\"><p  id=\"2404\">Setting master Template:</p><ul id=\"l51\"><li  id=\"2406\"><p  id=\"2407\">Umbraco will execute Template. MasterTemplate = Template.Id;</p></li><li  id=\"2408\"><p  id=\"2409\">Where Template.Id is node id of parent Template.</p></li></ul></li><li  id=\"2410\"><p  id=\"2411\">Save:</p><ul id=\"l52\"><li  id=\"2413\"><p  id=\"2414\">Save button will execute Save() methods to save work. It will effect to Database see captured screen bellow as reference. I will not explain here but its not difficult to understand if you know basic knowledge of Sql server and Database.</p><p  id=\"2415\"><br id=\"2416\"></p><p  id=\"2417\"><span id=\"2418\"><img width=\"616\" height=\"325\" alt=\"image\" src=\"Image_066.png\" id=\"2419\"></span></p><p  id=\"2420\"><br id=\"2421\"></p><p  id=\"2422\">These results are from Database name „umbracodb‟ table „cmsTemplate‟. In your case database name can be deference as compared to mine.</p><p  id=\"2423\"><br id=\"2424\"></p><p class=\"s10\"  id=\"2425\">Notice:</p><p class=\"s10\"  id=\"2426\">I am not using anymore “insert page field” ways to fetch data in templates because if I fetch data using document type alias it will fetch data only if template are checked in Document type allowed templates. If templates are not associated with document type, Data will not be fetching using “Insert Page field” technique so that I am going to continue to fetch data using Xslt and use macro to render content to templates<span class=\"p\" id=\"2427\">.</span></p><p  id=\"2428\"><br id=\"2429\"></p><h1  id=\"2430\"><a name=\"a38\" id=\"2431\">Chapter 06: XSLT</a></h1><p  id=\"2432\"><br id=\"2433\"></p><p  id=\"2434\"><br id=\"2435\"></p><p  id=\"2436\"><span id=\"2437\"><img width=\"330\" height=\"1\" alt=\"image\" src=\"Image_067.png\" id=\"2438\"></span></p><p  id=\"2439\"><br id=\"2440\"></p><h2  id=\"heading2441\" class=\"heading2441\"><a name=\"bookmark39\" id=\"2442\" >XSLT:</a></h2><div id=\"contentheading2441\" ><p  id=\"2443\">Xslt provides fast data fetching processing from xml file. All published content in your site are structured in xml format by Umbraco system. Xslt is the way to transfer xml data to html format, Xslt and Xpath are used together to provide rich service. Xpath is used to move pointer back and forth to crawl content in xml file or to move pointer from one node to another node. My assumption is you already familiar with Xslt and Xpath, I will directly going to show creating and using Xslt.</p><p  id=\"2444\"><br id=\"2445\"></p><h4  id=\"2446\"><a name=\"a39\" id=\"2447\">Using XSLT:</a></h4><p  id=\"2448\"><br id=\"2449\"></p><p  id=\"2450\">Xslt transfer xml to html, using Xslt we are fetching data from xml and passing to template in Umbraco site. We need to create associated macro first, link that macro with Xslt and Use that macro in Template. Here macro works as bridge between Xslt and Template. Umbraco is user friendly so you don‟t have to worry about macro. Each time you check “Create Macro” when you create new Xslt, Umbraco will automatically generate Macro for you.</p><p  id=\"2451\"><br id=\"2452\"></p><p  id=\"2453\"><span id=\"2454\"><img width=\"333\" height=\"495\" alt=\"image\" src=\"Image_068.png\" id=\"2455\"></span></p><p  id=\"2456\">Let‟s starts to work with Xslt Instruction:</p></div></li></ul></li><li  id=\"2457\"><p  id=\"2458\">Click “Developer” in Sections menu. “XSLT Files” menu is available inside Developer menu items. See captured screen: “Xslt.jpg”.</p></li><li  id=\"2459\"><p  id=\"2460\">Right click on “XSLT Files” and Click “Create”. Umbraco open new windows: if you want to follow me provide these information</p><ul id=\"l53\"><li  id=\"2462\"><p  id=\"2463\">Name: “GlobalSetting”</p></li><li  id=\"2464\"><p  id=\"2465\">Choose a Template: Clean</p></li><li  id=\"2466\"><p  id=\"2467\">Checked: Create Macro</p></li></ul></li><li  id=\"2468\"><p  id=\"2469\">Press “Create” see captured screen bellow “XsltCreate.jpg”</p><p  id=\"2470\"><br id=\"2471\"></p><p  id=\"2472\">“GlobalSetting.xslt” file must be created inside XSLT file menu at Developer section.</p><p class=\"s8\"  id=\"2473\">Purpose of creating Globalsetting.xslt is to fetch Site name, site title and logo.</p><p  id=\"2474\"><br id=\"2475\"></p><p  id=\"2476\">Xslt.jpg</p><p  id=\"2477\"><br id=\"2478\"></p><p  id=\"2479\">XsltCreate.jpg</p><h3  id=\"2480\"><a name=\"bookmark40\" id=\"2481\">Xslt working environments:</a></h3><p  id=\"2482\"><br id=\"2483\"></p><p  id=\"2484\"><span id=\"2485\"><img width=\"616\" height=\"467\" alt=\"image\" src=\"Image_069.png\" id=\"2486\"></span></p><p class=\"s38\"  id=\"2487\">1 2 3 4 5 <span class=\"s72\" id=\"2488\">6 </span><span class=\"s73\" id=\"2489\">7</span></p><p class=\"s38\"  id=\"2490\">8</p><p  id=\"2491\"><br id=\"2492\"></p><p class=\"s38\"  id=\"2493\">9</p><p  id=\"2494\"><br id=\"2495\"></p><p class=\"s38\"  id=\"2496\">A</p><p  id=\"2497\"><br id=\"2498\"></p><p  id=\"2499\"><br id=\"2500\"></p><p  id=\"2501\">Image: xsltEnvironment.jpg</p><p  id=\"2502\">Image: xsltEnvironment.jpg</p><p  id=\"2503\"><span  id=\"2504\"> </span></p><p  id=\"2505\"><br id=\"2506\"></p><ol id=\"l54\"><li  id=\"2508\"><p  id=\"2509\">Coding area: here you can type Xslt code.</p><p  id=\"2510\"><br id=\"2511\"></p><ol id=\"l55\"><li  id=\"2513\"><h4  id=\"2514\">Save <span class=\"p\" id=\"2515\">Button To save work after changed</span></h4></li><li  id=\"2516\"><h4  id=\"2517\">Insert xslt:value of <span class=\"p\" id=\"2518\">: use to insert xslt value, you can also select prevalue. 3- </span>Insert xslt:variable : <span class=\"p\" id=\"2519\">use to insert xslt variable</span></h4></li></ol></li></ol><p  id=\"2520\">4- <b id=\"2521\">Insert xslt:if </b>: use to insert condition statement if 5- <b id=\"2522\">Insert xslt:for-each : </b>use for looping purpose</p><ol id=\"l56\"><li  id=\"2524\"><h4  id=\"2525\">Insert xslt:choose : <span class=\"p\" id=\"2526\">use to insert choose condition statement</span></h4></li><li  id=\"2527\"><h4  id=\"2528\">Visualize Xslt: <span class=\"p\" id=\"2529\">it‟s a big feature in Umbraco. Using visualizes Xslt you can see what output will be made by your Xslt Code on templates. You can also choose different Content and see what will be output.</span></h4></li><li  id=\"2530\"><h4  id=\"2531\">Name <span class=\"p\" id=\"2532\">of xslt file</span></h4></li><li  id=\"2533\"><h4  id=\"2534\">Skip testing: <span class=\"p\" id=\"2535\">if you checked on Skip Testing, Umbraco will not validate your Xslt code so you will not see any error message.</span></h4><p  id=\"2536\"><br id=\"2537\"></p><h4  id=\"2538\"><a name=\"a40\" id=\"2539\">Coding Area:</a></h4></li></ol></li><li  id=\"2540\"><p  id=\"2541\">It starts with xml deceleration and version, it is using xml version 1.0 and encoding utf-8. <span class=\"s19\" id=\"2542\">See at line 1 Image: xsltEnvironment.jpg</span></p></li><li  id=\"2543\"><p  id=\"2544\">You define replacement text yourself at Xslt using DTD<span class=\"s3\" id=\"2545\">14</span>. To use that features you have to have DTD schema knowledge. By default Umbraco inserted one entity.</p><p  id=\"2546\">&lt;!DOCTYPE xsl:stylesheet [&lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p  id=\"2547\">here Enitity nbsp can be used anywhere in xslt. On execution time Umbraco replace nbsp with text „&amp;#x00A0;‟ that we defined at DOCTYPE Entity. <span class=\"s19\" id=\"2548\">See line 2 at Image xsltEnvironment.jpg</span></p></li><li  id=\"2549\"><p  id=\"2550\">Stylesheet Declaration: You can extend Xslt further more using .NET Class libraries. In some cases Xslt may not enough to fetch data in such cases you can extend Xslt. You need to add your Xslt extension here in order to use it.</p><p  id=\"2551\"><br id=\"2552\"></p><p class=\"s74\"  id=\"2553\"><a name=\"bookmark41\" id=\"2554\">.NET Class Registration</a></p><p class=\"s74\"  id=\"2555\">Adding Assembly to Umbraco sites:</p><p class=\"s75\"  id=\"2556\"><a name=\"a41\" id=\"2557\">Open ~/config/xsltExtensions.config file, here you add Assembly first.</a></p><p class=\"s76\"  id=\"2558\">&lt;ext assembly=\"assemblyName\" type=\"assemblyName.namespace.type\" alias=\"custom\"&gt;</p><p class=\"s74\"  id=\"2559\">Assembly <b id=\"2560\">= location of your files</b></p><p class=\"s74\"  id=\"2561\">Type <b id=\"2562\">= namespace name</b></p><p class=\"s74\"  id=\"2563\"><a name=\"a42\" id=\"2564\">Alias </a><b id=\"2565\">= you use that alias at Xslt to refer assembly.</b></p><p  id=\"2566\"><br id=\"2567\"></p><p class=\"s74\"  id=\"2568\">Add alias in xslt stylesheet.</p><p class=\"s75\"  id=\"2569\"><a name=\"a43\" id=\"2570\">Xmlns:LocalName = alias from xsltExtesion registration LocalName is used inside Xslt templates</a></p><p class=\"s75\"  id=\"2571\">Alias = alias that you define when you registered assembly name at</p><p class=\"s75\"  id=\"2572\">~/config/xsltExtesion.config file</p><p class=\"s75\"  id=\"2573\">Now you are ready to use .NET Class library in Xslt.</p><p class=\"s74\"  id=\"2574\">exclude-result-prefixes=\"Assembly Alias”</p><p class=\"s77\"  id=\"2575\">Use exclude to prevent Xslt from outputting namespace name.</p><p class=\"s75\"  id=\"2576\">Note: ~ means your Umbraco root installation directory level.</p></li><li  id=\"2577\"><p class=\"s64\"  id=\"2578\">&lt;<span  id=\"2579\">xsl:output </span><span  id=\"2580\">method</span>=<span  id=\"2581\">\"</span>xml<span  id=\"2582\">\" </span><span  id=\"2583\">omit-xml-declaration</span>=<span  id=\"2584\">\"</span>yes<span  id=\"2585\">\"</span>/&gt;</p><p class=\"s75\"  id=\"2586\"><a name=\"a44\" id=\"2587\">It will omit xml deceleration output</a></p><p  id=\"2588\">Let‟s start to work with Umbraco Xslt</p></li><li  id=\"2589\"><p class=\"s64\"  id=\"2590\">&lt;<span  id=\"2591\">xsl:param </span><span  id=\"2592\">name</span>=<span  id=\"2593\">\"</span>currentPage<span  id=\"2594\">\"</span>/&gt;</p></li><li  id=\"2595\"><p  id=\"2596\">It‟s a very use full param in Umbraco. Umbraco will insert current page data. Current page means page that Templates, Content and Document Type using specific Xslt file in other words currentPage means current page. Value of currentPage depends on article or Content you are visiting now. Let‟s try to output currentPage value and see what will be output.</p></li><li  id=\"2597\"><p class=\"s78\"  id=\"2598\">Template Match</p><p class=\"s78\"  id=\"2599\">&lt;<span  id=\"2600\">xsl:template </span><span  id=\"2601\">match</span>=<span  id=\"2602\">\"</span>/<span  id=\"2603\">\"</span>&gt;</p><p class=\"s78\"  id=\"2604\">&lt;<span  id=\"2605\">xsl:copy-of </span><span  id=\"2606\">select</span>=<span  id=\"2607\">\"</span>$currentPage<span  id=\"2608\">\" </span>/&gt;</p><p class=\"s78\"  id=\"2609\">&lt;/<span  id=\"2610\">xsl:template</span>&gt;</p><p class=\"s82\"  id=\"2611\">o <span class=\"s78\" id=\"2612\">All your logic or html output you code between opening and closing tags of &lt;xsl:template&gt;</span></p><p  id=\"2613\"><br id=\"2614\"></p><p  id=\"2615\"><span id=\"2616\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_070.png\" id=\"2617\"></span></p><p class=\"s20\"  id=\"2618\">14 <span class=\"s10\" id=\"2619\">Document Type Definition</span></p></li><li  id=\"2620\"><p class=\"s78\"  id=\"2621\">Here we use xsl:copy-of select=‛$currentPage‛ to output current page data.</p><p  id=\"2622\"><br id=\"2623\"></p></li><li  id=\"2624\"><p class=\"s78\"  id=\"2625\">To see outp<span class=\"p\" id=\"2626\">ut value use “visualize Xslt” button at top-right corner of Edit xsl working environment. Make sure you choose first Content using “Choose…” menu. Select Content after press “Visualize XSLT” button. You should see some data if content has some data. See captured screen bellow.</span></p></li></ul><p  id=\"2627\"><br id=\"2628\"></p><p  id=\"2629\"><span id=\"2630\"><img width=\"544\" height=\"332\" alt=\"image\" src=\"Image_071.png\" id=\"2631\"></span></p><p class=\"s38\"  id=\"2632\">A B C</p><p class=\"s38\"  id=\"2633\">G</p><p  id=\"2634\"><br id=\"2635\"></p><p class=\"s38\"  id=\"2636\">D</p><p class=\"s38\"  id=\"2637\">E</p><p  id=\"2638\"><br id=\"2639\"></p><p class=\"s38\"  id=\"2640\">F</p><p  id=\"2641\"><br id=\"2642\"></p><ol id=\"l57\"><ol id=\"l58\"><li  id=\"2645\"><p  id=\"2646\">Title of Content: first time it must be empty.</p></li><li  id=\"2647\"><p  id=\"2648\">Delete: To delete selected Content. It will not delete content from Content Section, it will only delete from Visualize Xslt service.</p></li><li  id=\"2649\"><p  id=\"2650\">Choose..: you can easily change or alter Content to visualize XSLT and see different output based on XSLT code.</p></li><li  id=\"2651\"><p  id=\"2652\">Visualize Xslt Button: Press to visualize XSLT</p></li><li  id=\"2653\"><p  id=\"2654\">Encode: Checked if you want to see xml formatted data, uncheck to see only content.</p></li><li  id=\"2655\"><p  id=\"2656\">Output of XSLT: it‟s a result; it‟s an output of your Xslt code, its output currentPage value. Same value will insert into templates.</p></li><li  id=\"2657\"><p  id=\"2658\">Press “x” to close Visualize XSLT service.</p></li></ol></ol><p  id=\"2659\"><br id=\"2660\"></p><p class=\"s83 heading2661\"  id=\"heading2661\"><a name=\"bookmark42\" id=\"2662\" >Xml File umbraco.config</a></p><div id=\"contentheading2661\" ><p  id=\"2663\">I mentioned Xslt use to fetch data from xml file. You must wonder about what xml file? Where is that xml file? Why it‟s in xml file? And more questions.</p><ul id=\"l59\"><li  id=\"2665\"><p  id=\"2666\">Umbraco generates Umbraco.config temporary file it‟s structured in xml format, every time when you made change on content or document type. Umbraco remind you to publish content. It means, when you made change on content Umbraco made change only on Database. Umbraco does not fetch data from database to present data to end users unless you extend it using other programming language. One reason is it is slow process to fetch data</p><p  id=\"2667\"><br id=\"2668\"></p><p  id=\"2669\">from database as compared to fetching data from xml file. Database may store in separate machine or separate location in server that need to travel data that cause slower process. Umbraco use great idea generating temporary xml files, that xml files cached in memory. Using temporary xml file it‟s dramatically faster to fetch data using Xslt. To see temporary xml generated file you need to locate directory “App_Data” in website root level and find umbraco.config file. “~/App_data/umbraco.config”</p></li><li  id=\"2670\"><p  id=\"2671\">Open umbraco.config file using Note pad or other software, if you open with Visual studio it will easy to navigate. See captured screen. Your version can be difference.</p></li></ul><p  id=\"2672\"><br id=\"2673\"></p><p  id=\"2674\"><br id=\"2675\"></p><p  id=\"2676\"><span id=\"2677\"><img width=\"616\" height=\"512\" alt=\"image\" src=\"Image_072.png\" id=\"2678\"></span></p><p  id=\"2679\">Image: Umbracoconfig.jpg</p><h3  id=\"2680\"><a name=\"bookmark43\" id=\"2681\">Relationship between Document Type and Umbraco.config Xml</a></h3><p class=\"s19\"  id=\"2682\">See Image: Umbracoconfig.jpg</p><p  id=\"2683\"><br id=\"2684\"></p><h4  id=\"2685\">Line 1: <span class=\"p\" id=\"2686\">xml declaration</span></h4><p  id=\"2687\"><br id=\"2688\"></p><h4  id=\"2689\">Line 2 to line 10: <span class=\"p\" id=\"2690\">DTD schema information</span></h4><h4  id=\"2691\">Line 13: <span class=\"p\" id=\"2692\">Umbraco Root Element. All Elements go inside root node. Root is parent element for all.</span></h4><h4  id=\"2693\">Line 14: <span class=\"p\" id=\"2694\">Umbraco starts generating xml elements and attributes based on our document type and content. Did you notice Alias that used in Document type is Elements here?</span></h4><ul id=\"l60\"><li  id=\"2696\"><p  id=\"2697\">GeneralContent is alias of Document Type “General Content”. All attributes inside “GeneralContent” element are inserted by Umbraco automatically.</p></li><li  id=\"2698\"><p  id=\"2699\">Now let‟s look child element of “GeneralContent” Element. Two more element “contentTitle” and “contentBody” also created. If you notice that we added two new property “contentTitle” and “contentBody” in Document Type “General Content”.</p></li><li  id=\"2700\"><p  id=\"2701\">Here in umbraco.config xml these new property structured as child of Document Type element tags.</p></li><li  id=\"2702\"><p  id=\"2703\">Probably you need time to understand, you have to go back to Document Type, see carefully all alias. Come back to umbraco.config xml file and analyze yourself that helps you to understand better.</p><p  id=\"2704\"><br id=\"2705\"></p><p  id=\"2706\">Line 14: attributes: Umbraco generates few attributes automatically. Most attributes are self explanatory so easier to understand. I feel some attributes need to describe here for Umbraco New developers.</p></li><li  id=\"2707\"><p class=\"s32\"  id=\"2708\">id <span class=\"s10\" id=\"2709\">: it‟s a node id of content each content has different node id</span></p><p  id=\"2710\"><br id=\"2711\"></p></li><li  id=\"2712\"><p class=\"s32\"  id=\"2713\">parentID<span class=\"s10\" id=\"2714\">: node id of parent element. If you notice in Content API chapter we pass parent id -1 value. Means create content at root level in content but actually it means create content as child of root element. Umbraco assign root element id = -1 see line 13 Image: “Umbracoconfig.jpg;</span></p><p  id=\"2715\"><br id=\"2716\"></p></li><li  id=\"2717\"><p class=\"s32\"  id=\"2718\">level<span class=\"s10\" id=\"2719\">: level of content. 1 means at root level if you create child content it will be level 2</span></p><p  id=\"2720\"><br id=\"2721\"></p></li><li  id=\"2722\"><p class=\"s32\"  id=\"2723\">nodeName<span class=\"s10\" id=\"2724\">: It‟s not a contentTitle that you provide on document type content title property. it‟s a title of Content that appear at Content Tree Section.</span></p><p  id=\"2725\"><br id=\"2726\"></p></li><li  id=\"2727\"><p class=\"s32\"  id=\"2728\">urlName<span class=\"s10\" id=\"2729\">: name of url, content access using urlName. Example /home.aspx will load contain id 1084. See line 14 Image: “Umbracoconfig.jpg;</span></p><p  id=\"2730\"><br id=\"2731\"></p></li><li  id=\"2732\"><p class=\"s32\"  id=\"2733\">nodeType<span class=\"s10\" id=\"2734\">: node id of Document Type</span></p></li><li  id=\"2735\"><p class=\"s32\"  id=\"2736\">How do you know Document Type Node id?</p><p  id=\"2737\"><br id=\"2738\"></p><p class=\"s10\"  id=\"2739\">It‟s a tricky. Just mouse over Document Type at left bottom of browser , browser show JavaScript link like this “javascript:openNodeType(1054);” number between () is node id of Document Type.</p></li><li  id=\"2740\"><p class=\"s10\"  id=\"2741\"><b id=\"2742\">creatorID</b>: id of users who created content. 0 means administrator and always exist in Umbraco user, it has root level of access<span class=\"s20\" id=\"2743\">15</span>.</p></li></ul></div></div><h3  id=\"heading2744\" class=\"heading2744\"><a name=\"bookmark44\" id=\"2745\" >Fetching data:</a></h3><div id=\"contentheading2744\" ><p  id=\"2746\">Let‟s take real example for Semic provider site and be clear about use of Xslt. Semic provider has logo, title and slogan as global items. For global items<span class=\"s3\" id=\"2747\">16</span>, we need to fetch value from siteName, slogan and logo element <span class=\"s19\" id=\"2748\">see line at 26, 27 and 28 respectively at Image:Umbracoconfig.jpg”</span>. Open GlobalSetting.xslt file and add highlighted code into GlobalSetting.xslt. See captured screen and Save Xslt.</p><p  id=\"2749\"><br id=\"2750\"></p><p  id=\"2751\"><span id=\"2752\"><img width=\"616\" height=\"342\" alt=\"image\" src=\"Image_073.jpg\" id=\"2753\"></span></p><p  id=\"2754\">All html tags are not important, only important is highlighted line. Description:</p><ul id=\"l61\"><li  id=\"2756\"><p class=\"s78\"  id=\"2757\">&lt;<span  id=\"2758\">xsl</span>:<span  id=\"2759\">variable </span><span  id=\"2760\">name</span>=\"items\" <span  id=\"2761\">select</span>=\"$currentPage/ancestor-or-self::*</p><p class=\"s78\"  id=\"2762\">/WebSiteGlobalSettings \"/&gt;</p><ul id=\"l62\"><li  id=\"2764\"><p class=\"s81\"  id=\"2765\">Here $ represent variable in XSLT. variable name items will hold data from ‚WebSitesGlobalSettings‛ Element see line at 25 Image: <span class=\"s10\" id=\"2766\">“Umbracoconfig.jpg” page no: xx</span></p></li><li  id=\"2767\"><p class=\"s81\"  id=\"2768\">currentPage will select current page.</p></li><li  id=\"2769\"><p class=\"s81\"  id=\"2770\">ancestor-or-self:: move pointer back until root level.</p></li><li  id=\"2771\"><p class=\"s81\"  id=\"2772\">* select all that match</p></li><li  id=\"2773\"><p class=\"s81\"  id=\"2774\">/ move one step further to child element.</p></li><li  id=\"2775\"><p class=\"s81\"  id=\"2776\">WebsitesGlobalSettings is element name.</p></li></ul></li><li  id=\"2777\"><p class=\"s78\"  id=\"2778\">&lt;<span  id=\"2779\">xsl</span>:<span  id=\"2780\">variable </span><span  id=\"2781\">name</span>=\"logo\" <span  id=\"2782\">select</span>=\"$items/logo\"/&gt;</p><ul id=\"l63\"><li  id=\"2784\"><p class=\"s81\"  id=\"2785\">$items/logo will select logo element and hold data</p></li></ul></li><li  id=\"2786\"><p class=\"s78\"  id=\"2787\">&lt;<span  id=\"2788\">xsl</span>:<span  id=\"2789\">value-of </span><span  id=\"2790\">select</span>=\"$items/slogan\"/&gt;</p><ul id=\"l64\"><li  id=\"2792\"><p class=\"s81\"  id=\"2793\">$items/slogan: select value from slogan element</p></li><li  id=\"2794\"><p class=\"s78\"  id=\"2795\">&lt;<span  id=\"2796\">img </span><span  id=\"2797\">src</span>=\"{$logo}\" <span  id=\"2798\">alt</span>=\"semic provider logo; visual identity\"/&gt;</p></li><li  id=\"2799\"><p class=\"s78\"  id=\"2800\">Insert value of logo variable. Using $ and followed by name means use of variable, encapsulated data with {}. {} means code inside {} will executed on server by Umbraco CMS.</p></li></ul></li></ul><p  id=\"2801\"><br id=\"2802\"></p><p  id=\"2803\"><span id=\"2804\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_074.png\" id=\"2805\"></span></p><p class=\"s20\"  id=\"2806\">15 <span class=\"s10\" id=\"2807\">Root level of access: access that can CRUD ; C-create, R-read, U-update, D-delete</span></p><p class=\"s20\"  id=\"2808\">16 <span class=\"s10\" id=\"2809\">Items those are common for all. For example logo, website name.</span></p><p class=\"s78\"  id=\"2810\"><span class=\"s10\" id=\"2811\">- </span>&lt;<span  id=\"2812\">xsl</span>:<span  id=\"2813\">value-of </span><span  id=\"2814\">select</span>=\"$items/siteName\"/&gt;</p><p class=\"s85\"  id=\"2815\">o <span class=\"s81\" id=\"2816\">This line will select value of siteName element and output.</span></p><p  id=\"2817\"><br id=\"2818\"></p><p class=\"s41\"  id=\"2819\"><a name=\"bookmark45\" id=\"2820\">Note: alt tag in img element is not compulsory but I strongly recommend having alt tag. It will help for web accessibility and SEO.</a></p><p class=\"s86\"  id=\"2821\"><a name=\"a45\" id=\"2822\">Xslt for Navigation:</a></p><p  id=\"2823\"><br id=\"2824\"></p><p  id=\"2825\"><span id=\"2826\"><img width=\"581\" height=\"261\" alt=\"image\" src=\"Image_075.png\" id=\"2827\"></span></p><p  id=\"2828\"><br id=\"2829\"></p><p  id=\"2830\">This is another Xslt for Navigation bar. Create new Xslt. Provide name navigation and Checked Create Macro. Copy highlighted text. Note that html is not that much important these are for CSS and layout purpose.</p><p  id=\"2831\">Description:</p><ul id=\"l65\"><li  id=\"2833\"><p  id=\"2834\">[string(useInNavigation) = '1'] condition match means select all GeneralContent Element from ~/App_Data/umbraco.config file where useInNavigation checked boxed should be checked. Remember that we added new property at “General Content” Document Type. If editor wants to use general content in navigation bar. Editor should Checked mark on “useInNavigation” when s/he creates content.</p><p  id=\"2835\"><br id=\"2836\"></p></li><li  id=\"2837\"><p  id=\"2838\">Nice Url: umbraco.library:NiceUrl(@id)</p><ul id=\"l66\"><li  id=\"2840\"><p  id=\"2841\">NiceUrl(@node id) will generate user friendly nice Url. Remember that urlName are used example: home.aspx</p></li><li  id=\"2842\"><p  id=\"2843\">@id: it‟s an attribute of selected element at ~/App_Data/umbraco.config xml file. In my case it‟s a node id of content based on “General Content” document type. @ sysmbole represent get value from attributes. See Xslt, Xpath and xml for details.</p></li></ul></li></ul><p  id=\"2844\"><br id=\"2845\"></p><ul id=\"l67\"><li  id=\"2847\"><p class=\"s56\"  id=\"2848\">&lt;<span class=\"p\" id=\"2849\">xsl:value-of select</span>=<span class=\"p\" id=\"2850\">\"contentTitle\"</span>/&gt;</p><p  id=\"2851\"><br id=\"2852\"></p><ul id=\"l68\"><li  id=\"2854\"><p class=\"s56\"  id=\"2855\">Select value from contentTitle element</p></li></ul></li><li  id=\"2856\"><p class=\"s56\"  id=\"2857\">&lt;<span class=\"p\" id=\"2858\">xsl:for-each select</span>=<span class=\"p\" id=\"2859\">\"$items\"</span>&gt;</p><p  id=\"2860\"><br id=\"2861\"></p><ul id=\"l69\"><li  id=\"2863\"><p class=\"s56\"  id=\"2864\">Used to loop all existing content</p><p  id=\"2865\"><br id=\"2866\"></p></li></ul></li><li  id=\"2867\"><p class=\"s56\"  id=\"2868\">&lt;<span class=\"p\" id=\"2869\">xsl:if test</span>=<span class=\"p\" id=\"2870\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p  id=\"2871\"><br id=\"2872\"></p><ul id=\"l70\"><li  id=\"2874\"><p class=\"s56\"  id=\"2875\">Here &amp;gt; means greater than. Test: means execute block of code only if result is more than zero. If items are less than zero no need to loop items.</p></li></ul></li></ul><p  id=\"2876\"><br id=\"2877\"></p><h4  id=\"2878\"><a name=\"a46\" id=\"2879\">Note: there is missing code in captured screen means missing code are generated by Umbraco Default and removed from here to reduce space.</a></h4><p class=\"s86\"  id=\"2880\"><a name=\"bookmark46\" id=\"2881\">New Xslt file for News List items.</a></p><p  id=\"2882\">It will be exercise for you I create NewsList.xslt file, here I just include captured screen without description try to describe yourself. It‟s not big but need to knowledge of Xpath. Main purpose of this Xslt is to fetch content from 2<span class=\"s3\" id=\"2883\">nd </span>level menu contain. It will fetch News articles from ~/App_data/umbraco.config xml file. Captured screen are bellow.</p><p  id=\"2884\"><br id=\"2885\"></p><p  id=\"2886\"><span id=\"2887\"><img width=\"475\" height=\"383\" alt=\"image\" src=\"Image_076.jpg\" id=\"2888\"></span></p><p  id=\"2889\"><br id=\"2890\"></p><h1  id=\"2891\"><a name=\"a47\" id=\"2892\">Chapter 07: Macro</a></h1><p  id=\"2893\"><br id=\"2894\"></p><p  id=\"2895\"><br id=\"2896\"></p><p  id=\"2897\"><span id=\"2898\"><img width=\"350\" height=\"1\" alt=\"image\" src=\"Image_077.png\" id=\"2899\"></span></p><p  id=\"2900\"><br id=\"2901\"></p><h2  id=\"heading2902\" class=\"heading2902\"><a name=\"bookmark47\" id=\"2903\" >Macro:</a></h2><div id=\"contentheading2902\" ><p  id=\"2904\">Marco is use as bridge between xslt, user control or other languages and templates, using macro we can render content or data from data source to templates and templates are responsible to present data to end users. Macro is very important part in Umbraco.</p><p  id=\"2905\"><span id=\"2906\"><img width=\"616\" height=\"437\" alt=\"image\" src=\"Image_078.png\" id=\"2907\"></span></p><h3  id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" >Macro working Environments:</a></h3><div id=\"contentheading2908\" ><p class=\"s45\"  id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p  id=\"2912\"><br id=\"2913\"></p><p  id=\"2914\">C</p><p  id=\"2915\">D</p><p  id=\"2916\"><br id=\"2917\"></p><p  id=\"2918\">E</p><p  id=\"2919\"><br id=\"2920\"></p><p  id=\"2921\">F</p><p  id=\"2922\"><br id=\"2923\"></p><p  id=\"2924\">G</p><p  id=\"2925\"><br id=\"2926\"></p><p  id=\"2927\">H</p><p  id=\"2928\">I</p><p  id=\"2929\">J</p><p  id=\"2930\"><br id=\"2931\"></p><p  id=\"2932\">K</p><p  id=\"2933\">L</p><p  id=\"2934\"><br id=\"2935\"></p><p  id=\"2936\">M</p><p  id=\"2937\"><br id=\"2938\"></p><p  id=\"2939\"><br id=\"2940\"></p><p  id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li  id=\"2943\"><p  id=\"2944\">Save button to save your work or settings</p></li><li  id=\"2945\"><p  id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p  id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li  id=\"2949\"><p  id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li  id=\"2951\"><p  id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li  id=\"2953\"><p  id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li  id=\"2955\"><p  id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p  id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li  id=\"2959\"><p  id=\"2960\">Show preview fetch data on Content Editor.</p></li><li  id=\"2961\"><p  id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li  id=\"2963\"><p  id=\"2964\">Cached per page: cached page based on requested page</p></li><li  id=\"2965\"><p  id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p  id=\"2967\"><br id=\"2968\"></p><p  id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p  id=\"2971\"><br id=\"2972\"></p><p  id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\"  id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\"  target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p  id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p  id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li  id=\"2984\"><p class=\"s8\"  id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li  id=\"2987\"><p class=\"s8\"  id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li  id=\"2989\"><p class=\"s8\"  id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p  id=\"2991\"><br id=\"2992\"></p><p  id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3  id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" >Using Macro into templates:</a></h3><div id=\"contentheading2994\" ><p  id=\"2996\">Instruction:</p><p  id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li  id=\"3000\"><p  id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li  id=\"3002\"><p  id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li  id=\"3004\"><p  id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li  id=\"3007\"><p  id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li  id=\"3009\"><p  id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\"  id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li  id=\"3015\"><p class=\"s8\"  id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p  id=\"3018\"><br id=\"3019\"></p></li><li  id=\"3020\"><p class=\"s8\"  id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p  id=\"3023\"><br id=\"3024\"></p></li><li  id=\"3025\"><p class=\"s8\"  id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p  id=\"3028\"><br id=\"3029\"></p></li><li  id=\"3030\"><p class=\"s8\"  id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p  id=\"3033\"><br id=\"3034\"></p><p  id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3  id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" >Instruction to Insert Macro in Content Area:</a></h3></li><li  id=\"3038\"><p  id=\"3039\">Open content “News”</p></li><li  id=\"3040\"><p  id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li  id=\"3042\"><p  id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li  id=\"3045\"><p  id=\"3046\">Select Marco and Press Insert.</p><p  id=\"3047\"><br id=\"3048\"></p><p  id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\"  id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p  id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li  id=\"3057\"><p  id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li  id=\"3059\"><p  id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p  id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p  id=\"3065\"><br id=\"3066\"></p></li><li  id=\"3067\"><p  id=\"3068\">All red dotted area denotes Macro areas.</p></li><li  id=\"3069\"><p  id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li  id=\"3071\"><p  id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p  id=\"3073\"><br id=\"3074\"></p><p  id=\"3075\"><br id=\"3076\"></p><h3  id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" >Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" ><p  id=\"3079\"><br id=\"3080\"></p></div></li><li  id=\"3081\"><p class=\"s42\"  id=\"3082\">Macro <span  id=\"3083\">macro = </span>Macro<span  id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li  id=\"3086\"><p class=\"s40\"  id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li  id=\"3088\"><p class=\"s40\"  id=\"3089\">macro.UseInEditor = <span  id=\"3090\">true</span>;</p><ul id=\"l77\"><li  id=\"3092\"><p class=\"s40\"  id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li  id=\"3094\"><p class=\"s40\"  id=\"3095\">macro.RenderContent = <span  id=\"3096\">true</span>;</p><ul id=\"l78\"><li  id=\"3098\"><p class=\"s40\"  id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li  id=\"3100\"><p class=\"s40\"  id=\"3101\">macro.Xslt = <span  id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li  id=\"3103\"><p class=\"s40\"  id=\"3104\">provide location of xslt file to use.</p></li><li  id=\"3105\"><p class=\"s40\"  id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li  id=\"3107\"><p class=\"s40\"  id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\"  id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p  id=\"3110\"><br id=\"3111\"></p><h1  id=\"3112\">Chapter 08:</h1><h1  id=\"3113\">Extending Umbraco CMS</h1><p  id=\"3114\"><br id=\"3115\"></p><p  id=\"3116\"><br id=\"3117\"></p><p  id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2  id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p  id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p  id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p  id=\"3125\">User control</p><p  id=\"3126\">.NET Class Library Razor Engine XSLT</p><p  id=\"3127\">Python</p><p  id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p  id=\"3129\">Python is also not covered in this book.</p><p  id=\"3130\"><br id=\"3131\"></p><h3  id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" >User Control:</a></h3><div id=\"contentheading3132\" ><p  id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p  id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p  id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li  id=\"3138\"><p  id=\"3139\">Add New User Control</p></li><li  id=\"3140\"><p  id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p  id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li  id=\"3145\"><p  id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p  id=\"3147\"><br id=\"3148\"></p><p  id=\"3149\">Vcard-Process</p><p  id=\"3150\"><br id=\"3151\"></p><p  id=\"3152\">User Provides Personal Information</p><p  id=\"3153\">Generate Vcard</p><p  id=\"3154\">Send Vcard to Email</p><p  id=\"3155\">Save to Database</p><p  id=\"3156\">Vcard-Process</p><p  id=\"3157\"><br id=\"3158\"></p><p  id=\"3159\">User Provides Personal Information</p><p  id=\"3160\">Generate Vcard</p><p  id=\"3161\">Send Vcard to Email</p><p  id=\"3162\">Save to Database</p><p class=\"s10\"  id=\"3163\">\t\t</p><h3  id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" >Before start coding:</a></h3><div id=\"contentheading3164\" ><p  id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p  id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p  id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4  id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p  id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p  id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p  id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4  id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p  id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p  id=\"3182\"><br id=\"3183\"></p><p  id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\"  id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p  id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\"  target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p  id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\"  target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\"  id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\"  id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4  id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p  id=\"3202\"><br id=\"3203\"></p><p  id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\"  id=\"3207\">JavaScript.jpg </p><p class=\"s88\"  id=\"3208\">JavaScript.jpg </p><p  id=\"3209\"></p><p  id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p  id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p  id=\"3212\"><br id=\"3213\"></p><h4  id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p  id=\"3216\"><br id=\"3217\"></p><p  id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p  id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4  id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p  id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li  id=\"3225\"><p  id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li  id=\"3227\"><p  id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li  id=\"3229\"><p  id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li  id=\"3231\"><p  id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li  id=\"3233\"><p  id=\"3234\">“Regex” means Regular Expression.</p><p  id=\"3235\"><br id=\"3236\"></p><h4  id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p  id=\"3239\"><br id=\"3240\"></p><p  id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4  id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p  id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p  id=\"3246\"><br id=\"3247\"></p><h4  id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p  id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p  id=\"3251\"><br id=\"3252\"></p><h4  id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p  id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p  id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p  id=\"3257\"><br id=\"3258\"></p><p  id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p  id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p  id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p  id=\"3268\">User type personal Informatio n</p><p  id=\"3269\">Name: Email:</p><p  id=\"3270\">User type personal Informatio n</p><p  id=\"3271\">Name: Email:</p><p  id=\"3272\"></p><p  id=\"3273\">Generate Vcard</p><p  id=\"3274\">Generate Vcard</p><p  id=\"3275\"></p><p  id=\"3276\">Press Submit</p><p  id=\"3277\">Press Submit</p><p  id=\"3278\"></p><p  id=\"3279\">Validate submitted Data</p><p  id=\"3280\"><br id=\"3281\"></p><p  id=\"3282\"><br id=\"3283\"></p><p  id=\"3284\">Store in Database</p><p  id=\"3285\">Sent By Email</p><p  id=\"3286\">Store in Database</p><p  id=\"3287\">Sent By Email</p><p class=\"s10\"  id=\"3288\"><span  id=\"3289\"> </span>\t</p><p  id=\"3290\"><br id=\"3291\"></p><p  id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p  id=\"3293\"><br id=\"3294\"></p><h4  id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li  id=\"3297\"><p  id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li  id=\"3300\"><p  id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li  id=\"3302\"><p  id=\"3303\">Create Upload button for Image or Photo</p></li><li  id=\"3304\"><p  id=\"3305\">Create Button</p><ul id=\"l82\"><li  id=\"3307\"><p  id=\"3308\">To submit data</p><h4  id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li  id=\"3311\"><p  id=\"3312\">Create Class</p><ul id=\"l83\"><li  id=\"3314\"><p  id=\"3315\">To save data to Database</p></li></ul></li><li  id=\"3316\"><p  id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li  id=\"3319\"><p  id=\"3320\">Validate input methods</p></li><li  id=\"3321\"><p  id=\"3322\">Go Generate Vcard</p></li><li  id=\"3323\"><p  id=\"3324\">Send Email Store Data to Database</p><p  id=\"3325\"><br id=\"3326\"></p><p  id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\"  id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3  id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" >Let’s Begin to code:</a></h3><div id=\"contentheading3332\" ><p  id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li  id=\"3335\"><p  id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li  id=\"3337\"><p  id=\"3338\">File -&gt; New --&gt; Project</p></li><li  id=\"3339\"><p  id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li  id=\"3342\"><p  id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li  id=\"3344\"><p  id=\"3345\">Name: Vcard Generator</p></li><li  id=\"3346\"><p  id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li  id=\"3348\"><p  id=\"3349\">Solution name: leave default, if you want you can change</p></li><li  id=\"3350\"><p  id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li  id=\"3353\"><p  id=\"3354\">It will Create new directory</p></li></ul></li><li  id=\"3355\"><p  id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p  id=\"3357\"><br id=\"3358\"></p><p  id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p  id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p  id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p  id=\"3368\">It will open new windows</p><p  id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p  id=\"3374\"><br id=\"3375\"></p><p  id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p  id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p  id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p  id=\"3381\">Vcardcontrol.jp</p><p  id=\"3382\"><br id=\"3383\"></p><p class=\"s27\"  id=\"3384\">-</p><p  id=\"3385\"><br id=\"3386\"></p><p class=\"s27\"  id=\"3387\">-</p><p  id=\"3388\"><br id=\"3389\"></p><p class=\"s27\"  id=\"3390\">-</p><p  id=\"3391\"><br id=\"3392\"></p></div></div></div></div></div></li><li  id=\"3393\"><p  id=\"3394\">It must create three files end with “.ascx”, “ascx.cs” and “ascx.designer.cs”.</p></li><li  id=\"3395\"><p  id=\"3396\">Open VcardGenerator.ascx and Create Textbox, Button, Required Field validate and Custom Validate. See captured screen bellow</p></li></ul><p  id=\"3397\"><br id=\"3398\"></p><p  id=\"3399\"><span id=\"3400\"><img width=\"553\" height=\"493\" alt=\"image\" src=\"Image_095.png\" id=\"3401\"></span></p><p  id=\"3402\">Add: Validation</p><p  id=\"3403\"><br id=\"3404\"></p><p  id=\"3405\">Add: RequiredFieldValidator</p><p  id=\"3406\"><br id=\"3407\"></p><p  id=\"3408\">Add: CustomValidator</p><p  id=\"3409\"><br id=\"3410\"></p><p  id=\"3411\">* All are CustomValidator</p><p  id=\"3412\"><br id=\"3413\"></p><p  id=\"3414\">Add: Eight TextBox</p><p  id=\"3415\"><br id=\"3416\"></p><p  id=\"3417\"><br id=\"3418\"></p><p  id=\"3419\">Add: FileUpload</p><p  id=\"3420\"><br id=\"3421\"></p><p  id=\"3422\">Add: Add Buttom</p><p  id=\"3423\"><br id=\"3424\"></p><p class=\"s27\"  id=\"3425\">-</p><p  id=\"3426\"><br id=\"3427\"></p><p  id=\"3428\">You are Visiting Design View. Click Source to view source Code.</p><p  id=\"3429\"><br id=\"3430\"></p><p  id=\"3431\">I placed in table format; you can remove these table formats using div if you like.</p><p  id=\"3432\"><br id=\"3433\"></p><ul id=\"l87\"><li  id=\"3435\"><p  id=\"3436\">ValidationSummary: Validation Summary is used to provide users validation summary, if there is any validation fail, it will show up list of validation error message, error message are customizable.</p><p class=\"s90\"  id=\"3437\">&lt;<span  id=\"3438\">asp</span>:<span  id=\"3439\">ValidationSummary </span><span  id=\"3440\">ID</span>=\"ValidationSummary\" <span  id=\"3441\">runat</span>=\"server\" <span  id=\"3442\">ForeColor</span>=\"#FF6666\" /&gt;</p></li><li  id=\"3443\"><p  id=\"3444\">Make sure you have runat=”server”, otherwise code does not execute at server.</p></li><li  id=\"3445\"><p  id=\"3446\">Add: TextBox</p></li><li  id=\"3447\"><p class=\"s90\"  id=\"3448\">&lt;<span  id=\"3449\">asp</span>:<span  id=\"3450\">TextBox </span><span  id=\"3451\">ID</span>=\"TextBoxName\" <span  id=\"3452\">runat</span>=server&gt;&lt;/<span  id=\"3453\">asp</span>:<span  id=\"3454\">TextBox</span>&gt;</p></li><li  id=\"3455\"><p  id=\"3456\">This is example for textbox Name. Repeat same process for Street, PostalCode, City, Country, Phone, Email and WebSite.</p></li><li  id=\"3457\"><p  id=\"3458\">Each Textbox should have unique id so if you choose id that is self- explanatory it‟s easier to refer later on for example choose Textbox id “TextboxEmail” for email input textbox.</p></li><li  id=\"3459\"><p  id=\"3460\">Add: Required Filed Validator</p><p  id=\"3461\"><br id=\"3462\"></p><p  id=\"3463\">In Vcard website Name an Email must provide so we need to add Required Field Validator. Go to Toolbox <span class=\"s89\" id=\"3464\"></span><span class=\"s28\" id=\"3465\"> </span>Validation <span class=\"s89\" id=\"3466\"></span><span class=\"s28\" id=\"3467\"> </span>click on “RequiredFieldValidator”</p><p class=\"s90\"  id=\"3468\">&lt;<span  id=\"3469\">asp</span>:<span  id=\"3470\">RequiredFieldValidator </span><span  id=\"3471\">ID</span>=\"RequiredFieldValidatorName\" <span  id=\"3472\">runat</span>=\"server\" <span  id=\"3473\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"3474\">ErrorMessage</span>=\"Name Required\"&gt; &lt;/<span  id=\"3475\">asp</span>:<span  id=\"3476\">RequiredFieldValidator</span>&gt;</p><p  id=\"3477\"><br id=\"3478\"></p></li><li  id=\"3479\"><p class=\"s91\"  id=\"3480\"><span class=\"p\" id=\"3481\">RequiredFieldValidator start and end with </span>asp<span  id=\"3482\">:</span>RequiredFieldValidator tags.</p></li><li  id=\"3483\"><p  id=\"3484\">Important thing in RequiredFiledValidator is “ContorlToValidate”, here ControlToValidate is equal to “TextBoxName”. Please look carefully “TextBoxName” is the id of Input “TextBox” that we created for Name Input Data that means we are now making Input Filed Name is required Field. ErrorMessage is the message that will appear if client tries to send empty data.</p></li><li  id=\"3485\"><p  id=\"3486\">Repeat same process “RequiredFieldValidator” for Email as well.</p></li><li  id=\"3487\"><p  id=\"3488\">Add: Custom Validator:</p></li><li  id=\"3489\"><p  id=\"3490\">input field should be validate on server side. To add custom validator,</p></li><li  id=\"3491\"><p  id=\"3492\">Go to Toolbox <span class=\"s89\" id=\"3493\"></span><span class=\"s28\" id=\"3494\"> </span>Validation <span class=\"s89\" id=\"3495\"></span><span class=\"s28\" id=\"3496\"> </span>click on “CustomValidation”</p><p class=\"s90\"  id=\"3497\">&lt;<span  id=\"3498\">asp</span>:<span  id=\"3499\">CustomValidator </span><span  id=\"3500\">ID</span>=\"CustomValidatorName\" <span  id=\"3501\">runat</span>=\"server\" <span  id=\"3502\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"3503\">ErrorMessage</span>=\"Name is not Valid\" <span  id=\"3504\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span  id=\"3505\">*</span>&lt;/<span  id=\"3506\">asp</span>:<span  id=\"3507\">CustomValidator</span>&gt;</p></li><li  id=\"3508\"><p class=\"s91\"  id=\"3509\"><span class=\"p\" id=\"3510\">Custom Validator start and end with </span>asp<span  id=\"3511\">:</span>CustomValidator tags.</p></li><li  id=\"3512\"><p  id=\"3513\">controlToValidate=”TextBoxName” is we are validating Input TextBox Name.</p></li><li  id=\"3514\"><p  id=\"3515\">ErrorMessage. Message show up in Validation Summary list if input data is not valid.</p></li><li  id=\"3516\"><p class=\"s91\"  id=\"3517\"><span class=\"p\" id=\"3518\">* text or character between </span>asp<span  id=\"3519\">:</span>CustomValidator <span  id=\"3520\">start and end tags will show up where you placed </span>asp<span  id=\"3521\">:</span>CustomValidator <span  id=\"3522\">tags if Data is not Valid.</span></p></li><li  id=\"3523\"><p class=\"s92\"  id=\"3524\">Onservervalidate <span  id=\"3525\">here we specify which methods should we run or is relevant. it is linking methods called “CustomValidatorName_ServerValidate” this method must be create at code page. Explained later one.</span></p></li><li  id=\"3526\"><p class=\"s92\"  id=\"3527\">Repeat similar process for Email, street, postal code, country, city, phone, email and website.</p></li><li  id=\"3528\"><p class=\"s92\"  id=\"3529\">For references see code at next page.</p><p  id=\"3530\">VcardControl.ascx</p><p  id=\"3531\"><br id=\"3532\"></p><p class=\"s94\"  id=\"3533\">&lt;<span  id=\"3534\">form </span><span  id=\"3535\">id</span>=\"FormVcard\" <span  id=\"3536\">runat</span>=\"server\"&gt;</p><p class=\"s94\"  id=\"3537\">&lt;<span  id=\"3538\">div </span><span  id=\"3539\">class</span>=\"errorMessage\"&gt; &lt;<span  id=\"3540\">asp</span>:<span  id=\"3541\">Label </span><span  id=\"3542\">ID</span>=\"LabelNotice\" <span  id=\"3543\">runat</span>=\"server\" <span  id=\"3544\">Text</span>=\"\"&gt;&lt;/<span  id=\"3545\">asp</span>:<span  id=\"3546\">Label</span>&gt;</p><p class=\"s94\"  id=\"3547\">&lt;<span  id=\"3548\">asp</span>:<span  id=\"3549\">ValidationSummary </span><span  id=\"3550\">ID</span>=\"ValidationSummary\" <span  id=\"3551\">runat</span>=\"server\" <span  id=\"3552\">ForeColor</span>=\"#FF6666\" /&gt;&lt;/<span  id=\"3553\">div</span>&gt;</p><p class=\"s94\"  id=\"3554\">&lt;<span  id=\"3555\">table </span>&gt;</p><p class=\"s94\"  id=\"3556\">&lt;<span  id=\"3557\">tr </span><span  id=\"3558\">class</span>=\"name\"&gt;</p><p class=\"s94\"  id=\"3559\">&lt;<span  id=\"3560\">td</span>&gt; <span  id=\"3561\">Name: </span>&lt;/<span  id=\"3562\">td</span>&gt;&lt;<span  id=\"3563\">td</span>&gt;&lt;<span  id=\"3564\">asp</span>:<span  id=\"3565\">TextBox </span><span  id=\"3566\">ID</span>=\"TextBoxName\" <span  id=\"3567\">runat</span>=server&gt;&lt;/<span  id=\"3568\">asp</span>:<span  id=\"3569\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3570\">&lt;<span  id=\"3571\">asp</span>:<span  id=\"3572\">RequiredFieldValidator </span><span  id=\"3573\">ID</span>=\"RequiredFieldValidatorName\" <span  id=\"3574\">runat</span>=\"server\" <span  id=\"3575\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"3576\">ErrorMessage</span>=\"Name Required\" <span  id=\"3577\">Font-Size</span>=\"Small\"</p><p class=\"s94\"  id=\"3578\"><span  id=\"3579\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span  id=\"3580\">asp</span>:<span  id=\"3581\">RequiredFieldValidator</span>&gt;</p><p class=\"s94\"  id=\"3582\">&lt;<span  id=\"3583\">asp</span>:<span  id=\"3584\">CustomValidator </span><span  id=\"3585\">ID</span>=\"CustomValidatorName\" <span  id=\"3586\">runat</span>=\"server\" <span  id=\"3587\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"3588\">ErrorMessage</span>=\"Name is not Valid\" <span  id=\"3589\">ForeColor</span>=\"#CC0000\"</p><p class=\"s94\"  id=\"3590\"><span  id=\"3591\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span  id=\"3592\">*</span>&lt;/<span  id=\"3593\">asp</span>:<span  id=\"3594\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3595\">&lt;/<span  id=\"3596\">td</span>&gt;</p><p class=\"s94\"  id=\"3597\">&lt;/<span  id=\"3598\">tr</span>&gt;</p><p class=\"s94\"  id=\"3599\">&lt;<span  id=\"3600\">tr </span><span  id=\"3601\">class</span>=\"street\"&gt;</p><p class=\"s94\"  id=\"3602\">&lt;<span  id=\"3603\">td</span>&gt; <span  id=\"3604\">Street:</span>&lt;/<span  id=\"3605\">td</span>&gt;&lt;<span  id=\"3606\">td</span>&gt; &lt;<span  id=\"3607\">asp</span>:<span  id=\"3608\">TextBox </span><span  id=\"3609\">ID</span>=\"TextBoxStreet\" <span  id=\"3610\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3611\">asp</span>:<span  id=\"3612\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3613\">&lt;/<span  id=\"3614\">td</span>&gt;</p><p class=\"s94\"  id=\"3615\">&lt;/<span  id=\"3616\">tr</span>&gt;</p><p class=\"s94\"  id=\"3617\">&lt;<span  id=\"3618\">tr </span><span  id=\"3619\">class</span>=\"postalCode\"&gt;</p><p class=\"s94\"  id=\"3620\">&lt;<span  id=\"3621\">td</span>&gt; <span  id=\"3622\">PostalCode:</span>&lt;/<span  id=\"3623\">td</span>&gt;&lt;<span  id=\"3624\">td</span>&gt; &lt;<span  id=\"3625\">asp</span>:<span  id=\"3626\">TextBox </span><span  id=\"3627\">ID</span>=\"TextBoxPostalCode\" <span  id=\"3628\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3629\">asp</span>:<span  id=\"3630\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3631\">&lt;<span  id=\"3632\">asp</span>:<span  id=\"3633\">CustomValidator </span><span  id=\"3634\">ID</span>=\"CustomValidatorPostalCode\" <span  id=\"3635\">runat</span>=\"server\" <span  id=\"3636\">Font-Size</span>=\"Small\" <span  id=\"3637\">ErrorMessage</span>=\"Postal Code 4 digit\" <span  id=\"3638\">ControlToValidate</span>=\"TextBoxPostalCode\" <span  id=\"3639\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span  id=\"3640\">*</span>&lt;/<span  id=\"3641\">asp</span>:<span  id=\"3642\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3643\">&lt;/<span  id=\"3644\">td</span>&gt;</p><p class=\"s94\"  id=\"3645\">&lt;/<span  id=\"3646\">tr</span>&gt;</p><p class=\"s94\"  id=\"3647\">&lt;<span  id=\"3648\">tr </span><span  id=\"3649\">class</span>=\"city\"&gt;</p><p class=\"s94\"  id=\"3650\">&lt;<span  id=\"3651\">td</span>&gt; <span  id=\"3652\">City:</span>&lt;/<span  id=\"3653\">td</span>&gt;&lt;<span  id=\"3654\">td</span>&gt; &lt;<span  id=\"3655\">asp</span>:<span  id=\"3656\">TextBox </span><span  id=\"3657\">ID</span>=\"TextBoxCity\" <span  id=\"3658\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3659\">asp</span>:<span  id=\"3660\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3661\">&lt;/<span  id=\"3662\">tr</span>&gt;</p><p class=\"s94\"  id=\"3663\">&lt;<span  id=\"3664\">tr </span><span  id=\"3665\">class</span>=\"country\"&gt;</p><p class=\"s94\"  id=\"3666\">&lt;<span  id=\"3667\">td</span>&gt; <span  id=\"3668\">Country:</span>&lt;/<span  id=\"3669\">td</span>&gt;&lt;<span  id=\"3670\">td</span>&gt; &lt;<span  id=\"3671\">asp</span>:<span  id=\"3672\">TextBox </span><span  id=\"3673\">ID</span>=\"TextBoxCountry\" <span  id=\"3674\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3675\">asp</span>:<span  id=\"3676\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3677\">&lt;<span  id=\"3678\">asp</span>:<span  id=\"3679\">CustomValidator </span><span  id=\"3680\">ID</span>=\"CustomValidatorCountry\" <span  id=\"3681\">runat</span>=\"server\" <span  id=\"3682\">Font-Size</span>=\"Small\" <span  id=\"3683\">ErrorMessage</span>=\"Country Not Valid\" <span  id=\"3684\">ControlToValidate</span>=\"TextBoxCountry\"</p><p class=\"s94\"  id=\"3685\"><span  id=\"3686\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span  id=\"3687\">*</span>&lt;/<span  id=\"3688\">asp</span>:<span  id=\"3689\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3690\">&lt;/<span  id=\"3691\">td</span>&gt;</p><p class=\"s94\"  id=\"3692\">&lt;/<span  id=\"3693\">tr</span>&gt;</p><p class=\"s94\"  id=\"3694\">&lt;<span  id=\"3695\">tr </span><span  id=\"3696\">class</span>=\"phone\"&gt;</p><p class=\"s94\"  id=\"3697\">&lt;<span  id=\"3698\">td</span>&gt; <span  id=\"3699\">Phone:</span><span  id=\"3700\">&amp;nbsp; </span><span  id=\"3701\">+45</span>&lt;/<span  id=\"3702\">td</span>&gt;&lt;<span  id=\"3703\">td</span>&gt;&lt;<span  id=\"3704\">asp</span>:<span  id=\"3705\">TextBox </span><span  id=\"3706\">ID</span>=\"TextBoxPhone\" <span  id=\"3707\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3708\">asp</span>:<span  id=\"3709\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3710\">&lt;<span  id=\"3711\">asp</span>:<span  id=\"3712\">CustomValidator </span><span  id=\"3713\">ID</span>=\"CustomValidatorPhone\" <span  id=\"3714\">runat</span>=\"server\" <span  id=\"3715\">Font-Size</span>=\"Small\" <span  id=\"3716\">ErrorMessage</span>=\"Phone must be 8 digit, Without +45 \" <span  id=\"3717\">ControlToValidate</span>=\"TextBoxPhone\"</p><p class=\"s94\"  id=\"3718\"><span  id=\"3719\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span  id=\"3720\">*</span>&lt;/<span  id=\"3721\">asp</span>:<span  id=\"3722\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3723\">&lt;/<span  id=\"3724\">td</span>&gt;</p><p class=\"s94\"  id=\"3725\">&lt;/<span  id=\"3726\">tr</span>&gt;</p><p class=\"s94\"  id=\"3727\">&lt;<span  id=\"3728\">tr </span><span  id=\"3729\">class</span>=\"email\"&gt;</p><p class=\"s94\"  id=\"3730\">&lt;<span  id=\"3731\">td</span>&gt; <span  id=\"3732\">Email: </span>&lt;/<span  id=\"3733\">td</span>&gt;&lt;<span  id=\"3734\">td</span>&gt;&lt;<span  id=\"3735\">asp</span>:<span  id=\"3736\">TextBox </span><span  id=\"3737\">ID</span>=\"TextBoxEmail\" <span  id=\"3738\">runat</span>=\"server\" <span  id=\"3739\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span  id=\"3740\">asp</span>:<span  id=\"3741\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3742\">&lt;<span  id=\"3743\">asp</span>:<span  id=\"3744\">RequiredFieldValidator </span><span  id=\"3745\">ID</span>=\"RequiredFieldValidatorEmail\" <span  id=\"3746\">runat</span>=\"server\" <span  id=\"3747\">Font-Size</span>=\"Small\" <span  id=\"3748\">ErrorMessage</span>=\"Email Required\" <span  id=\"3749\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span  id=\"3750\">Email</span></p><p class=\"s94\"  id=\"3751\"><span  id=\"3752\">Required</span>&lt;/<span  id=\"3753\">asp</span>:<span  id=\"3754\">RequiredFieldValidator</span>&gt;</p><p class=\"s94\"  id=\"3755\">&lt;<span  id=\"3756\">asp</span>:<span  id=\"3757\">CustomValidator </span><span  id=\"3758\">ID</span>=\"CustomValidatorEmail\" <span  id=\"3759\">runat</span>=\"server\" <span  id=\"3760\">Font-Size</span>=\"Small\" <span  id=\"3761\">ErrorMessage</span>=\"Email Not Valid\" <span  id=\"3762\">ControlToValidate</span>=\"TextBoxEmail\" <span  id=\"3763\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span  id=\"3764\">*</span>&lt;/<span  id=\"3765\">asp</span>:<span  id=\"3766\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3767\">&lt;/<span  id=\"3768\">td</span>&gt;</p><p class=\"s94\"  id=\"3769\">&lt;/<span  id=\"3770\">tr</span>&gt;</p><p class=\"s94\"  id=\"3771\">&lt;<span  id=\"3772\">tr </span><span  id=\"3773\">class</span>=\"website\"&gt;</p><p  id=\"3774\"><br id=\"3775\"></p><p class=\"s94\"  id=\"3776\">&lt;<span  id=\"3777\">td</span>&gt; <span  id=\"3778\">WebSite:</span>&lt;/<span  id=\"3779\">td</span>&gt;&lt;<span  id=\"3780\">td</span>&gt; &lt;<span  id=\"3781\">asp</span>:<span  id=\"3782\">TextBox </span><span  id=\"3783\">ID</span>=\"TextBoxWebsite\" <span  id=\"3784\">runat</span>=\"server\"&gt;&lt;/<span  id=\"3785\">asp</span>:<span  id=\"3786\">TextBox</span>&gt;</p><p class=\"s94\"  id=\"3787\">&lt;<span  id=\"3788\">asp</span>:<span  id=\"3789\">CustomValidator </span><span  id=\"3790\">ID</span>=\"CustomValidatorWebSite\" <span  id=\"3791\">runat</span>=\"server\" <span  id=\"3792\">ErrorMessage</span>=\"Website not valid\" <span  id=\"3793\">ControlToValidate</span>=\"TextBoxWebsite\" <span  id=\"3794\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span  id=\"3795\">*</span>&lt;/<span  id=\"3796\">asp</span>:<span  id=\"3797\">CustomValidator</span>&gt;</p><p class=\"s94\"  id=\"3798\">&lt;/<span  id=\"3799\">td</span>&gt;</p><p class=\"s94\"  id=\"3800\">&lt;/<span  id=\"3801\">tr</span>&gt;</p><p class=\"s94\"  id=\"3802\">&lt;<span  id=\"3803\">tr </span><span  id=\"3804\">class</span>=\"photo\"&gt;</p><p class=\"s94\"  id=\"3805\">&lt;<span  id=\"3806\">td</span>&gt; <span  id=\"3807\">Photo:</span>&lt;/<span  id=\"3808\">td</span>&gt;&lt;<span  id=\"3809\">td</span>&gt; &lt;<span  id=\"3810\">asp</span>:<span  id=\"3811\">FileUpload </span><span  id=\"3812\">ID</span>=\"FileUploadPhoto\" <span  id=\"3813\">runat</span>=\"server\" /&gt;</p><p class=\"s94\"  id=\"3814\">&lt;/<span  id=\"3815\">td</span>&gt;</p><p class=\"s94\"  id=\"3816\">&lt;/<span  id=\"3817\">tr</span>&gt;</p><p class=\"s94\"  id=\"3818\">&lt;<span  id=\"3819\">tr </span>&gt;</p><p class=\"s94\"  id=\"3820\">&lt;<span  id=\"3821\">td</span>&gt;</p><p class=\"s94\"  id=\"3822\"><span  id=\"3823\">&amp;nbsp;</span>&lt;/<span  id=\"3824\">td</span>&gt; &lt;<span  id=\"3825\">td</span>&gt; &lt;<span  id=\"3826\">asp</span>:<span  id=\"3827\">Button </span><span  id=\"3828\">ID</span>=\"ButtonCreate\" <span  id=\"3829\">runat</span>=\"server\" <span  id=\"3830\">Text</span>=\"Create\" <span  id=\"3831\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span  id=\"3832\">td</span>&gt;</p><p class=\"s94\"  id=\"3833\">&lt;/<span  id=\"3834\">tr</span>&gt;</p><p  id=\"3835\"><br id=\"3836\"></p><p class=\"s94\"  id=\"3837\">&lt;/<span  id=\"3838\">table</span>&gt;</p><p class=\"s94\"  id=\"3839\">&lt;/<span  id=\"3840\">form</span>&gt;</p><p  id=\"3841\"><br id=\"3842\"></p><p  id=\"3843\">If you want to follow me, copy above code and paste it into your User Control Design View.</p><p  id=\"3844\">General description of “VcardControl.ascx” if you are new to ASP.NET user control</p><p  id=\"3845\"><br id=\"3846\"></p><p  id=\"3847\">Description: It start with form tags, you must include runat=”server” because we want to execute code at server side. And I added div class that used for style sheet and I used table to nicely format input fields.</p><p class=\"s90\"  id=\"3848\"><span  id=\"3849\">&lt;asp</span>:<span  id=\"3850\">Label </span><span  id=\"3851\">ID</span>=\"LabelNotice\" <span  id=\"3852\">runat</span>=\"server\" <span  id=\"3853\">Text</span>=\"\"&gt; it‟s a label that will use to show up conformation message to end users or client.</p><p  id=\"3854\"><br id=\"3855\"></p></li><li  id=\"3856\"><p class=\"s90\"  id=\"3857\">&lt;table&gt; is starting table</p></li><li  id=\"3858\"><p class=\"s90\"  id=\"3859\">&lt;tr&gt; it‟s a table row. One row contains multiple data cells so that we can use multiple &lt;td&gt; between opening and closing tags of table row &lt;tr&gt;. TD stands for “Table Data”.</p></li><li  id=\"3860\"><p class=\"s90\"  id=\"3861\">&amp;nbsp; means white space.</p></li><li  id=\"3862\"><p class=\"s90\"  id=\"3863\">Closing tags of table row, table and form tags.</p></li><li  id=\"3864\"><p class=\"s90\"  id=\"3865\">All tags contain forward slash “/” means closing tags.</p></li><li  id=\"3866\"><p class=\"s90\"  id=\"3867\">Example &lt;/tr&gt; &lt;/td&gt;, &lt;/table&gt; tags.</p></li><li  id=\"3868\"><p class=\"s92\"  id=\"3869\">Onclick is events that will executed when user clicks on Button. In our Vcard we crate button id “ButtonCreate” and called “ButtonCreat_Click” methods that is in code behind page.</p><p  id=\"3870\"><br id=\"3871\"></p><p class=\"s93\"  id=\"3872\">Code behind Page “<span class=\"p\" id=\"3873\">VcardControl.ascx.cs” page.</span></p><p  id=\"3874\"><br id=\"3875\"></p><p  id=\"3876\">To open code behind page you can double click on button. For example let‟s double click at CustomValidator for Name. It will create “<span class=\"s90\" id=\"3877\">CustomValidatorName_ServerValidate</span>” methods at code behind page and links automatically at design view for you. Or you can manually add methods to code behind page and link manually at Design view. See captured screen bellow of code behind page.</p><p  id=\"3878\"><br id=\"3879\"></p><p  id=\"3880\"><span id=\"3881\"><img width=\"616\" height=\"331\" alt=\"image\" src=\"Image_096.png\" id=\"3882\"></span></p><p  id=\"3883\"><br id=\"3884\"></p></li><li  id=\"3885\"><p  id=\"3886\">Using is used to references other namespace</p></li><li  id=\"3887\"><p class=\"s8\"  id=\"3888\">Namespace <span class=\"p\" id=\"3889\">“VCardGenerator” namespace name.</span></p></li><li  id=\"3890\"><p class=\"s8\"  id=\"3891\">Public <span class=\"p\" id=\"3892\">means public, available from outside</span></p></li><li  id=\"3893\"><p class=\"s8\"  id=\"3894\">Colon <span class=\"p\" id=\"3895\">“:” means left side of class is inherited from right side of class</span></p></li><li  id=\"3896\"><p class=\"s8\"  id=\"3897\">Partial Class<span class=\"p\" id=\"3898\">: it‟s not a single class; C# compiler will group all the partial classes together and treat as a single class.</span></p></li><li  id=\"3899\"><p class=\"s8\"  id=\"3900\">VcardControl <span class=\"p\" id=\"3901\">is name of class and it is inheritance from System.Web.Ui.Usercontrol</span></p></li><li  id=\"3902\"><p class=\"s8\"  id=\"3903\">Protected <span class=\"p\" id=\"3904\">means, member is accessible within its class and by derived classes.</span></p></li><li  id=\"3905\"><p class=\"s8\"  id=\"3906\">Void<span class=\"p\" id=\"3907\">: it means do not return anything, just execute block of code that inside open curly and close curly brackets.</span></p></li><li  id=\"3908\"><p class=\"s8\"  id=\"3909\">Page Load<span class=\"p\" id=\"3910\">: it‟s a method that executed when page load at server, All code inside Page_Load will executed automatically when page loads.</span></p></li><li  id=\"3911\"><p  id=\"3912\">Be care full you should not write your code outside open and close curly brackets of Class. You have to place your code inside open and close curly brackets of Class. In our case “VcardControl class”, otherwise C# compiler will failed.</p><p  id=\"3913\"><br id=\"3914\"></p><h3  id=\"heading3915\" class=\"heading3915\"><a name=\"bookmark56\" id=\"3916\" >CustomValidator for Name:</a></h3><div id=\"contentheading3915\" ><p  id=\"3917\">Let‟s Create CustomValidator for Name, Open Design View “VcardControl.ascx” and double click on CustomValidator that link to Name Textbox. If you follow me your code behind page should looks like this</p><p  id=\"3918\"><br id=\"3919\"></p><p  id=\"3920\"><span id=\"3921\"><img width=\"626\" height=\"120\" alt=\"image\" src=\"Image_097.png\" id=\"3922\"></span></p><p  id=\"3923\"><br id=\"3924\"></p></div></li><li  id=\"3925\"><p  id=\"3926\">Above captured screen is part of “VcardContro.ascx”</p></li><li  id=\"3927\"><p  id=\"3928\">See second line of code, its TextBox and has id “TextBoxName”</p></li><li  id=\"3929\"><p  id=\"3930\">See seventh line of code, ControlToValidate =”TextBoxName” . it means CustomValidator is linked to TextboxName.</p></li><li  id=\"3931\"><p  id=\"3932\">See last line of onservervalidate=”CustomValidatorName_ServerValidate” onservervalidate is important, in above case it‟s equal to “CustomValidator_ServerValidate”. It must be same name methods that you specify between double quote in your code behind page. Let‟s create methods “CustomValidatorName_ServerValidate”.</p><p  id=\"3933\"><br id=\"3934\"></p><p class=\"s93\"  id=\"3935\"><span  id=\"3936\">protected void </span>CustomValidatorName_ServerValidate(<span  id=\"3937\">object </span>source, <span  id=\"3938\">ServerValidateEventArgs </span>args)</p><p class=\"s93\"  id=\"3939\">{</p><p class=\"s93\"  id=\"3940\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s93\"  id=\"3941\">}</p><p  id=\"3942\"><br id=\"3943\"></p></li><li  id=\"3944\"><p  id=\"3945\">This is simple validation, here I get serverValidateEventArgs and stored in variable args.</p></li><li  id=\"3946\"><p  id=\"3947\">I called bool methods IsValid, if provided value‟s length is greater than zero it will set validate value equal to true otherwise it will set up false.</p></li><li  id=\"3948\"><p  id=\"3949\">Here I pass values to RemoveSpeicalCharacter() methods because I want to replace all special character to secure websites.</p><p  id=\"3950\"><span class=\"s97\"  id=\"3951\">RemoveSpeicalCharacter() methods</span></p><p class=\"s66\"  id=\"3952\">public string <span  id=\"3953\">RemoveSpecialCharacter(</span>string <span  id=\"3954\">input)</span></p><p class=\"s70\"  id=\"3955\">{</p><p class=\"s70\"  id=\"3956\"><span  id=\"3957\">return </span><span  id=\"3958\">Regex</span>.Replace(input, <span  id=\"3959\">\"[^0-9a-zA-Z. ]+\"</span>, <span  id=\"3960\">\"\"</span>);</p><p class=\"s70\"  id=\"3961\">}</p><p  id=\"3962\"><br id=\"3963\"></p><ul id=\"l88\"><li  id=\"3965\"><p  id=\"3966\">It is written in Regular expression.</p></li><li  id=\"3967\"><p  id=\"3968\">Regex is regular expression can be use using Regex.</p></li><li  id=\"3969\"><p  id=\"3970\">Make sure to add <span class=\"s66\" id=\"3971\">using </span><span class=\"s70\" id=\"3972\">System.Text.RegularExpression before Namespace starts.</span></p></li></ul><p class=\"s27\"  id=\"3973\">-    <span class=\"p\" id=\"3974\">RemoveSpeicalCharacter() Method take one parameter string, it removes all character but not from 0 to 9 digits, from A to Z upper and lower case characters and period.</span></p><p  id=\"3975\"><span class=\"s97\"  id=\"3976\">RemoveSpeicalCharacter() methods</span></p><p class=\"s66\"  id=\"3977\">public string <span  id=\"3978\">RemoveSpecialCharacter(</span>string <span  id=\"3979\">input)</span></p><p class=\"s70\"  id=\"3980\">{</p><p class=\"s70\"  id=\"3981\"><span  id=\"3982\">return </span><span  id=\"3983\">Regex</span>.Replace(input, <span  id=\"3984\">\"[^0-9a-zA-Z. ]+\"</span>, <span  id=\"3985\">\"\"</span>);</p><p class=\"s70\"  id=\"3986\">}</p><p  id=\"3987\"><br id=\"3988\"></p><ul id=\"l89\"><li  id=\"3990\"><p  id=\"3991\">It is written in Regular expression.</p></li><li  id=\"3992\"><p  id=\"3993\">Regex is regular expression can be use using Regex.</p></li><li  id=\"3994\"><p  id=\"3995\">Make sure to add <span class=\"s66\" id=\"3996\">using </span><span class=\"s70\" id=\"3997\">System.Text.RegularExpression before Namespace starts.</span></p></li></ul><p class=\"s27\"  id=\"3998\">-    <span class=\"p\" id=\"3999\">RemoveSpeicalCharacter() Method take one parameter string, it removes all character but not from 0 to 9 digits, from A to Z upper and lower case characters and period.</span></p><p  id=\"4000\"><span  id=\"4001\"> </span></p><h3  id=\"heading4002\" class=\"heading4002\"><a name=\"bookmark57\" id=\"4003\" >Email Validation:</a></h3></li><li  id=\"4004\"><p  id=\"4005\">Email Validation:</p></li><li  id=\"4006\"><p  id=\"4007\">I created methods ValidateEmail()<span class=\"s3\" id=\"4008\">25</span></p><p  id=\"4009\"><span class=\"s65\"  id=\"4010\">ValidateEmail </span><span class=\"s97\"  id=\"4011\">() methods:</span></p><p class=\"s66\"  id=\"4012\">public bool <span  id=\"4013\">ValidateEmail(</span>string <span  id=\"4014\">email)</span></p><p class=\"s70\"  id=\"4015\">{ <span  id=\"4016\">return </span><span  id=\"4017\">Regex</span>.IsMatch(email,</p><p class=\"s99\"  id=\"4018\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\"  id=\"4019\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span  id=\"4020\">+</span></p><p class=\"s99\"  id=\"4021\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA- Z]\\.)+[a-zA-Z]{2,6}))$\"<span  id=\"4022\">); }</span></p><p  id=\"4023\"><br id=\"4024\"></p><ul id=\"l90\"><li  id=\"4026\"><p  id=\"4027\">This method has one parameter email; here input string email is compared with pattern. Pattern is “valid email character id” + “@” + “Domain or sub Domain name”. And finally returns true if pattern is match otherwise return false.</p></li><li  id=\"4028\"><p  id=\"4029\">Example:</p><ul id=\"l91\"><li  id=\"4031\"><p class=\"s8\"  id=\"4032\">Jeevan_2np@yahoo.com <span class=\"p\" id=\"4033\">will return true</span></p></li><li  id=\"4034\"><p class=\"s8\"  id=\"4035\">Jeevan_2np.at.the.rate.yahoo.com <span class=\"p\" id=\"4036\">will return false- because “@” is missing here. Email id must contain “@” symbol</span></p></li></ul></li></ul><p  id=\"4037\"><span class=\"s65\"  id=\"4038\">ValidateEmail </span><span class=\"s97\"  id=\"4039\">() methods:</span></p><p class=\"s66\"  id=\"4040\">public bool <span  id=\"4041\">ValidateEmail(</span>string <span  id=\"4042\">email)</span></p><p class=\"s70\"  id=\"4043\">{ <span  id=\"4044\">return </span><span  id=\"4045\">Regex</span>.IsMatch(email,</p><p class=\"s99\"  id=\"4046\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\"  id=\"4047\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span  id=\"4048\">+</span></p><p class=\"s99\"  id=\"4049\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA- Z]\\.)+[a-zA-Z]{2,6}))$\"<span  id=\"4050\">); }</span></p><p  id=\"4051\"><br id=\"4052\"></p><ul id=\"l92\"><li  id=\"4054\"><p  id=\"4055\">This method has one parameter email; here input string email is compared with pattern. Pattern is “valid email character id” + “@” + “Domain or sub Domain name”. And finally returns true if pattern is match otherwise return false.</p></li><li  id=\"4056\"><p  id=\"4057\">Example:</p><ul id=\"l93\"><li  id=\"4059\"><p class=\"s8\"  id=\"4060\">Jeevan_2np@yahoo.com <span class=\"p\" id=\"4061\">will return true</span></p></li><li  id=\"4062\"><p class=\"s8\"  id=\"4063\">Jeevan_2np.at.the.rate.yahoo.com <span class=\"p\" id=\"4064\">will return false- because “@” is missing here. Email id must contain “@” symbol</span></p></li></ul></li></ul><p  id=\"4065\"><span  id=\"4066\"> </span></p></li><li  id=\"4067\"><p class=\"s93\"  id=\"4068\">Here is CustomEmailValidator Methods</p><p  id=\"4069\"><br id=\"4070\"></p><p class=\"s70\"  id=\"4071\"><span  id=\"4072\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"4073\">object </span>source, <span  id=\"4074\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"4075\">{ args.IsValid = ValidateEmail(args.Value.ToString()); }</p><p  id=\"4076\"><br id=\"4077\"></p><p class=\"s8\"  id=\"4078\">Description: <span class=\"p\" id=\"4079\">args.Value.ToString() is holding value that user typed in Email input Textbox in Browser, passing that value to ValidateEmail() method will decide whether passing value is in valid email format or not. If it is valid it will set args.IsValid = true, if it is not valid it will set args.IsValid = false;</span></p><p class=\"s70\"  id=\"4080\"><span  id=\"4081\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"4082\">object </span>source, <span  id=\"4083\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"4084\">{ args.IsValid = ValidateEmail(args.Value.ToString()); }</p><p  id=\"4085\"><br id=\"4086\"></p><p class=\"s8\"  id=\"4087\">Description: <span class=\"p\" id=\"4088\">args.Value.ToString() is holding value that user typed in Email input Textbox in Browser, passing that value to ValidateEmail() method will decide whether passing value is in valid email format or not. If it is valid it will set args.IsValid = true, if it is not valid it will set args.IsValid = false;</span></p><p  id=\"4089\"><span  id=\"4090\"> </span></p><p  id=\"4091\"><br id=\"4092\"></p><h3  id=\"heading4093\" class=\"heading4093\"><a name=\"bookmark58\" id=\"4094\" >Phone Validation:</a></h3><div id=\"contentheading4093\" ><p  id=\"4095\"><br id=\"4096\"></p><p  id=\"4097\"><span class=\"s65\"  id=\"4098\">CustomValidatorPhone_ServerValidate:</span></p><p  id=\"4099\"><br id=\"4100\"></p><p class=\"s70\"  id=\"4101\"><span  id=\"4102\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"4103\">object </span>source, <span  id=\"4104\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"4105\">{</p><p class=\"s66\"  id=\"4106\">if <span  id=\"4107\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"4108\">{</p><p class=\"s70\"  id=\"4109\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\"  id=\"4110\">}</p><p class=\"s66\"  id=\"4111\">else</p><p class=\"s70\"  id=\"4112\">{</p><p class=\"s70\"  id=\"4113\">args.IsValid = <span  id=\"4114\">true</span>;</p><p class=\"s70\"  id=\"4115\">}</p><p class=\"s70\"  id=\"4116\">}</p><p  id=\"4117\"><span class=\"s65\"  id=\"4118\">CustomValidatorPhone_ServerValidate:</span></p><p  id=\"4119\"><br id=\"4120\"></p><p class=\"s70\"  id=\"4121\"><span  id=\"4122\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"4123\">object </span>source, <span  id=\"4124\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"4125\">{</p><p class=\"s66\"  id=\"4126\">if <span  id=\"4127\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"4128\">{</p><p class=\"s70\"  id=\"4129\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\"  id=\"4130\">}</p><p class=\"s66\"  id=\"4131\">else</p><p class=\"s70\"  id=\"4132\">{</p><p class=\"s70\"  id=\"4133\">args.IsValid = <span  id=\"4134\">true</span>;</p><p class=\"s70\"  id=\"4135\">}</p><p class=\"s70\"  id=\"4136\">}</p><p  id=\"4137\"><span  id=\"4138\"> </span></p><p  id=\"4139\"><br id=\"4140\"></p><p  id=\"4141\"><br id=\"4142\"></p><p  id=\"4143\"><span id=\"4144\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_098.png\" id=\"4145\"></span></p><p class=\"s20\"  id=\"4146\">25 <a href=\"http://msdn.microsoft.com/en-us/library/01escwtf.aspx\" class=\"s11\" target=\"_blank\" id=\"4147\">Methods originally created by http://msdn.microsoft.com/en-us/library/01escwtf.aspx</a></p><p class=\"s93\"  id=\"4148\">Description: “CustomValidatorPhone_ServerValidate”</p><p  id=\"4149\"><br id=\"4150\"></p><p class=\"s93\"  id=\"4151\">First we check if user typed some value in Phone Number text box or not. If user typed some character on input text box its length must be greater than zero. If input value is great than zero, we need to validate whether it is valid phone number or not. We pass value to ValidatePhone() methods, ValidatePhone() method return true or false. If it is valid args.IsValid value is set to true, if not value is set to false.</p><p  id=\"4152\"><br id=\"4153\"></p><p class=\"s93\"  id=\"4154\">Else statement execute if input value is empty or less than zero character length. It means user do not want to provide phone number on their Vcard so that args.IsValid is set to true.</p><p  id=\"4155\"><br id=\"4156\"></p><p  id=\"4157\"><span class=\"s65\"  id=\"4158\">ValidatePhone() methods:</span></p><p class=\"s66\"  id=\"4159\">public bool <span  id=\"4160\">ValidatePhone(</span>string <span  id=\"4161\">input)</span></p><p class=\"s70\"  id=\"4162\">{</p><p class=\"s70\"  id=\"4163\"><span  id=\"4164\">if </span>(input.Length != 8) { <span  id=\"4165\">return false</span>; } <span  id=\"4166\">Regex </span>num = <span  id=\"4167\">new </span><span  id=\"4168\">Regex</span>(<span  id=\"4169\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"4170\">return <span  id=\"4171\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"4172\">}</p><p class=\"s70\"  id=\"4173\">Description:</p><p class=\"s70\"  id=\"4174\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span  id=\"4175\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\"  id=\"4176\">9 digits, it will return false because it’s not valid phone number.</p><p  id=\"4177\"><span class=\"s65\"  id=\"4178\">ValidatePhone() methods:</span></p><p class=\"s66\"  id=\"4179\">public bool <span  id=\"4180\">ValidatePhone(</span>string <span  id=\"4181\">input)</span></p><p class=\"s70\"  id=\"4182\">{</p><p class=\"s70\"  id=\"4183\"><span  id=\"4184\">if </span>(input.Length != 8) { <span  id=\"4185\">return false</span>; } <span  id=\"4186\">Regex </span>num = <span  id=\"4187\">new </span><span  id=\"4188\">Regex</span>(<span  id=\"4189\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"4190\">return <span  id=\"4191\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"4192\">}</p><p class=\"s70\"  id=\"4193\">Description:</p><p class=\"s70\"  id=\"4194\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span  id=\"4195\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\"  id=\"4196\">9 digits, it will return false because it’s not valid phone number.</p><p  id=\"4197\"><span  id=\"4198\"> </span></p><p  id=\"4199\"><br id=\"4200\"></p><p class=\"s100\"  id=\"4201\">Validation for rest of Input Fields Street, PostalCode, City, Country, and Website are listed at appendix as complete code or putting all code together “Vcardcontrol.ascx.cs” page title. Please check appendix page for more details.</p><p  id=\"4202\"><br id=\"4203\"></p><h4  id=\"4204\"><a name=\"a59\" id=\"4205\">Create Button Events.</a></h4><p  id=\"4206\"><br id=\"4207\"></p><p class=\"s93\"  id=\"4208\">End user submits data by clicking Create Button; here we have to do all processing steps. I have listed steps that need to do after end user clicks on “Create Button”.</p><p  id=\"4209\"><br id=\"4210\"></p></div></li><li  id=\"4211\"><p class=\"s93\"  id=\"4212\">Step 1: Hold or Store submitted data in a variable</p><p  id=\"4213\"><br id=\"4214\"></p></li><li  id=\"4215\"><p class=\"s93\"  id=\"4216\">Step 2: Validate and Remove special characters from submitted data</p><p  id=\"4217\"><br id=\"4218\"></p></li><li  id=\"4219\"><p class=\"s93\"  id=\"4220\">Step 3: Upload Image to server and save it in server location if user choose image files.</p><p  id=\"4221\"><br id=\"4222\"></p></li><li  id=\"4223\"><p class=\"s93\"  id=\"4224\">Step 4: Generate Vcard on the fly</p><p  id=\"4225\"><br id=\"4226\"></p></li><li  id=\"4227\"><p class=\"s93\"  id=\"4228\">Step 5: Send attach Email with Vcard</p><p  id=\"4229\"><br id=\"4230\"></p></li><li  id=\"4231\"><p class=\"s93\"  id=\"4232\">Step 6: Store data to Database for later use.</p><p  id=\"4233\"><br id=\"4234\"></p><p class=\"s93\"  id=\"4235\">Step 2 is already done for Email, Name and Phone. Rest of validation and remove special character are available at appendix page as complete code so that please check out appendix page.</p><p  id=\"4236\"><br id=\"4237\"></p><h3  id=\"heading4238\" class=\"heading4238\"><a name=\"bookmark59\" id=\"4239\" >Step 1: Hold or Store Submitted Data</a></h3><div id=\"contentheading4238\" ><p class=\"s93\"  id=\"4240\">-it‟s a very easy. See example for holding or retrieving value for Name from client side. <span  id=\"4241\">string </span>name = RemoveSpecialCharacter(TextBoxName.Text); I have created string variable name, name is equal to TextBoxName.Text, here TextBoxName is id of TextBoxName and .Text means text value from input textbox. I passed text value from input textbox to method “RemoveSpecialCharacter()” to remove special character. At the end string name will be equal to data or value that user typed in textbox other then special characters.</p><p class=\"s93\"  id=\"4242\">Repeat same process for rest of input data. See example as references.</p><p  id=\"4243\"><br id=\"4244\"></p><p  id=\"4245\"><br id=\"4246\"></p><p class=\"s66\"  id=\"4247\">string <span  id=\"4248\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"4249\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"4250\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"4251\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"4252\">string <span  id=\"4253\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"4254\">string <span  id=\"4255\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"4256\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p  id=\"4257\"><br id=\"4258\"></p><p class=\"s70\"  id=\"4259\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p class=\"s66\"  id=\"4260\">string <span  id=\"4261\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"4262\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"4263\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"4264\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"4265\">string <span  id=\"4266\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"4267\">string <span  id=\"4268\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"4269\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p  id=\"4270\"><br id=\"4271\"></p><p class=\"s70\"  id=\"4272\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p  id=\"4273\"><span  id=\"4274\"> </span></p></div><h3  id=\"heading4275\" class=\"heading4275\"><a name=\"bookmark60\" id=\"4276\" >Step 2: Validate Data</a></h3><div id=\"contentheading4275\" ><p class=\"s93\"  id=\"4277\">Double click on “Create” button, visual studio will automatically add event and open code behind page. If you follow me it must be looks like bellow</p><p  id=\"4278\"><br id=\"4279\"></p><p class=\"s93\"  id=\"4280\"><span  id=\"4281\">protected void </span>ButtonCreate_Click(<span  id=\"4282\">object </span>sender, <span  id=\"4283\">EventArgs </span>e)</p><p class=\"s93\"  id=\"4284\">{</p><p class=\"s90\"  id=\"4285\">if <span  id=\"4286\">(Page.IsValid)</span></p><p class=\"s93\"  id=\"4287\">{ // processing code goes here…….. }</p><p class=\"s93\"  id=\"4288\">}</p><p  id=\"4289\"><br id=\"4290\"></p><p class=\"s93\"  id=\"4291\">Visual studio creates ButtonCreate_Click() method events automatically. I added if(Page.IsValid) statement. It is very important to check all validation must be true, Page.IsValid will check whether page is valid or not.</p><p  id=\"4292\"><br id=\"4293\"></p><p class=\"s70\"  id=\"4294\">For example</p><p class=\"s70\"  id=\"4295\"><span  id=\"4296\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"4297\">object </span>source, <span  id=\"4298\">ServerValidateEventArgs </span>args)</p><p  id=\"4299\"><span class=\"s70\" id=\"4300\">{ </span><span class=\"s65\"  id=\"4301\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4302\">; }</span></p><p  id=\"4303\"><br id=\"4304\"></p><p class=\"s70\"  id=\"4305\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\"  id=\"4306\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span  id=\"4307\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p class=\"s70\"  id=\"4308\">For example</p><p class=\"s70\"  id=\"4309\"><span  id=\"4310\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"4311\">object </span>source, <span  id=\"4312\">ServerValidateEventArgs </span>args)</p><p  id=\"4313\"><span class=\"s70\" id=\"4314\">{ </span><span class=\"s65\"  id=\"4315\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4316\">; }</span></p><p  id=\"4317\"><br id=\"4318\"></p><p class=\"s70\"  id=\"4319\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\"  id=\"4320\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span  id=\"4321\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p  id=\"4322\"><span  id=\"4323\"> </span></p><p class=\"s93\"  id=\"4324\">If there is any validation fails or has false value, error message will show up at error summary and will not execute if(Page.IsValid) {} block of code.</p></div></li><li  id=\"4325\"><p class=\"s93\"  id=\"4326\">Note: Double back slash inside code is used to comments in c# programming language.</p><p  id=\"4327\"><br id=\"4328\"></p><h3  id=\"heading4329\" class=\"heading4329\"><a name=\"bookmark61\" id=\"4330\" >Step 3- Image Upload and Save to Server:</a></h3><div id=\"contentheading4329\" ><p class=\"s93\"  id=\"4331\">In Vcard, user is allowed to have Vcard with image, in order to generate vcard with image user should able to upload image using browse button. Add Upload Button, make Id is naming convention so upload button will be easy to recognize on code behind page. if you added Button it must look like bellow.</p><p class=\"s70\"  id=\"4332\">VcardControl.ascx</p><p class=\"s66\"  id=\"4333\">&lt;<span  id=\"4334\">asp</span>:<span  id=\"4335\">FileUpload </span><span  id=\"4336\">ID</span>=\"FileUploadPhoto\" <span  id=\"4337\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\"  id=\"4338\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p class=\"s70\"  id=\"4339\">VcardControl.ascx</p><p class=\"s66\"  id=\"4340\">&lt;<span  id=\"4341\">asp</span>:<span  id=\"4342\">FileUpload </span><span  id=\"4343\">ID</span>=\"FileUploadPhoto\" <span  id=\"4344\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\"  id=\"4345\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p  id=\"4346\"><span  id=\"4347\"> </span></p><p class=\"s93\"  id=\"4348\">In code behind page: using posted.saveas() methods, image will be uploaded to server. See code bellow as references. Your logic can be difference.</p><p  id=\"4349\"><br id=\"4350\"></p><p  id=\"4351\"><span id=\"4352\"><img width=\"598\" height=\"588\" alt=\"image\" src=\"Image_099.png\" id=\"4353\"></span></p><p class=\"s66\"  id=\"4354\">if <span  id=\"4355\">(FileUploadPhoto.PostedFile != </span>null <span  id=\"4356\">&amp;&amp; FileUploadPhoto.PostedFile.ContentLength</span></p><p class=\"s70\"  id=\"4357\">&gt; 0)</p><p class=\"s70\"  id=\"4358\">{ <span  id=\"4359\">string </span>guid = id.ToString(<span  id=\"4360\">\"N\"</span>);</p><p class=\"s70\"  id=\"4361\"><span  id=\"4362\">string </span>imageDirectory = Server.MapPath(<span  id=\"4363\">\"vcardimage\"</span>); <span  id=\"4364\">if </span>(<span  id=\"4365\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\"  id=\"4366\">{</p><p class=\"s70\"  id=\"4367\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\"  id=\"4368\">Server.MapPath(<span  id=\"4369\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"4370\">}</p><p class=\"s66\"  id=\"4371\">else</p><p class=\"s70\"  id=\"4372\">{ <span  id=\"4373\">Directory</span>.CreateDirectory(Server.MapPath(<span  id=\"4374\">\"vcardimage\"</span>));</p><p  id=\"4375\"><br id=\"4376\"></p><p class=\"s70\"  id=\"4377\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span  id=\"4378\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"4379\">}</p><p class=\"s70\"  id=\"4380\">}</p><p  id=\"4381\"><br id=\"4382\"></p><p class=\"s70\"  id=\"4383\">Description:</p><ul id=\"l94\"><li  id=\"4385\"><p class=\"s70\"  id=\"4386\">Fist we ensure that user browse or select file and Content Length of file is greater than zero that can be achieve by using FileUploadPhoto.PostedFile != <span  id=\"4387\">null (means posted files should not equal to null or empy) and </span>FileUploadPhoto.PostedFile.ContentLength &gt; 0 means length of file should be greater than zero. if file name and content length is greater than zero we go to next step.</p><p  id=\"4388\"><br id=\"4389\"></p></li><li  id=\"4390\"><p class=\"s70\"  id=\"4391\">Second: we make new guid, its unique id that system generates automatically, in theory guid is never be same or do not match each other. You may have raise questions here why do we need guid? We need because when user upload files we do not know what file name user has, if two user upload different file but same image file name and file type, system will overwride old files. To prevent from this we add extra string to file name so that file name will not be same even user upload more than one files on same name and file format.</p></li></ul></div></li></ul><p class=\"s101\"  id=\"4392\">o <span class=\"s70\" id=\"4393\">To get guid id we should call Guid id = Guid.NewGuid(); and string guid = id.ToString(\"N\"); ‚N‛ means guid will formatted without ‚-‚ symbol. By default guid looks like in that format 0000-0000-0000. Using ‚N‛ will remove ‚-‚so that guid will be in format of 123456.</span></p><ul id=\"l95\"><li  id=\"4395\"><p class=\"s70\"  id=\"4396\">Third: we check whether directory ‚vcardimage‛ exist or not. It is very important to make sure there must be directory to save files in Vcard case, all images goes insides ‚vcardimage‛ directory. You can choose different name if you like. If directory exist we save file</p><ul id=\"l96\"><li  id=\"4398\"><p class=\"s98\"  id=\"4399\">Directory<span  id=\"4400\">.Exists(directory name) will check whether passed director exist or not.</span></p></li><li  id=\"4401\"><p class=\"s70\"  id=\"4402\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\"  id=\"4403\">Server.MapPath(<span  id=\"4404\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p></li><li  id=\"4405\"><p class=\"s70\"  id=\"4406\">PostedFile.SaveAs() methods used to save posted file. Posted files means user submitted page to server by clicking buttons.</p></li><li  id=\"4407\"><p class=\"s70\"  id=\"4408\">FileUploadPhoto is id of asp:FileUpload that we created at design view or at VcardControl.ascx page</p></li></ul></li><li  id=\"4409\"><p class=\"s70\"  id=\"4410\">Forth: if director does not exist ‚else‛ statement code will be executed so we create directory first and save image after that.</p><ul id=\"l97\"><li  id=\"4412\"><p class=\"s98\"  id=\"4413\">Directory<span  id=\"4414\">.CreateDirectory(directory name) methods is used to make directory.</span></p></li></ul></li></ul><ul id=\"l98\"><li  id=\"4416\"><p class=\"s70\"  id=\"4417\">Third: we check whether directory ‚vcardimage‛ exist or not. It is very important to make sure there must be directory to save files in Vcard case, all images goes insides ‚vcardimage‛ directory. You can choose different name if you like. If directory exist we save file</p><ul id=\"l99\"><li  id=\"4419\"><p class=\"s98\"  id=\"4420\">Directory<span  id=\"4421\">.Exists(directory name) will check whether passed director exist or not.</span></p></li><li  id=\"4422\"><p class=\"s70\"  id=\"4423\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\"  id=\"4424\">Server.MapPath(<span  id=\"4425\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p></li><li  id=\"4426\"><p class=\"s70\"  id=\"4427\">PostedFile.SaveAs() methods used to save posted file. Posted files means user submitted page to server by clicking buttons.</p></li><li  id=\"4428\"><p class=\"s70\"  id=\"4429\">FileUploadPhoto is id of asp:FileUpload that we created at design view or at VcardControl.ascx page</p></li></ul></li><li  id=\"4430\"><p class=\"s70\"  id=\"4431\">Forth: if director does not exist ‚else‛ statement code will be executed so we create directory first and save image after that.</p><ul id=\"l100\"><li  id=\"4433\"><p class=\"s98\"  id=\"4434\">Directory<span  id=\"4435\">.CreateDirectory(directory name) methods is used to make directory.</span></p></li></ul></li></ul><p  id=\"4436\"><span  id=\"4437\"> </span></p><p  id=\"4438\"><br id=\"4439\"></p><p  id=\"4440\"><br id=\"4441\"></p><h3  id=\"heading4442\" class=\"heading4442\"><a name=\"bookmark62\" id=\"4443\" >Step 4: Generate Vcard:</a></h3><div id=\"contentheading4442\" ><p  id=\"4444\"><span id=\"4445\"><img width=\"606\" height=\"395\" alt=\"image\" src=\"Image_100.png\" id=\"4446\"></span></p><p  id=\"4447\">Now we have required information, validation and image. It‟s time to generate Vcard. Writing Vcard is no difference from writing file and adding text line to file. See bellow code as reference. Only difference is structure and data. If you want to know more about Vcard structure you can visit microformat official web sites at microformat.org. Also see references<span class=\"s3\" id=\"4448\">26</span>. Your idea may be difference than mine idea.</p><p  id=\"4449\"><br id=\"4450\"></p><p  id=\"4451\"><br id=\"4452\"></p><p class=\"s66\"  id=\"4453\"><span class=\"p\" id=\"4454\">Methods Name: GenerateVcard() Parameters: </span>string <span  id=\"4455\">firstName, </span>string</p><p class=\"s70\"  id=\"4456\">streetAddress, <span  id=\"4457\">string </span>zip, <span  id=\"4458\">string </span>city, <span  id=\"4459\">string </span>country, <span  id=\"4460\">string </span>email, <span  id=\"4461\">string </span>phone, <span  id=\"4462\">string </span>web and <span  id=\"4463\">string </span>image</p><p class=\"s66\"  id=\"4464\"><span class=\"p\" id=\"4465\">Methods Name: GenerateVcard() Parameters: </span>string <span  id=\"4466\">firstName, </span>string</p><p class=\"s70\"  id=\"4467\">streetAddress, <span  id=\"4468\">string </span>zip, <span  id=\"4469\">string </span>city, <span  id=\"4470\">string </span>country, <span  id=\"4471\">string </span>email, <span  id=\"4472\">string </span>phone, <span  id=\"4473\">string </span>web and <span  id=\"4474\">string </span>image</p><p  id=\"4475\"></p><p  id=\"4476\"><br id=\"4477\"></p><p class=\"s70\"  id=\"4478\">Code:</p><p class=\"s66\"  id=\"4479\">var <span  id=\"4480\">vcardStringBuilder = </span>new <span  id=\"4481\">StringBuilder</span><span  id=\"4482\">();</span></p><p class=\"s70\"  id=\"4483\">vcardStringBuilder.AppendLine(<span  id=\"4484\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4485\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4486\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"4487\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"4488\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"4489\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"4490\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"4491\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"4492\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"4493\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span  id=\"4494\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\"  id=\"4495\">vcardStringBuilder.AppendLine(<span  id=\"4496\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"4497\">\":\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4498\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\"  id=\"4499\">);</p><p class=\"s70\"  id=\"4500\">vcardStringBuilder.AppendLine(<span  id=\"4501\">string</span>.Empty); vcardStringBuilder.AppendLine(<span  id=\"4502\">\"END:VCARD\"</span>);</p><p class=\"s66\"  id=\"4503\">return <span  id=\"4504\">vcardStringBuilder.ToString();</span></p><p class=\"s70\"  id=\"4505\">Code:</p><p class=\"s66\"  id=\"4506\">var <span  id=\"4507\">vcardStringBuilder = </span>new <span  id=\"4508\">StringBuilder</span><span  id=\"4509\">();</span></p><p class=\"s70\"  id=\"4510\">vcardStringBuilder.AppendLine(<span  id=\"4511\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4512\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4513\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"4514\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"4515\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"4516\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"4517\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"4518\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"4519\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"4520\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span  id=\"4521\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\"  id=\"4522\">vcardStringBuilder.AppendLine(<span  id=\"4523\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"4524\">\":\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4525\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\"  id=\"4526\">);</p><p class=\"s70\"  id=\"4527\">vcardStringBuilder.AppendLine(<span  id=\"4528\">string</span>.Empty); vcardStringBuilder.AppendLine(<span  id=\"4529\">\"END:VCARD\"</span>);</p><p class=\"s66\"  id=\"4530\">return <span  id=\"4531\">vcardStringBuilder.ToString();</span></p><p class=\"s10\"  id=\"4532\">\t</p><p  id=\"4533\"><br id=\"4534\"></p><p  id=\"4535\"><br id=\"4536\"></p><p  id=\"4537\"><span id=\"4538\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_101.png\" id=\"4539\"></span></p><p class=\"s10\"  id=\"4540\"><a href=\"http://en.wikipedia.org/wiki/VCard\"  target=\"_blank\" id=\"4541\">26 </a>http://en.wikipedia.org/wiki/VCard for vcard example</p><p  id=\"4542\"><br id=\"4543\"></p><p  id=\"4544\">Methods Name: GenerateVcard() Description:</p><ul id=\"l101\"><li  id=\"4546\"><p  id=\"4547\">Start writing with line “<span class=\"s99\" id=\"4548\">BEGIN:VCARD</span><span class=\"s70\" id=\"4549\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li  id=\"4550\"><p class=\"s70\"  id=\"4551\">I append rest of information after ‚<span  id=\"4552\">BEGIN:VCARD</span>‛ before ‚<span  id=\"4553\">END:VCARD</span><span class=\"p\" id=\"4554\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li  id=\"4555\"><p class=\"s70\"  id=\"4556\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li  id=\"4557\"><p class=\"s70\"  id=\"4558\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\"  id=\"4559\">o</p><p class=\"s70\"  id=\"4560\">{</p><p  id=\"4561\">Methods Name: GenerateVcard() Description:</p><ul id=\"l102\"><li  id=\"4563\"><p  id=\"4564\">Start writing with line “<span class=\"s99\" id=\"4565\">BEGIN:VCARD</span><span class=\"s70\" id=\"4566\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li  id=\"4567\"><p class=\"s70\"  id=\"4568\">I append rest of information after ‚<span  id=\"4569\">BEGIN:VCARD</span>‛ before ‚<span  id=\"4570\">END:VCARD</span><span class=\"p\" id=\"4571\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li  id=\"4572\"><p class=\"s70\"  id=\"4573\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li  id=\"4574\"><p class=\"s70\"  id=\"4575\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\"  id=\"4576\">o</p><p class=\"s70\"  id=\"4577\">{</p><p  id=\"4578\"></p><p class=\"s101\"  id=\"4579\">o</p><p class=\"s101\"  id=\"4580\">o</p><p  id=\"4581\"></p><p  id=\"4582\"><br id=\"4583\"></p><ul id=\"l103\"><li  id=\"4585\"><p class=\"s70\"  id=\"4586\">Make sure to specify ‚<span  id=\"4587\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\"  id=\"4588\">actual image string.</p><ul id=\"l104\"><li  id=\"4590\"><p class=\"s70\"  id=\"4591\">Here PHOTO: used to indicate Vcard contains image</p></li><li  id=\"4592\"><p class=\"s70\"  id=\"4593\">Encoding: types of encode, in our case Base64</p></li><li  id=\"4594\"><p class=\"s70\"  id=\"4595\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li  id=\"4596\"><p class=\"s70\"  id=\"4597\">Finally Vcard is return in format of String for further process.</p></li></ul><ul id=\"l105\"><li  id=\"4599\"><p class=\"s70\"  id=\"4600\">Make sure to specify ‚<span  id=\"4601\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\"  id=\"4602\">actual image string.</p><ul id=\"l106\"><li  id=\"4604\"><p class=\"s70\"  id=\"4605\">Here PHOTO: used to indicate Vcard contains image</p></li><li  id=\"4606\"><p class=\"s70\"  id=\"4607\">Encoding: types of encode, in our case Base64</p></li><li  id=\"4608\"><p class=\"s70\"  id=\"4609\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li  id=\"4610\"><p class=\"s70\"  id=\"4611\">Finally Vcard is return in format of String for further process.</p></li></ul><p  id=\"4612\"></p><p  id=\"4613\"><br id=\"4614\"></p><p  id=\"4615\"><span id=\"4616\"><img width=\"606\" height=\"362\" alt=\"image\" src=\"Image_102.png\" id=\"4617\"></span></p><p class=\"s66\"  id=\"4618\">public byte<span  id=\"4619\">[] ReadImage(</span>string <span  id=\"4620\">image)</span></p><p class=\"s66\"  id=\"4621\">return <span  id=\"4622\">File</span><span  id=\"4623\">.ReadAllBytes(image); }</span></p><p class=\"s70\"  id=\"4624\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span  id=\"4625\">Convert</span>.ToBase64String() methods.</p><p class=\"s66\"  id=\"4626\">public byte<span  id=\"4627\">[] ReadImage(</span>string <span  id=\"4628\">image)</span></p><p class=\"s66\"  id=\"4629\">return <span  id=\"4630\">File</span><span  id=\"4631\">.ReadAllBytes(image); }</span></p><p class=\"s70\"  id=\"4632\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span  id=\"4633\">Convert</span>.ToBase64String() methods.</p><p  id=\"4634\"></p></div><h3  id=\"heading4635\" class=\"heading4635\"><a name=\"bookmark63\" id=\"4636\" >Step 5: Send attach Email with Vcard</a></h3><div id=\"contentheading4635\" ><p  id=\"4637\">After generating Vcard, Vcard needs to be delivered by Email attachment. Take a look bellow code how to send email using SMTP. I use gmx<span class=\"s3\" id=\"4638\">27 </span>as an example.</p><p  id=\"4639\"><br id=\"4640\"></p><p class=\"s66\"  id=\"4641\">private void <span  id=\"4642\">SendVcard(</span>string <span  id=\"4643\">subject, </span>string <span  id=\"4644\">body, </span>string <span  id=\"4645\">email, </span>string <span  id=\"4646\">file)</span></p><p class=\"s70\"  id=\"4647\">{ <span  id=\"4648\">byte</span>[] byteArray = <span  id=\"4649\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"4650\">MemoryStream </span>stream = <span  id=\"4651\">new </span><span  id=\"4652\">MemoryStream</span>(byteArray); <span  id=\"4653\">MailMessage </span>message = <span  id=\"4654\">new </span><span  id=\"4655\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\"  id=\"4656\">message.Body = body;</p><p class=\"s70\"  id=\"4657\">message.From = <span  id=\"4658\">new </span><span  id=\"4659\">MailAddress</span>(<span  id=\"4660\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\"  id=\"4661\">SmtpClient <span  id=\"4662\">client = </span><span  id=\"4663\">new </span>SmtpClient<span  id=\"4664\">();</span></p><p class=\"s70\"  id=\"4665\"><span  id=\"4666\">Attachment </span>vcard = <span  id=\"4667\">new </span><span  id=\"4668\">Attachment</span>(stream, <span  id=\"4669\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"4670\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\"  id=\"4671\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span  id=\"4672\">new</span></p><p class=\"s70\"  id=\"4673\"><span  id=\"4674\">NetworkCredential</span>(<span  id=\"4675\">\"user id \"</span>, <span  id=\"4676\">\" password\"</span>); client.EnableSsl = <span  id=\"4677\">true</span>;</p><p class=\"s70\"  id=\"4678\">client.Send(message);</p><p class=\"s70\"  id=\"4679\">}</p><p class=\"s70\"  id=\"4680\">Sender id= replace with your sender id</p><ul id=\"l107\"><li  id=\"4682\"><p class=\"s70\"  id=\"4683\">User id = replace with real user id that has access to use SMTP service</p></li><li  id=\"4684\"><p class=\"s70\"  id=\"4685\">Password = replace with real valid password to access SMTP service</p></li><li  id=\"4686\"><p class=\"s70\"  id=\"4687\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p class=\"s66\"  id=\"4688\">private void <span  id=\"4689\">SendVcard(</span>string <span  id=\"4690\">subject, </span>string <span  id=\"4691\">body, </span>string <span  id=\"4692\">email, </span>string <span  id=\"4693\">file)</span></p><p class=\"s70\"  id=\"4694\">{ <span  id=\"4695\">byte</span>[] byteArray = <span  id=\"4696\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"4697\">MemoryStream </span>stream = <span  id=\"4698\">new </span><span  id=\"4699\">MemoryStream</span>(byteArray); <span  id=\"4700\">MailMessage </span>message = <span  id=\"4701\">new </span><span  id=\"4702\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\"  id=\"4703\">message.Body = body;</p><p class=\"s70\"  id=\"4704\">message.From = <span  id=\"4705\">new </span><span  id=\"4706\">MailAddress</span>(<span  id=\"4707\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\"  id=\"4708\">SmtpClient <span  id=\"4709\">client = </span><span  id=\"4710\">new </span>SmtpClient<span  id=\"4711\">();</span></p><p class=\"s70\"  id=\"4712\"><span  id=\"4713\">Attachment </span>vcard = <span  id=\"4714\">new </span><span  id=\"4715\">Attachment</span>(stream, <span  id=\"4716\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"4717\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\"  id=\"4718\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span  id=\"4719\">new</span></p><p class=\"s70\"  id=\"4720\"><span  id=\"4721\">NetworkCredential</span>(<span  id=\"4722\">\"user id \"</span>, <span  id=\"4723\">\" password\"</span>); client.EnableSsl = <span  id=\"4724\">true</span>;</p><p class=\"s70\"  id=\"4725\">client.Send(message);</p><p class=\"s70\"  id=\"4726\">}</p><p class=\"s70\"  id=\"4727\">Sender id= replace with your sender id</p><ul id=\"l108\"><li  id=\"4729\"><p class=\"s70\"  id=\"4730\">User id = replace with real user id that has access to use SMTP service</p></li><li  id=\"4731\"><p class=\"s70\"  id=\"4732\">Password = replace with real valid password to access SMTP service</p></li><li  id=\"4733\"><p class=\"s70\"  id=\"4734\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p  id=\"4735\"><span  id=\"4736\"> </span></p><p  id=\"4737\"><br id=\"4738\"></p><p  id=\"4739\"><span id=\"4740\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_103.png\" id=\"4741\"></span></p><p class=\"s10\"  id=\"4742\"><a href=\"http://www.gmx.com/\"  target=\"_blank\" id=\"4743\">27 </a><span  id=\"4744\">www.gmx.com </span>is free smtp provider as gmail.com, yahoo.com and hotmail.com need upgrade to use their smtp service using API.</p><p  id=\"4745\"><br id=\"4746\"></p><p  id=\"4747\">Description:</p><p  id=\"4748\"><br id=\"4749\"></p><p class=\"s66\"  id=\"4750\">Description: <span  id=\"4751\">input </span>string <span  id=\"4752\">subject, </span>string <span  id=\"4753\">body, </span>string <span  id=\"4754\">email and </span>string <span  id=\"4755\">file are parameters, required to send email.</span></p><ul id=\"l109\"><li  id=\"4757\"><p class=\"s70\"  id=\"4758\"><span  id=\"4759\">byte</span>[] byteArray = <span  id=\"4760\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l110\"><li  id=\"4762\"><p class=\"s70\"  id=\"4763\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li  id=\"4764\"><p class=\"s70\"  id=\"4765\">MemoryStream is used to write bytes into memory</p></li></ul></li><li  id=\"4766\"><p class=\"s98\"  id=\"4767\">MailMessage <span  id=\"4768\">message = </span><span  id=\"4769\">new </span>MailMessage<span  id=\"4770\">();</span></p><ul id=\"l111\"><li  id=\"4772\"><p class=\"s98\"  id=\"4773\">instantiate MailMessage</p></li><li  id=\"4774\"><p class=\"s70\"  id=\"4775\">added receiver address, subject, sender</p></li></ul></li><li  id=\"4776\"><p class=\"s70\"  id=\"4777\">using Attachment we can attach files into email</p><ul id=\"l112\"><li  id=\"4779\"><p class=\"s70\"  id=\"4780\"><span  id=\"4781\">Attachment </span>vcard = <span  id=\"4782\">new </span><span  id=\"4783\">Attachment</span>(stream, <span  id=\"4784\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li  id=\"4785\"><p class=\"s70\"  id=\"4786\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li  id=\"4787\"><p class=\"s70\"  id=\"4788\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p class=\"s66\"  id=\"4789\">Description: <span  id=\"4790\">input </span>string <span  id=\"4791\">subject, </span>string <span  id=\"4792\">body, </span>string <span  id=\"4793\">email and </span>string <span  id=\"4794\">file are parameters, required to send email.</span></p><ul id=\"l113\"><li  id=\"4796\"><p class=\"s70\"  id=\"4797\"><span  id=\"4798\">byte</span>[] byteArray = <span  id=\"4799\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l114\"><li  id=\"4801\"><p class=\"s70\"  id=\"4802\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li  id=\"4803\"><p class=\"s70\"  id=\"4804\">MemoryStream is used to write bytes into memory</p></li></ul></li><li  id=\"4805\"><p class=\"s98\"  id=\"4806\">MailMessage <span  id=\"4807\">message = </span><span  id=\"4808\">new </span>MailMessage<span  id=\"4809\">();</span></p><ul id=\"l115\"><li  id=\"4811\"><p class=\"s98\"  id=\"4812\">instantiate MailMessage</p></li><li  id=\"4813\"><p class=\"s70\"  id=\"4814\">added receiver address, subject, sender</p></li></ul></li><li  id=\"4815\"><p class=\"s70\"  id=\"4816\">using Attachment we can attach files into email</p><ul id=\"l116\"><li  id=\"4818\"><p class=\"s70\"  id=\"4819\"><span  id=\"4820\">Attachment </span>vcard = <span  id=\"4821\">new </span><span  id=\"4822\">Attachment</span>(stream, <span  id=\"4823\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li  id=\"4824\"><p class=\"s70\"  id=\"4825\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li  id=\"4826\"><p class=\"s70\"  id=\"4827\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p  id=\"4828\"><span  id=\"4829\"> </span></p><p  id=\"4830\"><br id=\"4831\"></p><p  id=\"4832\">Here Vcard is sent to Email address, it make sure that email address should be valid and right person, but it also cause user may need to check spam email.</p></div><h3  id=\"heading4833\" class=\"heading4833\"><a name=\"bookmark64\" id=\"4834\" >What if server or SMTP fails to send email?</a></h3><div id=\"contentheading4833\" ><p  id=\"4835\">Lets create option for incase SMTP fails to send email. See code bellow</p><p  id=\"4836\"><br id=\"4837\"></p><p  id=\"4838\"><br id=\"4839\"></p><p class=\"s103\"  id=\"4840\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"4841\">/// <span  id=\"4842\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"4843\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"4844\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"4845\">The vcard file.</span>&lt;/param&gt; <span  id=\"4846\">public void </span><span  id=\"4847\">DownloadVcard(</span><span  id=\"4848\">byte </span><span  id=\"4849\">[] vcardFile)</span></p><p class=\"s70\"  id=\"4850\">{</p><p class=\"s70\"  id=\"4851\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"4852\">true</span>;</p><p class=\"s70\"  id=\"4853\">Response.ContentType = <span  id=\"4854\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"4855\">\"content-disposition\"</span>, <span  id=\"4856\">\"attach;filename =</span></p><p class=\"s99\"  id=\"4857\">YourVcard.vcf\"<span  id=\"4858\">);</span></p><p class=\"s70\"  id=\"4859\">Response.Charset = <span  id=\"4860\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"4861\">HttpContext<span  id=\"4862\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"4863\">}</p><p  id=\"4864\"><br id=\"4865\"></p><p class=\"s70\"  id=\"4866\">Description: I will describe very shortly.</p><ul id=\"l117\"><li  id=\"4868\"><p class=\"s70\"  id=\"4869\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li  id=\"4870\"><p class=\"s70\"  id=\"4871\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li  id=\"4872\"><p class=\"s70\"  id=\"4873\">clear any content if there is any by calling Clear() methods.</p></li><li  id=\"4874\"><p class=\"s70\"  id=\"4875\">Set buffer true</p></li><li  id=\"4876\"><p class=\"s70\"  id=\"4877\">Content type is Vcard</p></li><li  id=\"4878\"><p class=\"s70\"  id=\"4879\">Add headers and File name</p></li><li  id=\"4880\"><p class=\"s70\"  id=\"4881\">Start writing Vcard by using BinaryWriter() methods</p></li><li  id=\"4882\"><p class=\"s70\"  id=\"4883\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\"  id=\"4884\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p class=\"s103\"  id=\"4885\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"4886\">/// <span  id=\"4887\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"4888\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"4889\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"4890\">The vcard file.</span>&lt;/param&gt; <span  id=\"4891\">public void </span><span  id=\"4892\">DownloadVcard(</span><span  id=\"4893\">byte </span><span  id=\"4894\">[] vcardFile)</span></p><p class=\"s70\"  id=\"4895\">{</p><p class=\"s70\"  id=\"4896\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"4897\">true</span>;</p><p class=\"s70\"  id=\"4898\">Response.ContentType = <span  id=\"4899\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"4900\">\"content-disposition\"</span>, <span  id=\"4901\">\"attach;filename =</span></p><p class=\"s99\"  id=\"4902\">YourVcard.vcf\"<span  id=\"4903\">);</span></p><p class=\"s70\"  id=\"4904\">Response.Charset = <span  id=\"4905\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"4906\">HttpContext<span  id=\"4907\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"4908\">}</p><p  id=\"4909\"><br id=\"4910\"></p><p class=\"s70\"  id=\"4911\">Description: I will describe very shortly.</p><ul id=\"l118\"><li  id=\"4913\"><p class=\"s70\"  id=\"4914\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li  id=\"4915\"><p class=\"s70\"  id=\"4916\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li  id=\"4917\"><p class=\"s70\"  id=\"4918\">clear any content if there is any by calling Clear() methods.</p></li><li  id=\"4919\"><p class=\"s70\"  id=\"4920\">Set buffer true</p></li><li  id=\"4921\"><p class=\"s70\"  id=\"4922\">Content type is Vcard</p></li><li  id=\"4923\"><p class=\"s70\"  id=\"4924\">Add headers and File name</p></li><li  id=\"4925\"><p class=\"s70\"  id=\"4926\">Start writing Vcard by using BinaryWriter() methods</p></li><li  id=\"4927\"><p class=\"s70\"  id=\"4928\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\"  id=\"4929\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p  id=\"4930\"><span  id=\"4931\"> </span></p></div><h3  id=\"heading4932\" class=\"heading4932\"><a name=\"bookmark65\" id=\"4933\" >Step 6: Store data to Database for later use</a></h3><div id=\"contentheading4932\" ><p  id=\"4934\">In this step we will store Vcard data into Database for later use. To store data, first we need to ensure that table and fields are exits into database. Here is over view of logic how I am going to do this job done.</p><ol id=\"l119\"><li  id=\"4936\"><p  id=\"4937\">Create table and fields into Database</p><p  id=\"4938\"><br id=\"4939\"></p></li><li  id=\"4940\"><p  id=\"4941\">Check table before insert data.</p><p  id=\"4942\"><br id=\"4943\"></p></li><li  id=\"4944\"><p  id=\"4945\">Insert data into table and fields using Umbraco system Create Table and Fields into Database<span class=\"s3\" id=\"4946\">28</span></p></li></ol><p  id=\"4947\">There are many way to create table and fields into database. You may create using Sql Server Management Studio or you can create using C# code. Here I will explain sustainable way to program.</p><p  id=\"4948\"><br id=\"4949\"></p><p  id=\"4950\"><span id=\"4951\"><img width=\"617\" height=\"475\" alt=\"image\" src=\"Image_104.png\" id=\"4952\"></span></p><p class=\"s10\"  id=\"4953\">Creating Table and Fields:</p><p class=\"s78\"  id=\"4954\">string <span  id=\"4955\">queryString = </span><span  id=\"4956\">@\" CREATE TABLE [vcardimage](</span></p><p class=\"s106\"  id=\"4957\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s106\"  id=\"4958\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s106\"  id=\"4959\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"4960\">;</span></p><p class=\"s81\"  id=\"4961\">I have created queryString first. CREATE TABLE [ table name ] is used to create table. Fields are added inside open and close brackets.</p><ul id=\"l120\"><li  id=\"4963\"><p class=\"s106\"  id=\"4964\">[id] [int] IDENTITY(1,1) NOT NULL <span  id=\"4965\">means: [id] is field name, [int] short form of integer is its property, (1,1) means increase automatically by +1, NOT NULL means field id should not be null it must contains data.</span></p></li><li  id=\"4966\"><p class=\"s106\"  id=\"4967\">[name] [nvarchar] (250) NULL, [name]: field name is name, its property is nvarchar and (250) means its maximum capacity, Null means name field may be null or empty</p></li><li  id=\"4968\"><p class=\"s81\"  id=\"4969\">Street, country, phone, email, website and imageguid are similar as Name field</p></li><li  id=\"4970\"><p class=\"s81\"  id=\"4971\">postalCode and DateTime has different properties int (integer) and Datetime respectively.</p></li><li  id=\"4972\"><p class=\"s81\"  id=\"4973\">For more details check Sql query languages.</p></li></ul><p  id=\"4974\"><br id=\"4975\"></p><p  id=\"4976\"><br id=\"4977\"></p><p  id=\"4978\"><span id=\"4979\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_105.png\" id=\"4980\"></span></p><p class=\"s20\"  id=\"4981\">28 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"4982\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\"  id=\"4983\">%E2%80%93-comments</p><p class=\"s19\"  id=\"4984\">Note: Given creating table and fields example are only for MsSql database, if you using MySql database code may be difference<span class=\"p\" id=\"4985\">.</span></p><p  id=\"4986\"><br id=\"4987\"></p><p  id=\"4988\">Executing queryString:</p><p class=\"s70\"  id=\"4989\">Follow the steps:</p><ul id=\"l121\"><li  id=\"4991\"><p  id=\"4992\">Create sql command object</p><ul id=\"l122\"><li  id=\"4994\"><p class=\"s98\"  id=\"4995\"><span class=\"p\" id=\"4996\">using </span>SqlCommand <span  id=\"4997\">command = </span><span  id=\"4998\">new </span>SqlCommand<span  id=\"4999\">(queryString, connection)</span></p></li><li  id=\"5000\"><p class=\"s70\"  id=\"5001\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li  id=\"5002\"><p class=\"s70\"  id=\"5003\">To reuse Umbraco connection string use folling code</p><ul id=\"l123\"><li  id=\"5005\"><p class=\"s98\"  id=\"5006\">SqlConnection <span  id=\"5007\">connection = </span><span  id=\"5008\">new </span>SqlConnection<span  id=\"5009\">(</span>GlobalSettings<span  id=\"5010\">.DbDSN);</span></p></li><li  id=\"5011\"><p class=\"s70\"  id=\"5012\">Make sure to add reference <span  id=\"5013\">using </span>umbraco before use <span  id=\"5014\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li  id=\"5015\"><p class=\"s70\"  id=\"5016\">Open database connection using connection.Open();</p></li><li  id=\"5017\"><p class=\"s70\"  id=\"5018\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li  id=\"5019\"><p class=\"s70\"  id=\"5020\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li  id=\"5021\"><p class=\"s70\"  id=\"5022\">connection.Close();</p></li><li  id=\"5023\"><p class=\"s70\"  id=\"5024\">Finally close connection by calling Close() methods.</p></li></ul><p  id=\"5025\">Executing queryString:</p><p class=\"s70\"  id=\"5026\">Follow the steps:</p><ul id=\"l124\"><li  id=\"5028\"><p  id=\"5029\">Create sql command object</p><ul id=\"l125\"><li  id=\"5031\"><p class=\"s98\"  id=\"5032\"><span class=\"p\" id=\"5033\">using </span>SqlCommand <span  id=\"5034\">command = </span><span  id=\"5035\">new </span>SqlCommand<span  id=\"5036\">(queryString, connection)</span></p></li><li  id=\"5037\"><p class=\"s70\"  id=\"5038\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li  id=\"5039\"><p class=\"s70\"  id=\"5040\">To reuse Umbraco connection string use folling code</p><ul id=\"l126\"><li  id=\"5042\"><p class=\"s98\"  id=\"5043\">SqlConnection <span  id=\"5044\">connection = </span><span  id=\"5045\">new </span>SqlConnection<span  id=\"5046\">(</span>GlobalSettings<span  id=\"5047\">.DbDSN);</span></p></li><li  id=\"5048\"><p class=\"s70\"  id=\"5049\">Make sure to add reference <span  id=\"5050\">using </span>umbraco before use <span  id=\"5051\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li  id=\"5052\"><p class=\"s70\"  id=\"5053\">Open database connection using connection.Open();</p></li><li  id=\"5054\"><p class=\"s70\"  id=\"5055\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li  id=\"5056\"><p class=\"s70\"  id=\"5057\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li  id=\"5058\"><p class=\"s70\"  id=\"5059\">connection.Close();</p></li><li  id=\"5060\"><p class=\"s70\"  id=\"5061\">Finally close connection by calling Close() methods.</p></li></ul><p  id=\"5062\"><span  id=\"5063\"> </span></p><p class=\"s93\"  id=\"5064\">Code all in one for CreateTable methods</p><p  id=\"5065\"><br id=\"5066\"></p><p  id=\"5067\"><span id=\"5068\"><img width=\"621\" height=\"478\" alt=\"image\" src=\"Image_106.png\" id=\"5069\"></span></p><p class=\"s107\"  id=\"5070\">private static bool <span  id=\"5071\">CreateTable(</span>string <span  id=\"5072\">tableName)</span></p><p class=\"s108\"  id=\"5073\">{</p><p class=\"s107\"  id=\"5074\">try</p><p class=\"s108\"  id=\"5075\">{</p><p  id=\"5076\">Never forget to put code block inside try{} catch{}.</p><p class=\"s109\"  id=\"5077\">SqlConnection <span  id=\"5078\">connection = </span><span  id=\"5079\">new </span>SqlConnection<span  id=\"5080\">(</span>GlobalSettings<span  id=\"5081\">.DbDSN);</span></p><p class=\"s107\"  id=\"5082\">string <span  id=\"5083\">queryString =</span></p><p class=\"s110\"  id=\"5084\">@\" CREATE TABLE [vcardimage](</p><p class=\"s110\"  id=\"5085\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s110\"  id=\"5086\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s110\"  id=\"5087\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"5088\">;</span></p><p  id=\"5089\"><br id=\"5090\"></p><p class=\"s109\"  id=\"5091\">SqlCommand <span  id=\"5092\">command = </span><span  id=\"5093\">new </span>SqlCommand<span  id=\"5094\">(queryString, connection);</span></p><p class=\"s108\"  id=\"5095\">connection.Open(); command.ExecuteNonQuery(); connection.Close(); <span  id=\"5096\">return true</span>;</p><p class=\"s108\"  id=\"5097\">}</p><p class=\"s107\"  id=\"5098\">catch</p><p class=\"s108\"  id=\"5099\">{</p><p class=\"s107\"  id=\"5100\">return false<span  id=\"5101\">;</span></p><p  id=\"5102\">First it will try to execute code if there is nothing wrong it will return true. It means table and fields successfully created. If there is anything wrong while executing code it will catch those errors and return false. False means table and fields did not create successfully.</p><p  id=\"5103\">Using Try {} Catch{} page does not break on yellow dead screen if something</p><p  id=\"5104\">goes wrong.</p><p class=\"s108\"  id=\"5105\">}</p><p class=\"s108\"  id=\"5106\">}</p><h4  id=\"5107\"><a name=\"a60\" id=\"5108\">Check Table exist:</a></h4><p  id=\"5109\"><br id=\"5110\"></p><p class=\"s93\"  id=\"5111\">Using Umbraco system we can easily check table name see code bellow.</p><p  id=\"5112\"><br id=\"5113\"></p><p class=\"s70\"  id=\"5114\">CheckTable() methods.</p><p class=\"s66\"  id=\"5115\">private static bool <span  id=\"5116\">CheckTable(</span>string <span  id=\"5117\">tableName)</span></p><p class=\"s70\"  id=\"5118\">{</p><p class=\"s70\"  id=\"5119\"><span  id=\"5120\">SqlServerHelper </span>sqlHeplper = <span  id=\"5121\">new </span><span  id=\"5122\">SqlServerHelper</span>(<span  id=\"5123\">GlobalSettings</span>.DbDSN); <span  id=\"5124\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"5125\">}</p><p class=\"s70\"  id=\"5126\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p  id=\"5127\"><br id=\"5128\"></p><p class=\"s70\"  id=\"5129\">Make sure to add reference: <span  id=\"5130\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p class=\"s70\"  id=\"5131\">CheckTable() methods.</p><p class=\"s66\"  id=\"5132\">private static bool <span  id=\"5133\">CheckTable(</span>string <span  id=\"5134\">tableName)</span></p><p class=\"s70\"  id=\"5135\">{</p><p class=\"s70\"  id=\"5136\"><span  id=\"5137\">SqlServerHelper </span>sqlHeplper = <span  id=\"5138\">new </span><span  id=\"5139\">SqlServerHelper</span>(<span  id=\"5140\">GlobalSettings</span>.DbDSN); <span  id=\"5141\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"5142\">}</p><p class=\"s70\"  id=\"5143\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p  id=\"5144\"><br id=\"5145\"></p><p class=\"s70\"  id=\"5146\">Make sure to add reference: <span  id=\"5147\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p  id=\"5148\"><span  id=\"5149\"> </span></p><p  id=\"5150\"><br id=\"5151\"></p><p class=\"s93\"  id=\"5152\">Intert Data:</p><p  id=\"5153\"><br id=\"5154\"></p><p class=\"s93\"  id=\"5155\">database. see code bellow.</p><p class=\"s93\"  id=\"5156\">database. see code bellow.</p><p  id=\"5157\"></p><p  id=\"5158\"><span id=\"5159\"><img width=\"628\" height=\"517\" alt=\"image\" src=\"Image_107.png\" id=\"5160\"></span></p><p class=\"s70\"  id=\"5161\">InsertTable() Methods:</p><p  id=\"5162\"><br id=\"5163\"></p><p class=\"s66\"  id=\"5164\">public static bool <span  id=\"5165\">InsertTable(</span>string <span  id=\"5166\">name, </span>string <span  id=\"5167\">street, </span>string <span  id=\"5168\">postalcode, </span>string <span  id=\"5169\">country, </span>string <span  id=\"5170\">phone, </span>string <span  id=\"5171\">email, </span>string <span  id=\"5172\">website, </span>string <span  id=\"5173\">imageguid)</span></p><p class=\"s70\"  id=\"5174\">{</p><p class=\"s70\"  id=\"5175\"><span  id=\"5176\">string </span>tableName = <span  id=\"5177\">\"vcardimage\"</span>; <span  id=\"5178\">try</span></p><p class=\"s70\"  id=\"5179\">{</p><p class=\"s66\"  id=\"5180\">if <span  id=\"5181\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"5182\">{CreateTable(tableName); }</p><p class=\"s98\"  id=\"5183\">ISqlHelper <span  id=\"5184\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"5185\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"5186\">@\"insert into \"<span  id=\"5187\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"5188\">+</span></p><p class=\"s99\"  id=\"5189\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"5190\">@website, @imageguid, @date);\"<span  id=\"5191\">,</span></p><p class=\"s70\"  id=\"5192\">sqlHelper.CreateParameter(<span  id=\"5193\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"5194\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"5195\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"5196\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"5197\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"5198\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"5199\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"5200\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"5201\">\"@date\"</span>, <span  id=\"5202\">DateTime</span>.Now)); <span  id=\"5203\">return true</span>;</p><p class=\"s70\"  id=\"5204\">}</p><p class=\"s70\"  id=\"5205\"><span  id=\"5206\">catch</span>(<span  id=\"5207\">Exception</span>)</p><p class=\"s70\"  id=\"5208\">{</p><p class=\"s66\"  id=\"5209\">return false<span  id=\"5210\">;</span></p><p class=\"s70\"  id=\"5211\">}</p><p  id=\"5212\"><br id=\"5213\"></p><p class=\"s70\"  id=\"5214\">}</p><p class=\"s70\"  id=\"5215\">InsertTable() Methods:</p><p  id=\"5216\"><br id=\"5217\"></p><p class=\"s66\"  id=\"5218\">public static bool <span  id=\"5219\">InsertTable(</span>string <span  id=\"5220\">name, </span>string <span  id=\"5221\">street, </span>string <span  id=\"5222\">postalcode, </span>string <span  id=\"5223\">country, </span>string <span  id=\"5224\">phone, </span>string <span  id=\"5225\">email, </span>string <span  id=\"5226\">website, </span>string <span  id=\"5227\">imageguid)</span></p><p class=\"s70\"  id=\"5228\">{</p><p class=\"s70\"  id=\"5229\"><span  id=\"5230\">string </span>tableName = <span  id=\"5231\">\"vcardimage\"</span>; <span  id=\"5232\">try</span></p><p class=\"s70\"  id=\"5233\">{</p><p class=\"s66\"  id=\"5234\">if <span  id=\"5235\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"5236\">{CreateTable(tableName); }</p><p class=\"s98\"  id=\"5237\">ISqlHelper <span  id=\"5238\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"5239\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"5240\">@\"insert into \"<span  id=\"5241\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"5242\">+</span></p><p class=\"s99\"  id=\"5243\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"5244\">@website, @imageguid, @date);\"<span  id=\"5245\">,</span></p><p class=\"s70\"  id=\"5246\">sqlHelper.CreateParameter(<span  id=\"5247\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"5248\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"5249\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"5250\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"5251\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"5252\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"5253\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"5254\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"5255\">\"@date\"</span>, <span  id=\"5256\">DateTime</span>.Now)); <span  id=\"5257\">return true</span>;</p><p class=\"s70\"  id=\"5258\">}</p><p class=\"s70\"  id=\"5259\"><span  id=\"5260\">catch</span>(<span  id=\"5261\">Exception</span>)</p><p class=\"s70\"  id=\"5262\">{</p><p class=\"s66\"  id=\"5263\">return false<span  id=\"5264\">;</span></p><p class=\"s70\"  id=\"5265\">}</p><p  id=\"5266\"><br id=\"5267\"></p><p class=\"s70\"  id=\"5268\">}</p><p  id=\"5269\"></p><p class=\"s93\"  id=\"5270\">If there is no table exist, we can create table using Create<span class=\"s111\" id=\"5271\">29 </span>Table() methods<span class=\"s111\" id=\"5272\">30</span>, it‟s time to insert data into</p><p  id=\"5273\"><br id=\"5274\"></p><p  id=\"5275\"><span id=\"5276\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_108.png\" id=\"5277\"></span></p><p class=\"s20\"  id=\"5278\">29 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"5279\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\"  id=\"5280\">%E2%80%93-comments</p><p class=\"s20\"  id=\"5281\">30 <span class=\"s10\" id=\"5282\">See createTable() methods on previous chapter.</span></p><p  id=\"5283\"><br id=\"5284\"></p><p  id=\"5285\">Description of <span class=\"s70\" id=\"5286\">InsertTable() Methods:</span></p><ul id=\"l127\"><li  id=\"5288\"><p class=\"s70\"  id=\"5289\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li  id=\"5290\"><p class=\"s70\"  id=\"5291\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li  id=\"5292\"><p class=\"s70\"  id=\"5293\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li  id=\"5294\"><p class=\"s70\"  id=\"5295\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li  id=\"5296\"><p class=\"s70\"  id=\"5297\">Forth if not return false. Something happen wrong.</p></li><li  id=\"5298\"><p class=\"s70\"  id=\"5299\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\"  id=\"5300\">Note: make sure to reference <span  id=\"5301\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p  id=\"5302\">Description of <span class=\"s70\" id=\"5303\">InsertTable() Methods:</span></p><ul id=\"l128\"><li  id=\"5305\"><p class=\"s70\"  id=\"5306\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li  id=\"5307\"><p class=\"s70\"  id=\"5308\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li  id=\"5309\"><p class=\"s70\"  id=\"5310\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li  id=\"5311\"><p class=\"s70\"  id=\"5312\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li  id=\"5313\"><p class=\"s70\"  id=\"5314\">Forth if not return false. Something happen wrong.</p></li><li  id=\"5315\"><p class=\"s70\"  id=\"5316\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\"  id=\"5317\">Note: make sure to reference <span  id=\"5318\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p  id=\"5319\"><span  id=\"5320\"> </span></p><p class=\"s38\"  id=\"5321\">Putting all code together.</p><p  id=\"5322\"><br id=\"5323\"></p><p  id=\"5324\"><span class=\"s112\"  id=\"5325\">VcardControl.ascx.cs</span></p><p  id=\"5326\"><span class=\"s112\"  id=\"5327\">For complete code, please visit appendix page and find page title “VcardControl.ascx.cs”.</span></p><p  id=\"5328\"><br id=\"5329\"></p></div><h3  id=\"heading5330\" class=\"heading5330\"><a name=\"bookmark66\" id=\"5331\" >Implement User Control:</a></h3><div id=\"contentheading5330\" ><p class=\"s93\"  id=\"5332\">Until now we just finish creating usercontrol in Visual studio, its time to publish visual studio project, publishing visual studio project generate different types of files but we only need two types of files. Dot (.) dll file and .ascx file. Dll and .ascx (usercontrol) files should be copied into Umbraco site. <u id=\"5333\">DLL file goes inside bin directory of Umbraco site and .ascx file goes to “Usercontrol” directory of Umbraco sites</u>. Follow the steps</p><p  id=\"5334\"><br id=\"5335\"></p><ul id=\"l129\"><li  id=\"5337\"><p class=\"s93\"  id=\"5338\">First publish visual project</p><p  id=\"5339\"><br id=\"5340\"></p></li><li  id=\"5341\"><p class=\"s93\"  id=\"5342\">To publish project go to Build <span class=\"s114\" id=\"5343\"></span><span class=\"s115\" id=\"5344\"> </span>Publish + your visual project name</p><p  id=\"5345\"><br id=\"5346\"></p></li><li  id=\"5347\"><p class=\"s93\"  id=\"5348\">In my case publish VcardGenerator</p><p  id=\"5349\"><br id=\"5350\"></p></li><li  id=\"5351\"><p class=\"s93\"  id=\"5352\">See captured screen for references</p></li></ul><p  id=\"5353\"><br id=\"5354\"></p><p  id=\"5355\"><span id=\"5356\"><img width=\"585\" height=\"266\" alt=\"image\" src=\"Image_109.png\" id=\"5357\"></span></p><p  id=\"5358\">Select “File System” from</p><p  id=\"5359\"><br id=\"5360\"></p><p class=\"s10\"  id=\"5361\">Browse desire location to publish web site, in my case VcardPublish <span class=\"p\" id=\"5362\">directory in Desktop.</span></p><p  id=\"5363\"><br id=\"5364\"></p><p class=\"s116\"  id=\"5365\">-</p><p  id=\"5366\"><br id=\"5367\"></p><p  id=\"5368\"><span id=\"5369\"><img width=\"148\" height=\"66\" alt=\"image\" src=\"Image_110.png\" id=\"5370\"></span></p><p  id=\"5371\">Press</p><p  id=\"5372\"><br id=\"5373\"></p><p  id=\"5374\"><br id=\"5375\"></p><p class=\"s93\"  id=\"5376\">Let‟s open published items director. In my case “VcardPublish” directory it must contain at least one directory “bin” and one user control “VcardControl” see “VcardPublish.jpg” and “VcardPublish.bin.jpg” image bellow</p><p  id=\"5377\"><br id=\"5378\"></p><p  id=\"5379\"><span id=\"5380\"><img width=\"560\" height=\"640\" alt=\"image\" src=\"Image_111.png\" id=\"5381\"></span></p><p class=\"s88\"  id=\"5382\">VcardPublish.jpg    </p><p class=\"s16\"  id=\"5383\">directory</p><p class=\"s16\"  id=\"5384\">I placed cms.dll,</p><p class=\"s16\"  id=\"5385\">directory</p><p class=\"s16\"  id=\"5386\">I placed cms.dll,</p><p  id=\"5387\"></p><p  id=\"5388\">VcardPublish.bin.jpg</p><p  id=\"5389\"><br id=\"5390\"></p><p  id=\"5391\"><span class=\"s117\"  id=\"5392\">VcardPublish.jpg</span></p><p class=\"s16\"  id=\"5393\">It contains</p><p  id=\"5394\"><span class=\"s117\"  id=\"5395\">VcardPublish.jpg</span></p><p class=\"s16\"  id=\"5396\">It contains</p><p  id=\"5397\"></p><p  id=\"5398\"><br id=\"5399\"></p><p class=\"s16\"  id=\"5400\">called “ref”</p><p class=\"s16\"  id=\"5401\">umbraco.dll,</p><p class=\"s16\"  id=\"5402\">called “ref”</p><p class=\"s16\"  id=\"5403\">umbraco.dll,</p><p  id=\"5404\"></p><p  id=\"5405\"><br id=\"5406\"></p><p class=\"s16\"  id=\"5407\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p  id=\"5408\"><span class=\"s117\"  id=\"5409\">VcardPublish.bin.jpg</span></p><p class=\"s16\"  id=\"5410\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\"  id=\"5411\">be copied into Umbraco directory.</p><p class=\"s16\"  id=\"5412\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p  id=\"5413\"><span class=\"s117\"  id=\"5414\">VcardPublish.bin.jpg</span></p><p class=\"s16\"  id=\"5415\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\"  id=\"5416\">be copied into Umbraco directory.</p><p  id=\"5417\"></p><p  id=\"5418\"><br id=\"5419\"></p><p  id=\"5420\"><span class=\"s118\"  id=\"5421\">UmbracoWebDirectory.jpg</span></p><p  id=\"5422\"><br id=\"5423\"></p><p  id=\"5424\"><br id=\"5425\"></p><p class=\"s93\"  id=\"5426\">- <b id=\"5427\">Asp.net User Control files should goes inside “usercontrols” directory</b></p><p  id=\"5428\"><br id=\"5429\"></p><p class=\"s100\"  id=\"5430\">- VCardGenerator.DLL file goes inside “Bin” Directory see images “<span class=\"h4\" id=\"5431\">VcardPublish.jpg”,</span></p><h4  id=\"5432\"><a name=\"a61\" id=\"5433\">“VcardPublish.bin.jpg” and “UmbracoWebDirectory.jpg”.</a></h4><p  id=\"5434\"><br id=\"5435\"></p><h3  id=\"5436\"><a name=\"bookmark67\" id=\"5437\">Create Macro to use User Control.</a></h3><p class=\"s93\"  id=\"5438\">Copying Asp.net User Control to “usercontrol” directory and relevant DLL file into “bin” directory is not enough to use User Control, using User Control to Asp.net and using User Control to Umbraco site is different. In Umbraco site we can use User Control creating associated Marco. See image “vcard.jpg”</p><p  id=\"5439\"><br id=\"5440\"></p><p  id=\"5441\"><span id=\"5442\"><img width=\"590\" height=\"384\" alt=\"image\" src=\"Image_112.png\" id=\"5443\"></span></p><p  id=\"5444\">Select</p><p  id=\"5445\"><br id=\"5446\"></p><p  id=\"5447\">Check “Use in</p><p class=\"s88\"  id=\"5448\">Vcard.jpg                 </p><p  id=\"5449\"><br id=\"5450\"></p><p  id=\"5451\"><br id=\"5452\"></p><p class=\"s93\"  id=\"5453\">I created User Control “vcard”, selected User Control “VcardControl.ascx” Umbraco automatically add directory “usercontrol” and I checked “use in Editor”. Checked in “use in editor” will make macro available to use in Content Rich text editor.</p><p  id=\"5454\"><br id=\"5455\"></p><p class=\"s93\"  id=\"5456\">Let‟s create content and insert Vcard macro in content.</p><p  id=\"5457\"><br id=\"5458\"></p><p class=\"s93\"  id=\"5459\">Open Umbraco back end also called Umbraco Back Office. Go to Section “Content” click “Create New. Choose “General Content” Document Type. Click “Description” Tab and navigate Insert Macro near insert image icon</p><p  id=\"5460\"><br id=\"5461\"></p><p  id=\"5462\"><span id=\"5463\"><img width=\"604\" height=\"218\" alt=\"image\" src=\"Image_113.png\" id=\"5464\"></span></p><p class=\"s45\"  id=\"5465\">Description <span class=\"p\" id=\"5466\">Insert Macro</span></p><p  id=\"5467\"><br id=\"5468\"></p><p  id=\"5469\">Select <b id=\"5470\">Vcard</b></p><p  id=\"5471\">from Drop down</p><p  id=\"5472\"><br id=\"5473\"></p><p  id=\"5474\">Press OK</p><p  id=\"5475\"><br id=\"5476\"></p><p class=\"s93\"  id=\"5477\">After pressing OK Button, you must see macro inserted into content; it looks like red dotted boarder line. See image bellow for reference.</p><p  id=\"5478\"><br id=\"5479\"></p><p  id=\"5480\"><span id=\"5481\"><img width=\"309\" height=\"114\" alt=\"image\" src=\"Image_114.png\" id=\"5482\"></span></p><p class=\"s119\"  id=\"5483\">Vcardcontent.jpg       </p><p class=\"s119\"  id=\"5484\">Vcardcontent.jpg       </p><p  id=\"5485\"></p><p class=\"s93\"  id=\"5486\">A macro area is highlighted. See image “vcardcontent.jpg”</p><p  id=\"5487\"><br id=\"5488\"></p><p class=\"s100\"  id=\"5489\">Lets Preview Vcard Content by clicking Preview Icon:</p><p  id=\"5490\"><br id=\"5491\"></p><p class=\"s93\"  id=\"5492\">If you are following me, preview must look like this.</p><p  id=\"5493\"><br id=\"5494\"></p><p  id=\"5495\"><span id=\"5496\"><img width=\"606\" height=\"704\" alt=\"image\" src=\"Image_115.png\" id=\"5497\"></span></p><p  id=\"5498\"><span id=\"5499\"><img width=\"277\" height=\"342\" alt=\"image\" src=\"Image_116.png\" id=\"5500\"></span></p><p  id=\"5501\">1</p><p  id=\"5502\"><br id=\"5503\"></p><p  id=\"5504\">2</p><p  id=\"5505\"><br id=\"5506\"></p><p  id=\"5507\">3 4</p><p  id=\"5508\"><br id=\"5509\"></p><p  id=\"5510\">5</p><p  id=\"5511\"><br id=\"5512\"></p><p  id=\"5513\"><br id=\"5514\"></p><p  id=\"5515\">6</p><p  id=\"5516\"><br id=\"5517\"></p><p  id=\"5518\"><br id=\"5519\"></p><p  id=\"5520\"><br id=\"5521\"></p><p  id=\"5522\"><br id=\"5523\"></p><p  id=\"5524\">7</p><p  id=\"5525\"><br id=\"5526\"></p><p  id=\"5527\">7</p><p  id=\"5528\"></p><p  id=\"5529\"><br id=\"5530\"></p><ul id=\"l130\"><li  id=\"5532\"><p class=\"s120\"  id=\"5533\">- <span class=\"s121\" id=\"5534\">107 - </span>| <span class=\"s122\" id=\"5535\">W r i t t e n B y J i v a</span></p></li></ul><ol id=\"l131\"><li  id=\"5537\"><p  id=\"5538\">Red strip: preview mode</p><p  id=\"5539\"><br id=\"5540\"></p><p class=\"s122\"  id=\"5541\">n T h a p a</p><p  id=\"5542\"><br id=\"5543\"></p><p class=\"s122\"  id=\"5544\">n T h a p a</p><p  id=\"5545\"></p></li><li  id=\"5546\"><p  id=\"5547\">Vcard navigation bar show up 3- Input text box, Image upload,</p></li></ol><p  id=\"5548\">Create button environments</p><p  id=\"5549\"><br id=\"5550\"></p><ol id=\"l132\"><li  id=\"5552\"><p  id=\"5553\">Error Summary. Press “Create” button without typing. It show up required field errors</p></li><li  id=\"5554\"><p  id=\"5555\">Name: required error message 6- Email: Required error message</p></li></ol><ol id=\"l133\"><li  id=\"5557\"><p  id=\"5558\">Validation: email validation works. I tried to input “jeevan_2np at yahoo.com” email id, which does not contain</p><p  id=\"5559\">@ character, validation is not pass, it show up error message.</p><h2  id=\"heading5560\" class=\"heading5560\"><a name=\"bookmark68\" id=\"5561\" >Extending Xslt Using .NET Class</a></h2><div id=\"contentheading5560\" ><p  id=\"5562\">In many cases Xslt may not be enough to fetch data or to process data in that case you can easily extend XSLT using .NET Class. Here I show how to use it, In Vcard website, people may interested to see recent Vcard. Name and address are fetched using .NET Class to extend XSLT.</p><p  id=\"5563\">Let‟s add Class. If you followed me, add new class in Visual studio VCardGenerator solution where we created User Controls. I choose class name “RecentVcard” and press Add. See captured screen bellow.</p><p  id=\"5564\"><br id=\"5565\"></p><p  id=\"5566\"><span id=\"5567\"><img width=\"652\" height=\"689\" alt=\"image\" src=\"Image_117.png\" id=\"5568\"></span></p><ol id=\"l134\"><li  id=\"5570\"><p  id=\"5571\">Recently added Class “RecentVcard.cs”</p></li><li  id=\"5572\"><p  id=\"5573\">I added two references, umbraco.DataLayer and Umbraco.</p></li><li  id=\"5574\"><p  id=\"5575\">Method Name</p></li></ol></div></li></ol><p class=\"s45\"  id=\"5576\">2 <span class=\"s123\" id=\"5577\">1 </span><span class=\"p\" id=\"5578\">GetVcardData().</span></p><p class=\"s27\"  id=\"5579\"><a name=\"a62\" id=\"5580\">- </a><span class=\"h4\" id=\"5581\">GetVcardData()</span></p><p class=\"s124\"  id=\"5582\">3 <b id=\"5583\">method is going to</b></p><h4  id=\"5584\">use in XSLT so that it must be public access modifier and Static method declaration<span class=\"p\" id=\"5585\">.</span></h4><p class=\"s93\"  id=\"5586\">Requirements: when you extend .NET Class you should have some basic knowledge which I did not cover here. My assumption is you already know basic things about</p><p  id=\"5587\"><br id=\"5588\"></p><ol id=\"l135\"><li  id=\"5590\"><p class=\"s93\"  id=\"5591\">Adding References, in my case I am using Umbraco system to fetch data; you need to add Umbraco.DataLayer and Umraco references in your Visual Project.</p><p  id=\"5592\"><br id=\"5593\"></p></li><li  id=\"5594\"><p class=\"s93\"  id=\"5595\">Know how to select data from MsSql and sorting data (ascending or descending)</p><p  id=\"5596\"><br id=\"5597\"></p></li><li  id=\"5598\"><p class=\"s93\"  id=\"5599\">In Vcard web Recent Vcard will be selected top 10 lists from database and should be order by latest Vcard should be at top.</p><p  id=\"5600\"><br id=\"5601\"></p></li><li  id=\"5602\"><p class=\"s93\"  id=\"5603\">Looping. You should know how to loop data using while or foreach.</p><p  id=\"5604\"><br id=\"5605\"></p></li><li  id=\"5606\"><p class=\"s93\"  id=\"5607\">Know about static methods and where to use it. If you want to use methods in XSLT it must be declear as static and public access modifier.</p></li></ol><p  id=\"5608\"><br id=\"5609\"></p><p class=\"s93\"  id=\"5610\">Code inside GetVcardData() method.</p><p  id=\"5611\"><br id=\"5612\"></p><p class=\"s93\"  id=\"5613\">I am going use ISqlHelper class provided by Umbraco to fetch data from Database, but you can fetch using asp.net way if you like. Here I show you to fetch data from Database using Umbraco. See code bellow.</p><p  id=\"5614\"><br id=\"5615\"></p><p  id=\"5616\"><span id=\"5617\"><img width=\"603\" height=\"521\" alt=\"image\" src=\"Image_118.png\" id=\"5618\"></span></p><p class=\"s66\"  id=\"5619\">public static string <span  id=\"5620\">GetVcardData()</span></p><p class=\"s70\"  id=\"5621\">{</p><p class=\"s98\"  id=\"5622\">ISqlHelper <span  id=\"5623\">getVcard = </span>DataLayerHelper<span  id=\"5624\">.CreateSqlHelper(</span>GlobalSettings<span  id=\"5625\">.DbDSN);</span></p><p class=\"s98\"  id=\"5626\">IRecordsReader <span  id=\"5627\">read = getVcard.ExecuteReader(</span><span  id=\"5628\">@\"select top 10 id, name, country</span></p><p class=\"s99\"  id=\"5629\">from vcardimage where id &gt; @id order by id desc\"<span  id=\"5630\">, getVcard.CreateParameter(</span>\"@id\"<span  id=\"5631\">, </span>\"0\"<span  id=\"5632\">));</span></p><p class=\"s70\"  id=\"5633\"><span  id=\"5634\">string </span>data = <span  id=\"5635\">\"\"</span>; <span  id=\"5636\">while </span>(read.Read())</p><p class=\"s70\"  id=\"5637\">{</p><p class=\"s70\"  id=\"5638\">data += <span  id=\"5639\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span  id=\"5640\">\"name\"</span>) +</p><p class=\"s99\"  id=\"5641\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span  id=\"5642\">+ read.GetString(</span>\"country\"<span  id=\"5643\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span  id=\"5644\">;</span></p><p class=\"s70\"  id=\"5645\">}</p><p class=\"s99\"  id=\"5646\"><span  id=\"5647\">return </span>\"&lt;ul&gt;\" <span  id=\"5648\">+ data + </span>\"&lt;/ul\"<span  id=\"5649\">;</span></p><p class=\"s70\"  id=\"5650\">}</p><p  id=\"5651\"><br id=\"5652\"></p><p class=\"s40\"  id=\"5653\">Description:</p><ul id=\"l136\"><li  id=\"5655\"><p class=\"s40\"  id=\"5656\">ISqlHelper object used to connect to database, GlobalSettings.DbDSN is use to retrieve database connection string from web.config file.</p></li><li  id=\"5657\"><p class=\"s40\"  id=\"5658\">IRecorderReader object contains method ExecuteReader(). ExecuteReater() has two parameters, first parameters is query string and second is parameters.</p></li><li  id=\"5659\"><p class=\"s40\"  id=\"5660\">‚Select to 10 id, name, country‛ means select id, name and country from table name vcardimage and order by desc (desending) order.</p></li><li  id=\"5661\"><p class=\"s40\"  id=\"5662\">I use while loop to loop data.</p></li><li  id=\"5663\"><p class=\"s40\"  id=\"5664\">By calling GetString() methods Umbraco retrieve data as</p></li></ul><p  id=\"5665\"><span id=\"5666\"><img width=\"648\" height=\"422\" alt=\"image\" src=\"Image_119.png\" id=\"5667\"></span></p><p class=\"s8\"  id=\"5668\"><span class=\"p\" id=\"5669\">If you are following me, RecentVcard class should looks like bellow, see captured screen. Now you need to publish your website. Go to </span>Build <span class=\"s89\" id=\"5670\"></span><span class=\"s28\" id=\"5671\"> </span>Publish VCardGenerator<span class=\"p\" id=\"5672\">. Select </span>Publish Method <span class=\"s89\" id=\"5673\"></span><span class=\"s28\" id=\"5674\"> </span>file System<span class=\"p\" id=\"5675\">. Select </span>Target Location <span class=\"p\" id=\"5676\">and press “</span>Publish<span class=\"p\" id=\"5677\">” button. It should generate </span>VCardControl.dll <span class=\"p\" id=\"5678\">file inside “Bin” Directory of your published directory. Copy that </span>VCardControl.dll <span class=\"p\" id=\"5679\">file to Umbraco website “</span>Bin<span class=\"p\" id=\"5680\">” Directory. If you are following me, you should already copied </span>VCardControl.dll <span class=\"p\" id=\"5681\">file into Umbraco website “</span>Bin<span class=\"p\" id=\"5682\">” Directory during User Control topics. You should replace old </span>VCardControl.dll <span class=\"p\" id=\"5683\">file with new </span>VCardControl.dll <span class=\"p\" id=\"5684\">file. We can register our </span>RecentVcard <span class=\"p\" id=\"5685\">class into Umbraco website </span>xsltExtensions.config <span class=\"p\" id=\"5686\">file.</span></p><p  id=\"5687\"><br id=\"5688\"></p><p  id=\"5689\"><br id=\"5690\"></p><p class=\"s88\"  id=\"5691\">RecentVcard     </p><p  id=\"5692\"><br id=\"5693\"></p><p class=\"s88\"  id=\"5694\">RecentVcard     </p><p  id=\"5695\"></p><p  id=\"5696\"><br id=\"5697\"></p><p  id=\"5698\">Overview of <i id=\"5699\">VCardGenerator </i>visual studio solution</p><p  id=\"5700\"><br id=\"5701\"></p><ul id=\"l137\"><li  id=\"5703\"><p  id=\"5704\">One user Control “VcardControl.ascx” use to generate Vcard</p></li><li  id=\"5705\"><p  id=\"5706\">One Class “RecentVcard.cs” use to fetch data from Database</p></li><li  id=\"5707\"><p  id=\"5708\">Added two references</p></li></ul><ol id=\"l138\"><li  id=\"5710\"><p  id=\"5711\">Umbraco.DataLayer</p><p  id=\"5712\"><br id=\"5713\"></p></li><li  id=\"5714\"><p  id=\"5715\">Umbraco</p></li></ol><p  id=\"5716\"><br id=\"5717\"></p><p  id=\"5718\">See code line 5 and 6 in RecentVcard Class.</p><h3  id=\"5719\"><a name=\"bookmark69\" id=\"5720\">Registering .NET Class on config file</a></h3><p  id=\"5721\"><i id=\"5722\">RecentVcard </i>class returns latest ten list of recent vcard from database, before to use <i id=\"5723\">RecentVcard </i>class, Umbraco requires registering first. We can use <i id=\"5724\">RecentVcard </i>class only after registering <i id=\"5725\">RecentVard </i>class into Umbraco <i id=\"5726\">xsltExtensions.config </i>file. <i id=\"5727\">xsltExtesion.config </i>file is xml file which can be found inside “config” directory in Umbraco website. Go To “config” directory and open <i id=\"5728\">xsltExtension.config </i>file. You can either use visual studio or other software program, I am using Notepad ++<span class=\"s3\" id=\"5729\">31 </span>open source software. See captured screen bellow.</p><p  id=\"5730\"><span id=\"5731\"><img width=\"644\" height=\"678\" alt=\"image\" src=\"Image_120.png\" id=\"5732\"></span></p><p  id=\"5733\"><span class=\"s125\" id=\"5734\">1 </span><span class=\"s126\"  id=\"5735\">xsltExtension.jpg</span></p><p  id=\"5736\"><br id=\"5737\"></p><p  id=\"5738\">2</p><p  id=\"5739\"><br id=\"5740\"></p><p class=\"s127\"  id=\"5741\">5                                                                     <span class=\"p\" id=\"5742\">3                 4</span></p><ol id=\"l139\"><li  id=\"5744\"><p  id=\"5745\">File location of xsltExtensions.config</p></li><li  id=\"5746\"><p  id=\"5747\">Assembly name “VcardGenerator”</p></li><li  id=\"5748\"><p  id=\"5749\">Type = first one before dot is Namespace</p></li><li  id=\"5750\"><p  id=\"5751\">Type = second after dot is Class name</p></li><li  id=\"5752\"><p  id=\"5753\">Alias : it is use in Xslt to refer assembly</p></li></ol><h4  id=\"5754\"><a name=\"a63\" id=\"5755\">Did you get confuse?</a></h4><h4  id=\"5756\">See image bellow “VCardGenerator.extension.jpg” and match number.</h4><p  id=\"5757\">Make changed in your xsltExtensions.config file as mine see image xsltExtension.jpg if you want to follow me.</p><p  id=\"5758\"><br id=\"5759\"></p><p  id=\"5760\">2</p><p  id=\"5761\"><br id=\"5762\"></p><p  id=\"5763\">3 4</p><p  id=\"5764\"><br id=\"5765\"></p><p  id=\"5766\">4</p><p  id=\"5767\"><br id=\"5768\"></p><p  id=\"5769\"><a name=\"a64\" id=\"5770\"><span class=\"s128\"  id=\"5771\">VCardGenerator.extension.jpg</span></a></p><p  id=\"5772\"><br id=\"5773\"></p><p  id=\"5774\"><span id=\"5775\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_121.png\" id=\"5776\"></span></p><p  id=\"5777\"><a href=\"http://notepad-plus-plus.org/\"  target=\"_blank\" id=\"5778\">31 </a><a href=\"http://notepad-plus-plus.org/\" class=\"s11\" target=\"_blank\" id=\"5779\">http://notepad-plus-plus.org/</a></p><p  id=\"5780\"><br id=\"5781\"></p><p  id=\"5782\"><br id=\"5783\"></p><p  id=\"5784\">After made change on xsltExtensions.config file, make sure to save changed.</p><p  id=\"5785\"><br id=\"5786\"></p><h4  id=\"5787\"><a name=\"a65\" id=\"5788\">Extending XSLT using .net Class Practice</a></h4><p  id=\"5789\"><br id=\"5790\"></p><p  id=\"5791\">We have now VCardGenerator.dll file inside “Bin” directory and we also registered our Class on “xsltExtentions.config” file. Remember alias we specified at “xsltExtensions.config” file. If you are following me, alias is “recentvcard”.</p><h4  id=\"5792\"><a name=\"a66\" id=\"5793\">Create Xslt:</a></h4><p  id=\"5794\"><br id=\"5795\"></p><p  id=\"5796\"><span id=\"5797\"><img width=\"332\" height=\"203\" alt=\"image\" src=\"Image_122.jpg\" id=\"5798\"></span></p><p  id=\"5799\">I have created new xslt for Recent Vcard, see captured screen left. Go to backend part of umbraco website, Select <span class=\"s89\" id=\"5800\"></span><span class=\"s28\" id=\"5801\"> </span>Developer <span class=\"s89\" id=\"5802\"></span><span class=\"s28\" id=\"5803\"> </span>XSLT Files <span class=\"s89\" id=\"5804\"></span><span class=\"s28\" id=\"5805\"> </span>Right Click and click on “Create”.</p><p  id=\"5806\">Filename: “ RecentVcard” Choose a Template: “Clean”</p><p  id=\"5807\">Checked: “Create Macro” by checked in Umbraco will create matching macro for us automatically,</p><p  id=\"5808\">Press <span class=\"s89\" id=\"5809\"></span><span class=\"s28\" id=\"5810\"> </span><i id=\"5811\">Create </i>Button.</p><p  id=\"5812\"><br id=\"5813\"></p><p  id=\"5814\"><span id=\"5815\"><img width=\"419\" height=\"109\" alt=\"image\" src=\"Image_123.png\" id=\"5816\"></span></p><p class=\"s8\"  id=\"5817\">Open “RecentVcard.xslt”</p><p  id=\"5818\"><br id=\"5819\"></p><p  id=\"5820\">We can registered .net class inside xsl:stylesheet, using xslns. See the captured screen right. See highlighted area on</p><p  id=\"5821\">right image, if you already worked with Xslt you may know xmlns. Xmlns is xml namespace for a document. After colon you provide namespace name, I choose “recentVcard”. You can choose different if you want. Use urn colon alias that you specified at xsltExtensions.config” see “xsltExtension.jpg” image, I my case alias is “recentvcard”. URN is Uniform Resource Name.</p><p  id=\"5822\">public static method inside .NET class can be access using xml namespace in XSLT. In RecentVcard Class has one static public methods called <i id=\"5823\">GetVcardData()</i>. To access that public method we can use namespace colon and method name. If there are any parameters, we can easily pass. See example bellow how I accessed GetVcardData() method.</p><p  id=\"5824\"><br id=\"5825\"></p><p  id=\"5826\"><br id=\"5827\"></p><p  id=\"5828\"><span id=\"5829\"><img width=\"623\" height=\"17\" alt=\"image\" src=\"Image_124.jpg\" id=\"5830\"></span></p><p  id=\"5831\"><br id=\"5832\"></p><p  id=\"5833\"><span id=\"5834\"><img width=\"638\" height=\"217\" alt=\"image\" src=\"Image_125.png\" id=\"5835\"></span></p><p  id=\"5836\">Use xml namespace Specify method after</p><p  id=\"5837\">Tips: xml namespace and methods are separated by colon</p><p  id=\"5838\">Tips: xml namespace and methods are separated by colon</p><p  id=\"5839\"></p><p  id=\"5840\">colon.</p><p  id=\"5841\">Use disable-out-escaping= “yes”. It means that do not escape special character because method GetVcardData() returns html tags, ul, li, span tags.</p><p  id=\"5842\"><br id=\"5843\"></p><p  id=\"5844\"><br id=\"5845\"></p><p  id=\"5846\"><span id=\"5847\"><img width=\"610\" height=\"431\" alt=\"image\" src=\"Image_126.jpg\" id=\"5848\"></span></p><p  id=\"5849\">Code all in one:</p><p  id=\"5850\"><br id=\"5851\"></p><p  id=\"5852\"><span class=\"s97\"  id=\"5853\">RecentVcard.xslt</span></p><p  id=\"5854\"><br id=\"5855\"></p><p  id=\"5856\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p  id=\"5857\"><span class=\"s97\"  id=\"5858\">RecentVcard.xslt</span></p><p  id=\"5859\"><br id=\"5860\"></p><p  id=\"5861\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p  id=\"5862\"><span  id=\"5863\"> </span></p><p  id=\"5864\"><br id=\"5865\"></p></div><h3  id=\"heading5866\" class=\"heading5866\"><a name=\"bookmark70\" id=\"5867\" >Modify Macro:</a></h3><div id=\"contentheading5866\" ><p  id=\"5868\">Once you have XSLT, you can insert Xslt into templates, in my case I am going to insert into Content. So we need to check “Use in editor” option. Go to <span class=\"s89\" id=\"5869\"></span>Macros <span class=\"s89\" id=\"5870\"></span><span class=\"s28\" id=\"5871\"> </span>Open “Recent Vcard” <span class=\"s89\" id=\"5872\"></span><span class=\"s28\" id=\"5873\"> </span>checked on “Use in Editor” and Remember to “S<i id=\"5874\">ave”</i>. See captured screen bellow for references.</p><p  id=\"5875\"><br id=\"5876\"></p><p  id=\"5877\"><span id=\"5878\"><img width=\"638\" height=\"535\" alt=\"image\" src=\"Image_127.png\" id=\"5879\"></span></p><p  id=\"5880\">By selecting “Use in editor” makes macro available to use in content section.</p><p  id=\"5881\"><span id=\"5882\"><img width=\"386\" height=\"271\" alt=\"image\" src=\"Image_128.jpg\" id=\"5883\"></span></p><h4  id=\"5884\"><a name=\"a67\" id=\"5885\">Create Content: “Recent Vcard”</a></h4><p  id=\"5886\"><br id=\"5887\"></p><p  id=\"5888\">Go to Content Section <span class=\"s89\" id=\"5889\"></span><span class=\"s28\" id=\"5890\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5891\"></span><span class=\"s28\" id=\"5892\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p  id=\"5893\">Go to Content Section <span class=\"s89\" id=\"5894\"></span><span class=\"s28\" id=\"5895\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5896\"></span><span class=\"s28\" id=\"5897\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p  id=\"5898\"><span  id=\"5899\"> </span></p><p  id=\"5900\"><br id=\"5901\"></p><p  id=\"5902\"><span id=\"5903\"><img width=\"634\" height=\"231\" alt=\"image\" src=\"Image_129.png\" id=\"5904\"></span></p><p  id=\"5905\">It should create Content “Recent Vcard” and visible at left side menu. Provide following information. “Content Title”: Recent Card and checked in use in Navigation so that “Recent Vcard” will show up in navigation bar</p><p  id=\"5906\"><br id=\"5907\"></p><p  id=\"5908\"><span id=\"5909\"><img width=\"648\" height=\"298\" alt=\"image\" src=\"Image_130.png\" id=\"5910\"></span></p><p  id=\"5911\">Click on Tab“Description” and Insert Macro on content area. Select Marco “Recent Vcard”, after inserting Macro “RecentVcard”. Click on Tab “Preoperties” Select Template “General Content” and Press “Save and Publish Icon”. Create few Vcard and check. It should show up on web site.</p><p  id=\"5912\"><br id=\"5913\"></p><p  id=\"5914\">Preview content by click on preview icon.</p><p  id=\"5915\"><br id=\"5916\"></p><p  id=\"5917\">If you are following me, Vcard website should look like bellow captured screen.</p><p  id=\"5918\"><br id=\"5919\"></p><p  id=\"5920\"><span id=\"5921\"><img width=\"638\" height=\"274\" alt=\"image\" src=\"Image_131.png\" id=\"5922\"></span></p><h2  id=\"heading5923\" class=\"heading5923\"><a name=\"bookmark71\" id=\"5924\" >Page not Found Error:</a></h2><div id=\"contentheading5923\" ><p  id=\"5925\">It is nice to replace default Umbraco error HTTP handler, there are many error handler 500, 404 and 403 etc. 404 error are page not found error, due to some reason, accidental file deletion, dead links and user request not existing page causes HTTP 404 errors. Umbraco handles 404 errors by showing its default error message. We can easily override 404 errors with custom page. First let‟s see Umbraco default error 404 page.</p><p  id=\"5926\"><br id=\"5927\"></p><p  id=\"5928\"><span id=\"5929\"><img width=\"638\" height=\"414\" alt=\"image\" src=\"Image_132.png\" id=\"5930\"></span></p><p  id=\"5931\">I requested not existing page /test.aspx page, which was not exist. Umbraco handle 404 error. See highlighted text, it explain well, what to do. Sometimes it may not enough so need to extra work or needs to add extra code in web.config file.</p><h3  id=\"heading5932\" class=\"heading5932\"><a name=\"bookmark72\" id=\"5933\" >Create Custom 404 error page.</a></h3><div id=\"contentheading5932\" ><p  id=\"5934\">I am creating simple 404 error page. If you want to follow me go <span class=\"s89\" id=\"5935\"></span>Content <span class=\"s89\" id=\"5936\"></span><span class=\"s28\" id=\"5937\"> </span>Right click and click on “Create”. Name: “Page not Found” and Select “General Content” Document Type. Do not check “Use in Navigation” because I don‟t want to show this page into navigation. This page should be displayed only if 404 errors occur. Go to Tab “Title” provide content title “Page Not Found”, Go to Tab “Description” and type “Requested page not found, temporarily unavailable or an out-of-date bookmark/favorite” Go to Tab “Properties” Template <span class=\"s89\" id=\"5938\"></span><span class=\"s28\" id=\"5939\"> </span>“General Content”. Finally press “Save and Publish Icon”. Hold a second on Properties tab and look id of content because Umbraco needs content id. See “pagenotfound.jpg” image as references. Each content item gets unique id. We need to specify unique id of items into umbracoSettings.config files.</p><p  id=\"5940\"><br id=\"5941\"></p><p  id=\"5942\"><span id=\"5943\"><img width=\"609\" height=\"373\" alt=\"image\" src=\"Image_133.png\" id=\"5944\"></span></p><p  id=\"5945\">pagenotfound.jpg</p><p  id=\"5946\"><br id=\"5947\"></p><p  id=\"5948\"><br id=\"5949\"></p><p  id=\"5950\">In my case node id or unique id for content “Page not found” is 1098. You may have different node or unique id</p><p  id=\"5951\"><br id=\"5952\"></p></div><h3  id=\"heading5953\" class=\"heading5953\"><a name=\"bookmark73\" id=\"5954\" >Modifying umbracoSettings.config file:</a></h3><div id=\"contentheading5953\" ><p  id=\"5955\">umbracoSettings.config file can be found inside “config” directory, open umbracoSettings.config file using notepad or other program. It‟s xml document, find</p><p  id=\"5956\">&lt;errors&gt; elements inside umbracoSettings.config. <i id=\"5957\">errors </i>element contain child <i id=\"5958\">error404 </i>element. Set its value to node id of content, in my case 1098 and Save umbracoSettings.config file. See captured screen bellow for references.</p><p  id=\"5959\"><br id=\"5960\"></p><p  id=\"5961\"><br id=\"5962\"></p><p  id=\"5963\"><span id=\"5964\"><img width=\"317\" height=\"147\" alt=\"image\" src=\"Image_134.png\" id=\"5965\"></span></p><p class=\"s10\"  id=\"5966\">Umbraco <span class=\"p\" id=\"5967\">error404.jpg</span></p><p  id=\"5968\"><br id=\"5969\"></p><p  id=\"5970\"><span id=\"5971\"><img width=\"594\" height=\"317\" alt=\"image\" src=\"Image_135.png\" id=\"5972\"></span></p><p class=\"s64\"  id=\"5973\"><span  id=\"5974\">Note: in some cases Umbraco 404 error may override by IIS (internet Information Service) or IIS may not hand over 404 error to Umbraco to handle in such case 404 error page will end up with ugly yellow dead screen page. To prevent from this we can specify by telling IIS not to handle, instead hand over all 404 error to Asp.net web site in our case Umbraco site by adding few lines of code into web.config file. Web.config file can be found in root directory of Umbraco System. Find system.webserver elements and add new element </span>&lt;<span  id=\"5975\">httpErrors </span><span  id=\"5976\">existingResponse</span>=<span  id=\"5977\">\"</span>PassThrough<span  id=\"5978\">\" </span>/&gt; <span  id=\"5979\">inside system.webserver elements. Using existingRespone= “passThrough” means IIS does not override custom errors.</span></p><p  id=\"5980\"><br id=\"5981\"></p></div></div><h2  id=\"heading5982\" class=\"heading5982\"><a name=\"bookmark74\" id=\"5983\" >Conclusion:</a></h2><div id=\"contentheading5982\" ><p  id=\"5984\"><br id=\"5985\"></p><p  id=\"5986\">Learning process is not difficult if we start from basic, every complex system begins with basic and simple structure. Here I provided basic concept of Umbraco using examples rather than theory. I use Vcard as a case to demonstrate practical examples of basic concept of Umbraco. Vcard was virtual website it does not exist on live but concept that I used in Vcard was easy to understand how to start building Umbraco website from scratch. I started to show installation of Umbraco cms, most of new developer faces many problems to install. Developing Umbraco site from empty Umbraco installation is great challenge to new developer but it‟s a way to learn Umbraco from inside, I started to build Vcard site from scratch, empty Umbraco installation. Creating DocumentType, Template and Content is core of Umbraco CMS. If you reading books from beginning without skipping chapter you should be able to understand connection between DocumentType, Template and Content. I provided information about fetching data from xml using xslt and extending xslt using</p><p  id=\"5987\">.net class provided basic concept of how to extend Umbraco. All these concepts and examples can be used for your own purpose and needs. You are familiar with how to fetch and insert data from database to Umbraco and Umbraco to Database, extending Umbraco using Xslt, user control and .net class. In last chapter I provided how to solve umbraco 404 error default page problem with custom 404 errors page in case you get errors. I also touch about security on website which will provide knowledge to secure Umbraco site even though security is not basic on Umbraco sites.</p><p  id=\"5988\"><br id=\"5989\"></p></div><h2  id=\"heading5990\" class=\"heading5990\"><a name=\"bookmark75\" id=\"5991\" >References:</a></h2><div id=\"contentheading5990\" ><p  id=\"5992\">Taken date: May-17-2011 Xslt and Xpath</p><p  id=\"5993\"><a href=\"http://www.w3schools.com/xsl/\" id=\"5994\">http://www.w3schools.com/xsl/</a></p><p  id=\"5995\"><br id=\"5996\"></p><p  id=\"5997\">Umbraco to Database and Database to Umbraco</p><p  id=\"5998\"><br id=\"5999\"></p><p  id=\"6000\">http://our.umbraco.org/forum/developers/api-questions/12248-Get-value-from-base- into-database</p><p  id=\"6001\">http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205--- comments</p><p  id=\"6002\"><a href=\"http://our.umbraco.org/wiki\" class=\"a\" target=\"_blank\" id=\"6003\">Wiki </a><a href=\"http://our.umbraco.org/wiki\" target=\"_blank\" id=\"6004\">http://our.umbraco.org/wiki</a></p><p  id=\"6005\">http://our.umbraco.org/wiki/recommendations/recommended-reading-for-net- developers</p><p  id=\"6006\"><br id=\"6007\"></p></div><h2  id=\"heading6008\" class=\"heading6008\"><a name=\"bookmark76\" id=\"6009\" >Extra files:</a></h2><div id=\"contentheading6008\" ><h3  id=\"heading6010\" class=\"heading6010\"><a name=\"bookmark77\" id=\"6011\" >Web grid.</a></h3><div id=\"contentheading6010\" ><p  id=\"6012\"><span id=\"6013\"><img width=\"599\" height=\"371\" alt=\"image\" src=\"Image_136.jpg\" id=\"6014\"></span></p><h3  id=\"6015\"><a name=\"bookmark78\" id=\"6016\">File “VcardControl.ascx”</a></h3><p  id=\"6017\"><span class=\"s65\"  id=\"6018\">&lt;%</span><span class=\"s66\" id=\"6019\">@ </span><span class=\"s67\" id=\"6020\">Control </span><span class=\"s68\" id=\"6021\">Language</span><span class=\"s66\" id=\"6022\">=\"C#\" </span><span class=\"s68\" id=\"6023\">AutoEventWireup</span><span class=\"s66\" id=\"6024\">=\"true\" </span><span class=\"s68\" id=\"6025\">CodeBehind</span><span class=\"s66\" id=\"6026\">=\"VcardControl.ascx.cs\" </span><span class=\"s68\" id=\"6027\">Inherits</span><span class=\"s66\" id=\"6028\">=\"VCardGenerator.VcardControl\" </span><span class=\"s65\"  id=\"6029\">%&gt;</span></p><p  id=\"6030\"><br id=\"6031\"></p><p class=\"s66\"  id=\"6032\">&lt;<span  id=\"6033\">form </span><span  id=\"6034\">id</span>=\"FormVcard\" <span  id=\"6035\">runat</span>=\"server\"&gt;</p><p class=\"s66\"  id=\"6036\">&lt;<span  id=\"6037\">div </span><span  id=\"6038\">class</span>=\"errorMessage\"&gt;</p><p class=\"s66\"  id=\"6039\">&lt;<span  id=\"6040\">asp</span>:<span  id=\"6041\">Label </span><span  id=\"6042\">ID</span>=\"LabelNotice\" <span  id=\"6043\">runat</span>=\"server\" <span  id=\"6044\">Text</span>=\"\"&gt;&lt;/<span  id=\"6045\">asp</span>:<span  id=\"6046\">Label</span>&gt;</p><p class=\"s66\"  id=\"6047\">&lt;<span  id=\"6048\">asp</span>:<span  id=\"6049\">ValidationSummary </span><span  id=\"6050\">ID</span>=\"ValidationSummary\" <span  id=\"6051\">runat</span>=\"server\" <span  id=\"6052\">ForeColor</span>=\"#FF6666\"</p><p class=\"s66\"  id=\"6053\">/&gt;</p><p class=\"s66\"  id=\"6054\">&lt;/<span  id=\"6055\">div</span>&gt;</p><p class=\"s66\"  id=\"6056\">&lt;<span  id=\"6057\">table </span>&gt;</p><p class=\"s66\"  id=\"6058\">&lt;<span  id=\"6059\">tr </span><span  id=\"6060\">class</span>=\"name\"&gt;</p><p class=\"s66\"  id=\"6061\">&lt;<span  id=\"6062\">td</span>&gt; <span  id=\"6063\">Name: </span>&lt;/<span  id=\"6064\">td</span>&gt;&lt;<span  id=\"6065\">td</span>&gt;&lt;<span  id=\"6066\">asp</span>:<span  id=\"6067\">TextBox </span><span  id=\"6068\">ID</span>=\"TextBoxName\" <span  id=\"6069\">runat</span>=server&gt;&lt;/<span  id=\"6070\">asp</span>:<span  id=\"6071\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6072\">&lt;<span  id=\"6073\">asp</span>:<span  id=\"6074\">RequiredFieldValidator </span><span  id=\"6075\">ID</span>=\"RequiredFieldValidatorName\" <span  id=\"6076\">runat</span>=\"server\" <span  id=\"6077\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"6078\">ErrorMessage</span>=\"Name Required\" <span  id=\"6079\">Font-</span></p><p class=\"s68\"  id=\"6080\">Size<span  id=\"6081\">=\"Small\"</span></p><p class=\"s66\"  id=\"6082\"><span  id=\"6083\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span  id=\"6084\">asp</span>:<span  id=\"6085\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\"  id=\"6086\">&lt;<span  id=\"6087\">asp</span>:<span  id=\"6088\">CustomValidator </span><span  id=\"6089\">ID</span>=\"CustomValidatorName\" <span  id=\"6090\">runat</span>=\"server\" <span  id=\"6091\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"6092\">ErrorMessage</span>=\"Name is not Valid\" <span  id=\"6093\">ForeColor</span>=\"#CC0000\"</p><p class=\"s66\"  id=\"6094\"><span  id=\"6095\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span  id=\"6096\">*</span>&lt;/<span  id=\"6097\">asp</span>:<span  id=\"6098\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6099\">&lt;/<span  id=\"6100\">td</span>&gt;</p><p class=\"s66\"  id=\"6101\">&lt;/<span  id=\"6102\">tr</span>&gt;</p><p class=\"s66\"  id=\"6103\">&lt;<span  id=\"6104\">tr </span><span  id=\"6105\">class</span>=\"street\"&gt;</p><p class=\"s66\"  id=\"6106\">&lt;<span  id=\"6107\">td</span>&gt; <span  id=\"6108\">Street:</span>&lt;/<span  id=\"6109\">td</span>&gt;&lt;<span  id=\"6110\">td</span>&gt; &lt;<span  id=\"6111\">asp</span>:<span  id=\"6112\">TextBox </span><span  id=\"6113\">ID</span>=\"TextBoxStreet\" <span  id=\"6114\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6115\">asp</span>:<span  id=\"6116\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6117\">&lt;/<span  id=\"6118\">td</span>&gt;</p><p class=\"s66\"  id=\"6119\">&lt;/<span  id=\"6120\">tr</span>&gt;</p><p class=\"s66\"  id=\"6121\">&lt;<span  id=\"6122\">tr </span><span  id=\"6123\">class</span>=\"postalCode\"&gt;</p><p class=\"s66\"  id=\"6124\">&lt;<span  id=\"6125\">td</span>&gt; <span  id=\"6126\">PostalCode:</span>&lt;/<span  id=\"6127\">td</span>&gt;&lt;<span  id=\"6128\">td</span>&gt; &lt;<span  id=\"6129\">asp</span>:<span  id=\"6130\">TextBox </span><span  id=\"6131\">ID</span>=\"TextBoxPostalCode\" <span  id=\"6132\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6133\">asp</span>:<span  id=\"6134\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6135\">&lt;<span  id=\"6136\">asp</span>:<span  id=\"6137\">CustomValidator </span><span  id=\"6138\">ID</span>=\"CustomValidatorPostalCode\" <span  id=\"6139\">runat</span>=\"server\" <span  id=\"6140\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6141\">ErrorMessage<span  id=\"6142\">=\"Postal Code 4 digit\" </span>ControlToValidate<span  id=\"6143\">=\"TextBoxPostalCode\"</span></p><p  id=\"6144\"><br id=\"6145\"></p><p class=\"s66\"  id=\"6146\"><span  id=\"6147\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span  id=\"6148\">*</span>&lt;/<span  id=\"6149\">asp</span>:<span  id=\"6150\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6151\">&lt;/<span  id=\"6152\">td</span>&gt;</p><p class=\"s66\"  id=\"6153\">&lt;/<span  id=\"6154\">tr</span>&gt;</p><p class=\"s66\"  id=\"6155\">&lt;<span  id=\"6156\">tr </span><span  id=\"6157\">class</span>=\"city\"&gt;</p><p class=\"s66\"  id=\"6158\">&lt;<span  id=\"6159\">td</span>&gt; <span  id=\"6160\">City:</span>&lt;/<span  id=\"6161\">td</span>&gt;&lt;<span  id=\"6162\">td</span>&gt; &lt;<span  id=\"6163\">asp</span>:<span  id=\"6164\">TextBox </span><span  id=\"6165\">ID</span>=\"TextBoxCity\" <span  id=\"6166\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6167\">asp</span>:<span  id=\"6168\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6169\">&lt;/<span  id=\"6170\">tr</span>&gt;</p><p class=\"s66\"  id=\"6171\">&lt;<span  id=\"6172\">tr </span><span  id=\"6173\">class</span>=\"country\"&gt;</p><p class=\"s66\"  id=\"6174\">&lt;<span  id=\"6175\">td</span>&gt; <span  id=\"6176\">Country:</span>&lt;/<span  id=\"6177\">td</span>&gt;&lt;<span  id=\"6178\">td</span>&gt; &lt;<span  id=\"6179\">asp</span>:<span  id=\"6180\">TextBox </span><span  id=\"6181\">ID</span>=\"TextBoxCountry\" <span  id=\"6182\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6183\">asp</span>:<span  id=\"6184\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6185\">&lt;<span  id=\"6186\">asp</span>:<span  id=\"6187\">CustomValidator </span><span  id=\"6188\">ID</span>=\"CustomValidatorCountry\" <span  id=\"6189\">runat</span>=\"server\" <span  id=\"6190\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6191\">ErrorMessage<span  id=\"6192\">=\"Country Not Valid\" </span>ControlToValidate<span  id=\"6193\">=\"TextBoxCountry\"</span></p><p  id=\"6194\"><br id=\"6195\"></p><p class=\"s66\"  id=\"6196\"><span  id=\"6197\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span  id=\"6198\">*</span>&lt;/<span  id=\"6199\">asp</span>:<span  id=\"6200\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6201\">&lt;/<span  id=\"6202\">td</span>&gt;</p><p class=\"s66\"  id=\"6203\">&lt;/<span  id=\"6204\">tr</span>&gt;</p><p class=\"s66\"  id=\"6205\">&lt;<span  id=\"6206\">tr </span><span  id=\"6207\">class</span>=\"phone\"&gt;</p><p class=\"s66\"  id=\"6208\">&lt;<span  id=\"6209\">td</span>&gt; <span  id=\"6210\">Phone:</span><span  id=\"6211\">&amp;nbsp; </span><span  id=\"6212\">+45</span>&lt;/<span  id=\"6213\">td</span>&gt;&lt;<span  id=\"6214\">td</span>&gt;&lt;<span  id=\"6215\">asp</span>:<span  id=\"6216\">TextBox </span><span  id=\"6217\">ID</span>=\"TextBoxPhone\" <span  id=\"6218\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6219\">asp</span>:<span  id=\"6220\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6221\">&lt;<span  id=\"6222\">asp</span>:<span  id=\"6223\">CustomValidator </span><span  id=\"6224\">ID</span>=\"CustomValidatorPhone\" <span  id=\"6225\">runat</span>=\"server\" <span  id=\"6226\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6227\">ErrorMessage<span  id=\"6228\">=\"Phone must be 8 digit, Without +45 \" </span>ControlToValidate<span  id=\"6229\">=\"TextBoxPhone\"</span></p><p  id=\"6230\"><br id=\"6231\"></p><p class=\"s66\"  id=\"6232\"><span  id=\"6233\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span  id=\"6234\">*</span>&lt;/<span  id=\"6235\">asp</span>:<span  id=\"6236\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6237\">&lt;/<span  id=\"6238\">td</span>&gt;</p><p  id=\"6239\"><br id=\"6240\"></p><p class=\"s66\"  id=\"6241\">&lt;/<span  id=\"6242\">tr</span>&gt;</p><p class=\"s66\"  id=\"6243\">&lt;<span  id=\"6244\">tr </span><span  id=\"6245\">class</span>=\"email\"&gt;</p><p class=\"s66\"  id=\"6246\">&lt;<span  id=\"6247\">td</span>&gt; <span  id=\"6248\">Email: </span>&lt;/<span  id=\"6249\">td</span>&gt;&lt;<span  id=\"6250\">td</span>&gt;&lt;<span  id=\"6251\">asp</span>:<span  id=\"6252\">TextBox </span><span  id=\"6253\">ID</span>=\"TextBoxEmail\" <span  id=\"6254\">runat</span>=\"server\" <span  id=\"6255\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span  id=\"6256\">asp</span>:<span  id=\"6257\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6258\">&lt;<span  id=\"6259\">asp</span>:<span  id=\"6260\">RequiredFieldValidator </span><span  id=\"6261\">ID</span>=\"RequiredFieldValidatorEmail\" <span  id=\"6262\">runat</span>=\"server\" <span  id=\"6263\">Font-Size</span>=\"Small\"</p><p class=\"s66\"  id=\"6264\"><span  id=\"6265\">ErrorMessage</span>=\"Email Required\" <span  id=\"6266\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span  id=\"6267\">Email Required</span>&lt;/<span  id=\"6268\">asp</span>:<span  id=\"6269\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\"  id=\"6270\">&lt;<span  id=\"6271\">asp</span>:<span  id=\"6272\">CustomValidator </span><span  id=\"6273\">ID</span>=\"CustomValidatorEmail\" <span  id=\"6274\">runat</span>=\"server\" <span  id=\"6275\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6276\">ErrorMessage<span  id=\"6277\">=\"Email Not Valid\" </span>ControlToValidate<span  id=\"6278\">=\"TextBoxEmail\"</span></p><p  id=\"6279\"><br id=\"6280\"></p><p class=\"s66\"  id=\"6281\"><span  id=\"6282\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span  id=\"6283\">*</span>&lt;/<span  id=\"6284\">asp</span>:<span  id=\"6285\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6286\">&lt;/<span  id=\"6287\">td</span>&gt;</p><p class=\"s66\"  id=\"6288\">&lt;/<span  id=\"6289\">tr</span>&gt;</p><p class=\"s66\"  id=\"6290\">&lt;<span  id=\"6291\">tr </span><span  id=\"6292\">class</span>=\"website\"&gt;</p><p class=\"s66\"  id=\"6293\">&lt;<span  id=\"6294\">td</span>&gt; <span  id=\"6295\">WebSite:</span>&lt;/<span  id=\"6296\">td</span>&gt;&lt;<span  id=\"6297\">td</span>&gt; &lt;<span  id=\"6298\">asp</span>:<span  id=\"6299\">TextBox </span><span  id=\"6300\">ID</span>=\"TextBoxWebsite\" <span  id=\"6301\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6302\">asp</span>:<span  id=\"6303\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6304\">&lt;<span  id=\"6305\">asp</span>:<span  id=\"6306\">CustomValidator </span><span  id=\"6307\">ID</span>=\"CustomValidatorWebSite\" <span  id=\"6308\">runat</span>=\"server\" <span  id=\"6309\">ErrorMessage</span>=\"Website not valid\" <span  id=\"6310\">ControlToValidate</span>=\"TextBoxWebsite\"</p><p  id=\"6311\"><br id=\"6312\"></p><p class=\"s66\"  id=\"6313\"><span  id=\"6314\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span  id=\"6315\">*</span>&lt;/<span  id=\"6316\">asp</span>:<span  id=\"6317\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6318\">&lt;/<span  id=\"6319\">td</span>&gt;</p><p class=\"s66\"  id=\"6320\">&lt;/<span  id=\"6321\">tr</span>&gt;</p><p class=\"s66\"  id=\"6322\">&lt;<span  id=\"6323\">tr </span><span  id=\"6324\">class</span>=\"photo\"&gt;</p><p class=\"s66\"  id=\"6325\">&lt;<span  id=\"6326\">td</span>&gt; <span  id=\"6327\">Photo:</span>&lt;/<span  id=\"6328\">td</span>&gt;&lt;<span  id=\"6329\">td</span>&gt; &lt;<span  id=\"6330\">asp</span>:<span  id=\"6331\">FileUpload </span><span  id=\"6332\">ID</span>=\"FileUploadPhoto\" <span  id=\"6333\">runat</span>=\"server\" /&gt;</p><p class=\"s66\"  id=\"6334\">&lt;/<span  id=\"6335\">td</span>&gt;</p><p class=\"s66\"  id=\"6336\">&lt;/<span  id=\"6337\">tr</span>&gt;</p><p class=\"s66\"  id=\"6338\">&lt;<span  id=\"6339\">tr </span>&gt;</p><p class=\"s66\"  id=\"6340\">&lt;<span  id=\"6341\">td</span>&gt;</p><p class=\"s66\"  id=\"6342\"><span  id=\"6343\">&amp;nbsp;</span>&lt;/<span  id=\"6344\">td</span>&gt; &lt;<span  id=\"6345\">td</span>&gt; &lt;<span  id=\"6346\">asp</span>:<span  id=\"6347\">Button </span><span  id=\"6348\">ID</span>=\"ButtonCreate\" <span  id=\"6349\">runat</span>=\"server\" <span  id=\"6350\">Text</span>=\"Create\"</p><p class=\"s66\"  id=\"6351\"><span  id=\"6352\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span  id=\"6353\">td</span>&gt;</p><p class=\"s66\"  id=\"6354\">&lt;/<span  id=\"6355\">tr</span>&gt;</p><p  id=\"6356\"><br id=\"6357\"></p><p class=\"s66\"  id=\"6358\">&lt;/<span  id=\"6359\">table</span>&gt;</p><p class=\"s66\"  id=\"6360\">&lt;/<span  id=\"6361\">form</span>&gt;</p><p  id=\"6362\"><a name=\"a68\" id=\"6363\"><span class=\"p\" id=\"6364\">File </span></a><span class=\"s128\"  id=\"6365\">VcardControl.ascx.cs</span></p><p  id=\"6366\"><br id=\"6367\"></p><p class=\"s66\"  id=\"6368\">using <span  id=\"6369\">System;</span></p><p class=\"s66\"  id=\"6370\">using <span  id=\"6371\">System.Collections.Generic; </span>using <span  id=\"6372\">System.Linq;</span></p><p class=\"s66\"  id=\"6373\">using <span  id=\"6374\">System.Web;</span></p><p class=\"s66\"  id=\"6375\">using <span  id=\"6376\">umbraco.DataLayer.SqlHelpers.SqlServer; </span>using <span  id=\"6377\">umbraco.DataLayer;</span></p><p class=\"s66\"  id=\"6378\">using <span  id=\"6379\">umbraco;</span></p><p class=\"s66\"  id=\"6380\">using <span  id=\"6381\">System.Data.SqlClient;</span></p><p class=\"s66\"  id=\"6382\">using <span  id=\"6383\">System.Text.RegularExpressions; </span>using <span  id=\"6384\">System.Web.UI.WebControls; </span>using <span  id=\"6385\">System.IO;</span></p><p class=\"s66\"  id=\"6386\">using <span  id=\"6387\">System.Text; </span>using <span  id=\"6388\">System.Net.Mail; </span>using <span  id=\"6389\">System.Net;</span></p><p  id=\"6390\"><br id=\"6391\"></p><p class=\"s66\"  id=\"6392\">namespace <span  id=\"6393\">VCardGenerator</span></p><p class=\"s70\"  id=\"6394\">{</p><p class=\"s98\"  id=\"6395\"><span  id=\"6396\">public partial class </span>VcardControl <span  id=\"6397\">: System.Web.UI.</span>UserControl</p><p class=\"s70\"  id=\"6398\">{</p><p class=\"s103\"  id=\"6399\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6400\">/// <span  id=\"6401\">Handles the Load event of the Page control.</span></p><p class=\"s103\"  id=\"6402\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6403\">/// &lt;param name=\"sender\"&gt;<span  id=\"6404\">The source of the event.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6405\">/// &lt;param name=\"e\"&gt;<span  id=\"6406\">The </span>&lt;see cref=\"System.EventArgs\"/&gt; <span  id=\"6407\">instance containing the event data.</span>&lt;/param&gt;</p><p class=\"s70\"  id=\"6408\"><span  id=\"6409\">protected void </span>Page_Load(<span  id=\"6410\">object </span>sender, <span  id=\"6411\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6412\">{</p><p  id=\"6413\"><br id=\"6414\"></p><p class=\"s70\"  id=\"6415\">}</p><p  id=\"6416\"><br id=\"6417\"></p><p class=\"s70\"  id=\"6418\"><span  id=\"6419\">protected void </span>ButtonCreate_Click(<span  id=\"6420\">object </span>sender, <span  id=\"6421\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6422\">{</p><p class=\"s66\"  id=\"6423\">if <span  id=\"6424\">(Page.IsValid)</span></p><p class=\"s70\"  id=\"6425\">{</p><p class=\"s70\"  id=\"6426\"><span  id=\"6427\">Guid </span>id = <span  id=\"6428\">Guid</span>.NewGuid(); <span  id=\"6429\">string </span>imgFile = <span  id=\"6430\">\"noimage\"</span>;</p><p class=\"s66\"  id=\"6431\">string <span  id=\"6432\">name = RemoveSpecialCharacter(TextBoxName.Text);</span></p><p class=\"s66\"  id=\"6433\">string <span  id=\"6434\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"6435\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"6436\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"6437\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"6438\">string <span  id=\"6439\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"6440\">string <span  id=\"6441\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"6442\">phone = RemoveSpecialCharacter(TextBoxPhone.Text); </span>if <span  id=\"6443\">(FileUploadPhoto.PostedFile != </span>null <span  id=\"6444\">&amp;&amp;</span></p><p class=\"s70\"  id=\"6445\">FileUploadPhoto.PostedFile.ContentLength &gt; 0)</p><p class=\"s70\"  id=\"6446\">{</p><p class=\"s70\"  id=\"6447\"><span  id=\"6448\">string </span>guid = id.ToString(<span  id=\"6449\">\"N\"</span>);</p><p class=\"s70\"  id=\"6450\"><span  id=\"6451\">string </span>imageDirectory = Server.MapPath(<span  id=\"6452\">\"vcardimage\"</span>); <span  id=\"6453\">if </span>(<span  id=\"6454\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\"  id=\"6455\">{</p><p class=\"s70\"  id=\"6456\">FileUploadPhoto.PostedFile.SaveAs( Server.MapPath(<span  id=\"6457\">\"/vcardimage/\" </span>+ guid +</p><p class=\"s70\"  id=\"6458\">FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"6459\">}</p><p class=\"s66\"  id=\"6460\">else</p><p class=\"s70\"  id=\"6461\">{</p><p class=\"s70\"  id=\"6462\"><span  id=\"6463\">Directory</span>.CreateDirectory(Server.MapPath(<span  id=\"6464\">\"vcardimage\"</span>));</p><p class=\"s70\"  id=\"6465\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span  id=\"6466\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"6467\">}</p><p  id=\"6468\"><br id=\"6469\"></p><p class=\"s70\"  id=\"6470\">imgFile = imageDirectory + <span  id=\"6471\">\"/\" </span>+ guid + FileUploadPhoto.FileName; SendVcard(<span  id=\"6472\">\"Your Vcard:\"</span>,</p><p class=\"s99\"  id=\"6473\">\"Your vcard is ready. Please open Attachment. \\n Thank you very much \\n Semic Provider\"<span  id=\"6474\">,</span></p><p class=\"s70\"  id=\"6475\">email,</p><p class=\"s70\"  id=\"6476\">GenerateVcard(name, streetaddress, zip, city, country,</p><p class=\"s70\"  id=\"6477\">email, phone, web, imgFile));</p><p class=\"s70\"  id=\"6478\">LabelNotice.Text = <span  id=\"6479\">\"VCard has been sent to \" </span>+ email;</p><p class=\"s70\"  id=\"6480\">}</p><p class=\"s66\"  id=\"6481\">else</p><p class=\"s70\"  id=\"6482\">{</p><p class=\"s70\"  id=\"6483\">SendVcard(<span  id=\"6484\">\"Vcard:\"</span>, <span  id=\"6485\">\"Your vcard is ready. Please open Attachment.</span></p><p class=\"s99\"  id=\"6486\">\\n Thank you very much \\n Semic Provider\"<span  id=\"6487\">,</span></p><p class=\"s70\"  id=\"6488\">email,</p><p class=\"s70\"  id=\"6489\">GenerateVcard(name, streetaddress, zip, city, country, email, phone, web, imgFile));</p><p class=\"s70\"  id=\"6490\">LabelNotice.Text = <span  id=\"6491\">\"VCard has been sent to \" </span>+ email;</p><p  id=\"6492\"><br id=\"6493\"></p><p class=\"s70\"  id=\"6494\">imgFile);</p><p  id=\"6495\"><br id=\"6496\"></p><p class=\"s70\"  id=\"6497\">}</p><p class=\"s70\"  id=\"6498\">}</p><p class=\"s70\"  id=\"6499\">InsertTable(name, streetaddress, zip, country, phone, email, web,</p><p  id=\"6500\"><br id=\"6501\"></p><p class=\"s70\"  id=\"6502\">}</p><p  id=\"6503\"><br id=\"6504\"></p><p  id=\"6505\"><br id=\"6506\"></p><p class=\"s103\"  id=\"6507\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6508\">/// <span  id=\"6509\">Generates the vcard.</span></p><p class=\"s103\"  id=\"6510\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6511\">/// &lt;param name=\"firstName\"&gt;<span  id=\"6512\">The first name.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6513\">/// &lt;param name=\"streetAddress\"&gt;<span  id=\"6514\">The street address.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6515\">/// &lt;param name=\"zip\"&gt;<span  id=\"6516\">The zip.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6517\">/// &lt;param name=\"city\"&gt;<span  id=\"6518\">The city.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6519\">/// &lt;param name=\"country\"&gt;<span  id=\"6520\">The country.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6521\">/// &lt;param name=\"email\"&gt;<span  id=\"6522\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6523\">/// &lt;param name=\"phone\"&gt;<span  id=\"6524\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6525\">/// &lt;param name=\"web\"&gt;<span  id=\"6526\">The web.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6527\">/// &lt;param name=\"image\"&gt;<span  id=\"6528\">The image.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6529\">/// &lt;returns&gt; <span  id=\"6530\">vcard string </span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6531\">public string <span  id=\"6532\">GenerateVcard(</span>string <span  id=\"6533\">firstName, </span>string <span  id=\"6534\">streetAddress, </span>string <span  id=\"6535\">zip, </span>string <span  id=\"6536\">city, </span>string <span  id=\"6537\">country, </span>string <span  id=\"6538\">email, </span>string <span  id=\"6539\">phone, </span>string <span  id=\"6540\">web, </span>string <span  id=\"6541\">image)</span></p><p class=\"s70\"  id=\"6542\">{</p><p class=\"s70\"  id=\"6543\"><span  id=\"6544\">string </span>url = <span  id=\"6545\">\"\"</span>; <span  id=\"6546\">if </span>(web.Length &gt; 0)</p><p class=\"s70\"  id=\"6547\">{</p><p class=\"s70\"  id=\"6548\">url = <span  id=\"6549\">\"http://\" </span>+ web.Replace(<span  id=\"6550\">\"http\"</span>, <span  id=\"6551\">\"\"</span>);</p><p class=\"s70\"  id=\"6552\">}</p><p class=\"s70\"  id=\"6553\"><span  id=\"6554\">var </span>vcardStringBuilder = <span  id=\"6555\">new </span><span  id=\"6556\">StringBuilder</span>(); vcardStringBuilder.AppendLine(<span  id=\"6557\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"6558\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"6559\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"6560\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"6561\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"6562\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"6563\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"6564\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"6565\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"6566\">\"URL;type=pref:\" </span>+ url);</p><p class=\"s70\"  id=\"6567\">vcardStringBuilder.AppendLine(<span  id=\"6568\">\"EMAIL:\" </span>+ email); <span  id=\"6569\">if </span>(image != <span  id=\"6570\">\"noimage\"</span>)</p><p class=\"s70\"  id=\"6571\">{</p><p class=\"s70\"  id=\"6572\">vcardStringBuilder.AppendLine(<span  id=\"6573\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"6574\">\":\"</span>);</p><p  id=\"6575\"><br id=\"6576\"></p><p class=\"s70\"  id=\"6577\">vcardStringBuilder.AppendLine(<span  id=\"6578\">Convert</span>.ToBase64String(ReadImage(image))); vcardStringBuilder.AppendLine(<span  id=\"6579\">string</span>.Empty);</p><p class=\"s70\"  id=\"6580\">}</p><p class=\"s70\"  id=\"6581\">vcardStringBuilder.AppendLine(<span  id=\"6582\">\"END:VCARD\"</span>); <span  id=\"6583\">return </span>vcardStringBuilder.ToString();</p><p class=\"s70\"  id=\"6584\">}</p><p  id=\"6585\"><br id=\"6586\"></p><p class=\"s103\"  id=\"6587\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6588\">/// <span  id=\"6589\">Reads the image.</span></p><p class=\"s103\"  id=\"6590\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6591\">/// &lt;param name=\"image\"&gt;<span  id=\"6592\">The image.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6593\">/// &lt;returns&gt; <span  id=\"6594\">image bytes </span>&lt;/returns&gt; <span  id=\"6595\">public byte</span><span  id=\"6596\">[] ReadImage(</span><span  id=\"6597\">string </span><span  id=\"6598\">image)</span></p><p class=\"s70\"  id=\"6599\">{</p><p class=\"s66\"  id=\"6600\">try</p><p class=\"s70\"  id=\"6601\">{</p><p  id=\"6602\"><br id=\"6603\"></p><p class=\"s70\"  id=\"6604\">}</p><p  id=\"6605\"><br id=\"6606\"></p><p class=\"s66\"  id=\"6607\">return <span  id=\"6608\">File</span><span  id=\"6609\">.ReadAllBytes(image);</span></p><p class=\"s70\"  id=\"6610\"><span  id=\"6611\">catch </span>(<span  id=\"6612\">Exception </span>ex)</p><p class=\"s70\"  id=\"6613\">{</p><p class=\"s70\"  id=\"6614\"><span  id=\"6615\">return </span><span  id=\"6616\">File</span>.ReadAllBytes(Server.MapPath(<span  id=\"6617\">\"media/logo-vcard.png\"</span>));</p><p class=\"s70\"  id=\"6618\">}</p><p class=\"s70\"  id=\"6619\">}</p><p  id=\"6620\"><br id=\"6621\"></p><p class=\"s103\"  id=\"6622\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6623\">/// <span  id=\"6624\">Sends the vcard.</span></p><p class=\"s103\"  id=\"6625\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6626\">/// &lt;param name=\"subject\"&gt;<span  id=\"6627\">The subject.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6628\">/// &lt;param name=\"body\"&gt;<span  id=\"6629\">The body.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6630\">/// &lt;param name=\"email\"&gt;<span  id=\"6631\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6632\">/// &lt;param name=\"file\"&gt;<span  id=\"6633\">The file.</span>&lt;/param&gt;</p><p class=\"s66\"  id=\"6634\">private void <span  id=\"6635\">SendVcard(</span>string <span  id=\"6636\">subject, </span>string <span  id=\"6637\">body, </span>string <span  id=\"6638\">email, </span>string <span  id=\"6639\">file)</span></p><p class=\"s70\"  id=\"6640\">{</p><p class=\"s70\"  id=\"6641\"><span  id=\"6642\">byte</span>[] byteArray = <span  id=\"6643\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"6644\">try</span></p><p class=\"s70\"  id=\"6645\">{</p><p  id=\"6646\"><br id=\"6647\"></p><p class=\"s98\"  id=\"6648\">MemoryStream <span  id=\"6649\">stream = </span><span  id=\"6650\">new </span>MemoryStream<span  id=\"6651\">(byteArray); </span>MailMessage <span  id=\"6652\">message = </span><span  id=\"6653\">new </span>MailMessage<span  id=\"6654\">(); message.Subject = subject;</span></p><p class=\"s70\"  id=\"6655\">message.Body = body;</p><p class=\"s70\"  id=\"6656\">message.From = <span  id=\"6657\">new </span><span  id=\"6658\">MailAddress</span>(<a href=\"mailto:jeevan_2np@yahoo.com\" class=\"s130\" target=\"_blank\" id=\"6659\">\"sender id example: </a><span  id=\"6660\">jeevan_2np@yahoo.com\"</span>);</p><p class=\"s70\"  id=\"6661\">message.To.Add(email);</p><p class=\"s98\"  id=\"6662\">SmtpClient <span  id=\"6663\">client = </span><span  id=\"6664\">new </span>SmtpClient<span  id=\"6665\">();</span></p><p class=\"s70\"  id=\"6666\"><span  id=\"6667\">Attachment </span>vcard = <span  id=\"6668\">new </span><span  id=\"6669\">Attachment</span>(stream, <span  id=\"6670\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"6671\">client.Host = <span  id=\"6672\">\"smtp address\"</span>; client.Port = smtp port number;</p><p class=\"s70\"  id=\"6673\">client.Credentials = <span  id=\"6674\">new </span><span  id=\"6675\">NetworkCredential</span>(<span  id=\"6676\">\"user id \"</span>, <span  id=\"6677\">\"password\"</span>); client.EnableSsl = <span  id=\"6678\">true</span>;</p><p class=\"s70\"  id=\"6679\">client.Send(message);</p><p class=\"s70\"  id=\"6680\">}</p><p class=\"s66\"  id=\"6681\">catch</p><p class=\"s70\"  id=\"6682\">{</p><p class=\"s70\"  id=\"6683\">LabelNotice.Text = <span  id=\"6684\">\"Internal Error\"</span>;</p><p class=\"s70\"  id=\"6685\">DownloadVcard(byteArray);</p><p class=\"s70\"  id=\"6686\">}</p><p  id=\"6687\"><br id=\"6688\"></p><p class=\"s70\"  id=\"6689\">}</p><p  id=\"6690\"><br id=\"6691\"></p><p class=\"s70\"  id=\"6692\"><span  id=\"6693\">protected void </span>CustomValidatorName_ServerValidate(<span  id=\"6694\">object </span>source, <span  id=\"6695\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6696\">{</p><p class=\"s70\"  id=\"6697\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s70\"  id=\"6698\">}</p><p  id=\"6699\"><br id=\"6700\"></p><p class=\"s70\"  id=\"6701\"><span  id=\"6702\">protected void </span>CustomValidatorPostalCode_ServerValidate(<span  id=\"6703\">object </span>source, <span  id=\"6704\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6705\">{</p><p class=\"s66\"  id=\"6706\">try</p><p class=\"s70\"  id=\"6707\">{</p><p  id=\"6708\"><br id=\"6709\"></p><p class=\"s66\"  id=\"6710\">if <span  id=\"6711\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"6712\">{</p><p class=\"s70\"  id=\"6713\">args.IsValid = RemoveSpecialCharacter(args.Value).Length == 4;</p><p class=\"s70\"  id=\"6714\">}</p><p class=\"s66\"  id=\"6715\">else</p><p class=\"s70\"  id=\"6716\">{</p><p class=\"s70\"  id=\"6717\">args.IsValid = <span  id=\"6718\">true</span>;</p><p class=\"s70\"  id=\"6719\">}</p><p class=\"s70\"  id=\"6720\">}</p><p class=\"s66\"  id=\"6721\">catch <span  id=\"6722\">{ args.IsValid = </span>false<span  id=\"6723\">; }</span></p><p class=\"s70\"  id=\"6724\">}</p><p  id=\"6725\"><br id=\"6726\"></p><p class=\"s70\"  id=\"6727\"><span  id=\"6728\">protected void </span>CustomValidatorCountry_ServerValidate(<span  id=\"6729\">object </span>source, <span  id=\"6730\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6731\">{</p><p  id=\"6732\"><br id=\"6733\"></p><p class=\"s70\"  id=\"6734\">}</p><p  id=\"6735\"><br id=\"6736\"></p><p class=\"s70\"  id=\"6737\"><span  id=\"6738\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"6739\">object </span>source, <span  id=\"6740\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6741\">{</p><p class=\"s66\"  id=\"6742\">if <span  id=\"6743\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"6744\">{</p><p  id=\"6745\"><br id=\"6746\"></p><p class=\"s70\"  id=\"6747\">}</p><p class=\"s66\"  id=\"6748\">else</p><p class=\"s70\"  id=\"6749\">{</p><p  id=\"6750\"><br id=\"6751\"></p><p class=\"s70\"  id=\"6752\">}</p><p class=\"s70\"  id=\"6753\">}</p><p class=\"s70\"  id=\"6754\">args.IsValid = ValidatePhone(args.Value);</p><p  id=\"6755\"><br id=\"6756\"></p><p class=\"s70\"  id=\"6757\">args.IsValid = <span  id=\"6758\">true</span>;</p><p  id=\"6759\"><br id=\"6760\"></p><p class=\"s70\"  id=\"6761\"><span  id=\"6762\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"6763\">object </span>source, <span  id=\"6764\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6765\">{</p><p class=\"s70\"  id=\"6766\">args.IsValid = ValidateEmail(args.Value.ToString());</p><p class=\"s70\"  id=\"6767\">}</p><p  id=\"6768\"><br id=\"6769\"></p><p class=\"s70\"  id=\"6770\"><span  id=\"6771\">protected void </span>CustomValidatorWebSite_ServerValidate(<span  id=\"6772\">object </span>source, <span  id=\"6773\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6774\">{</p><p  id=\"6775\"><br id=\"6776\"></p><p class=\"s70\"  id=\"6777\">}</p><p  id=\"6778\"><br id=\"6779\"></p><p class=\"s103\"  id=\"6780\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6781\">/// <span  id=\"6782\">Validates the phone.</span></p><p class=\"s103\"  id=\"6783\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6784\">/// &lt;param name=\"input\"&gt;<span  id=\"6785\">The input.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6786\">/// &lt;returns&gt; <span  id=\"6787\">true if it valid </span>&lt;/returns&gt; <span  id=\"6788\">public bool </span><span  id=\"6789\">ValidatePhone(</span><span  id=\"6790\">string </span><span  id=\"6791\">input)</span></p><p class=\"s70\"  id=\"6792\">{</p><p class=\"s70\"  id=\"6793\"><span  id=\"6794\">if </span>(input.Length != 8) { <span  id=\"6795\">return false</span>; } <span  id=\"6796\">Regex </span>num = <span  id=\"6797\">new </span><span  id=\"6798\">Regex</span>(<span  id=\"6799\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"6800\">return <span  id=\"6801\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"6802\">}</p><p  id=\"6803\"><br id=\"6804\"></p><p class=\"s103\"  id=\"6805\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6806\">/// <span  id=\"6807\">Validates the email.</span></p><p class=\"s103\"  id=\"6808\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6809\">/// &lt;param name=\"email\"&gt;<span  id=\"6810\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6811\">/// &lt;returns&gt; <span  id=\"6812\">true on valid email </span>&lt;/returns&gt; <span  id=\"6813\">public bool </span><span  id=\"6814\">ValidateEmail(</span><span  id=\"6815\">string </span><span  id=\"6816\">email)</span></p><p class=\"s70\"  id=\"6817\">{</p><p class=\"s66\"  id=\"6818\">return <span  id=\"6819\">Regex</span><span  id=\"6820\">.IsMatch(email,</span></p><p class=\"s99\"  id=\"6821\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\"  id=\"6822\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span  id=\"6823\">+</span></p><p class=\"s99\"  id=\"6824\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a- zA-Z]{2,6}))$\"<span  id=\"6825\">);</span></p><p class=\"s70\"  id=\"6826\">}</p><p  id=\"6827\"><br id=\"6828\"></p><p class=\"s103\"  id=\"6829\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6830\">/// <span  id=\"6831\">Removes the special character.</span></p><p class=\"s103\"  id=\"6832\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6833\">/// &lt;param name=\"input\"&gt;<span  id=\"6834\">The input.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6835\">/// &lt;returns&gt; <span  id=\"6836\">secure string </span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6837\">public string <span  id=\"6838\">RemoveSpecialCharacter(</span>string <span  id=\"6839\">input)</span></p><p class=\"s70\"  id=\"6840\">{</p><p class=\"s70\"  id=\"6841\"><span  id=\"6842\">return </span><span  id=\"6843\">Regex</span>.Replace(input, <span  id=\"6844\">\"[^0-9a-zA-Z. ]+\"</span>, <span  id=\"6845\">\"\"</span>);</p><p class=\"s70\"  id=\"6846\">}</p><p  id=\"6847\"><br id=\"6848\"></p><p class=\"s70\"  id=\"6849\"><span  id=\"6850\">protected void </span>TextBoxEmail_TextChanged(<span  id=\"6851\">object </span>sender, <span  id=\"6852\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6853\">{</p><p  id=\"6854\"><br id=\"6855\"></p><p class=\"s70\"  id=\"6856\">}</p><p  id=\"6857\"><br id=\"6858\"></p><p class=\"s103\"  id=\"6859\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6860\">/// <span  id=\"6861\">Creates the table.</span></p><p class=\"s103\"  id=\"6862\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6863\">/// &lt;param name=\"tableName\"&gt;<span  id=\"6864\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6865\">/// &lt;returns&gt; <span  id=\"6866\">true if table created</span>&lt;/returns&gt; <span  id=\"6867\">private static bool </span><span  id=\"6868\">CreateTable(</span><span  id=\"6869\">string </span><span  id=\"6870\">tableName)</span></p><p class=\"s70\"  id=\"6871\">{</p><p class=\"s66\"  id=\"6872\">try</p><p class=\"s70\"  id=\"6873\">{</p><p  id=\"6874\"><br id=\"6875\"></p><p class=\"s70\"  id=\"6876\"><span  id=\"6877\">SqlConnection </span>connection = <span  id=\"6878\">new </span><span  id=\"6879\">SqlConnection</span>(<span  id=\"6880\">GlobalSettings</span>.DbDSN); <span  id=\"6881\">string </span>queryString =</p><p class=\"s99\"  id=\"6882\">@\" CREATE TABLE [vcardimage](</p><p class=\"s99\"  id=\"6883\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s99\"  id=\"6884\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s99\"  id=\"6885\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"6886\">;</span></p><p  id=\"6887\"><br id=\"6888\"></p><p class=\"s98\"  id=\"6889\">SqlCommand <span  id=\"6890\">command = </span><span  id=\"6891\">new </span>SqlCommand<span  id=\"6892\">(queryString, connection);</span></p><p class=\"s70\"  id=\"6893\">connection.Open(); command.ExecuteNonQuery(); connection.Close();</p><p class=\"s66\"  id=\"6894\">return true<span  id=\"6895\">;</span></p><p class=\"s70\"  id=\"6896\">}</p><p class=\"s66\"  id=\"6897\">catch</p><p class=\"s70\"  id=\"6898\">{</p><p class=\"s66\"  id=\"6899\">return false<span  id=\"6900\">;</span></p><p class=\"s70\"  id=\"6901\">}</p><p class=\"s70\"  id=\"6902\">}</p><p  id=\"6903\"><br id=\"6904\"></p><p class=\"s103\"  id=\"6905\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6906\">/// <span  id=\"6907\">Checks the table.</span></p><p class=\"s103\"  id=\"6908\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6909\">/// &lt;param name=\"tableName\"&gt;<span  id=\"6910\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6911\">/// &lt;returns&gt; <span  id=\"6912\">true if table exist </span>&lt;/returns&gt; <span  id=\"6913\">private static bool </span><span  id=\"6914\">CheckTable(</span><span  id=\"6915\">string </span><span  id=\"6916\">tableName)</span></p><p class=\"s70\"  id=\"6917\">{</p><p class=\"s70\"  id=\"6918\"><span  id=\"6919\">SqlServerHelper </span>sqlHeplper = <span  id=\"6920\">new </span><span  id=\"6921\">SqlServerHelper</span>(<span  id=\"6922\">GlobalSettings</span>.DbDSN); <span  id=\"6923\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"6924\">}</p><p  id=\"6925\"><br id=\"6926\"></p><p class=\"s103\"  id=\"6927\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6928\">/// <span  id=\"6929\">Inserts the table.</span></p><p class=\"s103\"  id=\"6930\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6931\">/// &lt;param name=\"name\"&gt;<span  id=\"6932\">The name.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6933\">/// &lt;param name=\"street\"&gt;<span  id=\"6934\">The street.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6935\">/// &lt;param name=\"postalcode\"&gt;<span  id=\"6936\">The postalcode.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6937\">/// &lt;param name=\"country\"&gt;<span  id=\"6938\">The country.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6939\">/// &lt;param name=\"phone\"&gt;<span  id=\"6940\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6941\">/// &lt;param name=\"email\"&gt;<span  id=\"6942\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6943\">/// &lt;param name=\"website\"&gt;<span  id=\"6944\">The website.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6945\">/// &lt;param name=\"imageguid\"&gt;<span  id=\"6946\">The imageguid.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6947\">/// &lt;returns&gt; <span  id=\"6948\">true on successul data insert</span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6949\">public static bool <span  id=\"6950\">InsertTable(</span>string <span  id=\"6951\">name, </span>string <span  id=\"6952\">street, </span>string <span  id=\"6953\">postalcode, </span>string <span  id=\"6954\">country, </span>string <span  id=\"6955\">phone, </span>string <span  id=\"6956\">email, </span>string <span  id=\"6957\">website, </span>string <span  id=\"6958\">imageguid)</span></p><p class=\"s70\"  id=\"6959\">{</p><p class=\"s70\"  id=\"6960\"><span  id=\"6961\">string </span>tableName = <span  id=\"6962\">\"vcardimage\"</span>; <span  id=\"6963\">try</span></p><p class=\"s70\"  id=\"6964\">{</p><p class=\"s66\"  id=\"6965\">if <span  id=\"6966\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"6967\">{ CreateTable(tableName); }</p><p class=\"s98\"  id=\"6968\">ISqlHelper <span  id=\"6969\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"6970\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"6971\">@\"insert into \" <span  id=\"6972\">+ tableName + </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"6973\">+</span></p><p class=\"s99\"  id=\"6974\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"6975\">@website, @imageguid, @date);\"<span  id=\"6976\">,</span></p><p class=\"s70\"  id=\"6977\">sqlHelper.CreateParameter(<span  id=\"6978\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"6979\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"6980\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"6981\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"6982\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"6983\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"6984\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"6985\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"6986\">\"@date\"</span>, <span  id=\"6987\">DateTime</span>.Now)); <span  id=\"6988\">return true</span>;</p><p class=\"s70\"  id=\"6989\">}</p><p class=\"s70\"  id=\"6990\"><span  id=\"6991\">catch </span>(<span  id=\"6992\">Exception</span>)</p><p class=\"s70\"  id=\"6993\">{</p><p class=\"s66\"  id=\"6994\">return false<span  id=\"6995\">;</span></p><p  id=\"6996\"><br id=\"6997\"></p><p  id=\"6998\"><br id=\"6999\"></p><p class=\"s70\"  id=\"7000\">}</p><p  id=\"7001\"><br id=\"7002\"></p><p class=\"s70\"  id=\"7003\">}</p><p  id=\"7004\"><br id=\"7005\"></p><p class=\"s103\"  id=\"7006\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"7007\">/// <span  id=\"7008\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"7009\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"7010\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"7011\">The vcard file.</span>&lt;/param&gt; <span  id=\"7012\">public void </span><span  id=\"7013\">DownloadVcard(</span><span  id=\"7014\">byte </span><span  id=\"7015\">[] vcardFile)</span></p><p class=\"s70\"  id=\"7016\">{</p><p class=\"s70\"  id=\"7017\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"7018\">true</span>;</p><p class=\"s70\"  id=\"7019\">Response.ContentType = <span  id=\"7020\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"7021\">\"content-disposition\"</span>, <span  id=\"7022\">\"attach;filename =</span></p><p class=\"s99\"  id=\"7023\">YourVcard.vcf\"<span  id=\"7024\">);</span></p><p class=\"s70\"  id=\"7025\">Response.Charset = <span  id=\"7026\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"7027\">HttpContext<span  id=\"7028\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"7029\">}</p><p class=\"s70\"  id=\"7030\">}</p><p class=\"s70\"  id=\"7031\">}</p><p  id=\"7032\"><br id=\"7033\"></p><p  id=\"7034\"><span class=\"s97\"  id=\"7035\">GlobalSetting.xslt</span></p><p  id=\"7036\"><br id=\"7037\"></p><p  id=\"7038\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7039\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p  id=\"7040\">&lt;xsl:stylesheet version=\"1.0\"</p><p  id=\"7041\"><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7042\">xmlns:xsl=\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml=\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library=\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon=\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes=\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath=\"urn:Exslt.ExsltMath\" xmlns:Exslt.ExsltRegularExpressions=\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings=\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets=\"urn:Exslt.ExsltSets\"</p><p  id=\"7043\">exclude-result-prefixes=\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"&gt;</p><p  id=\"7044\"><br id=\"7045\"></p><p  id=\"7046\">&lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;</p><p  id=\"7047\">&lt;xsl:param name=\"currentPage\"/&gt;</p><p  id=\"7048\">&lt;xsl:template match=\"/\"&gt;</p><p  id=\"7049\">&lt;!-- start writing XSLT --&gt;</p><p  id=\"7050\">&lt;xsl:variable name=\"items\" select=\"$currentPage/ancestor-or-self::*</p><p  id=\"7051\">/WebSiteGlobalSettings \"/&gt;</p><p  id=\"7052\">&lt;xsl:variable name=\"logo\" select=\"$items/logo\"/&gt;</p><p  id=\"7053\">&lt;div class=\"vcard\"&gt;</p><p  id=\"7054\">&lt;div class=\"logo\"&gt;&lt;a href=\"/\" title=\"start page\"&gt;</p><p  id=\"7055\">&lt;img src=\"{$logo}\" alt=\"semic provider logo; visual identity\"/&gt;</p><p  id=\"7056\">&lt;/a&gt;</p><p  id=\"7057\">&lt;/div&gt;</p><p  id=\"7058\">&lt;div class=\"fn\" &gt;</p><p  id=\"7059\">&lt;xsl:value-of select=\"$items/siteName\"/&gt;</p><p  id=\"7060\">&lt;/div&gt;</p><p  id=\"7061\">&lt;h4&gt; &lt;xsl:value-of select=\"$items/slogan\"/&gt; &lt;/h4&gt;</p><p  id=\"7062\">&lt;/div&gt;</p><p  id=\"7063\">&lt;/xsl:template&gt;</p><p  id=\"7064\">&lt;/xsl:stylesheet&gt;</p><p  id=\"7065\">Navigation.xslt</p><p  id=\"7066\"><br id=\"7067\"></p><p  id=\"7068\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7069\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7070\">&lt;<span class=\"p\" id=\"7071\">xsl:stylesheet</span></p><p  id=\"7072\">version<span class=\"s56\" id=\"7073\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7074\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7075\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7076\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7077\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7078\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7079\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7080\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7081\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7082\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7083\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7084\">=</span>\"urn:Exslt.ExsltSets\"</p><p  id=\"7085\">exclude-result-prefixes<span class=\"s56\" id=\"7086\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7087\">&gt;</span></p><p class=\"s56\"  id=\"7088\">&lt;<span class=\"p\" id=\"7089\">xsl:output method</span>=<span class=\"p\" id=\"7090\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7091\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7092\">&lt;<span class=\"p\" id=\"7093\">xsl:param name</span>=<span class=\"p\" id=\"7094\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7095\">&lt;<span class=\"p\" id=\"7096\">xsl:template match</span>=<span class=\"p\" id=\"7097\">\"/\"</span>&gt;</p><p class=\"s56\"  id=\"7098\">&lt;<span class=\"p\" id=\"7099\">xsl:variable name</span>=<span class=\"p\" id=\"7100\">\"items\" select</span>=<span class=\"p\" id=\"7101\">\"$currentPage/ancestor-or-self::*</span></p><p  id=\"7102\">/GeneralContent [string(useInNavigation) = '1'] \"<span class=\"s56\" id=\"7103\">/&gt;</span></p><p class=\"s56\"  id=\"7104\">&lt;<span class=\"p\" id=\"7105\">xsl:if test</span>=<span class=\"p\" id=\"7106\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\"  id=\"7107\">&lt;<span class=\"p\" id=\"7108\">ul</span>&gt;</p><p class=\"s56\"  id=\"7109\">&lt;<span class=\"p\" id=\"7110\">xsl:for-each select</span>=<span class=\"p\" id=\"7111\">\"$items\"</span>&gt;</p><p class=\"s56\"  id=\"7112\">&lt;<span class=\"p\" id=\"7113\">xsl:if test</span>=<span class=\"p\" id=\"7114\">\"$currentPage/@id = @id\"</span>&gt;</p><p class=\"s56\"  id=\"7115\">&lt;<span class=\"p\" id=\"7116\">li class</span>=<span class=\"p\" id=\"7117\">\"current\" </span>&gt;</p><p class=\"s56\"  id=\"7118\">&lt;<span class=\"p\" id=\"7119\">xsl:value-of select</span>=<span class=\"p\" id=\"7120\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\"  id=\"7121\">&lt;/<span class=\"p\" id=\"7122\">li</span>&gt;</p><p class=\"s56\"  id=\"7123\">&lt;/<span class=\"p\" id=\"7124\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7125\">&lt;<span class=\"p\" id=\"7126\">xsl:if test</span>=<span class=\"p\" id=\"7127\">\"$currentPage/@id != @id\"</span>&gt;</p><p class=\"s56\"  id=\"7128\">&lt;<span class=\"p\" id=\"7129\">li class</span>=<span class=\"p\" id=\"7130\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\"  id=\"7131\">&lt;<span class=\"p\" id=\"7132\">a href</span>=<span class=\"p\" id=\"7133\">\"{umbraco.library:NiceUrl(@id)}\" title</span>=<span class=\"p\" id=\"7134\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\"  id=\"7135\">&lt;<span class=\"p\" id=\"7136\">xsl:value-of select</span>=<span class=\"p\" id=\"7137\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\"  id=\"7138\">&lt;/<span class=\"p\" id=\"7139\">a</span>&gt;</p><p class=\"s56\"  id=\"7140\">&lt;/<span class=\"p\" id=\"7141\">li</span>&gt;</p><p class=\"s56\"  id=\"7142\">&lt;/<span class=\"p\" id=\"7143\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7144\">&lt;/<span class=\"p\" id=\"7145\">xsl:for-each</span>&gt;</p><p class=\"s56\"  id=\"7146\">&lt;/<span class=\"p\" id=\"7147\">ul</span>&gt;</p><p class=\"s56\"  id=\"7148\">&lt;/<span class=\"p\" id=\"7149\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7150\">&lt;/<span class=\"p\" id=\"7151\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7152\">&lt;/<span class=\"p\" id=\"7153\">xsl:stylesheet</span>&gt;</p><p  id=\"7154\"><br id=\"7155\"></p><p  id=\"7156\"><span class=\"s131\"  id=\"7157\">NewsList.xslt</span></p><p  id=\"7158\"><br id=\"7159\"></p><p  id=\"7160\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7161\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7162\">&lt;<span class=\"p\" id=\"7163\">xsl:stylesheet</span></p><p  id=\"7164\">version<span class=\"s56\" id=\"7165\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7166\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7167\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7168\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7169\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7170\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7171\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7172\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7173\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7174\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7175\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7176\">=</span>\"urn:Exslt.ExsltSets\"</p><p  id=\"7177\">exclude-result-prefixes<span class=\"s56\" id=\"7178\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7179\">&gt;</span></p><p class=\"s56\"  id=\"7180\">&lt;<span class=\"p\" id=\"7181\">xsl:output method</span>=<span class=\"p\" id=\"7182\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7183\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7184\">&lt;<span class=\"p\" id=\"7185\">xsl:param name</span>=<span class=\"p\" id=\"7186\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7187\">&lt;<span class=\"p\" id=\"7188\">xsl:template match</span>=<span class=\"p\" id=\"7189\">\"/\"</span>&gt;</p><p class=\"s56\"  id=\"7190\">&lt;<span class=\"p\" id=\"7191\">xsl:variable name</span>=<span class=\"p\" id=\"7192\">\"newsItems\" select</span>=<span class=\"p\" id=\"7193\">\"$currentPage/ancestor-or-self::*</span></p><p  id=\"7194\">/NewsContainer/NewsArticle \"<span class=\"s56\" id=\"7195\">/&gt;</span></p><p class=\"s56\"  id=\"7196\">&lt;<span class=\"p\" id=\"7197\">xsl:variable name</span>=<span class=\"p\" id=\"7198\">\"numberofnewsitems\" select</span>=<span class=\"p\" id=\"7199\">\"/macro/numberofnewsitems\"</span>/&gt;</p><p class=\"s56\"  id=\"7200\">&lt;<span class=\"p\" id=\"7201\">xsl:if test</span>=<span class=\"p\" id=\"7202\">\"count($newsItems) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\"  id=\"7203\">&lt;<span class=\"p\" id=\"7204\">xsl:for-each select</span>=<span class=\"p\" id=\"7205\">\"$newsItems\" </span>&gt;</p><p class=\"s56\"  id=\"7206\">&lt;<span class=\"p\" id=\"7207\">xsl:sort select</span>=<span class=\"p\" id=\"7208\">\"@createDate\" order</span>=<span class=\"p\" id=\"7209\">\"ascending\"</span>/&gt;</p><p class=\"s56\"  id=\"7210\">&lt;<span class=\"p\" id=\"7211\">xsl:if test</span>=<span class=\"p\" id=\"7212\">\"position() &amp;lt;=$numberofnewsitems\" </span>&gt; &lt;<span class=\"p\" id=\"7213\">div clas</span>=<span class=\"p\" id=\"7214\">\"newsItem\"</span>&gt;</p><p class=\"s56\"  id=\"7215\">&lt;<span class=\"p\" id=\"7216\">h3</span>&gt;</p><p class=\"s56\"  id=\"7217\">&lt;<span class=\"p\" id=\"7218\">a href</span>=<span class=\"p\" id=\"7219\">\"{umbraco.library:NiceUrl(@id)}\" </span>&gt;</p><p class=\"s56\"  id=\"7220\">&lt;<span class=\"p\" id=\"7221\">xsl:value-of select</span>=<span class=\"p\" id=\"7222\">\"newsTitle\" </span>/&gt;</p><p  id=\"7223\"><br id=\"7224\"></p><p class=\"s56\"  id=\"7225\">&lt;/<span class=\"p\" id=\"7226\">a</span>&gt;</p><p class=\"s56\"  id=\"7227\">&lt;/<span class=\"p\" id=\"7228\">h3</span>&gt;</p><p class=\"s56\"  id=\"7229\">&lt;<span class=\"p\" id=\"7230\">p</span>&gt;</p><p class=\"s56\"  id=\"7231\">&lt;<span class=\"p\" id=\"7232\">xsl:value-of select</span>=<span class=\"p\" id=\"7233\">\"newsBody\" disable-output-escaping</span>=<span class=\"p\" id=\"7234\">\"yes\" </span>/&gt;</p><p class=\"s56\"  id=\"7235\">&lt;/<span class=\"p\" id=\"7236\">p</span>&gt;</p><p class=\"s56\"  id=\"7237\">&lt;<span class=\"p\" id=\"7238\">p</span>&gt;</p><p  id=\"7239\">Last update: <span class=\"s56\" id=\"7240\">&lt;</span>xsl:value-of select<span class=\"s56\" id=\"7241\">=</span>\"@updateDate\" <span class=\"s56\" id=\"7242\">/&gt;</span></p><p  id=\"7243\"><br id=\"7244\"></p><p class=\"s56\"  id=\"7245\">&lt;/<span class=\"p\" id=\"7246\">p</span>&gt;</p><p class=\"s56\"  id=\"7247\">&lt;/<span class=\"p\" id=\"7248\">div</span>&gt;</p><p class=\"s56\"  id=\"7249\">&lt;/<span class=\"p\" id=\"7250\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7251\">&lt;/<span class=\"p\" id=\"7252\">xsl:for-each</span>&gt;</p><p class=\"s56\"  id=\"7253\">&lt;/<span class=\"p\" id=\"7254\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7255\">&lt;/<span class=\"p\" id=\"7256\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7257\">&lt;/<span class=\"p\" id=\"7258\">xsl:stylesheet</span>&gt;</p><p  id=\"7259\"><br id=\"7260\"></p><p  id=\"7261\"><span class=\"s131\"  id=\"7262\">RecentVcard.xslt</span></p><p  id=\"7263\"><br id=\"7264\"></p><p  id=\"7265\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7266\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7267\">&lt;<span class=\"p\" id=\"7268\">xsl:stylesheet</span></p><p  id=\"7269\">version<span class=\"s56\" id=\"7270\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7271\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7272\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7273\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:recentVcard<span class=\"s56\" id=\"7274\">=</span>\"urn:recentvcard\" xmlns:umbraco.library<span class=\"s56\" id=\"7275\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7276\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7277\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7278\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7279\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7280\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7281\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7282\">=</span>\"urn:Exslt.ExsltSets\" xmlns:recentvcard<span class=\"s56\" id=\"7283\">=</span>\"urn:recentvcard\" exclude-result-prefixes<span class=\"s56\" id=\"7284\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets recentvcard \"<span class=\"s56\" id=\"7285\">&gt;</span></p><p class=\"s56\"  id=\"7286\">&lt;<span class=\"p\" id=\"7287\">xsl:output method</span>=<span class=\"p\" id=\"7288\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7289\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7290\">&lt;<span class=\"p\" id=\"7291\">xsl:param name</span>=<span class=\"p\" id=\"7292\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7293\">&lt;<span class=\"p\" id=\"7294\">xsl:template match</span>=<span class=\"p\" id=\"7295\">\"/\"</span>&gt;</p><p  id=\"7296\">&lt;!-- start writing XSLT --&gt;</p><p class=\"s56\"  id=\"7297\">&lt;<span class=\"p\" id=\"7298\">xsl:value-of select</span>=<span class=\"p\" id=\"7299\">\"recentVcard:GetVcardData()\" disable-output-escaping</span>=<span class=\"p\" id=\"7300\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7301\">&lt;/<span class=\"p\" id=\"7302\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7303\">&lt;/<span class=\"p\" id=\"7304\">xsl:stylesheet</span>&gt;</p><p  id=\"7305\"><br id=\"7306\"></p><p  id=\"7307\"><span class=\"s131\"  id=\"7308\">RecentVcard.cs</span></p><p  id=\"7309\"><br id=\"7310\"></p><p class=\"s66\"  id=\"7311\">using <span  id=\"7312\">System;</span></p><p class=\"s66\"  id=\"7313\">using <span  id=\"7314\">System.Collections.Generic; </span>using <span  id=\"7315\">System.Linq;</span></p><p class=\"s66\"  id=\"7316\">using <span  id=\"7317\">System.Web;</span></p><p class=\"s66\"  id=\"7318\">using <span  id=\"7319\">umbraco.DataLayer; </span>using <span  id=\"7320\">umbraco;</span></p><p class=\"s66\"  id=\"7321\">namespace <span  id=\"7322\">VCardGenerator</span></p><p class=\"s70\"  id=\"7323\">{</p><p class=\"s66\"  id=\"7324\">public class <span  id=\"7325\">RecentVcard</span></p><p class=\"s70\"  id=\"7326\">{</p><p class=\"s66\"  id=\"7327\">public static string <span  id=\"7328\">GetVcardData()</span></p><p class=\"s70\"  id=\"7329\">{</p><p class=\"s98\"  id=\"7330\">ISqlHelper <span  id=\"7331\">getVcard = </span>DataLayerHelper<span  id=\"7332\">.CreateSqlHelper(</span>GlobalSettings<span  id=\"7333\">.DbDSN);</span></p><p class=\"s98\"  id=\"7334\">IRecordsReader <span  id=\"7335\">read = getVcard.ExecuteReader(</span><span  id=\"7336\">@\"select top 10 id, name,</span></p><p class=\"s99\"  id=\"7337\">country</p><p class=\"s99\"  id=\"7338\">from vcardimage where id &gt; @id order by id desc\"<span  id=\"7339\">,</span></p><p class=\"s70\"  id=\"7340\">getVcard.CreateParameter(<span  id=\"7341\">\"@id\"</span>, <span  id=\"7342\">\"0\"</span>));</p><p class=\"s70\"  id=\"7343\"><span  id=\"7344\">string </span>data = <span  id=\"7345\">\"\"</span>; <span  id=\"7346\">while </span>(read.Read())</p><p class=\"s70\"  id=\"7347\">{</p><p class=\"s70\"  id=\"7348\">data += <span  id=\"7349\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span  id=\"7350\">\"name\"</span>) +</p><p class=\"s99\"  id=\"7351\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span  id=\"7352\">+ read.GetString(</span>\"country\"<span  id=\"7353\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span  id=\"7354\">;</span></p><p class=\"s70\"  id=\"7355\">}</p><p class=\"s99\"  id=\"7356\"><span  id=\"7357\">return </span>\"&lt;ul&gt;\" <span  id=\"7358\">+ data + </span>\"&lt;/ul\"<span  id=\"7359\">;</span></p><p class=\"s70\"  id=\"7360\">}</p><p class=\"s70\"  id=\"7361\">}</p><p class=\"s70\"  id=\"7362\">}</p><p  id=\"7363\"><span id=\"7364\"><img width=\"602\" height=\"851\" alt=\"image\" src=\"Image_137.png\" id=\"7365\"></span></p><p  id=\"7366\"><br id=\"7367\"></p><p  id=\"7368\"><br id=\"7369\"></p><p  id=\"7370\"><br id=\"7371\"></p><p class=\"s8\"  id=\"7372\">About Writer</p><p  id=\"7373\">Name: Jivan Thapa</p><p  id=\"7374\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p  id=\"7375\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7376\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7377\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7378\">jeevan_2np@yahoo.com</a></p><p  id=\"7379\"><br id=\"7380\"></p><p class=\"s8\"  id=\"7381\">About Writer</p><p  id=\"7382\">Name: Jivan Thapa</p><p  id=\"7383\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p  id=\"7384\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7385\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7386\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7387\">jeevan_2np@yahoo.com</a></p><p  id=\"7388\"><span  id=\"7389\"> </span></p><p  id=\"7390\"><br id=\"7391\"></p><p  id=\"7392\"><br id=\"7393\"></p><p  id=\"7394\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p  id=\"7395\">Here I covered:</p><ul id=\"l140\"><li  id=\"7397\"><p  id=\"7398\">Document Type</p></li><li  id=\"7399\"><p  id=\"7400\">Template</p></li><li  id=\"7401\"><p  id=\"7402\">Content</p></li><li  id=\"7403\"><p  id=\"7404\">Xslt</p></li><li  id=\"7405\"><p  id=\"7406\">Extending Umbraco using .net class and User Control</p></li><li  id=\"7407\"><p  id=\"7408\">And more ….</p></li></ul><p  id=\"7409\">Jivan Thapa</p><p  id=\"7410\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p  id=\"7411\">Here I covered:</p><ul id=\"l141\"><li  id=\"7413\"><p  id=\"7414\">Document Type</p></li><li  id=\"7415\"><p  id=\"7416\">Template</p></li><li  id=\"7417\"><p  id=\"7418\">Content</p></li><li  id=\"7419\"><p  id=\"7420\">Xslt</p></li><li  id=\"7421\"><p  id=\"7422\">Extending Umbraco using .net class and User Control</p></li><li  id=\"7423\"><p  id=\"7424\">And more ….</p></li></ul><p  id=\"7425\">Jivan Thapa</p><p  id=\"7426\"><span  id=\"7427\"> </span></p></div></div><p id=\"endOfDocument\"></p></div></div>","sub":[]},{"pageId":"32","pageLevel":1,"pageOrder":"32","pageParentId":"30","pageName":"Directory:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading686\" class=\"heading686\"><a name=\"bookmark14\" id=\"687\" style=\"color: green;\">Directory</a><span class=\"p\" id=\"688\">:</span></h3>","pageContent":"<div id=\"contentheading686\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"689\"><br id=\"690\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"691\">Directory is location for physical files, all Umbraco files goes or placed inside domain name directory. I will define directory from two points of view one from server and one from local machine.</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"692\"><b id=\"693\">Server: </b>If you buy web hosting including domain and space. You can see there is “httpdocs”<span class=\"s3\" id=\"694\">6 </span>directory that is main directory for your website. All Umbraco files should be placed within main directory. Do not place Umbraco files inside sub directory because Umbraco does not support until version 4.7 and I can‟t say about later version until its release. All Umbraco files directory should be placed without</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"695\">renaming into root directory.</p><h4 style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"696\">Local Machine: <span class=\"p\" id=\"697\">I am installing Umbraco in local machine so that I will focus here more. First you need to Create Directory and give name “HowToUmbraco” in my case but you can give different name. Follow instructions.</span></h4></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading686\" class=\"heading686\"><a name=\"bookmark14\" id=\"687\" >Directory</a><span class=\"p\" id=\"688\">:</span></h3>","pageStyleReducedContent":"<div id=\"contentheading686\" ><p  id=\"689\"><br id=\"690\"></p><p  id=\"691\">Directory is location for physical files, all Umbraco files goes or placed inside domain name directory. I will define directory from two points of view one from server and one from local machine.</p><p  id=\"692\"><b id=\"693\">Server: </b>If you buy web hosting including domain and space. You can see there is “httpdocs”<span class=\"s3\" id=\"694\">6 </span>directory that is main directory for your website. All Umbraco files should be placed within main directory. Do not place Umbraco files inside sub directory because Umbraco does not support until version 4.7 and I can‟t say about later version until its release. All Umbraco files directory should be placed without</p><p  id=\"695\">renaming into root directory.</p><h4  id=\"696\">Local Machine: <span class=\"p\" id=\"697\">I am installing Umbraco in local machine so that I will focus here more. First you need to Create Directory and give name “HowToUmbraco” in my case but you can give different name. Follow instructions.</span></h4></div>","sub":[]},{"pageId":"33","pageLevel":1,"pageOrder":"33","pageParentId":"30","pageName":"Turn On IIS Service","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 7pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading737\" class=\"heading737\"><a name=\"bookmark15\" id=\"738\" style=\"color: green;\">Turn On IIS Service</a></h3>","pageContent":"<div id=\"contentheading737\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"739\">Here I assume that your machine is windows 7. To turn on IIS service follow instructions.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"740\"><br id=\"741\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"742\"><span id=\"743\"><img width=\"295\" height=\"389\" alt=\"image\" src=\"Image_015.jpg\" id=\"744\"></span></p><ul id=\"l13\"><li style=\"padding-top: 4pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"746\"><p style=\"display: inline;\" id=\"747\">Type “Turn Windows features on or off” in Search Box and press Enter</p><p style=\"padding-top: 10pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"748\">It will open new windows. Navigate Internet Information Service and expand its tree.</p></li><li style=\"padding-top: 10pt;padding-left: 242pt;text-indent: -7pt;text-align: left;\" id=\"749\"><p style=\"display: inline;\" id=\"750\">Navigate</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"751\"><br id=\"752\"></p><p style=\"padding-left: 271pt;text-indent: 0pt;text-align: left;\" id=\"753\">-World Wide Web Service</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"754\"><br id=\"755\"></p><p style=\"padding-left: 271pt;text-indent: 0pt;text-align: left;\" id=\"756\">-Application Development Feature</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"757\"><br id=\"758\"></p></li><li style=\"padding-left: 242pt;text-indent: -7pt;text-align: left;\" id=\"759\"><p style=\"display: inline;\" id=\"760\">Checked</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"761\"><br id=\"762\"></p><ul id=\"l14\"><li style=\"padding-left: 278pt;text-indent: -7pt;text-align: left;\" id=\"764\"><p style=\"display: inline;\" id=\"765\">NET Extensibility</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"766\"><br id=\"767\"></p></li><li style=\"padding-left: 278pt;text-indent: -7pt;text-align: left;\" id=\"768\"><p style=\"display: inline;\" id=\"769\">ASP.NET</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"770\"><br id=\"771\"></p></li><li style=\"padding-left: 278pt;text-indent: -7pt;text-align: left;\" id=\"772\"><p style=\"display: inline;\" id=\"773\">Server-Side Includes</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"774\"><br id=\"775\"></p></li></ul></li><li style=\"padding-left: 242pt;text-indent: -7pt;text-align: left;\" id=\"776\"><p style=\"display: inline;\" id=\"777\">Press OK</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"778\"><br id=\"779\"></p><p style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"780\">Wait until “Turn Windows Features On or Off” Close automatically.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"781\"><br id=\"782\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"783\"><span id=\"784\"><img width=\"256\" height=\"184\" alt=\"image\" src=\"Image_016.jpg\" id=\"785\"></span></p><p class=\"s8\" style=\"padding-top: 7pt;padding-left: 235pt;text-indent: 0pt;text-align: justify;\" id=\"786\">Test your IIS Server</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"787\"><br id=\"788\"></p><p style=\"padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"789\">Type “localhost” in your browser it will open default IIS websites (see left image) and also check using drive C:// “Inetpub” directory should be created by IIS Service. If there is a directory and</p><p style=\"padding-left: 235pt;text-indent: 0pt;line-height: 14pt;text-align: justify;\" id=\"790\">localhost returns default websites<span class=\"s3\" id=\"791\">7 </span>means</p><p style=\"padding-top: 2pt;padding-left: 235pt;text-indent: 0pt;text-align: justify;\" id=\"792\">IIS is ready to use.</p><p class=\"s21\" style=\"padding-top: 10pt;padding-left: 33pt;text-indent: 0pt;text-align: left;\" id=\"793\">Defaultwebsites.image</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"794\"><br id=\"795\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"796\"><span id=\"797\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_017.png\" id=\"798\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"799\">7 <span class=\"s10\" id=\"800\">See image defaultwebsites.image</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"801\"><br id=\"802\"></p><h3 style=\"padding-top: 4pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading803\" class=\"heading803\"><a name=\"bookmark16\" id=\"804\" style=\"color: green;\">IIS Set Up</a></h3><div id=\"contentheading803\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-bottom: 4pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"805\">Until now we just turn on IIS7 in local machine. Here I will explain about Application Pool and other relevant topic to IIS and Umbraco CMS. Let‟s open Internet Information Service (IIS) Manager. To open IIS manager type “IIS” in search box windows search result will show up “internet Information Service” and press OK. It will open IIS manager windows. See screen bellow</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"806\"><span id=\"807\"><img width=\"605\" height=\"347\" alt=\"image\" src=\"Image_018.jpg\" id=\"808\"></span></p><p style=\"padding-top: 7pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"809\">General Description of IIS Manager environment</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"810\"><br id=\"811\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"812\"><a name=\"a18\" id=\"813\">Connections</a><span class=\"p\" id=\"814\">:</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"815\"><br id=\"816\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"817\">List of all websites that created by users. By default there one website name is “Default Web Site” which is IIS created automatically when we Turn On Internet Information Service from “Turn windows features on or off” program.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"818\"><a name=\"a19\" id=\"819\">Application Pools:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"820\"><br id=\"821\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"822\">According to Microsoft, when you run IIS 6.0 in worker process isolation mode, you can separate different Web applications and Web sites into groups known as <i id=\"823\">application pools</i>. An <i id=\"824\">application pool </i>is a group of one or more URLs that are served by a worker process or set of worker processes. Any Web directory or virtual</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"825\">directory can be assigned to an application pool. For more details you can follow link provided in reference<span class=\"s3\" id=\"826\">8</span>.</p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"827\"><a name=\"a20\" id=\"828\">Sites:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"829\"><br id=\"830\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"831\">You can create new sites inside your local IIS manager. Here we are going to create new websites for our Vcard Project. Sites menu contains list of created sites into your local machine. You can edit, delete and create easily by right clicking on specific sites.</p><h4 style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"832\"><a name=\"a21\" id=\"833\">Create new site:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"834\"><br id=\"835\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"836\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"837\"><br id=\"838\"></p></div></li></ul></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading737\" class=\"heading737\"><a name=\"bookmark15\" id=\"738\" >Turn On IIS Service</a></h3>","pageStyleReducedContent":"<div id=\"contentheading737\" ><p  id=\"739\">Here I assume that your machine is windows 7. To turn on IIS service follow instructions.</p><p  id=\"740\"><br id=\"741\"></p><p  id=\"742\"><span id=\"743\"><img width=\"295\" height=\"389\" alt=\"image\" src=\"Image_015.jpg\" id=\"744\"></span></p><ul id=\"l13\"><li  id=\"746\"><p  id=\"747\">Type “Turn Windows features on or off” in Search Box and press Enter</p><p  id=\"748\">It will open new windows. Navigate Internet Information Service and expand its tree.</p></li><li  id=\"749\"><p  id=\"750\">Navigate</p><p  id=\"751\"><br id=\"752\"></p><p  id=\"753\">-World Wide Web Service</p><p  id=\"754\"><br id=\"755\"></p><p  id=\"756\">-Application Development Feature</p><p  id=\"757\"><br id=\"758\"></p></li><li  id=\"759\"><p  id=\"760\">Checked</p><p  id=\"761\"><br id=\"762\"></p><ul id=\"l14\"><li  id=\"764\"><p  id=\"765\">NET Extensibility</p><p  id=\"766\"><br id=\"767\"></p></li><li  id=\"768\"><p  id=\"769\">ASP.NET</p><p  id=\"770\"><br id=\"771\"></p></li><li  id=\"772\"><p  id=\"773\">Server-Side Includes</p><p  id=\"774\"><br id=\"775\"></p></li></ul></li><li  id=\"776\"><p  id=\"777\">Press OK</p><p  id=\"778\"><br id=\"779\"></p><p  id=\"780\">Wait until “Turn Windows Features On or Off” Close automatically.</p><p  id=\"781\"><br id=\"782\"></p><p  id=\"783\"><span id=\"784\"><img width=\"256\" height=\"184\" alt=\"image\" src=\"Image_016.jpg\" id=\"785\"></span></p><p class=\"s8\"  id=\"786\">Test your IIS Server</p><p  id=\"787\"><br id=\"788\"></p><p  id=\"789\">Type “localhost” in your browser it will open default IIS websites (see left image) and also check using drive C:// “Inetpub” directory should be created by IIS Service. If there is a directory and</p><p  id=\"790\">localhost returns default websites<span class=\"s3\" id=\"791\">7 </span>means</p><p  id=\"792\">IIS is ready to use.</p><p class=\"s21\"  id=\"793\">Defaultwebsites.image</p><p  id=\"794\"><br id=\"795\"></p><p  id=\"796\"><span id=\"797\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_017.png\" id=\"798\"></span></p><p class=\"s20\"  id=\"799\">7 <span class=\"s10\" id=\"800\">See image defaultwebsites.image</span></p><p  id=\"801\"><br id=\"802\"></p><h3  id=\"heading803\" class=\"heading803\"><a name=\"bookmark16\" id=\"804\" >IIS Set Up</a></h3><div id=\"contentheading803\" ><p  id=\"805\">Until now we just turn on IIS7 in local machine. Here I will explain about Application Pool and other relevant topic to IIS and Umbraco CMS. Let‟s open Internet Information Service (IIS) Manager. To open IIS manager type “IIS” in search box windows search result will show up “internet Information Service” and press OK. It will open IIS manager windows. See screen bellow</p><p  id=\"806\"><span id=\"807\"><img width=\"605\" height=\"347\" alt=\"image\" src=\"Image_018.jpg\" id=\"808\"></span></p><p  id=\"809\">General Description of IIS Manager environment</p><p  id=\"810\"><br id=\"811\"></p><h4  id=\"812\"><a name=\"a18\" id=\"813\">Connections</a><span class=\"p\" id=\"814\">:</span></h4><p  id=\"815\"><br id=\"816\"></p><p  id=\"817\">List of all websites that created by users. By default there one website name is “Default Web Site” which is IIS created automatically when we Turn On Internet Information Service from “Turn windows features on or off” program.</p><h4  id=\"818\"><a name=\"a19\" id=\"819\">Application Pools:</a></h4><p  id=\"820\"><br id=\"821\"></p><p  id=\"822\">According to Microsoft, when you run IIS 6.0 in worker process isolation mode, you can separate different Web applications and Web sites into groups known as <i id=\"823\">application pools</i>. An <i id=\"824\">application pool </i>is a group of one or more URLs that are served by a worker process or set of worker processes. Any Web directory or virtual</p><p  id=\"825\">directory can be assigned to an application pool. For more details you can follow link provided in reference<span class=\"s3\" id=\"826\">8</span>.</p><h4  id=\"827\"><a name=\"a20\" id=\"828\">Sites:</a></h4><p  id=\"829\"><br id=\"830\"></p><p  id=\"831\">You can create new sites inside your local IIS manager. Here we are going to create new websites for our Vcard Project. Sites menu contains list of created sites into your local machine. You can edit, delete and create easily by right clicking on specific sites.</p><h4  id=\"832\"><a name=\"a21\" id=\"833\">Create new site:</a></h4><p  id=\"834\"><br id=\"835\"></p><p  id=\"836\">Instruction:</p><p  id=\"837\"><br id=\"838\"></p></div></li></ul></div>","sub":[]},{"pageId":"34","pageLevel":1,"pageOrder":"34","pageParentId":"30","pageName":"IIS Set Up","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 4pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading803\" class=\"heading803\"><a name=\"bookmark16\" id=\"804\" style=\"color: green;\">IIS Set Up</a></h3>","pageContent":"<div id=\"contentheading803\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-bottom: 4pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"805\">Until now we just turn on IIS7 in local machine. Here I will explain about Application Pool and other relevant topic to IIS and Umbraco CMS. Let‟s open Internet Information Service (IIS) Manager. To open IIS manager type “IIS” in search box windows search result will show up “internet Information Service” and press OK. It will open IIS manager windows. See screen bellow</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"806\"><span id=\"807\"><img width=\"605\" height=\"347\" alt=\"image\" src=\"Image_018.jpg\" id=\"808\"></span></p><p style=\"padding-top: 7pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"809\">General Description of IIS Manager environment</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"810\"><br id=\"811\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"812\"><a name=\"a18\" id=\"813\">Connections</a><span class=\"p\" id=\"814\">:</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"815\"><br id=\"816\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"817\">List of all websites that created by users. By default there one website name is “Default Web Site” which is IIS created automatically when we Turn On Internet Information Service from “Turn windows features on or off” program.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"818\"><a name=\"a19\" id=\"819\">Application Pools:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"820\"><br id=\"821\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"822\">According to Microsoft, when you run IIS 6.0 in worker process isolation mode, you can separate different Web applications and Web sites into groups known as <i id=\"823\">application pools</i>. An <i id=\"824\">application pool </i>is a group of one or more URLs that are served by a worker process or set of worker processes. Any Web directory or virtual</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"825\">directory can be assigned to an application pool. For more details you can follow link provided in reference<span class=\"s3\" id=\"826\">8</span>.</p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"827\"><a name=\"a20\" id=\"828\">Sites:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"829\"><br id=\"830\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"831\">You can create new sites inside your local IIS manager. Here we are going to create new websites for our Vcard Project. Sites menu contains list of created sites into your local machine. You can edit, delete and create easily by right clicking on specific sites.</p><h4 style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"832\"><a name=\"a21\" id=\"833\">Create new site:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"834\"><br id=\"835\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"836\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"837\"><br id=\"838\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading803\" class=\"heading803\"><a name=\"bookmark16\" id=\"804\" >IIS Set Up</a></h3>","pageStyleReducedContent":"<div id=\"contentheading803\" ><p  id=\"805\">Until now we just turn on IIS7 in local machine. Here I will explain about Application Pool and other relevant topic to IIS and Umbraco CMS. Let‟s open Internet Information Service (IIS) Manager. To open IIS manager type “IIS” in search box windows search result will show up “internet Information Service” and press OK. It will open IIS manager windows. See screen bellow</p><p  id=\"806\"><span id=\"807\"><img width=\"605\" height=\"347\" alt=\"image\" src=\"Image_018.jpg\" id=\"808\"></span></p><p  id=\"809\">General Description of IIS Manager environment</p><p  id=\"810\"><br id=\"811\"></p><h4  id=\"812\"><a name=\"a18\" id=\"813\">Connections</a><span class=\"p\" id=\"814\">:</span></h4><p  id=\"815\"><br id=\"816\"></p><p  id=\"817\">List of all websites that created by users. By default there one website name is “Default Web Site” which is IIS created automatically when we Turn On Internet Information Service from “Turn windows features on or off” program.</p><h4  id=\"818\"><a name=\"a19\" id=\"819\">Application Pools:</a></h4><p  id=\"820\"><br id=\"821\"></p><p  id=\"822\">According to Microsoft, when you run IIS 6.0 in worker process isolation mode, you can separate different Web applications and Web sites into groups known as <i id=\"823\">application pools</i>. An <i id=\"824\">application pool </i>is a group of one or more URLs that are served by a worker process or set of worker processes. Any Web directory or virtual</p><p  id=\"825\">directory can be assigned to an application pool. For more details you can follow link provided in reference<span class=\"s3\" id=\"826\">8</span>.</p><h4  id=\"827\"><a name=\"a20\" id=\"828\">Sites:</a></h4><p  id=\"829\"><br id=\"830\"></p><p  id=\"831\">You can create new sites inside your local IIS manager. Here we are going to create new websites for our Vcard Project. Sites menu contains list of created sites into your local machine. You can edit, delete and create easily by right clicking on specific sites.</p><h4  id=\"832\"><a name=\"a21\" id=\"833\">Create new site:</a></h4><p  id=\"834\"><br id=\"835\"></p><p  id=\"836\">Instruction:</p><p  id=\"837\"><br id=\"838\"></p></div>","sub":[]},{"pageId":"40","pageLevel":1,"pageOrder":"40","pageParentId":"30","pageName":"Downloading Umbraco files:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading933\" class=\"heading933\"><a name=\"bookmark18\" id=\"934\" style=\"color: green;\">Downloading Umbraco files:</a></h3>","pageContent":"<div id=\"contentheading933\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"935\">It‟s time to download Umbraco latest file from official site. Official site contains list of Umbraco release, most resent Umbraco release version is highly focused in download site. I recommend downloading latest version because every new release contains bug fix from previous version, added extra new features and improved better than previous release. Here you can argue that new version of Umbraco also contains new bugs and it may take longer time to fix because it‟s a new release. You are not wrong but my point is we all are here to learn new thing and challenge new problem, help others and get help from others so do not compromise to face new challenge and learn more, technology never becomes perfect, it‟s a process of learning from history, face new challenge in present and improve it better for future.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"936\">In my personal opinion I download one or two previous release then latest release version only for client websites because earlier version of release has known bugs and can be solved very fast because someone or other developer might be already faced or fixed such bugs. But in my local host or for my testing purpose I always download latest release because I always want to face new bugs that nobody discovered it and have a fun with that bugs. In this Vcard project I will download latest version of Umbraco release 4.7.</p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading933\" class=\"heading933\"><a name=\"bookmark18\" id=\"934\" >Downloading Umbraco files:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading933\" ><p  id=\"935\">It‟s time to download Umbraco latest file from official site. Official site contains list of Umbraco release, most resent Umbraco release version is highly focused in download site. I recommend downloading latest version because every new release contains bug fix from previous version, added extra new features and improved better than previous release. Here you can argue that new version of Umbraco also contains new bugs and it may take longer time to fix because it‟s a new release. You are not wrong but my point is we all are here to learn new thing and challenge new problem, help others and get help from others so do not compromise to face new challenge and learn more, technology never becomes perfect, it‟s a process of learning from history, face new challenge in present and improve it better for future.</p><p  id=\"936\">In my personal opinion I download one or two previous release then latest release version only for client websites because earlier version of release has known bugs and can be solved very fast because someone or other developer might be already faced or fixed such bugs. But in my local host or for my testing purpose I always download latest release because I always want to face new bugs that nobody discovered it and have a fun with that bugs. In this Vcard project I will download latest version of Umbraco release 4.7.</p></div>","sub":[]},{"pageId":"41","pageLevel":1,"pageOrder":"41","pageParentId":"30","pageName":"What to Download?","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading937\" class=\"heading937\"><a name=\"bookmark19\" id=\"938\" style=\"color: green;\">What to Download?</a></h3>","pageContent":"<div id=\"contentheading937\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s26\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"939\"><a href=\"http://umbraco.com/download\" class=\"a\" target=\"_blank\" id=\"940\">Now you get overview of downloading Umbraco. It‟s a good questions what to download? If you visit </a>http://umbraco.com/download <a href=\"http://umbraco.codeplex.com/releases/\" class=\"a\" target=\"_blank\" id=\"941\">sites to download, you can easily install using “Web Platform Installer”. Web platform Installer is Microsoft free software use to install program. Here I will not use “Web Platform Installer” because I want to show you more options. Visit Umbraco release or let‟s follow this link </a>http://umbraco.codeplex.com/releases/<span class=\"p\" id=\"942\">. This websites contains all Umbraco release version. On left menu side you can see current release version. Inside rectangle box you can see details of latest release version, for example Rating, Release date, update, Reviews, Number of Download etc. here look for Dev Status: if it‟s say stable it means it‟s a believe to be ready to use. On right side menu bar you can see pervious release of Umbraco. I said not to use Web Platform Installer to install Umbraco because it will install new release. If you would like to install other version then you need to browse codeplex for all releases.</span></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"943\">Let‟s back to main questions what to download? I would say first describe yourself and decide what to download. Here are three main categories so you need to choose one categories yourself based on your programming skills and .NET language skills.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"944\">Categories Basic <span class=\"p\" id=\"945\">– if you have basic knowledge of C#, object oriented program, MsSql database, if you know how to use usercontrol, webservices and classes to asp.net websites than I said its very basic to Umbraco so you can download Recommended Download by Umbraco sites. It‟s a binaries file.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"946\"><br id=\"947\"></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"948\">Categories Tester <span class=\"p\" id=\"949\">- if you have advanced level of C#, Object Oriented program knowledge and if you do not want to use mssql database but want to test Umbraco than you are as a tester. Please download “Umbraco x.x.x WebDeploy NET n.n” here x.x.x is Umbraco Release version and n.n is .NET frame work version. Until this book release its “Umbraco 4.7.0 WebDeploy NET 4.0” so download that files and test Umbraco without using MSSQL database.</span></h4><h4 style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"950\">Categories Advanced <a href=\"http://umbraco.codeplex.com/SourceControl/list/changesets\" class=\"a\" target=\"_blank\" id=\"951\">– If you can analyze other‟s c# code and have knowledge of Object Oriented Program, database and other programming language then you can download Source code from here </a><span style=\" color: #365F91;\" id=\"952\">http://umbraco.codeplex.com/SourceControl/list/changesets </span><span class=\"p\" id=\"953\">and have a fun with source code.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"954\"><br id=\"955\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"956\"><span id=\"957\"><img width=\"529\" height=\"331\" alt=\"image\" src=\"Image_021.jpg\" id=\"958\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"959\"><br id=\"960\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"961\">My personal opinion: I download Binary files for client websites development and I download source code files for learning purpose. I strongly recommend you to download source code because using source code files we can easily debug and see how Umbraco works. It‟s a good way to learn Umbraco. For Vcard project I download binary files, binary files are recommended by Umbraco official.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"962\"><br id=\"963\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading937\" class=\"heading937\"><a name=\"bookmark19\" id=\"938\" >What to Download?</a></h3>","pageStyleReducedContent":"<div id=\"contentheading937\" ><p class=\"s26\"  id=\"939\"><a href=\"http://umbraco.com/download\" class=\"a\" target=\"_blank\" id=\"940\">Now you get overview of downloading Umbraco. It‟s a good questions what to download? If you visit </a>http://umbraco.com/download <a href=\"http://umbraco.codeplex.com/releases/\" class=\"a\" target=\"_blank\" id=\"941\">sites to download, you can easily install using “Web Platform Installer”. Web platform Installer is Microsoft free software use to install program. Here I will not use “Web Platform Installer” because I want to show you more options. Visit Umbraco release or let‟s follow this link </a>http://umbraco.codeplex.com/releases/<span class=\"p\" id=\"942\">. This websites contains all Umbraco release version. On left menu side you can see current release version. Inside rectangle box you can see details of latest release version, for example Rating, Release date, update, Reviews, Number of Download etc. here look for Dev Status: if it‟s say stable it means it‟s a believe to be ready to use. On right side menu bar you can see pervious release of Umbraco. I said not to use Web Platform Installer to install Umbraco because it will install new release. If you would like to install other version then you need to browse codeplex for all releases.</span></p><p  id=\"943\">Let‟s back to main questions what to download? I would say first describe yourself and decide what to download. Here are three main categories so you need to choose one categories yourself based on your programming skills and .NET language skills.</p><h4  id=\"944\">Categories Basic <span class=\"p\" id=\"945\">– if you have basic knowledge of C#, object oriented program, MsSql database, if you know how to use usercontrol, webservices and classes to asp.net websites than I said its very basic to Umbraco so you can download Recommended Download by Umbraco sites. It‟s a binaries file.</span></h4><p  id=\"946\"><br id=\"947\"></p><h4  id=\"948\">Categories Tester <span class=\"p\" id=\"949\">- if you have advanced level of C#, Object Oriented program knowledge and if you do not want to use mssql database but want to test Umbraco than you are as a tester. Please download “Umbraco x.x.x WebDeploy NET n.n” here x.x.x is Umbraco Release version and n.n is .NET frame work version. Until this book release its “Umbraco 4.7.0 WebDeploy NET 4.0” so download that files and test Umbraco without using MSSQL database.</span></h4><h4  id=\"950\">Categories Advanced <a href=\"http://umbraco.codeplex.com/SourceControl/list/changesets\" class=\"a\" target=\"_blank\" id=\"951\">– If you can analyze other‟s c# code and have knowledge of Object Oriented Program, database and other programming language then you can download Source code from here </a><span  id=\"952\">http://umbraco.codeplex.com/SourceControl/list/changesets </span><span class=\"p\" id=\"953\">and have a fun with source code.</span></h4><p  id=\"954\"><br id=\"955\"></p><p  id=\"956\"><span id=\"957\"><img width=\"529\" height=\"331\" alt=\"image\" src=\"Image_021.jpg\" id=\"958\"></span></p><p  id=\"959\"><br id=\"960\"></p><p  id=\"961\">My personal opinion: I download Binary files for client websites development and I download source code files for learning purpose. I strongly recommend you to download source code because using source code files we can easily debug and see how Umbraco works. It‟s a good way to learn Umbraco. For Vcard project I download binary files, binary files are recommended by Umbraco official.</p><p  id=\"962\"><br id=\"963\"></p></div>","sub":[]},{"pageId":"42","pageLevel":1,"pageOrder":"42","pageParentId":"30","pageName":"Unzip ZIP format","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading964\" class=\"heading964\"><a name=\"bookmark20\" id=\"965\" style=\"color: green;\">Unzip ZIP format</a></h3>","pageContent":"<div id=\"contentheading964\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"966\">Umbraco downloaded files are compressed in ZIP format, I guess you already worked with zip format; one important thing for Umbraco zip file before extract is to unblock it. Make sure you unblock zip file before extract.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"967\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"968\"><br id=\"969\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading964\" class=\"heading964\"><a name=\"bookmark20\" id=\"965\" >Unzip ZIP format</a></h3>","pageStyleReducedContent":"<div id=\"contentheading964\" ><p  id=\"966\">Umbraco downloaded files are compressed in ZIP format, I guess you already worked with zip format; one important thing for Umbraco zip file before extract is to unblock it. Make sure you unblock zip file before extract.</p><p  id=\"967\">Instruction:</p><p  id=\"968\"><br id=\"969\"></p></div>","sub":[]},{"pageId":"43","pageLevel":1,"pageOrder":"43","pageParentId":"30","pageName":"Install Umbraco step by step guide","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading1004\" class=\"heading1004\"><a name=\"bookmark21\" id=\"1005\" style=\"color: green;\">Install Umbraco step by step guide</a></h3>","pageContent":"<div id=\"contentheading1004\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"1006\">To install Umbraco Follow these process Instruction:</p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading1004\" class=\"heading1004\"><a name=\"bookmark21\" id=\"1005\" >Install Umbraco step by step guide</a></h3>","pageStyleReducedContent":"<div id=\"contentheading1004\" ><p  id=\"1006\">To install Umbraco Follow these process Instruction:</p></div>","sub":[]}]},{"pageId":"45","pageLevel":0,"pageOrder":"45","pageParentId":"-1","pageName":"Back End Working Environment","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading1137\" class=\"heading1137\"><a name=\"bookmark22\" id=\"1138\" style=\"color: lime;\">Back End Working Environment</a></h2>","pageContent":"<div id=\"contentheading1137\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 7pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"1139\">1 2 3 4 5</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1140\"><br id=\"1141\"></p><p style=\"padding-top: 4pt;padding-left: 106pt;text-indent: 0pt;text-align: left;\" id=\"1142\">6 8 9 10</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1143\"><br id=\"1144\"></p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: right;\" id=\"1145\">13</p><p style=\"padding-left: 75pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1146\">7</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1147\"><br id=\"1148\"></p><p style=\"padding-top: 4pt;padding-left: 86pt;text-indent: 0pt;text-align: left;\" id=\"1149\">11</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1150\"><br id=\"1151\"></p><p style=\"padding-top: 4pt;padding-left: 106pt;text-indent: 0pt;text-align: left;\" id=\"1152\">12</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1153\"><br id=\"1154\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1155\"><br id=\"1156\"></p><ol id=\"l21\"><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1158\"><p style=\"display: inline;\" id=\"1159\">Create: it‟s dynamic, will change based on Section item see number 12.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1160\"><br id=\"1161\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1162\"><p style=\"display: inline;\" id=\"1163\">Search: type text to search content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1164\"><br id=\"1165\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1166\"><p style=\"display: inline;\" id=\"1167\">About: To view Umbraco installed version, licensed and other information.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1168\"><br id=\"1169\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1170\"><p style=\"display: inline;\" id=\"1171\">Help: external link, will open Wiki page about Umbraco</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1172\"><br id=\"1173\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1174\"><p style=\"display: inline;\" id=\"1175\">Logout: click to log out. It will contain login user name</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1176\"><br id=\"1177\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1178\"><p style=\"display: inline;\" id=\"1179\">Content: it‟s a dynamic, will changed based on Section Items see number 12</p></li><li style=\"padding-top: 10pt;padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1180\"><p style=\"display: inline;\" id=\"1181\">Secondary items or child items of Main Items.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1182\"><br id=\"1183\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1184\"><p style=\"display: inline;\" id=\"1185\">Get Started: Umbraco provides information, news and external links</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1186\"><br id=\"1187\"></p></li><li style=\"padding-left: 41pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"1188\"><p style=\"display: inline;\" id=\"1189\">Latest edits: list latest change you have made on you site. 10)Change Password: change admin password. Password is hashed</p></li></ol><ol id=\"l22\"><li style=\"padding-left: 59pt;text-indent: -18pt;text-align: left;\" id=\"1191\"><p style=\"display: inline;\" id=\"1192\">Section: Main menu items, we can add custom section. Not covered here</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1193\"><br id=\"1194\"></p></li><li style=\"padding-left: 59pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1195\"><p style=\"display: inline;\" id=\"1196\">Section Items: Items inside section. Sub Menu part of Section Menu. Mostly used in developing Umbraco, creating content and other</p></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"1197\"><br id=\"1198\"></p><p style=\"padding-top: 4pt;padding-left: 59pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1199\">administrator purpose. Umbraco come up with six default section items Content, Media, User, Settings, Developer and Members.</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1200\">Content: here editor create articles, edit, upload image. It‟s not technical stuff</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1201\"><br id=\"1202\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1203\">Media: it contains Media items. Image, Video, Audio is mostly Media items. Uploaded files go inside Media section. Using .net control developer can easily use others Directory to store files on their needs and requirements.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1204\">User: contains list of Users. All registered user are listed under User. Here you can set up user id, password, Email, permission and other personal information.</p><ul id=\"l23\"><li style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 18pt;text-align: left;\" id=\"1206\"><p style=\"display: inline;\" id=\"1207\">Users</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1208\"><p style=\"display: inline;\" id=\"1209\">User types</p></li><li style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 18pt;line-height: 178%;text-align: left;\" id=\"1210\"><p style=\"display: inline;\" id=\"1211\">User Permission Members: it contains</p></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1212\"><p style=\"display: inline;\" id=\"1213\">Members</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1214\"><p style=\"display: inline;\" id=\"1215\">Member Groups</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1216\"><p style=\"display: inline;\" id=\"1217\">Member types</p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"1218\">Settings: widely used in this “how to Umbraco”. Setting used to set up umbraco site. It contains</p></li><li style=\"padding-top: 9pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1219\"><p style=\"display: inline;\" id=\"1220\">Document Type</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1221\"><p style=\"display: inline;\" id=\"1222\">Templates</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1223\"><p style=\"display: inline;\" id=\"1224\">Style Sheet</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1225\"><p style=\"display: inline;\" id=\"1226\">Scripts</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1227\"><p style=\"display: inline;\" id=\"1228\">Dictionary</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1229\"><p style=\"display: inline;\" id=\"1230\">Language</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1231\"><p style=\"display: inline;\" id=\"1232\">Media types</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1233\"><br id=\"1234\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1235\">Developer: it contains all technical stuff.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1236\"><br id=\"1237\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1238\"><p style=\"display: inline;\" id=\"1239\">Cache browser</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1240\"><p style=\"display: inline;\" id=\"1241\">Data Types</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1242\"><p style=\"display: inline;\" id=\"1243\">Macro</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1244\"><p style=\"display: inline;\" id=\"1245\">Packages</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1246\"><p style=\"display: inline;\" id=\"1247\">Scripting Files</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1248\"><p style=\"display: inline;\" id=\"1249\">Xslt Files</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"1250\"><br id=\"1251\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1252\"><a name=\"a24\" id=\"1253\">Chapter 03: Document Type</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"1254\"><br id=\"1255\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1256\"><br id=\"1257\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1258\"><span id=\"1259\"><img width=\"529\" height=\"1\" alt=\"image\" src=\"Image_034.png\" id=\"1260\"></span></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading1137\" class=\"heading1137\"><a name=\"bookmark22\" id=\"1138\" >Back End Working Environment</a></h2>","pageStyleReducedContent":"<div id=\"contentheading1137\" ><p  id=\"1139\">1 2 3 4 5</p><p  id=\"1140\"><br id=\"1141\"></p><p  id=\"1142\">6 8 9 10</p><p  id=\"1143\"><br id=\"1144\"></p><p  id=\"1145\">13</p><p  id=\"1146\">7</p><p  id=\"1147\"><br id=\"1148\"></p><p  id=\"1149\">11</p><p  id=\"1150\"><br id=\"1151\"></p><p  id=\"1152\">12</p><p  id=\"1153\"><br id=\"1154\"></p><p  id=\"1155\"><br id=\"1156\"></p><ol id=\"l21\"><li  id=\"1158\"><p  id=\"1159\">Create: it‟s dynamic, will change based on Section item see number 12.</p><p  id=\"1160\"><br id=\"1161\"></p></li><li  id=\"1162\"><p  id=\"1163\">Search: type text to search content</p><p  id=\"1164\"><br id=\"1165\"></p></li><li  id=\"1166\"><p  id=\"1167\">About: To view Umbraco installed version, licensed and other information.</p><p  id=\"1168\"><br id=\"1169\"></p></li><li  id=\"1170\"><p  id=\"1171\">Help: external link, will open Wiki page about Umbraco</p><p  id=\"1172\"><br id=\"1173\"></p></li><li  id=\"1174\"><p  id=\"1175\">Logout: click to log out. It will contain login user name</p><p  id=\"1176\"><br id=\"1177\"></p></li><li  id=\"1178\"><p  id=\"1179\">Content: it‟s a dynamic, will changed based on Section Items see number 12</p></li><li  id=\"1180\"><p  id=\"1181\">Secondary items or child items of Main Items.</p><p  id=\"1182\"><br id=\"1183\"></p></li><li  id=\"1184\"><p  id=\"1185\">Get Started: Umbraco provides information, news and external links</p><p  id=\"1186\"><br id=\"1187\"></p></li><li  id=\"1188\"><p  id=\"1189\">Latest edits: list latest change you have made on you site. 10)Change Password: change admin password. Password is hashed</p></li></ol><ol id=\"l22\"><li  id=\"1191\"><p  id=\"1192\">Section: Main menu items, we can add custom section. Not covered here</p><p  id=\"1193\"><br id=\"1194\"></p></li><li  id=\"1195\"><p  id=\"1196\">Section Items: Items inside section. Sub Menu part of Section Menu. Mostly used in developing Umbraco, creating content and other</p></li></ol><p  id=\"1197\"><br id=\"1198\"></p><p  id=\"1199\">administrator purpose. Umbraco come up with six default section items Content, Media, User, Settings, Developer and Members.</p><p  id=\"1200\">Content: here editor create articles, edit, upload image. It‟s not technical stuff</p><p  id=\"1201\"><br id=\"1202\"></p><p  id=\"1203\">Media: it contains Media items. Image, Video, Audio is mostly Media items. Uploaded files go inside Media section. Using .net control developer can easily use others Directory to store files on their needs and requirements.</p><p  id=\"1204\">User: contains list of Users. All registered user are listed under User. Here you can set up user id, password, Email, permission and other personal information.</p><ul id=\"l23\"><li  id=\"1206\"><p  id=\"1207\">Users</p></li><li  id=\"1208\"><p  id=\"1209\">User types</p></li><li  id=\"1210\"><p  id=\"1211\">User Permission Members: it contains</p></li><li  id=\"1212\"><p  id=\"1213\">Members</p></li><li  id=\"1214\"><p  id=\"1215\">Member Groups</p></li><li  id=\"1216\"><p  id=\"1217\">Member types</p><p  id=\"1218\">Settings: widely used in this “how to Umbraco”. Setting used to set up umbraco site. It contains</p></li><li  id=\"1219\"><p  id=\"1220\">Document Type</p></li><li  id=\"1221\"><p  id=\"1222\">Templates</p></li><li  id=\"1223\"><p  id=\"1224\">Style Sheet</p></li><li  id=\"1225\"><p  id=\"1226\">Scripts</p></li><li  id=\"1227\"><p  id=\"1228\">Dictionary</p></li><li  id=\"1229\"><p  id=\"1230\">Language</p></li><li  id=\"1231\"><p  id=\"1232\">Media types</p><p  id=\"1233\"><br id=\"1234\"></p><p  id=\"1235\">Developer: it contains all technical stuff.</p><p  id=\"1236\"><br id=\"1237\"></p></li><li  id=\"1238\"><p  id=\"1239\">Cache browser</p></li><li  id=\"1240\"><p  id=\"1241\">Data Types</p></li><li  id=\"1242\"><p  id=\"1243\">Macro</p></li><li  id=\"1244\"><p  id=\"1245\">Packages</p></li><li  id=\"1246\"><p  id=\"1247\">Scripting Files</p></li><li  id=\"1248\"><p  id=\"1249\">Xslt Files</p></li></ul><p  id=\"1250\"><br id=\"1251\"></p><h1  id=\"1252\"><a name=\"a24\" id=\"1253\">Chapter 03: Document Type</a></h1><p  id=\"1254\"><br id=\"1255\"></p><p  id=\"1256\"><br id=\"1257\"></p><p  id=\"1258\"><span id=\"1259\"><img width=\"529\" height=\"1\" alt=\"image\" src=\"Image_034.png\" id=\"1260\"></span></p></div>","sub":[]},{"pageId":"47","pageLevel":0,"pageOrder":"47","pageParentId":"-1","pageName":"Document Type:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1261\" class=\"heading1261\"><a name=\"bookmark23\" id=\"1262\" style=\"color: lime;\">Document Type:</a></h2>","pageContent":"<div id=\"contentheading1261\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1263\">Document type is a core feature<span class=\"s3\" id=\"1264\">12 </span>of Umbraco cms; it is out of box document type feature. If you already work with Drupal CMS, you might be working with CCK (Content Construction Kit), Document Type is exactly same purpose as CCK that allows you to create fields.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1265\">Document type is a group of fields, that controls fields and fields are used to input data by content creator or editor while creating content on Umbraco sites. Content is second step after Document Type so that Document type structures the input fields, creates environment to add or create new content and facilitate content creating services to Editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1266\"><br id=\"1267\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading1261\" class=\"heading1261\"><a name=\"bookmark23\" id=\"1262\" >Document Type:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading1261\" ><p  id=\"1263\">Document type is a core feature<span class=\"s3\" id=\"1264\">12 </span>of Umbraco cms; it is out of box document type feature. If you already work with Drupal CMS, you might be working with CCK (Content Construction Kit), Document Type is exactly same purpose as CCK that allows you to create fields.</p><p  id=\"1265\">Document type is a group of fields, that controls fields and fields are used to input data by content creator or editor while creating content on Umbraco sites. Content is second step after Document Type so that Document type structures the input fields, creates environment to add or create new content and facilitate content creating services to Editor.</p><p  id=\"1266\"><br id=\"1267\"></p></div>","sub":[]},{"pageId":"48","pageLevel":0,"pageOrder":"48","pageParentId":"-1","pageName":"Document Type for Developers:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 8pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1268\" class=\"heading1268\"><a name=\"bookmark24\" id=\"1269\" style=\"color: lime;\">Document Type for Developers:</a></h2>","pageContent":"<div id=\"contentheading1268\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1270\">Developer creates document type based on groups of data that needs to be saved to and provides rich service to manage data and customize input fields.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1271\">You may still not clear what document type is so I am going to give one example as vcard case. Vcard websites I called “Semic Provider” has many fields like</p><ul id=\"l24\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1273\"><p style=\"display: inline;\" id=\"1274\">Logo</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1275\"><p style=\"display: inline;\" id=\"1276\">Title of Websites “Semic Provider” and</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1277\"><p style=\"display: inline;\" id=\"1278\">Slogan “Where content is understood by human and machine”.</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1279\">As a developer I want to provide a service to client so s/he can upload Logo, edit title of websites and slogan. Developer could do hard coding text into templates to display logo, title of websites and slogan but client can‟t change it later if s/he decided to change it. Client wants cms because s/he wants to control content without having knowledge of technical stuff like editing templates so as a developer we should provide more control over content. Logo, Title of Website and slogan are not same for all time; they can be changed later by client. To solve that problem we need to create Document type.</p><p style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1280\">Document type is not single subject it‟s more complex for new Umbraco developer. I am going to look more details about document types. It contains Properties, Info, Structure and Tabs.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"1281\">Properties<span class=\"p\" id=\"1282\">: it‟s an input field that you create in document type, has more properties</span></h4></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1283\"><p style=\"display: inline;\" id=\"1284\">Name: name of your input field</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"1285\"><p style=\"display: inline;\" id=\"1286\">Alias: alias used to retrieve value or fetch value that properties have</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1287\"><p style=\"display: inline;\" id=\"1288\">Type: input type for example , Text box, upload, Button, check box etc. these are based on Data Type</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1289\"><p style=\"display: inline;\" id=\"1290\">Tab- by default properties is assign to generic properties but you can assign to your custom tabs</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1291\"><br id=\"1292\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1293\"><span id=\"1294\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_035.png\" id=\"1295\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1296\"><a href=\"http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"1297\">12 </a>http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder- introduction/document-types official video about Document Type introduction</p><h4 style=\"padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1298\">Tabs<span class=\"p\" id=\"1299\">: Tabs is name of group for example name, age, address and email properties of person can be group together with tabs “personal Details” so in Tabs we create “Personal Details” and in Property tab we assign name, age, address and email properties to “Personal Details” tab. Tab and Tabs should not be confuse. Tabs, Properties, Structure and Info have save level inside Document Type tree and tab is child of Properties.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1300\"><br id=\"1301\"></p><h4 style=\"padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1302\">Structure<span class=\"p\" id=\"1303\">: Document type can have parent or child document Type here you check what‟s should be parent or child document type is allowed</span></h4><h4 style=\"padding-top: 10pt;padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1304\">Info<span class=\"p\" id=\"1305\">: it‟s not that much important as Properties, Tabs and Structure. Here you can assign template and other general setting or get more information about Document Type. More available settings inside Info are listed below. </span><span class=\"s10\" id=\"1306\">These are taken from official Umbraco sites. Please visit references.</span></h4><ul id=\"l25\"><li style=\"padding-left: 46pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1308\"><p style=\"display: inline;\" id=\"1309\">Name: name of Document Type</p></li><li style=\"padding-top: 2pt;padding-left: 46pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1310\"><p style=\"display: inline;\" id=\"1311\">Alias: alias of Document Type, use by Umbraco and developer when they work with Umbraco API and CodeInProject.</p></li><li style=\"padding-left: 46pt;text-indent: -18pt;text-align: left;\" id=\"1312\"><p style=\"display: inline;\" id=\"1313\">Thumbnail: Thumb image of Document Type displayed on create page dialog.</p></li><li style=\"padding-top: 2pt;padding-left: 46pt;text-indent: -18pt;text-align: left;\" id=\"1314\"><p style=\"display: inline;\" id=\"1315\">Icon: Icon of Document Type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1316\"><br id=\"1317\"></p></li><li style=\"padding-left: 46pt;text-indent: -18pt;text-align: left;\" id=\"1318\"><p style=\"display: inline;\" id=\"1319\">Description: Description of Document Type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1320\"><br id=\"1321\"></p></li><li style=\"padding-left: 46pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1322\"><p style=\"display: inline;\" id=\"1323\">Allowed Template. It is use to present data to end uses. If you fetch data using Xslt you can make document type without templates but Content based on that document type will not be able to provide preview mode if there is no associated template. One Document Type can have more than one template.</p></li><li style=\"padding-top: 10pt;padding-left: 46pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1324\"><p style=\"display: inline;\" id=\"1325\">Default Templates: that is a default template of document type. And used by Document Type</p></li></ul></li></ul><p class=\"s30\" style=\"padding-top: 9pt;padding-left: 10pt;text-indent: 0pt;text-align: justify;\" id=\"1326\"><a name=\"bookmark25\" id=\"1327\">Visual Diagram</a><span class=\"s31\" id=\"1328\">13 </span>for Document Type<span class=\"h3\" id=\"1329\">:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1330\"><br id=\"1331\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1332\"><span id=\"1333\"><img width=\"607\" height=\"165\" alt=\"image\" src=\"Image_036.png\" id=\"1334\"></span></p><p class=\"s32\" style=\"padding-top: 4pt;padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1335\">Document Type <span class=\"s10\" id=\"1336\">Name: </span><span class=\"s33\" id=\"1337\">Properties:</span></p><p class=\"s34\" style=\"padding-left: 13pt;text-indent: 18pt;line-height: 111%;text-align: left;\" id=\"1338\">- <span class=\"s35\" id=\"1339\">Alias: </span><span class=\"s33\" id=\"1340\">Tabs:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1341\"><br id=\"1342\"></p><h4 style=\"padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1343\">Create Content <span class=\"s36\" id=\"1344\">Properties and Tabs </span><span class=\"p\" id=\"1345\">of Document type</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1346\"><br id=\"1347\"></p><h4 style=\"padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"1348\"><a name=\"a25\" id=\"1349\">Templates</a><span class=\"p\" id=\"1350\">:</span></h4><p class=\"s23\" style=\"padding-top: 2pt;padding-left: 10pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1351\">Alias <span style=\" color: #000;\" id=\"1352\">of Document Type‟s Properties</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1353\"><br id=\"1354\"></p><h4 style=\"padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1355\"><a name=\"a26\" id=\"1356\">Presentation of Content</a></h4><p style=\"padding-left: 13pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"1357\">End Users</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1358\"><br id=\"1359\"></p><p style=\"padding-left: 9pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1360\"><span id=\"1361\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_037.png\" id=\"1362\"></span></p><p class=\"s3\" style=\"padding-top: 3pt;padding-left: 10pt;text-indent: 0pt;line-height: 120%;text-align: left;\" id=\"1363\">13 <span class=\"s10\" id=\"1364\">These diagrams are my own concept and may be other developer argues with Diagrams. There is no official diagram for Document Type.</span></p><p class=\"s10\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"1365\">References taken dates April 14, 2011</p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1366\">Diagram show, first create Document Type, second create Content based on Document Type Properties, use Alias of Document Type‟s properties and display data to End users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1367\"><br id=\"1368\"></p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1369\"><a name=\"a27\" id=\"1370\">Practical: let’s create Document Type for “Sites Setting”</a></h4><h3 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1371\"><a name=\"bookmark26\" id=\"1372\">Document Type Generic Properties: </a><span id=\"1373\"><img width=\"294\" height=\"22\" alt=\"image\" src=\"Image_038.jpg\" id=\"1374\"></span></h3><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1375\">Instruction:</p><ul id=\"l26\"><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1377\"><p style=\"display: inline;\" id=\"1378\">open Backend of Umbraco sites (your site /Umbraco/) in my case localhost:8080/umbraco/</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1379\"><p style=\"display: inline;\" id=\"1380\">Provide login credentials user id and password (my case “admin” “root” login and password respectively)</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1381\"><p style=\"display: inline;\" id=\"1382\">Click Setting on Section at bottom left corner, it will list all available features on Setting on top left corner. Expand Document Type</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1383\"><p style=\"display: inline;\" id=\"1384\">If you follow me Document Type must be empty so nothing will happen it‟s because I decided not to install any starter kits. Now I will create new document Type</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1385\"><p style=\"display: inline;\" id=\"1386\">Right Click on Document Type and Click “Create”. New windows popup.</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1387\"><p style=\"display: inline;\" id=\"1388\">Master Document Type: select none…</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1389\"><p style=\"display: inline;\" id=\"1390\">Name: name for Document Type I choose “Web Site Global Setting” but you can choose different if you want. Its name of document type.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1391\"><p style=\"display: inline;\" id=\"1392\">By Default “Create matching templates” is checked so leave default, it will create matching templates and we will use that templates as master templates.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1393\"><p style=\"display: inline;\" id=\"1394\">Press “Create” Button</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1395\"><p style=\"display: inline;\" id=\"1396\">Now Umbraco created new document Type and provide more option to input.</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1397\"><p style=\"display: inline;\" id=\"1398\">Click “Web site global Setting” to open document type. It will open four properties Info, Structure, Generic Properties and Tabs</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1399\"><p style=\"display: inline;\" id=\"1400\">Info: if you want to follow me provide these information</p><ul id=\"l27\"><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 108%;text-align: left;\" id=\"1402\"><p class=\"s8\" style=\"display: inline;\" id=\"1403\">Name <span class=\"p\" id=\"1404\">and </span>Alias <span class=\"p\" id=\"1405\">is not recommended to change because it will effect whole system</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1406\"><p class=\"s8\" style=\"display: inline;\" id=\"1407\">Icon<span class=\"p\" id=\"1408\">: Setting Agent. Select from dropdown</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1409\"><p class=\"s8\" style=\"display: inline;\" id=\"1410\">Thumbnail<span class=\"p\" id=\"1411\">: developer.png select from dropdown</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 108%;text-align: left;\" id=\"1412\"><p class=\"s8\" style=\"display: inline;\" id=\"1413\">Description<span class=\"p\" id=\"1414\">: “Manage your websites. Here you can set up your global sites. Example change logo, slogan etc.”</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1415\"><p class=\"s8\" style=\"display: inline;\" id=\"1416\">Allowed templates <span class=\"p\" id=\"1417\">and </span>Default Templates <span class=\"p\" id=\"1418\">leave default do not change it.</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1419\"><h4 style=\"display: inline;\" id=\"1420\"><a name=\"a28\" id=\"1421\">Remember to save before jump to next property</a><span class=\"p\" id=\"1422\">.</span></h4></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1423\"><p style=\"display: inline;\" id=\"1424\">You must see balloon success message at bottom right corner if anything goes wrong it will show up balloon message with error details.</p></li></ul></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1425\"><p style=\"display: inline;\" id=\"1426\">Structure: leave Default</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1427\"><p style=\"display: inline;\" id=\"1428\">Tabs: do not create for this document type</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1429\"><p style=\"display: inline;\" id=\"1430\">Generic Properties: click on Generic Properties. It‟s a most important in document Type. Click on “Add New Property”.</p></li><li style=\"padding-top: 3pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1431\"><p style=\"display: inline;\" id=\"1432\">It will expand fields to input data, if you want to follow me provide these information without quotes</p><ul id=\"l28\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"1434\"><p class=\"s8\" style=\"display: inline;\" id=\"1435\">Name<span class=\"p\" id=\"1436\">: “Site Name”</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1437\"><p class=\"s8\" style=\"display: inline;\" id=\"1438\">Alias<span class=\"p\" id=\"1439\">: Leave Default, Umbraco will generate for you</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1440\"><p class=\"s8\" style=\"display: inline;\" id=\"1441\">Type<span class=\"p\" id=\"1442\">: Textstring , select from Drop down menu</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1443\"><p class=\"s8\" style=\"display: inline;\" id=\"1444\">Tab<span class=\"p\" id=\"1445\">: Leave Default</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1446\"><p class=\"s8\" style=\"display: inline;\" id=\"1447\">Mandator<span class=\"p\" id=\"1448\">: checked, means, it should not be empty</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1449\"><p class=\"s8\" style=\"display: inline;\" id=\"1450\">Validation<span class=\"p\" id=\"1451\">: for now leave empty</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1452\"><p class=\"s8\" style=\"display: inline;\" id=\"1453\">Description<span class=\"p\" id=\"1454\">: “Your Site Name”</span></p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1455\"><h4 style=\"display: inline;\" id=\"1456\"><a name=\"a29\" id=\"1457\">Remember to save before jump to next properties</a><span class=\"p\" id=\"1458\">.</span></h4></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"1459\"><p style=\"display: inline;\" id=\"1460\">You can see balloon “success message” at bottom right corner if anything goes wrong it will show up balloon message with error details, correct error based on error message and Save again.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1461\">See captured screen as references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1462\"><br id=\"1463\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1464\"><br id=\"1465\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1466\">Document</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1467\">Save</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1468\">Document Type</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1469\">Add New Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1470\">Document</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1471\">Save</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1472\">Document Type</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1473\">Add New Property</p><p class=\"s10\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: left;\" id=\"1474\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1475\"> </span><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1476\"> </span>\t\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1477\"><br id=\"1478\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1479\"><span id=\"1480\"><img width=\"602\" height=\"546\" alt=\"image\" src=\"Image_039.png\" id=\"1481\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1482\">Delete</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1483\">Delete</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1484\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1485\">Settings</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1486\">Settings</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1487\"></p><p style=\"padding-top: 4pt;padding-left: 265pt;text-indent: -154pt;line-height: 113%;text-align: justify;\" id=\"1488\">Drop Down Menu <span class=\"s37\" id=\"1489\">Expand </span><span class=\"s10\" id=\"1490\">collapse Property</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1491\"><br id=\"1492\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1493\">Drag and Drop</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1494\">Drag and Drop</p><p style=\"padding-left: 130pt;text-indent: 0pt;text-align: left;\" id=\"1495\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1496\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1497\"><br id=\"1498\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1499\"><br id=\"1500\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 150%;text-align: left;\" id=\"1501\">Drag and Drop: <span class=\"p\" id=\"1502\">To sort property order, Umbraco automatically saves sorted order. </span>Delete: <span class=\"p\" id=\"1503\">To delete Property Type, if you delete property type it will delete all content relevant to that particular Property Type</span></h4><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1504\">Expand collapse Icon. <span class=\"p\" id=\"1505\">It will allows to expand or Collapse property Menu</span></h4><h4 style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1506\">Add New Property: <span class=\"p\" id=\"1507\">To Add new property</span></h4><h4 style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1508\">DropDown Menu: <span class=\"p\" id=\"1509\">to select value from Types or assign property to Tabs.</span></h4><p style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1510\">You must save manually after change; Umbraco does not automatically save for you.</p><h4 style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1511\">Alias<span class=\"p\" id=\"1512\">: alias is case sensitive and if you modify alias you may lose data if you are not sure how alias works. It‟s better not to change it in case you have to do so please make sure update in other parts of Umbraco system when you used that alias to fetch data. Alias is used to fetch data by Umbraco.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1513\"><br id=\"1514\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1515\">Type<span class=\"p\" id=\"1516\">: there are many types out of box available, for example, Rich text editors, True/False, Textstring, Upload, all are called Data Type I will discuss later. Changing type will lost data in content editing page but will still remain on database unless you save content after type changed. It‟s better not to change so make decision before you decide what type should be used.</span></h4><p style=\"padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"1517\">Some tips: if you want simple text editor select simple text editor, Textstring allows only to type text, Rich text editor will allows more rich features to content editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1518\"><br id=\"1519\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1520\"><a name=\"a30\" id=\"1521\">Note:</a></h4><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1522\">Repeat Same Process for <i id=\"1523\">Name</i>: “Slogan”, <i id=\"1524\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1525\">Type</i>: Textstring, <i id=\"1526\">Mandatory</i>: Checked, <i id=\"1527\">Description</i>: “Slogan here”</h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1528\"><br id=\"1529\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1530\">Repeat Same Process for <i id=\"1531\">Name</i>: “Logo”, <i id=\"1532\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1533\">Type</i>: Upload, <i id=\"1534\">Mandatory</i>: leave default, <i id=\"1535\">Description</i>: “Upload logo here”.</h4><h4 style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1536\"><a name=\"a31\" id=\"1537\">Notes: Type: upload allows content Creator to upload Image or files while create content, Type: Textstring allows to type text in input text field.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1538\"><br id=\"1539\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1540\">Let‟s see our final web grid how it look likes and create more Document Type for Semic website. See captured screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1541\"><br id=\"1542\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1543\">1</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1544\">2</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1545\">1</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1546\">2</p><p class=\"s10\" style=\"padding-left: 91pt;text-indent: 0pt;text-align: left;\" id=\"1547\">\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1548\"><br id=\"1549\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1550\">3</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1551\">3</p><p style=\"padding-left: 172pt;text-indent: 0pt;text-align: left;\" id=\"1552\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1553\"><br id=\"1554\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1555\"><br id=\"1556\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1557\">4</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1558\">4</p><p style=\"padding-left: 405pt;text-indent: 0pt;text-align: left;\" id=\"1559\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1560\"><br id=\"1561\"></p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1562\">5</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"1563\">5</p><p style=\"padding-left: 255pt;text-indent: 0pt;text-align: left;\" id=\"1564\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1565\"><br id=\"1566\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1567\"><span id=\"1568\"><img width=\"616\" height=\"384\" alt=\"image\" src=\"Image_040.png\" id=\"1569\"></span></p><ol id=\"l29\"><li style=\"padding-top: 4pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1571\"><p style=\"display: inline;\" id=\"1572\">Logo</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1573\"><p style=\"display: inline;\" id=\"1574\">Title</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1575\"><p style=\"display: inline;\" id=\"1576\">Slogan</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1577\"><p style=\"display: inline;\" id=\"1578\">Navigation Bar</p></li><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1579\"><p style=\"display: inline;\" id=\"1580\">Body</p></li></ol><h3 style=\"padding-top: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1581\" class=\"heading1581\"><a name=\"bookmark27\" id=\"1582\" style=\"color: green;\">Document Type “Tabs</a><span class=\"s3\" id=\"1583\">” </span><span id=\"1584\"><img width=\"400\" height=\"25\" alt=\"image\" src=\"Image_041.jpg\" id=\"1585\"></span></h3><div id=\"contentheading1581\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 18pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1586\">Here we just finished document type for global settings, but little document type is still remaining, take a look at navigation bar. There is title of Article like “News”, “Solution”, “Semic” and “Contact”. Now it‟s time to create Document type for these articles. I will introduce input pattern here, Input Pattern is fields or value that needs to provide when Editor creates content (Article) on Content page.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1587\">Input Pattern is “Title” and “Body”. Title is a title of article that shows up in navigation bar, Body is text or description of Title that show up when user click on particular title in navigation bar. For example if user clicks on “News” Title it will show up Description of News, in my case it will show up recent news details. Here “news”, “Solution” and “Semic” have only two Input Pattern title and Body, it means we can create many article with different title and body on same input pattern. So let‟s create one Document Type that can implement Two Input Pattern. Now let‟s create new document type “General Content” and also check matching templates and Press OK. If you want to follow me repeat same process as above to add new properties</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1588\">Add following properties into “General Content”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1589\"><br id=\"1590\"></p></div></li></ul></li><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1591\"><p class=\"s8\" style=\"display: inline;\" id=\"1592\">Before Adding Following Properties. Create first Two Tabs “Title” and “Description”.</p></li><li style=\"padding-bottom: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1593\"><p class=\"s8\" style=\"display: inline;\" id=\"1594\">Type Tab name and Press “New tab” it will create new tab</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1595\"><span id=\"1596\"><img width=\"472\" height=\"167\" alt=\"image\" src=\"Image_042.jpg\" id=\"1597\"></span></p><ul id=\"l30\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1599\"><p class=\"s8\" style=\"display: inline;\" id=\"1600\">Name: name of Tabs you created</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1601\"><p class=\"s8\" style=\"display: inline;\" id=\"1602\">Sort order: ordering number of tabs, lower sort order number will appear at top of the grater sort order number in “Generic Properties”</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"1603\"><p class=\"s8\" style=\"display: inline;\" id=\"1604\">Delete: To delete tabs, related property will automatically assign to Generic Properties if tabs is deleted.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1605\"><br id=\"1606\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1607\"><p style=\"display: inline;\" id=\"1608\">Name: “Content <i id=\"1609\">Title”</i>, Alias: Use Default, Type: <i id=\"1610\">Textstring</i>, Tab, use Default, Mandator: <i id=\"1611\">checked</i>, Description: <i id=\"1612\">Article Title</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"1613\"><p style=\"display: inline;\" id=\"1614\">Name: “Content <i id=\"1615\">Body”</i>, Alias, Use Default, Type: <i id=\"1616\">Rich Text Editor</i>, Tab, use Default, Mandator: <i id=\"1617\">checked</i>, Description: <i id=\"1618\">Body text here for Article</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"1619\"><p style=\"display: inline;\" id=\"1620\">Name: “<i id=\"1621\">Use in Navigation”</i>, Alias, Use Default, Type: <i id=\"1622\">True/False</i>, Tab, use Default, Mandatory: <i id=\"1623\">checked</i>, Description: <i id=\"1624\">Checked to show content in Navigation bar.</i></p><p style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"1625\">-</p><p class=\"s8\" style=\"padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1626\">See captured screen as references for Document type “Tabs”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1627\"><br id=\"1628\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1629\">Name of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1630\">Alias of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1631\">Type of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1632\">Name of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1633\">Alias of Property</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1634\">Type of Property</p><p style=\"padding-left: 19pt;text-indent: 0pt;text-align: left;\" id=\"1635\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1636\"> </span><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1637\"> </span><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1638\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1639\"><br id=\"1640\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1641\"><span id=\"1642\"><img width=\"534\" height=\"404\" alt=\"image\" src=\"Image_043.png\" id=\"1643\"></span></p><h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1644\" class=\"heading1644\"><a name=\"bookmark28\" id=\"1645\" style=\"color: green;\">Document Type Structure: </a><span id=\"1646\"><img width=\"345\" height=\"27\" alt=\"image\" src=\"Image_044.jpg\" id=\"1647\"></span></h3><div id=\"contentheading1644\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 12pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1648\">It‟s a little bit tricky, news items are added each time if there is new things happen, so we need to create two Document Types. One Document Type is for News Container and another for news article. News Container is like a container that contains news article.</p><p class=\"s39\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1649\">Purpose: <span class=\"p\" id=\"1650\">Umbraco developer can set up hierarchy structure so it will limit or prevent from creating non relevant content to content editor. For example I want only news items inside News Container, we want to mange content or data. I don‟t want to create any content that is not news items inside News container, to achieve that goal I can set up structure to News Container Document Type so it will only allows to create child content only relevant to news article. Let‟s begin to create Two Document Type “News Container” and “News Article”</span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1651\">Instruction: process is similar to create News Container Document Type as above mentioned.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1652\">Document Type “News Container”</p></div></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1653\"><p style=\"display: inline;\" id=\"1654\">Create, Document Type “News Container”</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1655\"><p style=\"display: inline;\" id=\"1656\">Name: “<i id=\"1657\">News Items”</i>, Alias: Use Default, Type: <i id=\"1658\">Label</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1659\">it’s a news container”.</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1660\"><p class=\"s8\" style=\"display: inline;\" id=\"1661\">Remember to Save</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1662\">Document Type “News Article”</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1663\"><p style=\"display: inline;\" id=\"1664\">Create Document Type “News Article”</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"1665\"><p style=\"display: inline;\" id=\"1666\">Name: <i id=\"1667\">News Title</i>, Alias: Use Default, Type: <i id=\"1668\">Textstring</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1669\">News Title”.</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1670\"><p class=\"s8\" style=\"display: inline;\" id=\"1671\">Remember to Save</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"1672\"><p style=\"display: inline;\" id=\"1673\">Name: “<i id=\"1674\">News Body”</i>, Alias: Use Default, Type: <i id=\"1675\">simple Editor</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1676\">news details”.</i></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1677\"><p class=\"s8\" style=\"display: inline;\" id=\"1678\">Remember to Save</p><p class=\"s8\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1679\">Let’s set up structure Open “Structure” of Document Type “News Container” as checked document type you want to set up as child nodetypes. In my case “News Article” see screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1680\"><br id=\"1681\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1682\"><span id=\"1683\"><img width=\"413\" height=\"243\" alt=\"image\" src=\"Image_045.png\" id=\"1684\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1685\"><br id=\"1686\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1687\"><a name=\"a32\" id=\"1688\">Creating Child Document Type</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1689\"><br id=\"1690\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1691\">There are two ways of creating child Document Type.</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1692\">First Ways. If you remember that we selected none “Master Document Type” when we created document type for global Setting, News Container and General Content. If you want to create child document type you can select desire master document type while you are creating Document Type first time.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1693\">Second Way: second way to create child document type is Right click on Document Type that you want to use as master Document Type and Click on “Create”. This is another way to create child document type.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1694\">Purpose: creating child document type allows Developer to reuse properties that have in master document type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1695\"><br id=\"1696\"></p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1697\">Notes: Do not forget to play around all types of Child Document type, Structure, Info, Properties, Tabs, Validation and different Data Types or Type etc.</p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading1698\" class=\"heading1698\"><a name=\"bookmark29\" id=\"1699\" style=\"color: green;\">Document Type API:</a></h3><div id=\"contentheading1698\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 35pt;line-height: 114%;text-align: justify;\" id=\"1700\">We are creating document type manually by right click on Document Type using backend of Umbraco site. It‟s also technical stuff and you need to know Umbraco stuff to set up, if you want to be a Umbraco developer in future, you should not look on top to ocean, you have to go more deep until bottom of ocean. Umbraco CMS will convert all your manual work in programming language and execute code. Let‟s look what‟s happening inside Umbraco when you manually create document type, how it‟s working and get basic Umbraco API knowledge.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1701\">Umbraco has namespace “<span class=\"s40\" id=\"1702\">umbraco.cms.businesslogic.web‛ </span>that contains los of Class. Here I will discuss DocumentType only.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1703\"><br id=\"1704\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1705\"><p class=\"s41\" style=\"display: inline;\" id=\"1706\">Manual Work: “Create”</p><ul id=\"l31\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"1708\"><p class=\"s40\" style=\"display: inline;\" id=\"1709\">When you right click on Document Type and press ‚Create‛. You have to provide Document Type Name.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"1710\"><p class=\"s40\" style=\"display: inline;\" id=\"1711\">At that time Umbraco execute MakeNew() methods on server that methods are responsible to create Document Type that will effect on Database. <span style=\" color: #2B91AE;\" id=\"1712\">DocumentType</span>.MakeNew(<span style=\" color: #2B91AE;\" id=\"1713\">User</span>, docTypename).Save();</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"1714\"><p class=\"s40\" style=\"display: inline;\" id=\"1715\">User will be automatically assigned by Umbraco based on your backend login information, Note that not all uses have access to create document type. docTypename is Name of Document Type you provided first time. Save() is void methods, it will save Document Type to database. Saving to database means to make data available next time to use.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1716\"><br id=\"1717\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1718\"><p class=\"s41\" style=\"display: inline;\" id=\"1719\">Manual Work: “Add New Property”</p><ul id=\"l32\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"1721\"><p class=\"s40\" style=\"display: inline;\" id=\"1722\">Add new property will execute AddPropertyType(<span style=\" color: #2B91AE;\" id=\"1723\">DataTypeDefinition</span>, name, description) methods. Three parameters DataTypeDefinition, name and description and there is also more overloads on that methods.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"1724\"><p class=\"s40\" style=\"display: inline;\" id=\"1725\">DataTypeDefinition – Data Type you selected, Umbraco only use Id of Data Type. When you select data type, Umbraco automatically take id of data type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1726\"><br id=\"1727\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1728\"><p class=\"s41\" style=\"display: inline;\" id=\"1729\">Manual Work: “New Tab”</p><ul id=\"l33\"><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"1731\"><p class=\"s40\" style=\"display: inline;\" id=\"1732\">Umbraco execute AddVirtualTab(tabName) to add new tab, tabName is name of tab you provided.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1733\"><p class=\"s42\" style=\"display: inline;\" id=\"1734\">DocumentType</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1735\"><p class=\"s40\" style=\"display: inline;\" id=\"1736\">dt.AddVirtualTab(tabName);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1737\"><br id=\"1738\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1739\"><p class=\"s43\" style=\"display: inline;\" id=\"1740\"><a name=\"a33\" id=\"1741\">Setting Tabs on Generic Properties.</a></p><ul id=\"l34\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"1743\"><p class=\"s40\" style=\"display: inline;\" id=\"1744\">When you select tab to organize you preoperty Umbraco will assign tabs on that Property.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1745\"><p class=\"s42\" style=\"display: inline;\" id=\"1746\">DocumentType <span style=\" color: #000;\" id=\"1747\">dt;</span></p></li><li style=\"padding-top: 3pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1748\"><p class=\"s40\" style=\"display: inline;\" id=\"1749\">dt.SetTabOnPropertyType(PropertyType, <span style=\" color: #2B91AE;\" id=\"1750\">Tab </span>Id);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"1751\"><p class=\"s40\" style=\"display: inline;\" id=\"1752\">here property Type is type of new property and Tab Id is node id of Tabs you created, all Names are for visual representation of data and id or aliad is for machine or Umbraco system to represent object.</p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"1753\">-</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"1754\"><p class=\"s43\" style=\"display: inline;\" id=\"1755\"><a name=\"a34\" id=\"1756\">Manual Work “Delete”</a></p><ul id=\"l35\"><li style=\"padding-top: 2pt;padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1758\"><p class=\"s40\" style=\"display: inline;\" id=\"1759\">If you would like to delete Document Type you will right click on document type and press ‚Delete‛.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1760\"><p class=\"s40\" style=\"display: inline;\" id=\"1761\">Umbraco will execute Delete() methods to delete document type.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1762\"><p class=\"s40\" style=\"display: inline;\" id=\"1763\">Here is an example</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1764\"><p class=\"s42\" style=\"display: inline;\" id=\"1765\">DocumentType<span style=\" color: #000;\" id=\"1766\">.GetByAlias(docAlias).delete();</span></p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1767\"><p class=\"s40\" style=\"display: inline;\" id=\"1768\">First call GetByAlias() method to select document type by alias, also you can select document type by Id.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1769\"><p class=\"s40\" style=\"display: inline;\" id=\"1770\">Second Call Delete() method to delete Document,</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 111%;text-align: left;\" id=\"1771\"><p class=\"s40\" style=\"display: inline;\" id=\"1772\">This time you don’t need to save. Because Delete will delete selected document type from Database as well.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 111%;text-align: justify;\" id=\"1773\"><p class=\"s40\" style=\"display: inline;\" id=\"1774\">Whatever you made change on Umbraco, you have to press Save icon <span id=\"1775\"><img width=\"27\" height=\"26\" alt=\"image\" src=\"Image_046.jpg\" id=\"1776\"></span><span class=\"s28\" id=\"1777\">    </span>to save your work. That will execute Void methods Save().</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1778\"><br id=\"1779\"></p><p class=\"s40\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1780\">More Document Type API:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1781\"><br id=\"1782\"></p><p class=\"s40\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1783\">Here is more API listed, for full list of API, you need to download source code or decompile DLL files that provided by Umbraco binary.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1784\"><br id=\"1785\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1786\"><p class=\"s40\" style=\"display: inline;\" id=\"1787\">getVirtualTabs</p><ul id=\"l36\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1789\"><p class=\"s40\" style=\"display: inline;\" id=\"1790\">returns list of available tabs on document type</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1791\"><p class=\"s40\" style=\"display: inline;\" id=\"1792\">HasTemplate()</p><ul id=\"l37\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1794\"><p class=\"s40\" style=\"display: inline;\" id=\"1795\">Return bool value ,true if document type has template</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1796\"><p class=\"s40\" style=\"display: inline;\" id=\"1797\">allowedTemplates</p><ul id=\"l38\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1799\"><p class=\"s40\" style=\"display: inline;\" id=\"1800\">return List of Allowed templates.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1801\"><p class=\"s40\" style=\"display: inline;\" id=\"1802\">PropertyTypes</p><ul id=\"l39\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1804\"><p class=\"s40\" style=\"display: inline;\" id=\"1805\">Return list of Property types.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"1806\"><p class=\"s40\" style=\"display: inline;\" id=\"1807\">HasChildren</p><ul id=\"l40\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"1809\"><p class=\"s40\" style=\"display: inline;\" id=\"1810\">Return Bool Value, True if Document type has children document type.</p></li></ul></li></ul><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1811\">These are few mostly used API. To change value using API you can use visual studio. If field has “Set” methods you can change value using API.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"1812\">Example:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1813\"><br id=\"1814\"></p><p class=\"s40\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 200%;text-align: left;\" id=\"1815\"><span style=\" color: #2B91AE;\" id=\"1816\">DocumentType</span>.GetByAlias(<span style=\" color: #A21515;\" id=\"1817\">\"NewsContainer\"</span>).Alias = <span style=\" color: #A21515;\" id=\"1818\">\"newNewsContainer\"</span>; It will change alias of News Container to ‘newNewsContainer’.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1819\"><br id=\"1820\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1821\"><a name=\"a35\" id=\"1822\">Chapter 04: Content</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"1823\"><br id=\"1824\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1825\"><br id=\"1826\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"1827\"><span id=\"1828\"><img width=\"385\" height=\"1\" alt=\"image\" src=\"Image_047.png\" id=\"1829\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1830\"><br id=\"1831\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading1268\" class=\"heading1268\"><a name=\"bookmark24\" id=\"1269\" >Document Type for Developers:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading1268\" ><p  id=\"1270\">Developer creates document type based on groups of data that needs to be saved to and provides rich service to manage data and customize input fields.</p><p  id=\"1271\">You may still not clear what document type is so I am going to give one example as vcard case. Vcard websites I called “Semic Provider” has many fields like</p><ul id=\"l24\"><li  id=\"1273\"><p  id=\"1274\">Logo</p></li><li  id=\"1275\"><p  id=\"1276\">Title of Websites “Semic Provider” and</p></li><li  id=\"1277\"><p  id=\"1278\">Slogan “Where content is understood by human and machine”.</p><p  id=\"1279\">As a developer I want to provide a service to client so s/he can upload Logo, edit title of websites and slogan. Developer could do hard coding text into templates to display logo, title of websites and slogan but client can‟t change it later if s/he decided to change it. Client wants cms because s/he wants to control content without having knowledge of technical stuff like editing templates so as a developer we should provide more control over content. Logo, Title of Website and slogan are not same for all time; they can be changed later by client. To solve that problem we need to create Document type.</p><p  id=\"1280\">Document type is not single subject it‟s more complex for new Umbraco developer. I am going to look more details about document types. It contains Properties, Info, Structure and Tabs.</p><h4  id=\"1281\">Properties<span class=\"p\" id=\"1282\">: it‟s an input field that you create in document type, has more properties</span></h4></li><li  id=\"1283\"><p  id=\"1284\">Name: name of your input field</p></li><li  id=\"1285\"><p  id=\"1286\">Alias: alias used to retrieve value or fetch value that properties have</p></li><li  id=\"1287\"><p  id=\"1288\">Type: input type for example , Text box, upload, Button, check box etc. these are based on Data Type</p></li><li  id=\"1289\"><p  id=\"1290\">Tab- by default properties is assign to generic properties but you can assign to your custom tabs</p><p  id=\"1291\"><br id=\"1292\"></p><p  id=\"1293\"><span id=\"1294\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_035.png\" id=\"1295\"></span></p><p class=\"s10\"  id=\"1296\"><a href=\"http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder-\"  target=\"_blank\" id=\"1297\">12 </a>http://umbraco.com/help-and-support/video-tutorials/introduction-to-umbraco/sitebuilder- introduction/document-types official video about Document Type introduction</p><h4  id=\"1298\">Tabs<span class=\"p\" id=\"1299\">: Tabs is name of group for example name, age, address and email properties of person can be group together with tabs “personal Details” so in Tabs we create “Personal Details” and in Property tab we assign name, age, address and email properties to “Personal Details” tab. Tab and Tabs should not be confuse. Tabs, Properties, Structure and Info have save level inside Document Type tree and tab is child of Properties.</span></h4><p  id=\"1300\"><br id=\"1301\"></p><h4  id=\"1302\">Structure<span class=\"p\" id=\"1303\">: Document type can have parent or child document Type here you check what‟s should be parent or child document type is allowed</span></h4><h4  id=\"1304\">Info<span class=\"p\" id=\"1305\">: it‟s not that much important as Properties, Tabs and Structure. Here you can assign template and other general setting or get more information about Document Type. More available settings inside Info are listed below. </span><span class=\"s10\" id=\"1306\">These are taken from official Umbraco sites. Please visit references.</span></h4><ul id=\"l25\"><li  id=\"1308\"><p  id=\"1309\">Name: name of Document Type</p></li><li  id=\"1310\"><p  id=\"1311\">Alias: alias of Document Type, use by Umbraco and developer when they work with Umbraco API and CodeInProject.</p></li><li  id=\"1312\"><p  id=\"1313\">Thumbnail: Thumb image of Document Type displayed on create page dialog.</p></li><li  id=\"1314\"><p  id=\"1315\">Icon: Icon of Document Type.</p><p  id=\"1316\"><br id=\"1317\"></p></li><li  id=\"1318\"><p  id=\"1319\">Description: Description of Document Type.</p><p  id=\"1320\"><br id=\"1321\"></p></li><li  id=\"1322\"><p  id=\"1323\">Allowed Template. It is use to present data to end uses. If you fetch data using Xslt you can make document type without templates but Content based on that document type will not be able to provide preview mode if there is no associated template. One Document Type can have more than one template.</p></li><li  id=\"1324\"><p  id=\"1325\">Default Templates: that is a default template of document type. And used by Document Type</p></li></ul></li></ul><p class=\"s30\"  id=\"1326\"><a name=\"bookmark25\" id=\"1327\">Visual Diagram</a><span class=\"s31\" id=\"1328\">13 </span>for Document Type<span class=\"h3\" id=\"1329\">:</span></p><p  id=\"1330\"><br id=\"1331\"></p><p  id=\"1332\"><span id=\"1333\"><img width=\"607\" height=\"165\" alt=\"image\" src=\"Image_036.png\" id=\"1334\"></span></p><p class=\"s32\"  id=\"1335\">Document Type <span class=\"s10\" id=\"1336\">Name: </span><span class=\"s33\" id=\"1337\">Properties:</span></p><p class=\"s34\"  id=\"1338\">- <span class=\"s35\" id=\"1339\">Alias: </span><span class=\"s33\" id=\"1340\">Tabs:</span></p><p  id=\"1341\"><br id=\"1342\"></p><h4  id=\"1343\">Create Content <span class=\"s36\" id=\"1344\">Properties and Tabs </span><span class=\"p\" id=\"1345\">of Document type</span></h4><p  id=\"1346\"><br id=\"1347\"></p><h4  id=\"1348\"><a name=\"a25\" id=\"1349\">Templates</a><span class=\"p\" id=\"1350\">:</span></h4><p class=\"s23\"  id=\"1351\">Alias <span  id=\"1352\">of Document Type‟s Properties</span></p><p  id=\"1353\"><br id=\"1354\"></p><h4  id=\"1355\"><a name=\"a26\" id=\"1356\">Presentation of Content</a></h4><p  id=\"1357\">End Users</p><p  id=\"1358\"><br id=\"1359\"></p><p  id=\"1360\"><span id=\"1361\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_037.png\" id=\"1362\"></span></p><p class=\"s3\"  id=\"1363\">13 <span class=\"s10\" id=\"1364\">These diagrams are my own concept and may be other developer argues with Diagrams. There is no official diagram for Document Type.</span></p><p class=\"s10\"  id=\"1365\">References taken dates April 14, 2011</p><p  id=\"1366\">Diagram show, first create Document Type, second create Content based on Document Type Properties, use Alias of Document Type‟s properties and display data to End users.</p><p  id=\"1367\"><br id=\"1368\"></p><h4  id=\"1369\"><a name=\"a27\" id=\"1370\">Practical: let’s create Document Type for “Sites Setting”</a></h4><h3  id=\"1371\"><a name=\"bookmark26\" id=\"1372\">Document Type Generic Properties: </a><span id=\"1373\"><img width=\"294\" height=\"22\" alt=\"image\" src=\"Image_038.jpg\" id=\"1374\"></span></h3><p  id=\"1375\">Instruction:</p><ul id=\"l26\"><li  id=\"1377\"><p  id=\"1378\">open Backend of Umbraco sites (your site /Umbraco/) in my case localhost:8080/umbraco/</p></li><li  id=\"1379\"><p  id=\"1380\">Provide login credentials user id and password (my case “admin” “root” login and password respectively)</p></li><li  id=\"1381\"><p  id=\"1382\">Click Setting on Section at bottom left corner, it will list all available features on Setting on top left corner. Expand Document Type</p></li><li  id=\"1383\"><p  id=\"1384\">If you follow me Document Type must be empty so nothing will happen it‟s because I decided not to install any starter kits. Now I will create new document Type</p></li><li  id=\"1385\"><p  id=\"1386\">Right Click on Document Type and Click “Create”. New windows popup.</p></li><li  id=\"1387\"><p  id=\"1388\">Master Document Type: select none…</p></li><li  id=\"1389\"><p  id=\"1390\">Name: name for Document Type I choose “Web Site Global Setting” but you can choose different if you want. Its name of document type.</p></li><li  id=\"1391\"><p  id=\"1392\">By Default “Create matching templates” is checked so leave default, it will create matching templates and we will use that templates as master templates.</p></li><li  id=\"1393\"><p  id=\"1394\">Press “Create” Button</p></li><li  id=\"1395\"><p  id=\"1396\">Now Umbraco created new document Type and provide more option to input.</p></li><li  id=\"1397\"><p  id=\"1398\">Click “Web site global Setting” to open document type. It will open four properties Info, Structure, Generic Properties and Tabs</p></li><li  id=\"1399\"><p  id=\"1400\">Info: if you want to follow me provide these information</p><ul id=\"l27\"><li  id=\"1402\"><p class=\"s8\"  id=\"1403\">Name <span class=\"p\" id=\"1404\">and </span>Alias <span class=\"p\" id=\"1405\">is not recommended to change because it will effect whole system</span></p></li><li  id=\"1406\"><p class=\"s8\"  id=\"1407\">Icon<span class=\"p\" id=\"1408\">: Setting Agent. Select from dropdown</span></p></li><li  id=\"1409\"><p class=\"s8\"  id=\"1410\">Thumbnail<span class=\"p\" id=\"1411\">: developer.png select from dropdown</span></p></li><li  id=\"1412\"><p class=\"s8\"  id=\"1413\">Description<span class=\"p\" id=\"1414\">: “Manage your websites. Here you can set up your global sites. Example change logo, slogan etc.”</span></p></li><li  id=\"1415\"><p class=\"s8\"  id=\"1416\">Allowed templates <span class=\"p\" id=\"1417\">and </span>Default Templates <span class=\"p\" id=\"1418\">leave default do not change it.</span></p></li><li  id=\"1419\"><h4  id=\"1420\"><a name=\"a28\" id=\"1421\">Remember to save before jump to next property</a><span class=\"p\" id=\"1422\">.</span></h4></li><li  id=\"1423\"><p  id=\"1424\">You must see balloon success message at bottom right corner if anything goes wrong it will show up balloon message with error details.</p></li></ul></li><li  id=\"1425\"><p  id=\"1426\">Structure: leave Default</p></li><li  id=\"1427\"><p  id=\"1428\">Tabs: do not create for this document type</p></li><li  id=\"1429\"><p  id=\"1430\">Generic Properties: click on Generic Properties. It‟s a most important in document Type. Click on “Add New Property”.</p></li><li  id=\"1431\"><p  id=\"1432\">It will expand fields to input data, if you want to follow me provide these information without quotes</p><ul id=\"l28\"><li  id=\"1434\"><p class=\"s8\"  id=\"1435\">Name<span class=\"p\" id=\"1436\">: “Site Name”</span></p></li><li  id=\"1437\"><p class=\"s8\"  id=\"1438\">Alias<span class=\"p\" id=\"1439\">: Leave Default, Umbraco will generate for you</span></p></li><li  id=\"1440\"><p class=\"s8\"  id=\"1441\">Type<span class=\"p\" id=\"1442\">: Textstring , select from Drop down menu</span></p></li><li  id=\"1443\"><p class=\"s8\"  id=\"1444\">Tab<span class=\"p\" id=\"1445\">: Leave Default</span></p></li><li  id=\"1446\"><p class=\"s8\"  id=\"1447\">Mandator<span class=\"p\" id=\"1448\">: checked, means, it should not be empty</span></p></li><li  id=\"1449\"><p class=\"s8\"  id=\"1450\">Validation<span class=\"p\" id=\"1451\">: for now leave empty</span></p></li><li  id=\"1452\"><p class=\"s8\"  id=\"1453\">Description<span class=\"p\" id=\"1454\">: “Your Site Name”</span></p></li><li  id=\"1455\"><h4  id=\"1456\"><a name=\"a29\" id=\"1457\">Remember to save before jump to next properties</a><span class=\"p\" id=\"1458\">.</span></h4></li><li  id=\"1459\"><p  id=\"1460\">You can see balloon “success message” at bottom right corner if anything goes wrong it will show up balloon message with error details, correct error based on error message and Save again.</p><p  id=\"1461\">See captured screen as references.</p><p  id=\"1462\"><br id=\"1463\"></p><p  id=\"1464\"><br id=\"1465\"></p><p  id=\"1466\">Document</p><p  id=\"1467\">Save</p><p  id=\"1468\">Document Type</p><p  id=\"1469\">Add New Property</p><p  id=\"1470\">Document</p><p  id=\"1471\">Save</p><p  id=\"1472\">Document Type</p><p  id=\"1473\">Add New Property</p><p class=\"s10\"  id=\"1474\"><span  id=\"1475\"> </span><span  id=\"1476\"> </span>\t\t</p><p  id=\"1477\"><br id=\"1478\"></p><p  id=\"1479\"><span id=\"1480\"><img width=\"602\" height=\"546\" alt=\"image\" src=\"Image_039.png\" id=\"1481\"></span></p><p  id=\"1482\">Delete</p><p  id=\"1483\">Delete</p><p  id=\"1484\"></p><p  id=\"1485\">Settings</p><p  id=\"1486\">Settings</p><p  id=\"1487\"></p><p  id=\"1488\">Drop Down Menu <span class=\"s37\" id=\"1489\">Expand </span><span class=\"s10\" id=\"1490\">collapse Property</span></p><p  id=\"1491\"><br id=\"1492\"></p><p  id=\"1493\">Drag and Drop</p><p  id=\"1494\">Drag and Drop</p><p  id=\"1495\"><span  id=\"1496\"> </span></p><p  id=\"1497\"><br id=\"1498\"></p><p  id=\"1499\"><br id=\"1500\"></p><h4  id=\"1501\">Drag and Drop: <span class=\"p\" id=\"1502\">To sort property order, Umbraco automatically saves sorted order. </span>Delete: <span class=\"p\" id=\"1503\">To delete Property Type, if you delete property type it will delete all content relevant to that particular Property Type</span></h4><h4  id=\"1504\">Expand collapse Icon. <span class=\"p\" id=\"1505\">It will allows to expand or Collapse property Menu</span></h4><h4  id=\"1506\">Add New Property: <span class=\"p\" id=\"1507\">To Add new property</span></h4><h4  id=\"1508\">DropDown Menu: <span class=\"p\" id=\"1509\">to select value from Types or assign property to Tabs.</span></h4><p  id=\"1510\">You must save manually after change; Umbraco does not automatically save for you.</p><h4  id=\"1511\">Alias<span class=\"p\" id=\"1512\">: alias is case sensitive and if you modify alias you may lose data if you are not sure how alias works. It‟s better not to change it in case you have to do so please make sure update in other parts of Umbraco system when you used that alias to fetch data. Alias is used to fetch data by Umbraco.</span></h4><p  id=\"1513\"><br id=\"1514\"></p><h4  id=\"1515\">Type<span class=\"p\" id=\"1516\">: there are many types out of box available, for example, Rich text editors, True/False, Textstring, Upload, all are called Data Type I will discuss later. Changing type will lost data in content editing page but will still remain on database unless you save content after type changed. It‟s better not to change so make decision before you decide what type should be used.</span></h4><p  id=\"1517\">Some tips: if you want simple text editor select simple text editor, Textstring allows only to type text, Rich text editor will allows more rich features to content editor.</p><p  id=\"1518\"><br id=\"1519\"></p><h4  id=\"1520\"><a name=\"a30\" id=\"1521\">Note:</a></h4><h4  id=\"1522\">Repeat Same Process for <i id=\"1523\">Name</i>: “Slogan”, <i id=\"1524\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1525\">Type</i>: Textstring, <i id=\"1526\">Mandatory</i>: Checked, <i id=\"1527\">Description</i>: “Slogan here”</h4><p  id=\"1528\"><br id=\"1529\"></p><h4  id=\"1530\">Repeat Same Process for <i id=\"1531\">Name</i>: “Logo”, <i id=\"1532\">Alias</i>: Leave Default, Umbraco will generate for you, <i id=\"1533\">Type</i>: Upload, <i id=\"1534\">Mandatory</i>: leave default, <i id=\"1535\">Description</i>: “Upload logo here”.</h4><h4  id=\"1536\"><a name=\"a31\" id=\"1537\">Notes: Type: upload allows content Creator to upload Image or files while create content, Type: Textstring allows to type text in input text field.</a></h4><p  id=\"1538\"><br id=\"1539\"></p><p  id=\"1540\">Let‟s see our final web grid how it look likes and create more Document Type for Semic website. See captured screen bellow.</p><p  id=\"1541\"><br id=\"1542\"></p><p class=\"s38\"  id=\"1543\">1</p><p class=\"s38\"  id=\"1544\">2</p><p class=\"s38\"  id=\"1545\">1</p><p class=\"s38\"  id=\"1546\">2</p><p class=\"s10\"  id=\"1547\">\t</p><p  id=\"1548\"><br id=\"1549\"></p><p class=\"s38\"  id=\"1550\">3</p><p class=\"s38\"  id=\"1551\">3</p><p  id=\"1552\"></p><p  id=\"1553\"><br id=\"1554\"></p><p  id=\"1555\"><br id=\"1556\"></p><p class=\"s38\"  id=\"1557\">4</p><p class=\"s38\"  id=\"1558\">4</p><p  id=\"1559\"></p><p  id=\"1560\"><br id=\"1561\"></p><p class=\"s38\"  id=\"1562\">5</p><p class=\"s38\"  id=\"1563\">5</p><p  id=\"1564\"></p><p  id=\"1565\"><br id=\"1566\"></p><p  id=\"1567\"><span id=\"1568\"><img width=\"616\" height=\"384\" alt=\"image\" src=\"Image_040.png\" id=\"1569\"></span></p><ol id=\"l29\"><li  id=\"1571\"><p  id=\"1572\">Logo</p></li><li  id=\"1573\"><p  id=\"1574\">Title</p></li><li  id=\"1575\"><p  id=\"1576\">Slogan</p></li><li  id=\"1577\"><p  id=\"1578\">Navigation Bar</p></li><li  id=\"1579\"><p  id=\"1580\">Body</p></li></ol><h3  id=\"heading1581\" class=\"heading1581\"><a name=\"bookmark27\" id=\"1582\" >Document Type “Tabs</a><span class=\"s3\" id=\"1583\">” </span><span id=\"1584\"><img width=\"400\" height=\"25\" alt=\"image\" src=\"Image_041.jpg\" id=\"1585\"></span></h3><div id=\"contentheading1581\" ><p  id=\"1586\">Here we just finished document type for global settings, but little document type is still remaining, take a look at navigation bar. There is title of Article like “News”, “Solution”, “Semic” and “Contact”. Now it‟s time to create Document type for these articles. I will introduce input pattern here, Input Pattern is fields or value that needs to provide when Editor creates content (Article) on Content page.</p><p  id=\"1587\">Input Pattern is “Title” and “Body”. Title is a title of article that shows up in navigation bar, Body is text or description of Title that show up when user click on particular title in navigation bar. For example if user clicks on “News” Title it will show up Description of News, in my case it will show up recent news details. Here “news”, “Solution” and “Semic” have only two Input Pattern title and Body, it means we can create many article with different title and body on same input pattern. So let‟s create one Document Type that can implement Two Input Pattern. Now let‟s create new document type “General Content” and also check matching templates and Press OK. If you want to follow me repeat same process as above to add new properties</p><p  id=\"1588\">Add following properties into “General Content”</p><p  id=\"1589\"><br id=\"1590\"></p></div></li></ul></li><li  id=\"1591\"><p class=\"s8\"  id=\"1592\">Before Adding Following Properties. Create first Two Tabs “Title” and “Description”.</p></li><li  id=\"1593\"><p class=\"s8\"  id=\"1594\">Type Tab name and Press “New tab” it will create new tab</p><p  id=\"1595\"><span id=\"1596\"><img width=\"472\" height=\"167\" alt=\"image\" src=\"Image_042.jpg\" id=\"1597\"></span></p><ul id=\"l30\"><li  id=\"1599\"><p class=\"s8\"  id=\"1600\">Name: name of Tabs you created</p></li><li  id=\"1601\"><p class=\"s8\"  id=\"1602\">Sort order: ordering number of tabs, lower sort order number will appear at top of the grater sort order number in “Generic Properties”</p></li><li  id=\"1603\"><p class=\"s8\"  id=\"1604\">Delete: To delete tabs, related property will automatically assign to Generic Properties if tabs is deleted.</p><p  id=\"1605\"><br id=\"1606\"></p></li></ul></li><li  id=\"1607\"><p  id=\"1608\">Name: “Content <i id=\"1609\">Title”</i>, Alias: Use Default, Type: <i id=\"1610\">Textstring</i>, Tab, use Default, Mandator: <i id=\"1611\">checked</i>, Description: <i id=\"1612\">Article Title</i></p></li><li  id=\"1613\"><p  id=\"1614\">Name: “Content <i id=\"1615\">Body”</i>, Alias, Use Default, Type: <i id=\"1616\">Rich Text Editor</i>, Tab, use Default, Mandator: <i id=\"1617\">checked</i>, Description: <i id=\"1618\">Body text here for Article</i></p></li><li  id=\"1619\"><p  id=\"1620\">Name: “<i id=\"1621\">Use in Navigation”</i>, Alias, Use Default, Type: <i id=\"1622\">True/False</i>, Tab, use Default, Mandatory: <i id=\"1623\">checked</i>, Description: <i id=\"1624\">Checked to show content in Navigation bar.</i></p><p  id=\"1625\">-</p><p class=\"s8\"  id=\"1626\">See captured screen as references for Document type “Tabs”</p><p  id=\"1627\"><br id=\"1628\"></p><p  id=\"1629\">Name of Property</p><p  id=\"1630\">Alias of Property</p><p  id=\"1631\">Type of Property</p><p  id=\"1632\">Name of Property</p><p  id=\"1633\">Alias of Property</p><p  id=\"1634\">Type of Property</p><p  id=\"1635\"><span  id=\"1636\"> </span><span  id=\"1637\"> </span><span  id=\"1638\"> </span></p><p  id=\"1639\"><br id=\"1640\"></p><p  id=\"1641\"><span id=\"1642\"><img width=\"534\" height=\"404\" alt=\"image\" src=\"Image_043.png\" id=\"1643\"></span></p><h3  id=\"heading1644\" class=\"heading1644\"><a name=\"bookmark28\" id=\"1645\" >Document Type Structure: </a><span id=\"1646\"><img width=\"345\" height=\"27\" alt=\"image\" src=\"Image_044.jpg\" id=\"1647\"></span></h3><div id=\"contentheading1644\" ><p  id=\"1648\">It‟s a little bit tricky, news items are added each time if there is new things happen, so we need to create two Document Types. One Document Type is for News Container and another for news article. News Container is like a container that contains news article.</p><p class=\"s39\"  id=\"1649\">Purpose: <span class=\"p\" id=\"1650\">Umbraco developer can set up hierarchy structure so it will limit or prevent from creating non relevant content to content editor. For example I want only news items inside News Container, we want to mange content or data. I don‟t want to create any content that is not news items inside News container, to achieve that goal I can set up structure to News Container Document Type so it will only allows to create child content only relevant to news article. Let‟s begin to create Two Document Type “News Container” and “News Article”</span></p><p  id=\"1651\">Instruction: process is similar to create News Container Document Type as above mentioned.</p><p  id=\"1652\">Document Type “News Container”</p></div></li><li  id=\"1653\"><p  id=\"1654\">Create, Document Type “News Container”</p></li><li  id=\"1655\"><p  id=\"1656\">Name: “<i id=\"1657\">News Items”</i>, Alias: Use Default, Type: <i id=\"1658\">Label</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1659\">it’s a news container”.</i></p></li><li  id=\"1660\"><p class=\"s8\"  id=\"1661\">Remember to Save</p><p  id=\"1662\">Document Type “News Article”</p></li><li  id=\"1663\"><p  id=\"1664\">Create Document Type “News Article”</p></li><li  id=\"1665\"><p  id=\"1666\">Name: <i id=\"1667\">News Title</i>, Alias: Use Default, Type: <i id=\"1668\">Textstring</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1669\">News Title”.</i></p></li><li  id=\"1670\"><p class=\"s8\"  id=\"1671\">Remember to Save</p></li><li  id=\"1672\"><p  id=\"1673\">Name: “<i id=\"1674\">News Body”</i>, Alias: Use Default, Type: <i id=\"1675\">simple Editor</i>, Tab, use Default, Mandatory: Use Default, Description: “<i id=\"1676\">news details”.</i></p></li><li  id=\"1677\"><p class=\"s8\"  id=\"1678\">Remember to Save</p><p class=\"s8\"  id=\"1679\">Let’s set up structure Open “Structure” of Document Type “News Container” as checked document type you want to set up as child nodetypes. In my case “News Article” see screen bellow.</p><p  id=\"1680\"><br id=\"1681\"></p><p  id=\"1682\"><span id=\"1683\"><img width=\"413\" height=\"243\" alt=\"image\" src=\"Image_045.png\" id=\"1684\"></span></p><p  id=\"1685\"><br id=\"1686\"></p><h4  id=\"1687\"><a name=\"a32\" id=\"1688\">Creating Child Document Type</a></h4><p  id=\"1689\"><br id=\"1690\"></p><p  id=\"1691\">There are two ways of creating child Document Type.</p><p  id=\"1692\">First Ways. If you remember that we selected none “Master Document Type” when we created document type for global Setting, News Container and General Content. If you want to create child document type you can select desire master document type while you are creating Document Type first time.</p><p  id=\"1693\">Second Way: second way to create child document type is Right click on Document Type that you want to use as master Document Type and Click on “Create”. This is another way to create child document type.</p><p  id=\"1694\">Purpose: creating child document type allows Developer to reuse properties that have in master document type.</p><p  id=\"1695\"><br id=\"1696\"></p><p class=\"s8\"  id=\"1697\">Notes: Do not forget to play around all types of Child Document type, Structure, Info, Properties, Tabs, Validation and different Data Types or Type etc.</p><h3  id=\"heading1698\" class=\"heading1698\"><a name=\"bookmark29\" id=\"1699\" >Document Type API:</a></h3><div id=\"contentheading1698\" ><p  id=\"1700\">We are creating document type manually by right click on Document Type using backend of Umbraco site. It‟s also technical stuff and you need to know Umbraco stuff to set up, if you want to be a Umbraco developer in future, you should not look on top to ocean, you have to go more deep until bottom of ocean. Umbraco CMS will convert all your manual work in programming language and execute code. Let‟s look what‟s happening inside Umbraco when you manually create document type, how it‟s working and get basic Umbraco API knowledge.</p><p  id=\"1701\">Umbraco has namespace “<span class=\"s40\" id=\"1702\">umbraco.cms.businesslogic.web‛ </span>that contains los of Class. Here I will discuss DocumentType only.</p><p  id=\"1703\"><br id=\"1704\"></p></div></li><li  id=\"1705\"><p class=\"s41\"  id=\"1706\">Manual Work: “Create”</p><ul id=\"l31\"><li  id=\"1708\"><p class=\"s40\"  id=\"1709\">When you right click on Document Type and press ‚Create‛. You have to provide Document Type Name.</p></li><li  id=\"1710\"><p class=\"s40\"  id=\"1711\">At that time Umbraco execute MakeNew() methods on server that methods are responsible to create Document Type that will effect on Database. <span  id=\"1712\">DocumentType</span>.MakeNew(<span  id=\"1713\">User</span>, docTypename).Save();</p></li><li  id=\"1714\"><p class=\"s40\"  id=\"1715\">User will be automatically assigned by Umbraco based on your backend login information, Note that not all uses have access to create document type. docTypename is Name of Document Type you provided first time. Save() is void methods, it will save Document Type to database. Saving to database means to make data available next time to use.</p><p  id=\"1716\"><br id=\"1717\"></p></li></ul></li><li  id=\"1718\"><p class=\"s41\"  id=\"1719\">Manual Work: “Add New Property”</p><ul id=\"l32\"><li  id=\"1721\"><p class=\"s40\"  id=\"1722\">Add new property will execute AddPropertyType(<span  id=\"1723\">DataTypeDefinition</span>, name, description) methods. Three parameters DataTypeDefinition, name and description and there is also more overloads on that methods.</p></li><li  id=\"1724\"><p class=\"s40\"  id=\"1725\">DataTypeDefinition – Data Type you selected, Umbraco only use Id of Data Type. When you select data type, Umbraco automatically take id of data type.</p><p  id=\"1726\"><br id=\"1727\"></p></li></ul></li><li  id=\"1728\"><p class=\"s41\"  id=\"1729\">Manual Work: “New Tab”</p><ul id=\"l33\"><li  id=\"1731\"><p class=\"s40\"  id=\"1732\">Umbraco execute AddVirtualTab(tabName) to add new tab, tabName is name of tab you provided.</p></li><li  id=\"1733\"><p class=\"s42\"  id=\"1734\">DocumentType</p></li><li  id=\"1735\"><p class=\"s40\"  id=\"1736\">dt.AddVirtualTab(tabName);</p><p  id=\"1737\"><br id=\"1738\"></p></li></ul></li><li  id=\"1739\"><p class=\"s43\"  id=\"1740\"><a name=\"a33\" id=\"1741\">Setting Tabs on Generic Properties.</a></p><ul id=\"l34\"><li  id=\"1743\"><p class=\"s40\"  id=\"1744\">When you select tab to organize you preoperty Umbraco will assign tabs on that Property.</p></li><li  id=\"1745\"><p class=\"s42\"  id=\"1746\">DocumentType <span  id=\"1747\">dt;</span></p></li><li  id=\"1748\"><p class=\"s40\"  id=\"1749\">dt.SetTabOnPropertyType(PropertyType, <span  id=\"1750\">Tab </span>Id);</p></li><li  id=\"1751\"><p class=\"s40\"  id=\"1752\">here property Type is type of new property and Tab Id is node id of Tabs you created, all Names are for visual representation of data and id or aliad is for machine or Umbraco system to represent object.</p><p  id=\"1753\">-</p></li></ul></li><li  id=\"1754\"><p class=\"s43\"  id=\"1755\"><a name=\"a34\" id=\"1756\">Manual Work “Delete”</a></p><ul id=\"l35\"><li  id=\"1758\"><p class=\"s40\"  id=\"1759\">If you would like to delete Document Type you will right click on document type and press ‚Delete‛.</p></li><li  id=\"1760\"><p class=\"s40\"  id=\"1761\">Umbraco will execute Delete() methods to delete document type.</p></li><li  id=\"1762\"><p class=\"s40\"  id=\"1763\">Here is an example</p></li><li  id=\"1764\"><p class=\"s42\"  id=\"1765\">DocumentType<span  id=\"1766\">.GetByAlias(docAlias).delete();</span></p></li><li  id=\"1767\"><p class=\"s40\"  id=\"1768\">First call GetByAlias() method to select document type by alias, also you can select document type by Id.</p></li><li  id=\"1769\"><p class=\"s40\"  id=\"1770\">Second Call Delete() method to delete Document,</p></li><li  id=\"1771\"><p class=\"s40\"  id=\"1772\">This time you don’t need to save. Because Delete will delete selected document type from Database as well.</p></li></ul></li><li  id=\"1773\"><p class=\"s40\"  id=\"1774\">Whatever you made change on Umbraco, you have to press Save icon <span id=\"1775\"><img width=\"27\" height=\"26\" alt=\"image\" src=\"Image_046.jpg\" id=\"1776\"></span><span class=\"s28\" id=\"1777\">    </span>to save your work. That will execute Void methods Save().</p><p  id=\"1778\"><br id=\"1779\"></p><p class=\"s40\"  id=\"1780\">More Document Type API:</p><p  id=\"1781\"><br id=\"1782\"></p><p class=\"s40\"  id=\"1783\">Here is more API listed, for full list of API, you need to download source code or decompile DLL files that provided by Umbraco binary.</p><p  id=\"1784\"><br id=\"1785\"></p></li><li  id=\"1786\"><p class=\"s40\"  id=\"1787\">getVirtualTabs</p><ul id=\"l36\"><li  id=\"1789\"><p class=\"s40\"  id=\"1790\">returns list of available tabs on document type</p></li></ul></li><li  id=\"1791\"><p class=\"s40\"  id=\"1792\">HasTemplate()</p><ul id=\"l37\"><li  id=\"1794\"><p class=\"s40\"  id=\"1795\">Return bool value ,true if document type has template</p></li></ul></li><li  id=\"1796\"><p class=\"s40\"  id=\"1797\">allowedTemplates</p><ul id=\"l38\"><li  id=\"1799\"><p class=\"s40\"  id=\"1800\">return List of Allowed templates.</p></li></ul></li><li  id=\"1801\"><p class=\"s40\"  id=\"1802\">PropertyTypes</p><ul id=\"l39\"><li  id=\"1804\"><p class=\"s40\"  id=\"1805\">Return list of Property types.</p></li></ul></li><li  id=\"1806\"><p class=\"s40\"  id=\"1807\">HasChildren</p><ul id=\"l40\"><li  id=\"1809\"><p class=\"s40\"  id=\"1810\">Return Bool Value, True if Document type has children document type.</p></li></ul></li></ul><p  id=\"1811\">These are few mostly used API. To change value using API you can use visual studio. If field has “Set” methods you can change value using API.</p><p  id=\"1812\">Example:</p><p  id=\"1813\"><br id=\"1814\"></p><p class=\"s40\"  id=\"1815\"><span  id=\"1816\">DocumentType</span>.GetByAlias(<span  id=\"1817\">\"NewsContainer\"</span>).Alias = <span  id=\"1818\">\"newNewsContainer\"</span>; It will change alias of News Container to ‘newNewsContainer’.</p><p  id=\"1819\"><br id=\"1820\"></p><h1  id=\"1821\"><a name=\"a35\" id=\"1822\">Chapter 04: Content</a></h1><p  id=\"1823\"><br id=\"1824\"></p><p  id=\"1825\"><br id=\"1826\"></p><p  id=\"1827\"><span id=\"1828\"><img width=\"385\" height=\"1\" alt=\"image\" src=\"Image_047.png\" id=\"1829\"></span></p><p  id=\"1830\"><br id=\"1831\"></p></div>","sub":[{"pageId":"56","pageLevel":1,"pageOrder":"56","pageParentId":"48","pageName":"Document Type “Tabs” ","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1581\" class=\"heading1581\"><a name=\"bookmark27\" id=\"1582\" style=\"color: green;\">Document Type “Tabs</a><span class=\"s3\" id=\"1583\">” </span><span id=\"1584\"><img width=\"400\" height=\"25\" alt=\"image\" src=\"Image_041.jpg\" id=\"1585\"></span></h3>","pageContent":"<div id=\"contentheading1581\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 18pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1586\">Here we just finished document type for global settings, but little document type is still remaining, take a look at navigation bar. There is title of Article like “News”, “Solution”, “Semic” and “Contact”. Now it‟s time to create Document type for these articles. I will introduce input pattern here, Input Pattern is fields or value that needs to provide when Editor creates content (Article) on Content page.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1587\">Input Pattern is “Title” and “Body”. Title is a title of article that shows up in navigation bar, Body is text or description of Title that show up when user click on particular title in navigation bar. For example if user clicks on “News” Title it will show up Description of News, in my case it will show up recent news details. Here “news”, “Solution” and “Semic” have only two Input Pattern title and Body, it means we can create many article with different title and body on same input pattern. So let‟s create one Document Type that can implement Two Input Pattern. Now let‟s create new document type “General Content” and also check matching templates and Press OK. If you want to follow me repeat same process as above to add new properties</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1588\">Add following properties into “General Content”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1589\"><br id=\"1590\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading1581\" class=\"heading1581\"><a name=\"bookmark27\" id=\"1582\" >Document Type “Tabs</a><span class=\"s3\" id=\"1583\">” </span><span id=\"1584\"><img width=\"400\" height=\"25\" alt=\"image\" src=\"Image_041.jpg\" id=\"1585\"></span></h3>","pageStyleReducedContent":"<div id=\"contentheading1581\" ><p  id=\"1586\">Here we just finished document type for global settings, but little document type is still remaining, take a look at navigation bar. There is title of Article like “News”, “Solution”, “Semic” and “Contact”. Now it‟s time to create Document type for these articles. I will introduce input pattern here, Input Pattern is fields or value that needs to provide when Editor creates content (Article) on Content page.</p><p  id=\"1587\">Input Pattern is “Title” and “Body”. Title is a title of article that shows up in navigation bar, Body is text or description of Title that show up when user click on particular title in navigation bar. For example if user clicks on “News” Title it will show up Description of News, in my case it will show up recent news details. Here “news”, “Solution” and “Semic” have only two Input Pattern title and Body, it means we can create many article with different title and body on same input pattern. So let‟s create one Document Type that can implement Two Input Pattern. Now let‟s create new document type “General Content” and also check matching templates and Press OK. If you want to follow me repeat same process as above to add new properties</p><p  id=\"1588\">Add following properties into “General Content”</p><p  id=\"1589\"><br id=\"1590\"></p></div>","sub":[]},{"pageId":"57","pageLevel":1,"pageOrder":"57","pageParentId":"48","pageName":"Document Type Structure: ","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1644\" class=\"heading1644\"><a name=\"bookmark28\" id=\"1645\" style=\"color: green;\">Document Type Structure: </a><span id=\"1646\"><img width=\"345\" height=\"27\" alt=\"image\" src=\"Image_044.jpg\" id=\"1647\"></span></h3>","pageContent":"<div id=\"contentheading1644\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 12pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1648\">It‟s a little bit tricky, news items are added each time if there is new things happen, so we need to create two Document Types. One Document Type is for News Container and another for news article. News Container is like a container that contains news article.</p><p class=\"s39\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1649\">Purpose: <span class=\"p\" id=\"1650\">Umbraco developer can set up hierarchy structure so it will limit or prevent from creating non relevant content to content editor. For example I want only news items inside News Container, we want to mange content or data. I don‟t want to create any content that is not news items inside News container, to achieve that goal I can set up structure to News Container Document Type so it will only allows to create child content only relevant to news article. Let‟s begin to create Two Document Type “News Container” and “News Article”</span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1651\">Instruction: process is similar to create News Container Document Type as above mentioned.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1652\">Document Type “News Container”</p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading1644\" class=\"heading1644\"><a name=\"bookmark28\" id=\"1645\" >Document Type Structure: </a><span id=\"1646\"><img width=\"345\" height=\"27\" alt=\"image\" src=\"Image_044.jpg\" id=\"1647\"></span></h3>","pageStyleReducedContent":"<div id=\"contentheading1644\" ><p  id=\"1648\">It‟s a little bit tricky, news items are added each time if there is new things happen, so we need to create two Document Types. One Document Type is for News Container and another for news article. News Container is like a container that contains news article.</p><p class=\"s39\"  id=\"1649\">Purpose: <span class=\"p\" id=\"1650\">Umbraco developer can set up hierarchy structure so it will limit or prevent from creating non relevant content to content editor. For example I want only news items inside News Container, we want to mange content or data. I don‟t want to create any content that is not news items inside News container, to achieve that goal I can set up structure to News Container Document Type so it will only allows to create child content only relevant to news article. Let‟s begin to create Two Document Type “News Container” and “News Article”</span></p><p  id=\"1651\">Instruction: process is similar to create News Container Document Type as above mentioned.</p><p  id=\"1652\">Document Type “News Container”</p></div>","sub":[]},{"pageId":"59","pageLevel":1,"pageOrder":"59","pageParentId":"48","pageName":"Document Type API:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading1698\" class=\"heading1698\"><a name=\"bookmark29\" id=\"1699\" style=\"color: green;\">Document Type API:</a></h3>","pageContent":"<div id=\"contentheading1698\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 35pt;line-height: 114%;text-align: justify;\" id=\"1700\">We are creating document type manually by right click on Document Type using backend of Umbraco site. It‟s also technical stuff and you need to know Umbraco stuff to set up, if you want to be a Umbraco developer in future, you should not look on top to ocean, you have to go more deep until bottom of ocean. Umbraco CMS will convert all your manual work in programming language and execute code. Let‟s look what‟s happening inside Umbraco when you manually create document type, how it‟s working and get basic Umbraco API knowledge.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1701\">Umbraco has namespace “<span class=\"s40\" id=\"1702\">umbraco.cms.businesslogic.web‛ </span>that contains los of Class. Here I will discuss DocumentType only.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1703\"><br id=\"1704\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading1698\" class=\"heading1698\"><a name=\"bookmark29\" id=\"1699\" >Document Type API:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading1698\" ><p  id=\"1700\">We are creating document type manually by right click on Document Type using backend of Umbraco site. It‟s also technical stuff and you need to know Umbraco stuff to set up, if you want to be a Umbraco developer in future, you should not look on top to ocean, you have to go more deep until bottom of ocean. Umbraco CMS will convert all your manual work in programming language and execute code. Let‟s look what‟s happening inside Umbraco when you manually create document type, how it‟s working and get basic Umbraco API knowledge.</p><p  id=\"1701\">Umbraco has namespace “<span class=\"s40\" id=\"1702\">umbraco.cms.businesslogic.web‛ </span>that contains los of Class. Here I will discuss DocumentType only.</p><p  id=\"1703\"><br id=\"1704\"></p></div>","sub":[]}]},{"pageId":"63","pageLevel":0,"pageOrder":"63","pageParentId":"-1","pageName":"Content:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1832\" class=\"heading1832\"><a name=\"bookmark30\" id=\"1833\" style=\"color: lime;\">Content:</a></h2>","pageContent":"<div id=\"contentheading1832\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1834\">Content is one of the Section menu item in umbraco. Backend user will have access to content area. It contains articles or data that created by Editor based on document type. Lets Familiar with Envornment of Content if you Right Click over Content you can see different options. See captured screen bellow</p><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1835\">Create<span class=\"p\" id=\"1836\">: To create new content</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1837\"><br id=\"1838\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1839\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1840\">Republish Entire Sites: <span class=\"p\" id=\"1841\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1842\">Reload nodes: <span class=\"p\" id=\"1843\">To clear cache on server side, client sites and recreate new cache.</span></h4><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1844\">Create<span class=\"p\" id=\"1845\">: To create new content</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"1846\"><br id=\"1847\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1848\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1849\">Republish Entire Sites: <span class=\"p\" id=\"1850\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4 style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1851\">Reload nodes: <span class=\"p\" id=\"1852\">To clear cache on server side, client sites and recreate new cache.</span></h4><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"1853\"><span id=\"1854\"><img width=\"254\" height=\"407\" alt=\"image\" src=\"Image_048.jpg\" id=\"1855\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1856\"><br id=\"1857\"></p><h3 style=\"padding-top: 12pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1858\" class=\"heading1858\"><a name=\"bookmark31\" id=\"1859\" style=\"color: green;\">Creating Content:</a></h3><div id=\"contentheading1858\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1860\">It‟s a very simple process, if you click on Create it will show up new windows promoting you to type name of content and selecting option of Document Type in drop down list. After clicked on “Create” will create content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1861\"><span id=\"1862\"><img width=\"179\" height=\"196\" alt=\"image\" src=\"Image_049.jpg\" id=\"1863\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1864\">Name: name of content and it‟s not the title of article that will show up in end users. It‟s a name of content and only used in Content section, it will not show up to end users.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1865\">It‟s time to create Content for Vcard “SemicProvider” sites. First let‟s start with creating content for global settings<span class=\"s19\" id=\"1866\">. I will show you only for global settings, for rest of content you can repeat similar process.</span></p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1867\">Instruction: Right click on Content and Click on “Create” provide following information</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1868\">Name: “Setting sites”</p><p class=\"s8\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1869\">Document Type: select “Web Site Global Settings” from drop down list.</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1870\">Press “Create”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1871\"><br id=\"1872\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1873\">It will ask more information based on document type. Provide following info and press “Save” button. See highlighted color text. See captured screen “Image content”</p><p class=\"s19\" style=\"padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"1874\">Image: Content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1875\"><br id=\"1876\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1877\"><span id=\"1878\"><img width=\"547\" height=\"552\" alt=\"image\" src=\"Image_050.png\" id=\"1879\"></span></p><p class=\"s45\" style=\"padding-top: 4pt;padding-left: 92pt;text-indent: 0pt;text-align: left;\" id=\"1880\">Save Content <span class=\"p\" id=\"1881\">Save and Publish</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1882\"><br id=\"1883\"></p><p style=\"padding-left: 39pt;text-indent: 0pt;text-align: left;\" id=\"1884\">Preview</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1885\"><br id=\"1886\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1887\">Content Name</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1888\">Content Name</p><p style=\"padding-left: 348pt;text-indent: 0pt;text-align: left;\" id=\"1889\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1890\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1891\"><br id=\"1892\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1893\"><br id=\"1894\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1895\">Node Id of Content</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1896\">Node Id of Content</p><p style=\"padding-left: 348pt;text-indent: 0pt;text-align: left;\" id=\"1897\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1898\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1899\"><br id=\"1900\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1901\">Present Content to End</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1902\">Present Content to End</p><p style=\"padding-left: 350pt;text-indent: 0pt;text-align: left;\" id=\"1903\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1904\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1905\"><br id=\"1906\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1907\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1908\">Image content</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1909\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1910\">Image content</span></p><p style=\"padding-left: 4pt;text-indent: 0pt;text-align: left;\" id=\"1911\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1912\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1913\"><br id=\"1914\"></p><p style=\"padding-top: 11pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1915\">Did you remember Site Name, Slogan and Logo were created at Document Type “Web site global settings”? We added type properties Textstring for Site name and Slogan and type:Upload for Logo. Here in Content page we can type site name and slogan because we selected type:Textstring and we can upload image in logo because we selected type:Upload in Document Type “Web Site Global Settings”. Now I hope you understand concept of Document Type and relation between Content and Document Type:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1916\"><br id=\"1917\"></p><p class=\"s8\" style=\"padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1918\">Notes: Create content for “Developer”, “Solution” and “Semic” using document type “General Content”. It’s a same process as we created just now. After that you will be more familiar with Creating Content in Umbraco sites and relation of Document Type and content. Let’s See next image relations between content and Document Type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1919\"><span id=\"1920\"><img width=\"573\" height=\"427\" alt=\"image\" src=\"Image_051.png\" id=\"1921\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1922\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1923\">Content</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1924\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1925\">Content</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1926\"></p></div><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1927\" class=\"heading1927\"><a name=\"bookmark32\" id=\"1928\" style=\"color: green;\">Relations between Document Type and Content</a></h3><div id=\"contentheading1927\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"1929\"><br id=\"1930\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1931\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1932\">Document Type</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1933\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1934\">Document Type</span></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1935\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1936\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1937\"><br id=\"1938\"></p><p class=\"s10\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1939\"><span style=\" color: #F00;\" id=\"1940\">Red Long-dash arrow</span>: Name of Properties <span style=\" color: #00AF50;\" id=\"1941\">Green arrow</span>: Type of Properties</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1942\"><br id=\"1943\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1944\">To understand relation between Document Type and Content may be difficult for first time but when you practice more it will be easy to understand. See two images above and follow red and green arrow telling relation between Document Type and Content.</p><p class=\"s4\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"1945\">Delete Document Type<span class=\"s8\" id=\"1946\">: </span><span class=\"p\" id=\"1947\">if you delete Document Type all associated content will be also deleted from websites, it‟s not possible to undo or restore Document Type in case delete.</span></p><p class=\"s4\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1948\">Update Document Type Properties: <span class=\"p\" id=\"1949\">you can change document type property for example you can change property type from type Simple Editor to type Rich Text Editor, data will not be lost because both are related type, both editor allows editor to edit text as simple or rich text environment. When you change type from type Textstring to type Label or type Upload, in that case all content modified after document type property has changed will lost previous data because type are not similar. So changing property type may cost data lost.</span></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1950\">Delete Content: <span class=\"p\" id=\"1951\">you can delete content. Deleted items will moved to Recycle Bin so if you accidently delete any content no need to feel panic you can easily restore from Recycle bin directory.</span></h4></div><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1952\" class=\"heading1952\"><a name=\"bookmark33\" id=\"1953\" style=\"color: green;\">Explore content Properties:</a></h3><div id=\"contentheading1952\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-bottom: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1954\">There is more option for content that we created on Content section based on document type. Let‟s right click on “Setting site” content and explore more options. See captured screen.</p><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1955\">Create<span class=\"p\" id=\"1956\">: Create new child article example News Container.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1957\">Edit in Canvas: <span class=\"p\" id=\"1958\">will allows editor to edit content in Frontend using browser.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1959\">Delete<span class=\"p\" id=\"1960\">: Move content to Recycle Bin</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 122%;text-align: left;\" id=\"1961\">Move<span class=\"p\" id=\"1962\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1963\">: Copy content, Copy will not delete content</span></h4><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1964\">from old location</p><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1965\">Sort<span class=\"p\" id=\"1966\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1967\">Rollback<span class=\"p\" id=\"1968\">: allows to rollback content based on previous changed,</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1969\">Manage Hostnames: <span class=\"p\" id=\"1970\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1971\">Permission: <span class=\"p\" id=\"1972\">set up permission</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1973\">Publich Access: <span class=\"p\" id=\"1974\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1975\">Audit Trill<span class=\"p\" id=\"1976\">: list of history of content</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1977\">Notifications<span class=\"p\" id=\"1978\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1979\">Send to Translation: <span class=\"p\" id=\"1980\">used for multiple languages</span></h4><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1981\">Create<span class=\"p\" id=\"1982\">: Create new child article example News Container.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1983\">Edit in Canvas: <span class=\"p\" id=\"1984\">will allows editor to edit content in Frontend using browser.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1985\">Delete<span class=\"p\" id=\"1986\">: Move content to Recycle Bin</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 122%;text-align: left;\" id=\"1987\">Move<span class=\"p\" id=\"1988\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1989\">: Copy content, Copy will not delete content</span></h4><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1990\">from old location</p><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1991\">Sort<span class=\"p\" id=\"1992\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1993\">Rollback<span class=\"p\" id=\"1994\">: allows to rollback content based on previous changed,</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1995\">Manage Hostnames: <span class=\"p\" id=\"1996\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1997\">Permission: <span class=\"p\" id=\"1998\">set up permission</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1999\">Publich Access: <span class=\"p\" id=\"2000\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2001\">Audit Trill<span class=\"p\" id=\"2002\">: list of history of content</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"2003\">Notifications<span class=\"p\" id=\"2004\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2005\">Send to Translation: <span class=\"p\" id=\"2006\">used for multiple languages</span></h4><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2007\"><span id=\"2008\"><img width=\"180\" height=\"528\" alt=\"image\" src=\"Image_052.jpg\" id=\"2009\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2010\"><br id=\"2011\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2012\">Notes:</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2013\">I am not going to create content for other document types because creating</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2014\">content is same for all document type just you need to select different document type when you create content. You can easily follow my process to create content for other document type.</p><p style=\"padding-left: 5pt;text-indent: 35pt;line-height: 114%;text-align: justify;\" id=\"2015\">Creating News Container and News Article are a bit different. First Create Article on “News Container” after that right click on just created content (“News Container” Document type content), then create news article. You can see Document Type “News Article” is only option to choose if you followed me. That is Allowed child nodetypes that we set up in Document Type “Structure” property of “News Container” Document Type.</p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2016\">I have created more content for Semic Provider site. You can see captured screen and compare with your version.</p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2017\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\" style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2018\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\" style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2019\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2020\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2021\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\" style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2022\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\" style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2023\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2024\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2025\"><span id=\"2026\"><img width=\"298\" height=\"400\" alt=\"image\" src=\"Image_053.jpg\" id=\"2027\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2028\"><br id=\"2029\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2030\">We are just working in backend part of Semic Provider site. If you preview article you see empty page. No content its because we have not touch any Templates yet, templates are responsible to output content or to present data to end users. I will discuss later or about templates. When you preview your content Umbraco will insert red strip with white color text “Preview Mode-click to end” on top right cornner of browser. Umbraco provides notification to you about your are viewing on Preview Mode. To exit click browser will close automatically.</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2031\"><span id=\"2032\"><img width=\"424\" height=\"230\" alt=\"image\" src=\"Image_054.jpg\" id=\"2033\"></span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2034\">For now you can‟t preview you data because associated templates are empty.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2035\"><br id=\"2036\"></p><p class=\"s49\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2037\"><a name=\"bookmark34\" id=\"2038\">Content API:</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2039\"><br id=\"2040\"></p><p class=\"s50\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2041\">In Umbraco code Content is understood by Document so that creating content in Umbraco Backend means executing Document code in Umbraco Core code inside server. Core code is programming language written in C# language. Content API is very important, if you want to create content using API, for example if you move sites from another websites to Umbraco CMS site, probably you want to get all data or content from old site as archive. If there is 1000 of articles in old site, it‟s not good idea to import content manually. You have to think some sort of automatic process to import content. Here is basic API for Umbraco Content.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2042\"><span style=\" color: #00F;\" id=\"2043\">namespace </span>umbraco.cms.businesslogic.web contains Document Class. Creating Content means Executing <span style=\" color: #2B91AE;\" id=\"2044\">Document</span>.MakeNew() methods of Document Class.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2045\">MakeNew() takes four parameters</p><ul id=\"l41\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2047\"><p class=\"s52\" style=\"display: inline;\" id=\"2048\">1<span class=\"s54\" id=\"2049\">st </span>parameter String Title: its title of Content, that title shown in Content Tree.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2050\"><p class=\"s52\" style=\"display: inline;\" id=\"2051\">2<span class=\"s54\" id=\"2052\">nd </span>Parameter DocumentType: Document Type, when you select document</p><p class=\"s52\" style=\"padding-left: 41pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2053\">type Umbraco will automatically use that document type.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: justify;\" id=\"2054\"><p class=\"s52\" style=\"display: inline;\" id=\"2055\">3<span class=\"s54\" id=\"2056\">rd</span><span class=\"s55\" id=\"2057\"> </span>parameter User: Umbraco does not allow to crate content without valid and has access user. When you logged in Umbraco automatically take your login user and use to create document.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2058\"><p class=\"s52\" style=\"display: inline;\" id=\"2059\">4<span class=\"s54\" id=\"2060\">th </span>parameter parent id: it’s a hierarchy of content. If you want to</p><p class=\"s52\" style=\"padding-left: 41pt;text-indent: 0pt;text-align: justify;\" id=\"2061\">create content at root level you must provide parent id -1. In Semic Provider content ‘News Article’ is child of ‘news container’ in that case all news article’s content’s parent id is Node id of ‚news Container‛. Its means if you provide -1 as parent id, Content will be created at root level. If you provide node id of content, it will create content as child of provided node id content.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2062\"><p class=\"s52\" style=\"display: inline;\" id=\"2063\">Example:</p><ul id=\"l42\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2065\"><p class=\"s52\" style=\"display: inline;\" id=\"2066\">Document dt = Document.MakeNew(‚Developer‛,GeneralContent, User(0), -1);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2067\"><p class=\"s52\" style=\"display: inline;\" id=\"2068\">dt.Publish();</p><ul id=\"l43\"><li style=\"padding-left: 113pt;text-indent: -18pt;text-align: justify;\" id=\"2070\"><p class=\"s52\" style=\"display: inline;\" id=\"2071\">Description: Create document name ‚Developer‛ on Document Type ‚GeneralContent‛. Use user 0. 0 is admin user id and always exist on Umbraco system. -1 will create Document at Root level.</p></li><li style=\"padding-left: 113pt;text-indent: -18pt;text-align: justify;\" id=\"2072\"><p class=\"s52\" style=\"display: inline;\" id=\"2073\">Publish() method should be invoke to publish content or when you press Publish icon Umbraco execute publish() method</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2074\"><br id=\"2075\"></p></li></ul></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2076\"><p class=\"s50\" style=\"display: inline;\" id=\"2077\">Delete(): Delete method executed when you delete content.</p></li></ul><ul id=\"l44\"><li style=\"padding-left: 113pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2079\"><p class=\"s53\" style=\"display: inline;\" id=\"2080\"><span class=\"s50\" id=\"2081\">Example: </span>Document <span style=\" color: #000;\" id=\"2082\">dt = </span><span style=\" color: #00F;\" id=\"2083\">new </span>Document<span style=\" color: #000;\" id=\"2084\">(id);</span></p></li></ul><p class=\"s52\" style=\"padding-left: 185pt;text-indent: 0pt;text-align: left;\" id=\"2085\">dt.delete(); id is node id of content.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2086\">Delete() method will move content to Recycle Bin.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2087\"><br id=\"2088\"></p><p class=\"s50\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2089\">That is very basic of Umbraco API for Creating Content. For more details you can look inside umbraco.cms.businesslogic.web.document namespace. I strongly recommend looking source code and analyzing codes.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2090\"><br id=\"2091\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2092\"><a name=\"a36\" id=\"2093\">Chapter 05: Templates</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2094\"><br id=\"2095\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2096\"><br id=\"2097\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2098\"><span id=\"2099\"><img width=\"432\" height=\"1\" alt=\"image\" src=\"Image_055.png\" id=\"2100\"></span></p></div></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading1832\" class=\"heading1832\"><a name=\"bookmark30\" id=\"1833\" >Content:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading1832\" ><p  id=\"1834\">Content is one of the Section menu item in umbraco. Backend user will have access to content area. It contains articles or data that created by Editor based on document type. Lets Familiar with Envornment of Content if you Right Click over Content you can see different options. See captured screen bellow</p><h4  id=\"1835\">Create<span class=\"p\" id=\"1836\">: To create new content</span></h4><p  id=\"1837\"><br id=\"1838\"></p><p  id=\"1839\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4  id=\"1840\">Republish Entire Sites: <span class=\"p\" id=\"1841\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4  id=\"1842\">Reload nodes: <span class=\"p\" id=\"1843\">To clear cache on server side, client sites and recreate new cache.</span></h4><h4  id=\"1844\">Create<span class=\"p\" id=\"1845\">: To create new content</span></h4><p  id=\"1846\"><br id=\"1847\"></p><p  id=\"1848\">Sort: to sort content items that will effect to end users. Top items will show first so on.</p><h4  id=\"1849\">Republish Entire Sites: <span class=\"p\" id=\"1850\">it will publish whole sites again, it will generate Umbraco.config file inside “App_Data” directory. Most of time if you move you Umbraco websites into different Deployment Environment you need to “Republish Entire sites” because umbracon.config is temporary files create by Umbraco system. Note that it will not publish unpublished article.</span></h4><h4  id=\"1851\">Reload nodes: <span class=\"p\" id=\"1852\">To clear cache on server side, client sites and recreate new cache.</span></h4><p class=\"s10\"  id=\"1853\"><span id=\"1854\"><img width=\"254\" height=\"407\" alt=\"image\" src=\"Image_048.jpg\" id=\"1855\"></span>\t</p><p  id=\"1856\"><br id=\"1857\"></p><h3  id=\"heading1858\" class=\"heading1858\"><a name=\"bookmark31\" id=\"1859\" >Creating Content:</a></h3><div id=\"contentheading1858\" ><p  id=\"1860\">It‟s a very simple process, if you click on Create it will show up new windows promoting you to type name of content and selecting option of Document Type in drop down list. After clicked on “Create” will create content.</p><p  id=\"1861\"><span id=\"1862\"><img width=\"179\" height=\"196\" alt=\"image\" src=\"Image_049.jpg\" id=\"1863\"></span></p><p  id=\"1864\">Name: name of content and it‟s not the title of article that will show up in end users. It‟s a name of content and only used in Content section, it will not show up to end users.</p><p  id=\"1865\">It‟s time to create Content for Vcard “SemicProvider” sites. First let‟s start with creating content for global settings<span class=\"s19\" id=\"1866\">. I will show you only for global settings, for rest of content you can repeat similar process.</span></p><p class=\"s8\"  id=\"1867\">Instruction: Right click on Content and Click on “Create” provide following information</p><p class=\"s8\"  id=\"1868\">Name: “Setting sites”</p><p class=\"s8\"  id=\"1869\">Document Type: select “Web Site Global Settings” from drop down list.</p><p class=\"s8\"  id=\"1870\">Press “Create”</p><p  id=\"1871\"><br id=\"1872\"></p><p  id=\"1873\">It will ask more information based on document type. Provide following info and press “Save” button. See highlighted color text. See captured screen “Image content”</p><p class=\"s19\"  id=\"1874\">Image: Content</p><p  id=\"1875\"><br id=\"1876\"></p><p  id=\"1877\"><span id=\"1878\"><img width=\"547\" height=\"552\" alt=\"image\" src=\"Image_050.png\" id=\"1879\"></span></p><p class=\"s45\"  id=\"1880\">Save Content <span class=\"p\" id=\"1881\">Save and Publish</span></p><p  id=\"1882\"><br id=\"1883\"></p><p  id=\"1884\">Preview</p><p  id=\"1885\"><br id=\"1886\"></p><p  id=\"1887\">Content Name</p><p  id=\"1888\">Content Name</p><p  id=\"1889\"><span  id=\"1890\"> </span></p><p  id=\"1891\"><br id=\"1892\"></p><p  id=\"1893\"><br id=\"1894\"></p><p  id=\"1895\">Node Id of Content</p><p  id=\"1896\">Node Id of Content</p><p  id=\"1897\"><span  id=\"1898\"> </span></p><p  id=\"1899\"><br id=\"1900\"></p><p  id=\"1901\">Present Content to End</p><p  id=\"1902\">Present Content to End</p><p  id=\"1903\"><span  id=\"1904\"> </span></p><p  id=\"1905\"><br id=\"1906\"></p><p  id=\"1907\"><span class=\"s46\"  id=\"1908\">Image content</span></p><p  id=\"1909\"><span class=\"s46\"  id=\"1910\">Image content</span></p><p  id=\"1911\"><span  id=\"1912\"> </span></p><p  id=\"1913\"><br id=\"1914\"></p><p  id=\"1915\">Did you remember Site Name, Slogan and Logo were created at Document Type “Web site global settings”? We added type properties Textstring for Site name and Slogan and type:Upload for Logo. Here in Content page we can type site name and slogan because we selected type:Textstring and we can upload image in logo because we selected type:Upload in Document Type “Web Site Global Settings”. Now I hope you understand concept of Document Type and relation between Content and Document Type:</p><p  id=\"1916\"><br id=\"1917\"></p><p class=\"s8\"  id=\"1918\">Notes: Create content for “Developer”, “Solution” and “Semic” using document type “General Content”. It’s a same process as we created just now. After that you will be more familiar with Creating Content in Umbraco sites and relation of Document Type and content. Let’s See next image relations between content and Document Type.</p><p  id=\"1919\"><span id=\"1920\"><img width=\"573\" height=\"427\" alt=\"image\" src=\"Image_051.png\" id=\"1921\"></span></p><p  id=\"1922\"><span class=\"s46\"  id=\"1923\">Content</span></p><p  id=\"1924\"><span class=\"s46\"  id=\"1925\">Content</span></p><p  id=\"1926\"></p></div><h3  id=\"heading1927\" class=\"heading1927\"><a name=\"bookmark32\" id=\"1928\" >Relations between Document Type and Content</a></h3><div id=\"contentheading1927\" ><p  id=\"1929\"><br id=\"1930\"></p><p  id=\"1931\"><span class=\"s46\"  id=\"1932\">Document Type</span></p><p  id=\"1933\"><span class=\"s46\"  id=\"1934\">Document Type</span></p><p  id=\"1935\"><span  id=\"1936\"> </span></p><p  id=\"1937\"><br id=\"1938\"></p><p class=\"s10\"  id=\"1939\"><span  id=\"1940\">Red Long-dash arrow</span>: Name of Properties <span  id=\"1941\">Green arrow</span>: Type of Properties</p><p  id=\"1942\"><br id=\"1943\"></p><p  id=\"1944\">To understand relation between Document Type and Content may be difficult for first time but when you practice more it will be easy to understand. See two images above and follow red and green arrow telling relation between Document Type and Content.</p><p class=\"s4\"  id=\"1945\">Delete Document Type<span class=\"s8\" id=\"1946\">: </span><span class=\"p\" id=\"1947\">if you delete Document Type all associated content will be also deleted from websites, it‟s not possible to undo or restore Document Type in case delete.</span></p><p class=\"s4\"  id=\"1948\">Update Document Type Properties: <span class=\"p\" id=\"1949\">you can change document type property for example you can change property type from type Simple Editor to type Rich Text Editor, data will not be lost because both are related type, both editor allows editor to edit text as simple or rich text environment. When you change type from type Textstring to type Label or type Upload, in that case all content modified after document type property has changed will lost previous data because type are not similar. So changing property type may cost data lost.</span></p><h4  id=\"1950\">Delete Content: <span class=\"p\" id=\"1951\">you can delete content. Deleted items will moved to Recycle Bin so if you accidently delete any content no need to feel panic you can easily restore from Recycle bin directory.</span></h4></div><h3  id=\"heading1952\" class=\"heading1952\"><a name=\"bookmark33\" id=\"1953\" >Explore content Properties:</a></h3><div id=\"contentheading1952\" ><p  id=\"1954\">There is more option for content that we created on Content section based on document type. Let‟s right click on “Setting site” content and explore more options. See captured screen.</p><h4  id=\"1955\">Create<span class=\"p\" id=\"1956\">: Create new child article example News Container.</span></h4><h4  id=\"1957\">Edit in Canvas: <span class=\"p\" id=\"1958\">will allows editor to edit content in Frontend using browser.</span></h4><h4  id=\"1959\">Delete<span class=\"p\" id=\"1960\">: Move content to Recycle Bin</span></h4><h4  id=\"1961\">Move<span class=\"p\" id=\"1962\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1963\">: Copy content, Copy will not delete content</span></h4><p  id=\"1964\">from old location</p><h4  id=\"1965\">Sort<span class=\"p\" id=\"1966\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4  id=\"1967\">Rollback<span class=\"p\" id=\"1968\">: allows to rollback content based on previous changed,</span></h4><h4  id=\"1969\">Manage Hostnames: <span class=\"p\" id=\"1970\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4  id=\"1971\">Permission: <span class=\"p\" id=\"1972\">set up permission</span></h4><h4  id=\"1973\">Publich Access: <span class=\"p\" id=\"1974\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4  id=\"1975\">Audit Trill<span class=\"p\" id=\"1976\">: list of history of content</span></h4><h4  id=\"1977\">Notifications<span class=\"p\" id=\"1978\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4  id=\"1979\">Send to Translation: <span class=\"p\" id=\"1980\">used for multiple languages</span></h4><h4  id=\"1981\">Create<span class=\"p\" id=\"1982\">: Create new child article example News Container.</span></h4><h4  id=\"1983\">Edit in Canvas: <span class=\"p\" id=\"1984\">will allows editor to edit content in Frontend using browser.</span></h4><h4  id=\"1985\">Delete<span class=\"p\" id=\"1986\">: Move content to Recycle Bin</span></h4><h4  id=\"1987\">Move<span class=\"p\" id=\"1988\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1989\">: Copy content, Copy will not delete content</span></h4><p  id=\"1990\">from old location</p><h4  id=\"1991\">Sort<span class=\"p\" id=\"1992\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4  id=\"1993\">Rollback<span class=\"p\" id=\"1994\">: allows to rollback content based on previous changed,</span></h4><h4  id=\"1995\">Manage Hostnames: <span class=\"p\" id=\"1996\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4  id=\"1997\">Permission: <span class=\"p\" id=\"1998\">set up permission</span></h4><h4  id=\"1999\">Publich Access: <span class=\"p\" id=\"2000\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4  id=\"2001\">Audit Trill<span class=\"p\" id=\"2002\">: list of history of content</span></h4><h4  id=\"2003\">Notifications<span class=\"p\" id=\"2004\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4  id=\"2005\">Send to Translation: <span class=\"p\" id=\"2006\">used for multiple languages</span></h4><p class=\"s10\"  id=\"2007\"><span id=\"2008\"><img width=\"180\" height=\"528\" alt=\"image\" src=\"Image_052.jpg\" id=\"2009\"></span>\t</p><p  id=\"2010\"><br id=\"2011\"></p><p  id=\"2012\">Notes:</p><p  id=\"2013\">I am not going to create content for other document types because creating</p><p  id=\"2014\">content is same for all document type just you need to select different document type when you create content. You can easily follow my process to create content for other document type.</p><p  id=\"2015\">Creating News Container and News Article are a bit different. First Create Article on “News Container” after that right click on just created content (“News Container” Document type content), then create news article. You can see Document Type “News Article” is only option to choose if you followed me. That is Allowed child nodetypes that we set up in Document Type “Structure” property of “News Container” Document Type.</p><p  id=\"2016\">I have created more content for Semic Provider site. You can see captured screen and compare with your version.</p><p class=\"s8\"  id=\"2017\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\"  id=\"2018\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\"  id=\"2019\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2020\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s8\"  id=\"2021\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\"  id=\"2022\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\"  id=\"2023\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2024\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s10\"  id=\"2025\"><span id=\"2026\"><img width=\"298\" height=\"400\" alt=\"image\" src=\"Image_053.jpg\" id=\"2027\"></span>\t</p><p  id=\"2028\"><br id=\"2029\"></p><p  id=\"2030\">We are just working in backend part of Semic Provider site. If you preview article you see empty page. No content its because we have not touch any Templates yet, templates are responsible to output content or to present data to end users. I will discuss later or about templates. When you preview your content Umbraco will insert red strip with white color text “Preview Mode-click to end” on top right cornner of browser. Umbraco provides notification to you about your are viewing on Preview Mode. To exit click browser will close automatically.</p><p  id=\"2031\"><span id=\"2032\"><img width=\"424\" height=\"230\" alt=\"image\" src=\"Image_054.jpg\" id=\"2033\"></span></p><p  id=\"2034\">For now you can‟t preview you data because associated templates are empty.</p><p  id=\"2035\"><br id=\"2036\"></p><p class=\"s49\"  id=\"2037\"><a name=\"bookmark34\" id=\"2038\">Content API:</a></p><p  id=\"2039\"><br id=\"2040\"></p><p class=\"s50\"  id=\"2041\">In Umbraco code Content is understood by Document so that creating content in Umbraco Backend means executing Document code in Umbraco Core code inside server. Core code is programming language written in C# language. Content API is very important, if you want to create content using API, for example if you move sites from another websites to Umbraco CMS site, probably you want to get all data or content from old site as archive. If there is 1000 of articles in old site, it‟s not good idea to import content manually. You have to think some sort of automatic process to import content. Here is basic API for Umbraco Content.</p><p class=\"s52\"  id=\"2042\"><span  id=\"2043\">namespace </span>umbraco.cms.businesslogic.web contains Document Class. Creating Content means Executing <span  id=\"2044\">Document</span>.MakeNew() methods of Document Class.</p><p class=\"s52\"  id=\"2045\">MakeNew() takes four parameters</p><ul id=\"l41\"><li  id=\"2047\"><p class=\"s52\"  id=\"2048\">1<span class=\"s54\" id=\"2049\">st </span>parameter String Title: its title of Content, that title shown in Content Tree.</p></li><li  id=\"2050\"><p class=\"s52\"  id=\"2051\">2<span class=\"s54\" id=\"2052\">nd </span>Parameter DocumentType: Document Type, when you select document</p><p class=\"s52\"  id=\"2053\">type Umbraco will automatically use that document type.</p></li><li  id=\"2054\"><p class=\"s52\"  id=\"2055\">3<span class=\"s54\" id=\"2056\">rd</span><span class=\"s55\" id=\"2057\"> </span>parameter User: Umbraco does not allow to crate content without valid and has access user. When you logged in Umbraco automatically take your login user and use to create document.</p></li><li  id=\"2058\"><p class=\"s52\"  id=\"2059\">4<span class=\"s54\" id=\"2060\">th </span>parameter parent id: it’s a hierarchy of content. If you want to</p><p class=\"s52\"  id=\"2061\">create content at root level you must provide parent id -1. In Semic Provider content ‘News Article’ is child of ‘news container’ in that case all news article’s content’s parent id is Node id of ‚news Container‛. Its means if you provide -1 as parent id, Content will be created at root level. If you provide node id of content, it will create content as child of provided node id content.</p></li><li  id=\"2062\"><p class=\"s52\"  id=\"2063\">Example:</p><ul id=\"l42\"><li  id=\"2065\"><p class=\"s52\"  id=\"2066\">Document dt = Document.MakeNew(‚Developer‛,GeneralContent, User(0), -1);</p></li><li  id=\"2067\"><p class=\"s52\"  id=\"2068\">dt.Publish();</p><ul id=\"l43\"><li  id=\"2070\"><p class=\"s52\"  id=\"2071\">Description: Create document name ‚Developer‛ on Document Type ‚GeneralContent‛. Use user 0. 0 is admin user id and always exist on Umbraco system. -1 will create Document at Root level.</p></li><li  id=\"2072\"><p class=\"s52\"  id=\"2073\">Publish() method should be invoke to publish content or when you press Publish icon Umbraco execute publish() method</p><p  id=\"2074\"><br id=\"2075\"></p></li></ul></li></ul></li><li  id=\"2076\"><p class=\"s50\"  id=\"2077\">Delete(): Delete method executed when you delete content.</p></li></ul><ul id=\"l44\"><li  id=\"2079\"><p class=\"s53\"  id=\"2080\"><span class=\"s50\" id=\"2081\">Example: </span>Document <span  id=\"2082\">dt = </span><span  id=\"2083\">new </span>Document<span  id=\"2084\">(id);</span></p></li></ul><p class=\"s52\"  id=\"2085\">dt.delete(); id is node id of content.</p><p class=\"s52\"  id=\"2086\">Delete() method will move content to Recycle Bin.</p><p  id=\"2087\"><br id=\"2088\"></p><p class=\"s50\"  id=\"2089\">That is very basic of Umbraco API for Creating Content. For more details you can look inside umbraco.cms.businesslogic.web.document namespace. I strongly recommend looking source code and analyzing codes.</p><p  id=\"2090\"><br id=\"2091\"></p><h1  id=\"2092\"><a name=\"a36\" id=\"2093\">Chapter 05: Templates</a></h1><p  id=\"2094\"><br id=\"2095\"></p><p  id=\"2096\"><br id=\"2097\"></p><p  id=\"2098\"><span id=\"2099\"><img width=\"432\" height=\"1\" alt=\"image\" src=\"Image_055.png\" id=\"2100\"></span></p></div></div>","sub":[{"pageId":"64","pageLevel":1,"pageOrder":"64","pageParentId":"63","pageName":"Creating Content:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 12pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1858\" class=\"heading1858\"><a name=\"bookmark31\" id=\"1859\" style=\"color: green;\">Creating Content:</a></h3>","pageContent":"<div id=\"contentheading1858\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1860\">It‟s a very simple process, if you click on Create it will show up new windows promoting you to type name of content and selecting option of Document Type in drop down list. After clicked on “Create” will create content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1861\"><span id=\"1862\"><img width=\"179\" height=\"196\" alt=\"image\" src=\"Image_049.jpg\" id=\"1863\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1864\">Name: name of content and it‟s not the title of article that will show up in end users. It‟s a name of content and only used in Content section, it will not show up to end users.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1865\">It‟s time to create Content for Vcard “SemicProvider” sites. First let‟s start with creating content for global settings<span class=\"s19\" id=\"1866\">. I will show you only for global settings, for rest of content you can repeat similar process.</span></p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1867\">Instruction: Right click on Content and Click on “Create” provide following information</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1868\">Name: “Setting sites”</p><p class=\"s8\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1869\">Document Type: select “Web Site Global Settings” from drop down list.</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"1870\">Press “Create”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1871\"><br id=\"1872\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1873\">It will ask more information based on document type. Provide following info and press “Save” button. See highlighted color text. See captured screen “Image content”</p><p class=\"s19\" style=\"padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"1874\">Image: Content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1875\"><br id=\"1876\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1877\"><span id=\"1878\"><img width=\"547\" height=\"552\" alt=\"image\" src=\"Image_050.png\" id=\"1879\"></span></p><p class=\"s45\" style=\"padding-top: 4pt;padding-left: 92pt;text-indent: 0pt;text-align: left;\" id=\"1880\">Save Content <span class=\"p\" id=\"1881\">Save and Publish</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1882\"><br id=\"1883\"></p><p style=\"padding-left: 39pt;text-indent: 0pt;text-align: left;\" id=\"1884\">Preview</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1885\"><br id=\"1886\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1887\">Content Name</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1888\">Content Name</p><p style=\"padding-left: 348pt;text-indent: 0pt;text-align: left;\" id=\"1889\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1890\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1891\"><br id=\"1892\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1893\"><br id=\"1894\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1895\">Node Id of Content</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1896\">Node Id of Content</p><p style=\"padding-left: 348pt;text-indent: 0pt;text-align: left;\" id=\"1897\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1898\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1899\"><br id=\"1900\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1901\">Present Content to End</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1902\">Present Content to End</p><p style=\"padding-left: 350pt;text-indent: 0pt;text-align: left;\" id=\"1903\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1904\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1905\"><br id=\"1906\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1907\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1908\">Image content</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1909\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1910\">Image content</span></p><p style=\"padding-left: 4pt;text-indent: 0pt;text-align: left;\" id=\"1911\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1912\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1913\"><br id=\"1914\"></p><p style=\"padding-top: 11pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1915\">Did you remember Site Name, Slogan and Logo were created at Document Type “Web site global settings”? We added type properties Textstring for Site name and Slogan and type:Upload for Logo. Here in Content page we can type site name and slogan because we selected type:Textstring and we can upload image in logo because we selected type:Upload in Document Type “Web Site Global Settings”. Now I hope you understand concept of Document Type and relation between Content and Document Type:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1916\"><br id=\"1917\"></p><p class=\"s8\" style=\"padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1918\">Notes: Create content for “Developer”, “Solution” and “Semic” using document type “General Content”. It’s a same process as we created just now. After that you will be more familiar with Creating Content in Umbraco sites and relation of Document Type and content. Let’s See next image relations between content and Document Type.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1919\"><span id=\"1920\"><img width=\"573\" height=\"427\" alt=\"image\" src=\"Image_051.png\" id=\"1921\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1922\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1923\">Content</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1924\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1925\">Content</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1926\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading1858\" class=\"heading1858\"><a name=\"bookmark31\" id=\"1859\" >Creating Content:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading1858\" ><p  id=\"1860\">It‟s a very simple process, if you click on Create it will show up new windows promoting you to type name of content and selecting option of Document Type in drop down list. After clicked on “Create” will create content.</p><p  id=\"1861\"><span id=\"1862\"><img width=\"179\" height=\"196\" alt=\"image\" src=\"Image_049.jpg\" id=\"1863\"></span></p><p  id=\"1864\">Name: name of content and it‟s not the title of article that will show up in end users. It‟s a name of content and only used in Content section, it will not show up to end users.</p><p  id=\"1865\">It‟s time to create Content for Vcard “SemicProvider” sites. First let‟s start with creating content for global settings<span class=\"s19\" id=\"1866\">. I will show you only for global settings, for rest of content you can repeat similar process.</span></p><p class=\"s8\"  id=\"1867\">Instruction: Right click on Content and Click on “Create” provide following information</p><p class=\"s8\"  id=\"1868\">Name: “Setting sites”</p><p class=\"s8\"  id=\"1869\">Document Type: select “Web Site Global Settings” from drop down list.</p><p class=\"s8\"  id=\"1870\">Press “Create”</p><p  id=\"1871\"><br id=\"1872\"></p><p  id=\"1873\">It will ask more information based on document type. Provide following info and press “Save” button. See highlighted color text. See captured screen “Image content”</p><p class=\"s19\"  id=\"1874\">Image: Content</p><p  id=\"1875\"><br id=\"1876\"></p><p  id=\"1877\"><span id=\"1878\"><img width=\"547\" height=\"552\" alt=\"image\" src=\"Image_050.png\" id=\"1879\"></span></p><p class=\"s45\"  id=\"1880\">Save Content <span class=\"p\" id=\"1881\">Save and Publish</span></p><p  id=\"1882\"><br id=\"1883\"></p><p  id=\"1884\">Preview</p><p  id=\"1885\"><br id=\"1886\"></p><p  id=\"1887\">Content Name</p><p  id=\"1888\">Content Name</p><p  id=\"1889\"><span  id=\"1890\"> </span></p><p  id=\"1891\"><br id=\"1892\"></p><p  id=\"1893\"><br id=\"1894\"></p><p  id=\"1895\">Node Id of Content</p><p  id=\"1896\">Node Id of Content</p><p  id=\"1897\"><span  id=\"1898\"> </span></p><p  id=\"1899\"><br id=\"1900\"></p><p  id=\"1901\">Present Content to End</p><p  id=\"1902\">Present Content to End</p><p  id=\"1903\"><span  id=\"1904\"> </span></p><p  id=\"1905\"><br id=\"1906\"></p><p  id=\"1907\"><span class=\"s46\"  id=\"1908\">Image content</span></p><p  id=\"1909\"><span class=\"s46\"  id=\"1910\">Image content</span></p><p  id=\"1911\"><span  id=\"1912\"> </span></p><p  id=\"1913\"><br id=\"1914\"></p><p  id=\"1915\">Did you remember Site Name, Slogan and Logo were created at Document Type “Web site global settings”? We added type properties Textstring for Site name and Slogan and type:Upload for Logo. Here in Content page we can type site name and slogan because we selected type:Textstring and we can upload image in logo because we selected type:Upload in Document Type “Web Site Global Settings”. Now I hope you understand concept of Document Type and relation between Content and Document Type:</p><p  id=\"1916\"><br id=\"1917\"></p><p class=\"s8\"  id=\"1918\">Notes: Create content for “Developer”, “Solution” and “Semic” using document type “General Content”. It’s a same process as we created just now. After that you will be more familiar with Creating Content in Umbraco sites and relation of Document Type and content. Let’s See next image relations between content and Document Type.</p><p  id=\"1919\"><span id=\"1920\"><img width=\"573\" height=\"427\" alt=\"image\" src=\"Image_051.png\" id=\"1921\"></span></p><p  id=\"1922\"><span class=\"s46\"  id=\"1923\">Content</span></p><p  id=\"1924\"><span class=\"s46\"  id=\"1925\">Content</span></p><p  id=\"1926\"></p></div>","sub":[]},{"pageId":"65","pageLevel":1,"pageOrder":"65","pageParentId":"63","pageName":"Relations between Document Type and Content","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1927\" class=\"heading1927\"><a name=\"bookmark32\" id=\"1928\" style=\"color: green;\">Relations between Document Type and Content</a></h3>","pageContent":"<div id=\"contentheading1927\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"1929\"><br id=\"1930\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1931\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1932\">Document Type</span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1933\"><span class=\"s46\" style=\" background-color: #000;\" id=\"1934\">Document Type</span></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1935\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"1936\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1937\"><br id=\"1938\"></p><p class=\"s10\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1939\"><span style=\" color: #F00;\" id=\"1940\">Red Long-dash arrow</span>: Name of Properties <span style=\" color: #00AF50;\" id=\"1941\">Green arrow</span>: Type of Properties</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"1942\"><br id=\"1943\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1944\">To understand relation between Document Type and Content may be difficult for first time but when you practice more it will be easy to understand. See two images above and follow red and green arrow telling relation between Document Type and Content.</p><p class=\"s4\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"1945\">Delete Document Type<span class=\"s8\" id=\"1946\">: </span><span class=\"p\" id=\"1947\">if you delete Document Type all associated content will be also deleted from websites, it‟s not possible to undo or restore Document Type in case delete.</span></p><p class=\"s4\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1948\">Update Document Type Properties: <span class=\"p\" id=\"1949\">you can change document type property for example you can change property type from type Simple Editor to type Rich Text Editor, data will not be lost because both are related type, both editor allows editor to edit text as simple or rich text environment. When you change type from type Textstring to type Label or type Upload, in that case all content modified after document type property has changed will lost previous data because type are not similar. So changing property type may cost data lost.</span></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1950\">Delete Content: <span class=\"p\" id=\"1951\">you can delete content. Deleted items will moved to Recycle Bin so if you accidently delete any content no need to feel panic you can easily restore from Recycle bin directory.</span></h4></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading1927\" class=\"heading1927\"><a name=\"bookmark32\" id=\"1928\" >Relations between Document Type and Content</a></h3>","pageStyleReducedContent":"<div id=\"contentheading1927\" ><p  id=\"1929\"><br id=\"1930\"></p><p  id=\"1931\"><span class=\"s46\"  id=\"1932\">Document Type</span></p><p  id=\"1933\"><span class=\"s46\"  id=\"1934\">Document Type</span></p><p  id=\"1935\"><span  id=\"1936\"> </span></p><p  id=\"1937\"><br id=\"1938\"></p><p class=\"s10\"  id=\"1939\"><span  id=\"1940\">Red Long-dash arrow</span>: Name of Properties <span  id=\"1941\">Green arrow</span>: Type of Properties</p><p  id=\"1942\"><br id=\"1943\"></p><p  id=\"1944\">To understand relation between Document Type and Content may be difficult for first time but when you practice more it will be easy to understand. See two images above and follow red and green arrow telling relation between Document Type and Content.</p><p class=\"s4\"  id=\"1945\">Delete Document Type<span class=\"s8\" id=\"1946\">: </span><span class=\"p\" id=\"1947\">if you delete Document Type all associated content will be also deleted from websites, it‟s not possible to undo or restore Document Type in case delete.</span></p><p class=\"s4\"  id=\"1948\">Update Document Type Properties: <span class=\"p\" id=\"1949\">you can change document type property for example you can change property type from type Simple Editor to type Rich Text Editor, data will not be lost because both are related type, both editor allows editor to edit text as simple or rich text environment. When you change type from type Textstring to type Label or type Upload, in that case all content modified after document type property has changed will lost previous data because type are not similar. So changing property type may cost data lost.</span></p><h4  id=\"1950\">Delete Content: <span class=\"p\" id=\"1951\">you can delete content. Deleted items will moved to Recycle Bin so if you accidently delete any content no need to feel panic you can easily restore from Recycle bin directory.</span></h4></div>","sub":[]},{"pageId":"66","pageLevel":1,"pageOrder":"66","pageParentId":"63","pageName":"Explore content Properties:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading1952\" class=\"heading1952\"><a name=\"bookmark33\" id=\"1953\" style=\"color: green;\">Explore content Properties:</a></h3>","pageContent":"<div id=\"contentheading1952\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-bottom: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"1954\">There is more option for content that we created on Content section based on document type. Let‟s right click on “Setting site” content and explore more options. See captured screen.</p><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1955\">Create<span class=\"p\" id=\"1956\">: Create new child article example News Container.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1957\">Edit in Canvas: <span class=\"p\" id=\"1958\">will allows editor to edit content in Frontend using browser.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1959\">Delete<span class=\"p\" id=\"1960\">: Move content to Recycle Bin</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 122%;text-align: left;\" id=\"1961\">Move<span class=\"p\" id=\"1962\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1963\">: Copy content, Copy will not delete content</span></h4><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1964\">from old location</p><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1965\">Sort<span class=\"p\" id=\"1966\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1967\">Rollback<span class=\"p\" id=\"1968\">: allows to rollback content based on previous changed,</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1969\">Manage Hostnames: <span class=\"p\" id=\"1970\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1971\">Permission: <span class=\"p\" id=\"1972\">set up permission</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1973\">Publich Access: <span class=\"p\" id=\"1974\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1975\">Audit Trill<span class=\"p\" id=\"1976\">: list of history of content</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1977\">Notifications<span class=\"p\" id=\"1978\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1979\">Send to Translation: <span class=\"p\" id=\"1980\">used for multiple languages</span></h4><h4 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1981\">Create<span class=\"p\" id=\"1982\">: Create new child article example News Container.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1983\">Edit in Canvas: <span class=\"p\" id=\"1984\">will allows editor to edit content in Frontend using browser.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1985\">Delete<span class=\"p\" id=\"1986\">: Move content to Recycle Bin</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 122%;text-align: left;\" id=\"1987\">Move<span class=\"p\" id=\"1988\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1989\">: Copy content, Copy will not delete content</span></h4><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"1990\">from old location</p><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1991\">Sort<span class=\"p\" id=\"1992\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"1993\">Rollback<span class=\"p\" id=\"1994\">: allows to rollback content based on previous changed,</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1995\">Manage Hostnames: <span class=\"p\" id=\"1996\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"1997\">Permission: <span class=\"p\" id=\"1998\">set up permission</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"1999\">Publich Access: <span class=\"p\" id=\"2000\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2001\">Audit Trill<span class=\"p\" id=\"2002\">: list of history of content</span></h4><h4 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"2003\">Notifications<span class=\"p\" id=\"2004\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4 style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2005\">Send to Translation: <span class=\"p\" id=\"2006\">used for multiple languages</span></h4><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2007\"><span id=\"2008\"><img width=\"180\" height=\"528\" alt=\"image\" src=\"Image_052.jpg\" id=\"2009\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2010\"><br id=\"2011\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2012\">Notes:</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2013\">I am not going to create content for other document types because creating</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2014\">content is same for all document type just you need to select different document type when you create content. You can easily follow my process to create content for other document type.</p><p style=\"padding-left: 5pt;text-indent: 35pt;line-height: 114%;text-align: justify;\" id=\"2015\">Creating News Container and News Article are a bit different. First Create Article on “News Container” after that right click on just created content (“News Container” Document type content), then create news article. You can see Document Type “News Article” is only option to choose if you followed me. That is Allowed child nodetypes that we set up in Document Type “Structure” property of “News Container” Document Type.</p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2016\">I have created more content for Semic Provider site. You can see captured screen and compare with your version.</p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2017\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\" style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2018\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\" style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2019\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2020\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2021\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\" style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2022\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\" style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2023\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2024\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2025\"><span id=\"2026\"><img width=\"298\" height=\"400\" alt=\"image\" src=\"Image_053.jpg\" id=\"2027\"></span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2028\"><br id=\"2029\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2030\">We are just working in backend part of Semic Provider site. If you preview article you see empty page. No content its because we have not touch any Templates yet, templates are responsible to output content or to present data to end users. I will discuss later or about templates. When you preview your content Umbraco will insert red strip with white color text “Preview Mode-click to end” on top right cornner of browser. Umbraco provides notification to you about your are viewing on Preview Mode. To exit click browser will close automatically.</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2031\"><span id=\"2032\"><img width=\"424\" height=\"230\" alt=\"image\" src=\"Image_054.jpg\" id=\"2033\"></span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2034\">For now you can‟t preview you data because associated templates are empty.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2035\"><br id=\"2036\"></p><p class=\"s49\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2037\"><a name=\"bookmark34\" id=\"2038\">Content API:</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2039\"><br id=\"2040\"></p><p class=\"s50\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2041\">In Umbraco code Content is understood by Document so that creating content in Umbraco Backend means executing Document code in Umbraco Core code inside server. Core code is programming language written in C# language. Content API is very important, if you want to create content using API, for example if you move sites from another websites to Umbraco CMS site, probably you want to get all data or content from old site as archive. If there is 1000 of articles in old site, it‟s not good idea to import content manually. You have to think some sort of automatic process to import content. Here is basic API for Umbraco Content.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2042\"><span style=\" color: #00F;\" id=\"2043\">namespace </span>umbraco.cms.businesslogic.web contains Document Class. Creating Content means Executing <span style=\" color: #2B91AE;\" id=\"2044\">Document</span>.MakeNew() methods of Document Class.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2045\">MakeNew() takes four parameters</p><ul id=\"l41\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2047\"><p class=\"s52\" style=\"display: inline;\" id=\"2048\">1<span class=\"s54\" id=\"2049\">st </span>parameter String Title: its title of Content, that title shown in Content Tree.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2050\"><p class=\"s52\" style=\"display: inline;\" id=\"2051\">2<span class=\"s54\" id=\"2052\">nd </span>Parameter DocumentType: Document Type, when you select document</p><p class=\"s52\" style=\"padding-left: 41pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2053\">type Umbraco will automatically use that document type.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: justify;\" id=\"2054\"><p class=\"s52\" style=\"display: inline;\" id=\"2055\">3<span class=\"s54\" id=\"2056\">rd</span><span class=\"s55\" id=\"2057\"> </span>parameter User: Umbraco does not allow to crate content without valid and has access user. When you logged in Umbraco automatically take your login user and use to create document.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2058\"><p class=\"s52\" style=\"display: inline;\" id=\"2059\">4<span class=\"s54\" id=\"2060\">th </span>parameter parent id: it’s a hierarchy of content. If you want to</p><p class=\"s52\" style=\"padding-left: 41pt;text-indent: 0pt;text-align: justify;\" id=\"2061\">create content at root level you must provide parent id -1. In Semic Provider content ‘News Article’ is child of ‘news container’ in that case all news article’s content’s parent id is Node id of ‚news Container‛. Its means if you provide -1 as parent id, Content will be created at root level. If you provide node id of content, it will create content as child of provided node id content.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2062\"><p class=\"s52\" style=\"display: inline;\" id=\"2063\">Example:</p><ul id=\"l42\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2065\"><p class=\"s52\" style=\"display: inline;\" id=\"2066\">Document dt = Document.MakeNew(‚Developer‛,GeneralContent, User(0), -1);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2067\"><p class=\"s52\" style=\"display: inline;\" id=\"2068\">dt.Publish();</p><ul id=\"l43\"><li style=\"padding-left: 113pt;text-indent: -18pt;text-align: justify;\" id=\"2070\"><p class=\"s52\" style=\"display: inline;\" id=\"2071\">Description: Create document name ‚Developer‛ on Document Type ‚GeneralContent‛. Use user 0. 0 is admin user id and always exist on Umbraco system. -1 will create Document at Root level.</p></li><li style=\"padding-left: 113pt;text-indent: -18pt;text-align: justify;\" id=\"2072\"><p class=\"s52\" style=\"display: inline;\" id=\"2073\">Publish() method should be invoke to publish content or when you press Publish icon Umbraco execute publish() method</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2074\"><br id=\"2075\"></p></li></ul></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2076\"><p class=\"s50\" style=\"display: inline;\" id=\"2077\">Delete(): Delete method executed when you delete content.</p></li></ul><ul id=\"l44\"><li style=\"padding-left: 113pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2079\"><p class=\"s53\" style=\"display: inline;\" id=\"2080\"><span class=\"s50\" id=\"2081\">Example: </span>Document <span style=\" color: #000;\" id=\"2082\">dt = </span><span style=\" color: #00F;\" id=\"2083\">new </span>Document<span style=\" color: #000;\" id=\"2084\">(id);</span></p></li></ul><p class=\"s52\" style=\"padding-left: 185pt;text-indent: 0pt;text-align: left;\" id=\"2085\">dt.delete(); id is node id of content.</p><p class=\"s52\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2086\">Delete() method will move content to Recycle Bin.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2087\"><br id=\"2088\"></p><p class=\"s50\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2089\">That is very basic of Umbraco API for Creating Content. For more details you can look inside umbraco.cms.businesslogic.web.document namespace. I strongly recommend looking source code and analyzing codes.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2090\"><br id=\"2091\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2092\"><a name=\"a36\" id=\"2093\">Chapter 05: Templates</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2094\"><br id=\"2095\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2096\"><br id=\"2097\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2098\"><span id=\"2099\"><img width=\"432\" height=\"1\" alt=\"image\" src=\"Image_055.png\" id=\"2100\"></span></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading1952\" class=\"heading1952\"><a name=\"bookmark33\" id=\"1953\" >Explore content Properties:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading1952\" ><p  id=\"1954\">There is more option for content that we created on Content section based on document type. Let‟s right click on “Setting site” content and explore more options. See captured screen.</p><h4  id=\"1955\">Create<span class=\"p\" id=\"1956\">: Create new child article example News Container.</span></h4><h4  id=\"1957\">Edit in Canvas: <span class=\"p\" id=\"1958\">will allows editor to edit content in Frontend using browser.</span></h4><h4  id=\"1959\">Delete<span class=\"p\" id=\"1960\">: Move content to Recycle Bin</span></h4><h4  id=\"1961\">Move<span class=\"p\" id=\"1962\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1963\">: Copy content, Copy will not delete content</span></h4><p  id=\"1964\">from old location</p><h4  id=\"1965\">Sort<span class=\"p\" id=\"1966\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4  id=\"1967\">Rollback<span class=\"p\" id=\"1968\">: allows to rollback content based on previous changed,</span></h4><h4  id=\"1969\">Manage Hostnames: <span class=\"p\" id=\"1970\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4  id=\"1971\">Permission: <span class=\"p\" id=\"1972\">set up permission</span></h4><h4  id=\"1973\">Publich Access: <span class=\"p\" id=\"1974\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4  id=\"1975\">Audit Trill<span class=\"p\" id=\"1976\">: list of history of content</span></h4><h4  id=\"1977\">Notifications<span class=\"p\" id=\"1978\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4  id=\"1979\">Send to Translation: <span class=\"p\" id=\"1980\">used for multiple languages</span></h4><h4  id=\"1981\">Create<span class=\"p\" id=\"1982\">: Create new child article example News Container.</span></h4><h4  id=\"1983\">Edit in Canvas: <span class=\"p\" id=\"1984\">will allows editor to edit content in Frontend using browser.</span></h4><h4  id=\"1985\">Delete<span class=\"p\" id=\"1986\">: Move content to Recycle Bin</span></h4><h4  id=\"1987\">Move<span class=\"p\" id=\"1988\">: Move content from one place to another place, move will delete content from old location. </span>Copy<span class=\"p\" id=\"1989\">: Copy content, Copy will not delete content</span></h4><p  id=\"1990\">from old location</p><h4  id=\"1991\">Sort<span class=\"p\" id=\"1992\">: arrange content by drag and drop to sort content, move up to display first and move down for low priority.</span></h4><h4  id=\"1993\">Rollback<span class=\"p\" id=\"1994\">: allows to rollback content based on previous changed,</span></h4><h4  id=\"1995\">Manage Hostnames: <span class=\"p\" id=\"1996\">will not cover in this basic book. It will used for multiple websites.</span></h4><h4  id=\"1997\">Permission: <span class=\"p\" id=\"1998\">set up permission</span></h4><h4  id=\"1999\">Publich Access: <span class=\"p\" id=\"2000\">Set up access level so only certain group Registered user can view or require to log in to view page</span></h4><h4  id=\"2001\">Audit Trill<span class=\"p\" id=\"2002\">: list of history of content</span></h4><h4  id=\"2003\">Notifications<span class=\"p\" id=\"2004\">: In big company you can set up notification in different condition to get notified when someone made change on article.</span></h4><h4  id=\"2005\">Send to Translation: <span class=\"p\" id=\"2006\">used for multiple languages</span></h4><p class=\"s10\"  id=\"2007\"><span id=\"2008\"><img width=\"180\" height=\"528\" alt=\"image\" src=\"Image_052.jpg\" id=\"2009\"></span>\t</p><p  id=\"2010\"><br id=\"2011\"></p><p  id=\"2012\">Notes:</p><p  id=\"2013\">I am not going to create content for other document types because creating</p><p  id=\"2014\">content is same for all document type just you need to select different document type when you create content. You can easily follow my process to create content for other document type.</p><p  id=\"2015\">Creating News Container and News Article are a bit different. First Create Article on “News Container” after that right click on just created content (“News Container” Document type content), then create news article. You can see Document Type “News Article” is only option to choose if you followed me. That is Allowed child nodetypes that we set up in Document Type “Structure” property of “News Container” Document Type.</p><p  id=\"2016\">I have created more content for Semic Provider site. You can see captured screen and compare with your version.</p><p class=\"s8\"  id=\"2017\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\"  id=\"2018\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\"  id=\"2019\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2020\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s8\"  id=\"2021\">Six content;, Home, Developer, Solution, News, Semic and Contact are based on “General Content” Document Type.</p><p class=\"s8\"  id=\"2022\">News Container is based on “New Container” Doc Type and two child Content are based on News Article Doc Type</p><p class=\"s8\"  id=\"2023\"><a href=\"http://www.jeevanthapa.com/\" class=\"s48\" target=\"_blank\" id=\"2024\">: Sort order. Here Home content is at first order so Umbraco will load Home Article first when you access website using domain name. Example </a>www.jeevanthapa.com will load Home content first or by Default.</p><p class=\"s10\"  id=\"2025\"><span id=\"2026\"><img width=\"298\" height=\"400\" alt=\"image\" src=\"Image_053.jpg\" id=\"2027\"></span>\t</p><p  id=\"2028\"><br id=\"2029\"></p><p  id=\"2030\">We are just working in backend part of Semic Provider site. If you preview article you see empty page. No content its because we have not touch any Templates yet, templates are responsible to output content or to present data to end users. I will discuss later or about templates. When you preview your content Umbraco will insert red strip with white color text “Preview Mode-click to end” on top right cornner of browser. Umbraco provides notification to you about your are viewing on Preview Mode. To exit click browser will close automatically.</p><p  id=\"2031\"><span id=\"2032\"><img width=\"424\" height=\"230\" alt=\"image\" src=\"Image_054.jpg\" id=\"2033\"></span></p><p  id=\"2034\">For now you can‟t preview you data because associated templates are empty.</p><p  id=\"2035\"><br id=\"2036\"></p><p class=\"s49\"  id=\"2037\"><a name=\"bookmark34\" id=\"2038\">Content API:</a></p><p  id=\"2039\"><br id=\"2040\"></p><p class=\"s50\"  id=\"2041\">In Umbraco code Content is understood by Document so that creating content in Umbraco Backend means executing Document code in Umbraco Core code inside server. Core code is programming language written in C# language. Content API is very important, if you want to create content using API, for example if you move sites from another websites to Umbraco CMS site, probably you want to get all data or content from old site as archive. If there is 1000 of articles in old site, it‟s not good idea to import content manually. You have to think some sort of automatic process to import content. Here is basic API for Umbraco Content.</p><p class=\"s52\"  id=\"2042\"><span  id=\"2043\">namespace </span>umbraco.cms.businesslogic.web contains Document Class. Creating Content means Executing <span  id=\"2044\">Document</span>.MakeNew() methods of Document Class.</p><p class=\"s52\"  id=\"2045\">MakeNew() takes four parameters</p><ul id=\"l41\"><li  id=\"2047\"><p class=\"s52\"  id=\"2048\">1<span class=\"s54\" id=\"2049\">st </span>parameter String Title: its title of Content, that title shown in Content Tree.</p></li><li  id=\"2050\"><p class=\"s52\"  id=\"2051\">2<span class=\"s54\" id=\"2052\">nd </span>Parameter DocumentType: Document Type, when you select document</p><p class=\"s52\"  id=\"2053\">type Umbraco will automatically use that document type.</p></li><li  id=\"2054\"><p class=\"s52\"  id=\"2055\">3<span class=\"s54\" id=\"2056\">rd</span><span class=\"s55\" id=\"2057\"> </span>parameter User: Umbraco does not allow to crate content without valid and has access user. When you logged in Umbraco automatically take your login user and use to create document.</p></li><li  id=\"2058\"><p class=\"s52\"  id=\"2059\">4<span class=\"s54\" id=\"2060\">th </span>parameter parent id: it’s a hierarchy of content. If you want to</p><p class=\"s52\"  id=\"2061\">create content at root level you must provide parent id -1. In Semic Provider content ‘News Article’ is child of ‘news container’ in that case all news article’s content’s parent id is Node id of ‚news Container‛. Its means if you provide -1 as parent id, Content will be created at root level. If you provide node id of content, it will create content as child of provided node id content.</p></li><li  id=\"2062\"><p class=\"s52\"  id=\"2063\">Example:</p><ul id=\"l42\"><li  id=\"2065\"><p class=\"s52\"  id=\"2066\">Document dt = Document.MakeNew(‚Developer‛,GeneralContent, User(0), -1);</p></li><li  id=\"2067\"><p class=\"s52\"  id=\"2068\">dt.Publish();</p><ul id=\"l43\"><li  id=\"2070\"><p class=\"s52\"  id=\"2071\">Description: Create document name ‚Developer‛ on Document Type ‚GeneralContent‛. Use user 0. 0 is admin user id and always exist on Umbraco system. -1 will create Document at Root level.</p></li><li  id=\"2072\"><p class=\"s52\"  id=\"2073\">Publish() method should be invoke to publish content or when you press Publish icon Umbraco execute publish() method</p><p  id=\"2074\"><br id=\"2075\"></p></li></ul></li></ul></li><li  id=\"2076\"><p class=\"s50\"  id=\"2077\">Delete(): Delete method executed when you delete content.</p></li></ul><ul id=\"l44\"><li  id=\"2079\"><p class=\"s53\"  id=\"2080\"><span class=\"s50\" id=\"2081\">Example: </span>Document <span  id=\"2082\">dt = </span><span  id=\"2083\">new </span>Document<span  id=\"2084\">(id);</span></p></li></ul><p class=\"s52\"  id=\"2085\">dt.delete(); id is node id of content.</p><p class=\"s52\"  id=\"2086\">Delete() method will move content to Recycle Bin.</p><p  id=\"2087\"><br id=\"2088\"></p><p class=\"s50\"  id=\"2089\">That is very basic of Umbraco API for Creating Content. For more details you can look inside umbraco.cms.businesslogic.web.document namespace. I strongly recommend looking source code and analyzing codes.</p><p  id=\"2090\"><br id=\"2091\"></p><h1  id=\"2092\"><a name=\"a36\" id=\"2093\">Chapter 05: Templates</a></h1><p  id=\"2094\"><br id=\"2095\"></p><p  id=\"2096\"><br id=\"2097\"></p><p  id=\"2098\"><span id=\"2099\"><img width=\"432\" height=\"1\" alt=\"image\" src=\"Image_055.png\" id=\"2100\"></span></p></div>","sub":[]}]},{"pageId":"68","pageLevel":0,"pageOrder":"68","pageParentId":"-1","pageName":"Templates:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 7pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2101\" class=\"heading2101\"><a name=\"bookmark35\" id=\"2102\" style=\"color: lime;\">Templates:</a></h2>","pageContent":"<div id=\"contentheading2101\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2103\">Purpose of templates is to present data to client or end users. Umbraco cms make totally separate visual presentation and content, to proof that concept you can preview any content we created before, we don‟t see any content on web it‟s just blank web page because we have not touch template means content is totally separated from visual presentation. Using templates we can present data or content to end users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2104\"><br id=\"2105\"></p><h4 style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2106\">Templates are user friendly: <span class=\"p\" id=\"2107\">The way you write code in template is same way as you write html code. You start with doc type deceleration, html, head, and body. No difference I will show you later. Only difference is to fetch data and insert into templates, fetching data can be done in different ways using alias, alias is created by Umbraco in Document Type creation period, use user control to fetch data, use xslt and xpath to fetch data using marco or use Razor Engine. I will focus in XSLT to fetch data from xml, use macro to render data to templates and present to end users.</span></h4><p style=\"padding-top: 9pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2108\">CSS: the way we use css is not difference other than using in normal html page. It‟s very simple and you can copy your normal css text from text editor and paste to Umbraco CSS editing environment page. It will work as expected without any problem. Two ways are there to use CSS. One way is create css using Umbraco service or Create CSS file separate into normal text editor and place into “css” directory. You can also create your custom directory and use that, directory is not important; important is linking style sheet to templates. Linking style sheet is same as you use in normal html page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2109\"><span id=\"2110\"><img width=\"584\" height=\"298\" alt=\"image\" src=\"Image_056.png\" id=\"2111\"></span></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2112\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\"/&gt; that is use to link document is style.css file exist inside css directory.No worries Umbraco will also show you path you can copy path to href easily. Lets look captured screen.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2113\"><br id=\"2114\"></p><p class=\"s10\" style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2115\">Name: name of style sheet.</p><p class=\"s35\" style=\"padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2116\">Start writing your CSS code here</p><p class=\"s9\" style=\"padding-top: 1pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2117\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"<span style=\" color: #538DD3;\" id=\"2118\">css/style.css</span>\"/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2119\"><br id=\"2120\"></p><p class=\"s10\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"2121\">Note: I will not cover CSS explanation in howtoumbraco basic. Style.css will be available in CD.</p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2122\" class=\"heading2122\"><a name=\"bookmark36\" id=\"2123\" style=\"color: green;\">Template working Environment</a></h3><div id=\"contentheading2122\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"2124\"><br id=\"2125\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2126\"><span id=\"2127\"><img width=\"602\" height=\"326\" alt=\"image\" src=\"Image_057.png\" id=\"2128\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 124pt;text-indent: 0pt;text-align: left;\" id=\"2129\">1 2 3 4 5 6 7 8 9</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2130\"><br id=\"2131\"></p><ol id=\"l45\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"2133\"><p style=\"display: inline;\" id=\"2134\">Save button, whatever you made change on template, you need to press Save button to save your work.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2135\"><p style=\"display: inline;\" id=\"2136\">Insert Umbraco page field: use to insert page field. Using page field document type alias is used here to insert data into template. Umbraco will fetch and insert content on the fly. Alias that we had in document type are necessary in order to fetch content. By click on icon will list all page alias available to insert.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2137\"><span id=\"2138\"><img width=\"331\" height=\"271\" alt=\"image\" src=\"Image_058.jpg\" id=\"2139\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2140\">I am going to show one example: instruction: click on empty area at line 3 and Click on “Insert Umbraco Page field” number 2 icon. You can see new windows open with input options.</p><ul id=\"l46\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2142\"><p style=\"display: inline;\" id=\"2143\">Choose field: here you can get list of alias that you created at document type. If you want to follow me select “contentBody” from</p><p style=\"padding-left: 77pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2144\">dropdown list and press insert. It will insert filed. See captured screen bellow</p><p class=\"s29\" style=\"padding-left: 59pt;text-indent: 0pt;text-align: left;\" id=\"2145\">o  <span id=\"2146\"><img width=\"482\" height=\"73\" alt=\"image\" src=\"Image_059.jpg\" id=\"2147\"></span></p></li><li style=\"padding-top: 3pt;padding-left: 83pt;text-indent: -21pt;text-align: left;\" id=\"2148\"><p style=\"display: inline;\" id=\"2149\"><span class=\"s56\" id=\"2150\">&lt;</span><span style=\" color: #E26C09;\" id=\"2151\">umbraco:Item </span>field<span class=\"s56\" id=\"2152\">=</span>\"<span style=\" color: #76923B;\" id=\"2153\">contentBody</span>\" runat<span class=\"s56\" id=\"2154\">=</span>\"<span style=\" color: #76923B;\" id=\"2155\">server</span>\"<span class=\"s56\" id=\"2156\">&gt;&lt;/</span><span style=\" color: #E26C09;\" id=\"2157\">umbraco:Item</span><span class=\"s56\" id=\"2158\">&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2159\"><span id=\"2160\"><img width=\"597\" height=\"217\" alt=\"image\" src=\"Image_060.png\" id=\"2161\"></span></p></li><li style=\"padding-top: 2pt;padding-left: 80pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2162\"><p class=\"s58\" style=\"display: inline;\" id=\"2163\">&lt;Umbraco:Item runat=”server”&gt; &lt;/Umbraco:item&gt; will executed by Umbraco cms. In my case filed=”contentBody”, here Content that provided in Document type “General Content‟s property „Content Body‟ ” by editor on Content page will be inserted on the fly. So user will see content body data on web page. for more clear see diagram.</p></li></ul><h4 style=\"padding-left: 300pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2164\">Document Type: <span class=\"p\" id=\"2165\">General Content</span></h4><h4 style=\"padding-left: 300pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2166\">Tab: <span class=\"p\" id=\"2167\">Description </span>Property Name: <span class=\"p\" id=\"2168\">Content Body</span></h4><h4 style=\"padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2169\"><a name=\"a37\" id=\"2170\">Property Alias:</a></h4><p style=\"padding-top: 2pt;padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2171\">contentBody</p><h4 style=\"padding-top: 2pt;padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2172\">Type: <span class=\"p\" id=\"2173\">Richtext editor</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2174\"><br id=\"2175\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2176\"><span id=\"2177\"><img width=\"562\" height=\"111\" alt=\"image\" src=\"Image_061.png\" id=\"2178\"></span></p><h4 style=\"padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2179\">Content: <span class=\"p\" id=\"2180\">Home </span>Description: <span class=\"p\" id=\"2181\">welcome to semic provider.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2182\"><br id=\"2183\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2184\"><span id=\"2185\"><img width=\"475\" height=\"153\" alt=\"image\" src=\"Image_062.png\" id=\"2186\"></span></p><h4 style=\"padding-top: 10pt;padding-left: 192pt;text-indent: 0pt;text-align: center;\" id=\"2187\">Field: <span class=\"p\" id=\"2188\">contentBody</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2189\"><br id=\"2190\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2191\"><span id=\"2192\"><img width=\"561\" height=\"158\" alt=\"image\" src=\"Image_063.png\" id=\"2193\"></span></p><h4 style=\"padding-top: 10pt;padding-left: 19pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2194\">Preview of Content Home: <span class=\"p\" id=\"2195\">Now Umbraco fetching content to Web sites.</span></h4><p style=\"padding-left: 19pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2196\">1084.aspx where 1084 is node id of content Home.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2197\"><br id=\"2198\"></p><p class=\"s4\" style=\"padding-top: 4pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2199\">We created document type “General Content”, added new property “Content Body” with alias “contentBody” and type “Richtext editor”. In Content we add content on Richtext environment. In Template we use alias “contentBody” to fetch data that added on content using Richtext environment. It’s a core concept of Umbraco for templates.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2200\"><br id=\"2201\"></p></li><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2202\"><p style=\"display: inline;\" id=\"2203\">Insert Dictionary Field: Similar as Umbrcao page filed but it is used to insert Dictionary Items. Not covered in this “Howtoumbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2204\"><br id=\"2205\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2206\"><p style=\"display: inline;\" id=\"2207\">Insert Macro: it‟s a mostly used in templates and I will cover this Macro Chapter. Macro is very important chapter. Developer should not miss about Macro.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2208\"><br id=\"2209\"></p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2210\"><p style=\"display: inline;\" id=\"2211\">Insert Content Area Placeholder: We can easily create child templates in Umbraco, child has access to parents generic properties. Umbraco templates have great features “Inheritance Character” that child template can inject data to Parent template using “Insert Content Area Placeholder”, first you create Placeholder in parent template and in child template you insert content area. If you want follow me I want to use “Web Sites Global Settings” templates as Master templates or parent templates. Parent templates can have placeholder to inject data from child templates. Now let‟s insert Content area Placeholder at “Web Sites Global Settings” templates.</p><ul id=\"l47\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2213\"><p style=\"display: inline;\" id=\"2214\">Instruction:</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2215\"><p style=\"display: inline;\" id=\"2216\">Open “Web Site Global Setting” Template</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2217\"><p style=\"display: inline;\" id=\"2218\">First Click on any place at working environment where you would like to insert content Place holder. Crusher should blink now, Click on “Insert Content area Placeholder” it will open new windows now type placeholder name “ContentBody” and Press Insert. See captured screen highlighted code are just added.</p><p class=\"s29\" style=\"padding-left: 5pt;text-indent: 53pt;line-height: 118%;text-align: left;\" id=\"2219\">o <span id=\"2220\"><img width=\"416\" height=\"162\" alt=\"image\" src=\"Image_064.jpg\" id=\"2221\"></span><span class=\"s28\" id=\"2222\"> </span><span class=\"p\" id=\"2223\"> Inheritance Properties: </span><span class=\"s10\" id=\"2224\">Umbraco template support inheritance properties so we can easily share global setting in sites for example. Navigation bar, heading, logo and web layout are global setting that will remain same look and feel for different content. “Web Sites Global Settings” template contains such global settings. Now I want to inject content from child templates on that place holder “ContentBody” I just created above. To inject data from child template first I have to assign child template. Click on General Content Template, in Master template change from “none” to “Web Site Global Settings” and Save “General Content” template. You can see General Content Templates now moved from root level to child template of “Web site Global Settings” Template. See captured screen</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2225\"><br id=\"2226\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2227\"><span id=\"2228\"><img width=\"496\" height=\"147\" alt=\"image\" src=\"Image_065.jpg\" id=\"2229\"></span></p><p style=\"padding-top: 11pt;padding-left: 23pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2230\">-</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2231\"><p style=\"display: inline;\" id=\"2232\">Insert content Area: if parents‟ templates have content area placeholder, using insert content area we can insert content area placeholder at child templates. In my case general content is child of “Web Site Global Setting” template. Lets Insert Content area by clicking of “Insert Content Area” icon, select “ContentBody” placeholder and press insert. If you like to cancel, just press cancel. Umbraco content placeholder “ContentBody” inserted after Content place holder “ContentPlaceHolderDefault”. This content place holder is created default by Umbraco. Delete “ContentPlaceHolderDefault” from Template “General content” and Move Umbraco field “contentBody” inside content Placeholder “ContentBody”. Remember to save. If you follow me “General Content” Template code should be like bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2233\"><br id=\"2234\"></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2235\"><span class=\"s59\" style=\" background-color: #FF0;\" id=\"2236\">&lt;%</span><span class=\"s60\" id=\"2237\">@ </span><span class=\"s61\" id=\"2238\">Master </span><span class=\"s62\" id=\"2239\">Language</span><span class=\"s60\" id=\"2240\">=\"C#\" </span><span class=\"s62\" id=\"2241\">MasterPageFile</span><span class=\"s60\" id=\"2242\">=\"~/masterpages/WebSiteGlobalSettings.master\" </span><span class=\"s62\" id=\"2243\">AutoEventWireup</span><span class=\"s60\" id=\"2244\">=\"true\" </span><span class=\"s59\" style=\" background-color: #FF0;\" id=\"2245\">%&gt;</span></p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2246\">&lt;<span style=\" color: #800000;\" id=\"2247\">asp</span>:<span style=\" color: #800000;\" id=\"2248\">Content </span><span style=\" color: #F00;\" id=\"2249\">ID</span>=\"Content2\" <span style=\" color: #F00;\" id=\"2250\">ContentPlaceHolderId</span>=\"ContentBody\" <span style=\" color: #F00;\" id=\"2251\">runat</span>=\"server\"&gt;</p><p class=\"s63\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2252\">&lt;!-- Insert \"ContentBody\" markup here --&gt;</p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2253\">&lt;<span style=\" color: #800000;\" id=\"2254\">umbraco</span>:<span style=\" color: #800000;\" id=\"2255\">Item </span><span style=\" color: #F00;\" id=\"2256\">ID</span>=\"Item1\" <span style=\" color: #F00;\" id=\"2257\">field</span>=\"contentBody\" <span style=\" color: #F00;\" id=\"2258\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"2259\">umbraco</span>:<span style=\" color: #800000;\" id=\"2260\">Item</span>&gt;</p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2261\">&lt;/<span style=\" color: #800000;\" id=\"2262\">asp</span>:<span style=\" color: #800000;\" id=\"2263\">Content</span>&gt;</p><p style=\"padding-top: 10pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2264\">- Remember to preview your content after changed in your template<span style=\" color: #00F;\" id=\"2265\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2266\"><br id=\"2267\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2268\"><p style=\"display: inline;\" id=\"2269\">Insert Inline Razor Macro: Razor engine is used if you don‟t want to use Xslt to fetch data from xml file. Not covered in this “HowtoUmbraco Basic”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2270\"><br id=\"2271\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2272\"><p style=\"display: inline;\" id=\"2273\">Help: it will open documentation. Remember to read it if you need help.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2274\"><br id=\"2275\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2276\"><p style=\"display: inline;\" id=\"2277\">Working „Environment or area: Here you add all your template coding.</p></li></ol><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2278\">Template &lt;%@ Master Language= \"C#\" MasterPageFile= \"</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2279\">~/umbraco/masterpages/default.master\" AutoEventWireup=\"true\" %&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2280\"><br id=\"2281\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2282\">Description: all templates are inherited by default.master template, it‟s a Umbraco default master template.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2283\"><br id=\"2284\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2285\">Content Placeholder: all your html code should go inside Content place holder. If you want to follow me copy and paste code bellow in “Web Site Global Settings” Templates. Note: I am not going to explain code because here nothing new just added html tags. You can look yourself.</p></div><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2286\" class=\"heading2286\"><a name=\"bookmark37\" id=\"2287\" style=\"color: green;\">“Web Site Global Settings” Templates:</a></h3><div id=\"contentheading2286\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2288\">Note: if you are copying code from here, do not copy <span class=\"s56\" id=\"2289\">&lt;</span>%@ Master Language<span class=\"s56\" id=\"2290\">=</span>\"C#\" MasterPageFile<span class=\"s56\" id=\"2291\">=</span>\"~/umbraco/masterpages/default.master\" AutoEventWireup<span class=\"s56\" id=\"2292\">=</span>\"true\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2293\">%<span class=\"s56\" id=\"2294\">&gt;</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"2295\">line because Umbraco will insert that line automatically in that case Umbraco CMS throw out yellow screen of death with Error message “ <b id=\"2296\">Parser Error Message: </b>There can be only one 'master' directive.” To solve this problem make sure there is only one master page template exist on that template. If you want to follow me your “Web Site Global Settings” template code should looks like bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2297\"><br id=\"2298\"></p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2299\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"2300\">&lt;%</span><span class=\"s66\" id=\"2301\">@ </span><span class=\"s67\" id=\"2302\">Master </span><span class=\"s68\" id=\"2303\">Language</span><span class=\"s66\" id=\"2304\">=\"C#\" </span><span class=\"s68\" id=\"2305\">MasterPageFile</span><span class=\"s66\" id=\"2306\">=\"~/umbraco/masterpages/default.master\" </span><span class=\"s68\" id=\"2307\">AutoEventWireup</span><span class=\"s66\" id=\"2308\">=\"true\" </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"2309\">%&gt;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2310\"><span style=\" color: #800000;\" id=\"2311\">asp</span>:<span style=\" color: #800000;\" id=\"2312\">Content </span><span style=\" color: #F00;\" id=\"2313\">ContentPlaceHolderID</span>=\"ContentPlaceHolderDefault\" <span style=\" color: #F00;\" id=\"2314\">runat</span>=\"server\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2315\">&lt;<span style=\" color: #800000;\" id=\"2316\">html</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2317\">&lt;<span style=\" color: #800000;\" id=\"2318\">head</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2319\">&lt;<span style=\" color: #800000;\" id=\"2320\">link </span><span style=\" color: #F00;\" id=\"2321\">rel</span>=\"stylesheet\" <span style=\" color: #F00;\" id=\"2322\">type</span>=\"text/css\" <span style=\" color: #F00;\" id=\"2323\">href</span>=\"css/style.css\"/&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2324\">&lt;/<span style=\" color: #800000;\" id=\"2325\">head</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2326\">&lt;<span style=\" color: #800000;\" id=\"2327\">body</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2328\">&lt;<span style=\" color: #800000;\" id=\"2329\">div </span><span style=\" color: #F00;\" id=\"2330\">class</span>=\"head\"&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2331\">&lt;<span style=\" color: #800000;\" id=\"2332\">div </span><span style=\" color: #F00;\" id=\"2333\">class</span>=\"top\"&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2334\">&lt;<span style=\" color: #800000;\" id=\"2335\">div </span><span style=\" color: #F00;\" id=\"2336\">class</span>=\"title\"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2337\"><br id=\"2338\"></p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2339\">&lt;/<span style=\" color: #800000;\" id=\"2340\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"2341\">&lt;/<span style=\" color: #800000;\" id=\"2342\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"2343\">&lt;/<span style=\" color: #800000;\" id=\"2344\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2345\">&lt;<span style=\" color: #800000;\" id=\"2346\">div </span><span style=\" color: #F00;\" id=\"2347\">class</span>=\"navi\"&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2348\">&lt;<span style=\" color: #800000;\" id=\"2349\">div </span><span style=\" color: #F00;\" id=\"2350\">class</span>=\"navigation\"&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2351\">&lt;/<span style=\" color: #800000;\" id=\"2352\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2353\">&lt;/<span style=\" color: #800000;\" id=\"2354\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2355\">&lt;<span style=\" color: #800000;\" id=\"2356\">div </span><span style=\" color: #F00;\" id=\"2357\">class</span>=\"middle\"&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"2358\">&lt;<span style=\" color: #800000;\" id=\"2359\">div </span><span style=\" color: #F00;\" id=\"2360\">class</span>=\"content\" &gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2361\">&lt;<span style=\" color: #800000;\" id=\"2362\">asp</span>:<span style=\" color: #800000;\" id=\"2363\">ContentPlaceHolder </span><span style=\" color: #F00;\" id=\"2364\">Id</span>=\"ContentBody\" <span style=\" color: #F00;\" id=\"2365\">runat</span>=\"server\"&gt;</p><p class=\"s69\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2366\">&lt;!-- Insert default \"ContentBody\" markup here --&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2367\">&lt;/<span style=\" color: #800000;\" id=\"2368\">asp</span>:<span style=\" color: #800000;\" id=\"2369\">ContentPlaceHolder</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2370\">&lt;/<span style=\" color: #800000;\" id=\"2371\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2372\">&lt;/<span style=\" color: #800000;\" id=\"2373\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2374\">&lt;/<span style=\" color: #800000;\" id=\"2375\">body</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2376\">&lt;/<span style=\" color: #800000;\" id=\"2377\">html</span>&gt; &lt;/<span style=\" color: #800000;\" id=\"2378\">asp</span>:<span style=\" color: #800000;\" id=\"2379\">Content</span>&gt;</p></div><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2380\" class=\"heading2380\"><a name=\"bookmark38\" id=\"2381\" style=\"color: green;\">Template API:</a></h3><div id=\"contentheading2380\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2382\">Template API can be found using namespace <span class=\"s66\" id=\"2383\">using </span><span class=\"s70\" id=\"2384\">umbraco.cms.businesslogic.template;</span></p><ul id=\"l48\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"2386\"><p style=\"display: inline;\" id=\"2387\">Manual work Create Template:</p><ul id=\"l49\"><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2389\"><p style=\"display: inline;\" id=\"2390\">That manual work will execute <span style=\" color: #2B91AE;\" id=\"2391\">Template</span>.MakeNew(name, u);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2392\"><p style=\"display: inline;\" id=\"2393\">Name: name of Template</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"2394\"><p style=\"display: inline;\" id=\"2395\">U is user. Umbraco will automatically assign user when you logged in backend. If you want to create Template using API you should provide valid user, user should have access to create Template otherwise Umbraco will throughout exception.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: justify;\" id=\"2396\"><p style=\"display: inline;\" id=\"2397\">Manual work Delete</p><ul id=\"l50\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2399\"><p style=\"display: inline;\" id=\"2400\">It will execute Template.Delete() void methods.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2401\"><p style=\"display: inline;\" id=\"2402\">It‟s not possible to restore deleted templates.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: justify;\" id=\"2403\"><p style=\"display: inline;\" id=\"2404\">Setting master Template:</p><ul id=\"l51\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2406\"><p style=\"display: inline;\" id=\"2407\">Umbraco will execute Template. MasterTemplate = Template.Id;</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2408\"><p style=\"display: inline;\" id=\"2409\">Where Template.Id is node id of parent Template.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: justify;\" id=\"2410\"><p style=\"display: inline;\" id=\"2411\">Save:</p><ul id=\"l52\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"2413\"><p style=\"display: inline;\" id=\"2414\">Save button will execute Save() methods to save work. It will effect to Database see captured screen bellow as reference. I will not explain here but its not difficult to understand if you know basic knowledge of Sql server and Database.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2415\"><br id=\"2416\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2417\"><span id=\"2418\"><img width=\"616\" height=\"325\" alt=\"image\" src=\"Image_066.png\" id=\"2419\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2420\"><br id=\"2421\"></p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2422\">These results are from Database name „umbracodb‟ table „cmsTemplate‟. In your case database name can be deference as compared to mine.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2423\"><br id=\"2424\"></p><p class=\"s10\" style=\"padding-left: 23pt;text-indent: 0pt;text-align: justify;\" id=\"2425\">Notice:</p><p class=\"s10\" style=\"padding-top: 1pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2426\">I am not using anymore “insert page field” ways to fetch data in templates because if I fetch data using document type alias it will fetch data only if template are checked in Document type allowed templates. If templates are not associated with document type, Data will not be fetching using “Insert Page field” technique so that I am going to continue to fetch data using Xslt and use macro to render content to templates<span class=\"p\" id=\"2427\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2428\"><br id=\"2429\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2430\"><a name=\"a38\" id=\"2431\">Chapter 06: XSLT</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2432\"><br id=\"2433\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2434\"><br id=\"2435\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2436\"><span id=\"2437\"><img width=\"330\" height=\"1\" alt=\"image\" src=\"Image_067.png\" id=\"2438\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2439\"><br id=\"2440\"></p><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2441\" class=\"heading2441\"><a name=\"bookmark39\" id=\"2442\" style=\"color: lime;\">XSLT:</a></h2><div id=\"contentheading2441\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2443\">Xslt provides fast data fetching processing from xml file. All published content in your site are structured in xml format by Umbraco system. Xslt is the way to transfer xml data to html format, Xslt and Xpath are used together to provide rich service. Xpath is used to move pointer back and forth to crawl content in xml file or to move pointer from one node to another node. My assumption is you already familiar with Xslt and Xpath, I will directly going to show creating and using Xslt.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2444\"><br id=\"2445\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2446\"><a name=\"a39\" id=\"2447\">Using XSLT:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2448\"><br id=\"2449\"></p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2450\">Xslt transfer xml to html, using Xslt we are fetching data from xml and passing to template in Umbraco site. We need to create associated macro first, link that macro with Xslt and Use that macro in Template. Here macro works as bridge between Xslt and Template. Umbraco is user friendly so you don‟t have to worry about macro. Each time you check “Create Macro” when you create new Xslt, Umbraco will automatically generate Macro for you.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2451\"><br id=\"2452\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2453\"><span id=\"2454\"><img width=\"333\" height=\"495\" alt=\"image\" src=\"Image_068.png\" id=\"2455\"></span></p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2456\">Let‟s starts to work with Xslt Instruction:</p></div></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2457\"><p style=\"display: inline;\" id=\"2458\">Click “Developer” in Sections menu. “XSLT Files” menu is available inside Developer menu items. See captured screen: “Xslt.jpg”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2459\"><p style=\"display: inline;\" id=\"2460\">Right click on “XSLT Files” and Click “Create”. Umbraco open new windows: if you want to follow me provide these information</p><ul id=\"l53\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2462\"><p style=\"display: inline;\" id=\"2463\">Name: “GlobalSetting”</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2464\"><p style=\"display: inline;\" id=\"2465\">Choose a Template: Clean</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2466\"><p style=\"display: inline;\" id=\"2467\">Checked: Create Macro</p></li></ul></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2468\"><p style=\"display: inline;\" id=\"2469\">Press “Create” see captured screen bellow “XsltCreate.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2470\"><br id=\"2471\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2472\">“GlobalSetting.xslt” file must be created inside XSLT file menu at Developer section.</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2473\">Purpose of creating Globalsetting.xslt is to fetch Site name, site title and logo.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2474\"><br id=\"2475\"></p><p style=\"padding-left: 5pt;text-indent: 33pt;text-align: left;\" id=\"2476\">Xslt.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2477\"><br id=\"2478\"></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2479\">XsltCreate.jpg</p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2480\"><a name=\"bookmark40\" id=\"2481\">Xslt working environments:</a></h3><p style=\"text-indent: 0pt;text-align: left;\" id=\"2482\"><br id=\"2483\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2484\"><span id=\"2485\"><img width=\"616\" height=\"467\" alt=\"image\" src=\"Image_069.png\" id=\"2486\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"2487\">1 2 3 4 5 <span class=\"s72\" id=\"2488\">6 </span><span class=\"s73\" id=\"2489\">7</span></p><p class=\"s38\" style=\"padding-top: 9pt;padding-left: 78pt;text-indent: 0pt;text-align: center;\" id=\"2490\">8</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2491\"><br id=\"2492\"></p><p class=\"s38\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"2493\">9</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2494\"><br id=\"2495\"></p><p class=\"s38\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"2496\">A</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2497\"><br id=\"2498\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2499\"><br id=\"2500\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2501\">Image: xsltEnvironment.jpg</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2502\">Image: xsltEnvironment.jpg</p><p style=\"padding-left: 257pt;text-indent: 0pt;text-align: left;\" id=\"2503\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"2504\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2505\"><br id=\"2506\"></p><ol id=\"l54\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2508\"><p style=\"display: inline;\" id=\"2509\">Coding area: here you can type Xslt code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2510\"><br id=\"2511\"></p><ol id=\"l55\"><li style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2513\"><h4 style=\"display: inline;\" id=\"2514\">Save <span class=\"p\" id=\"2515\">Button To save work after changed</span></h4></li><li style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2516\"><h4 style=\"display: inline;\" id=\"2517\">Insert xslt:value of <span class=\"p\" id=\"2518\">: use to insert xslt value, you can also select prevalue. 3- </span>Insert xslt:variable : <span class=\"p\" id=\"2519\">use to insert xslt variable</span></h4></li></ol></li></ol><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2520\">4- <b id=\"2521\">Insert xslt:if </b>: use to insert condition statement if 5- <b id=\"2522\">Insert xslt:for-each : </b>use for looping purpose</p><ol id=\"l56\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2524\"><h4 style=\"display: inline;\" id=\"2525\">Insert xslt:choose : <span class=\"p\" id=\"2526\">use to insert choose condition statement</span></h4></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2527\"><h4 style=\"display: inline;\" id=\"2528\">Visualize Xslt: <span class=\"p\" id=\"2529\">it‟s a big feature in Umbraco. Using visualizes Xslt you can see what output will be made by your Xslt Code on templates. You can also choose different Content and see what will be output.</span></h4></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2530\"><h4 style=\"display: inline;\" id=\"2531\">Name <span class=\"p\" id=\"2532\">of xslt file</span></h4></li><li style=\"padding-top: 2pt;padding-left: 23pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2533\"><h4 style=\"display: inline;\" id=\"2534\">Skip testing: <span class=\"p\" id=\"2535\">if you checked on Skip Testing, Umbraco will not validate your Xslt code so you will not see any error message.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2536\"><br id=\"2537\"></p><h4 style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2538\"><a name=\"a40\" id=\"2539\">Coding Area:</a></h4></li></ol></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2540\"><p style=\"display: inline;\" id=\"2541\">It starts with xml deceleration and version, it is using xml version 1.0 and encoding utf-8. <span class=\"s19\" id=\"2542\">See at line 1 Image: xsltEnvironment.jpg</span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2543\"><p style=\"display: inline;\" id=\"2544\">You define replacement text yourself at Xslt using DTD<span class=\"s3\" id=\"2545\">14</span>. To use that features you have to have DTD schema knowledge. By default Umbraco inserted one entity.</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2546\">&lt;!DOCTYPE xsl:stylesheet [&lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2547\">here Enitity nbsp can be used anywhere in xslt. On execution time Umbraco replace nbsp with text „&amp;#x00A0;‟ that we defined at DOCTYPE Entity. <span class=\"s19\" id=\"2548\">See line 2 at Image xsltEnvironment.jpg</span></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2549\"><p style=\"display: inline;\" id=\"2550\">Stylesheet Declaration: You can extend Xslt further more using .NET Class libraries. In some cases Xslt may not enough to fetch data in such cases you can extend Xslt. You need to add your Xslt extension here in order to use it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2551\"><br id=\"2552\"></p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2553\"><a name=\"bookmark41\" id=\"2554\">.NET Class Registration</a></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2555\">Adding Assembly to Umbraco sites:</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2556\"><a name=\"a41\" id=\"2557\">Open ~/config/xsltExtensions.config file, here you add Assembly first.</a></p><p class=\"s76\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2558\">&lt;ext assembly=\"assemblyName\" type=\"assemblyName.namespace.type\" alias=\"custom\"&gt;</p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: justify;\" id=\"2559\">Assembly <b id=\"2560\">= location of your files</b></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2561\">Type <b id=\"2562\">= namespace name</b></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2563\"><a name=\"a42\" id=\"2564\">Alias </a><b id=\"2565\">= you use that alias at Xslt to refer assembly.</b></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2566\"><br id=\"2567\"></p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2568\">Add alias in xslt stylesheet.</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2569\"><a name=\"a43\" id=\"2570\">Xmlns:LocalName = alias from xsltExtesion registration LocalName is used inside Xslt templates</a></p><p class=\"s75\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2571\">Alias = alias that you define when you registered assembly name at</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2572\">~/config/xsltExtesion.config file</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2573\">Now you are ready to use .NET Class library in Xslt.</p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2574\">exclude-result-prefixes=\"Assembly Alias”</p><p class=\"s77\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2575\">Use exclude to prevent Xslt from outputting namespace name.</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2576\">Note: ~ means your Umbraco root installation directory level.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2577\"><p class=\"s64\" style=\"display: inline;\" id=\"2578\">&lt;<span style=\" color: #2B91AE;\" id=\"2579\">xsl:output </span><span style=\" color: #F00;\" id=\"2580\">method</span>=<span style=\" color: #000;\" id=\"2581\">\"</span>xml<span style=\" color: #000;\" id=\"2582\">\" </span><span style=\" color: #F00;\" id=\"2583\">omit-xml-declaration</span>=<span style=\" color: #000;\" id=\"2584\">\"</span>yes<span style=\" color: #000;\" id=\"2585\">\"</span>/&gt;</p><p class=\"s75\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2586\"><a name=\"a44\" id=\"2587\">It will omit xml deceleration output</a></p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2588\">Let‟s start to work with Umbraco Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2589\"><p class=\"s64\" style=\"display: inline;\" id=\"2590\">&lt;<span style=\" color: #2B91AE;\" id=\"2591\">xsl:param </span><span style=\" color: #F00;\" id=\"2592\">name</span>=<span style=\" color: #000;\" id=\"2593\">\"</span>currentPage<span style=\" color: #000;\" id=\"2594\">\"</span>/&gt;</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2595\"><p style=\"display: inline;\" id=\"2596\">It‟s a very use full param in Umbraco. Umbraco will insert current page data. Current page means page that Templates, Content and Document Type using specific Xslt file in other words currentPage means current page. Value of currentPage depends on article or Content you are visiting now. Let‟s try to output currentPage value and see what will be output.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2597\"><p class=\"s78\" style=\"display: inline;\" id=\"2598\">Template Match</p><p class=\"s78\" style=\"padding-left: 113pt;text-indent: 0pt;line-height: 12pt;text-align: center;\" id=\"2599\">&lt;<span style=\" color: #2B91AE;\" id=\"2600\">xsl:template </span><span style=\" color: #F00;\" id=\"2601\">match</span>=<span style=\" color: #000;\" id=\"2602\">\"</span>/<span style=\" color: #000;\" id=\"2603\">\"</span>&gt;</p><p class=\"s78\" style=\"padding-left: 150pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2604\">&lt;<span style=\" color: #2B91AE;\" id=\"2605\">xsl:copy-of </span><span style=\" color: #F00;\" id=\"2606\">select</span>=<span style=\" color: #000;\" id=\"2607\">\"</span>$currentPage<span style=\" color: #000;\" id=\"2608\">\" </span>/&gt;</p><p class=\"s78\" style=\"padding-left: 114pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2609\">&lt;/<span style=\" color: #2B91AE;\" id=\"2610\">xsl:template</span>&gt;</p><p class=\"s82\" style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"2611\">o <span class=\"s78\" id=\"2612\">All your logic or html output you code between opening and closing tags of &lt;xsl:template&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2613\"><br id=\"2614\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2615\"><span id=\"2616\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_070.png\" id=\"2617\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2618\">14 <span class=\"s10\" id=\"2619\">Document Type Definition</span></p></li><li style=\"padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2620\"><p class=\"s78\" style=\"display: inline;\" id=\"2621\">Here we use xsl:copy-of select=‛$currentPage‛ to output current page data.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2622\"><br id=\"2623\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2624\"><p class=\"s78\" style=\"display: inline;\" id=\"2625\">To see outp<span class=\"p\" id=\"2626\">ut value use “visualize Xslt” button at top-right corner of Edit xsl working environment. Make sure you choose first Content using “Choose…” menu. Select Content after press “Visualize XSLT” button. You should see some data if content has some data. See captured screen bellow.</span></p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2627\"><br id=\"2628\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2629\"><span id=\"2630\"><img width=\"544\" height=\"332\" alt=\"image\" src=\"Image_071.png\" id=\"2631\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"2632\">A B C</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 13pt;text-align: right;\" id=\"2633\">G</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2634\"><br id=\"2635\"></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2636\">D</p><p class=\"s38\" style=\"padding-top: 9pt;text-indent: 0pt;text-align: right;\" id=\"2637\">E</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2638\"><br id=\"2639\"></p><p class=\"s38\" style=\"padding-top: 12pt;padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"2640\">F</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2641\"><br id=\"2642\"></p><ol id=\"l57\"><ol id=\"l58\"><li style=\"padding-top: 4pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"2645\"><p style=\"display: inline;\" id=\"2646\">Title of Content: first time it must be empty.</p></li><li style=\"padding-top: 2pt;padding-left: 60pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2647\"><p style=\"display: inline;\" id=\"2648\">Delete: To delete selected Content. It will not delete content from Content Section, it will only delete from Visualize Xslt service.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2649\"><p style=\"display: inline;\" id=\"2650\">Choose..: you can easily change or alter Content to visualize XSLT and see different output based on XSLT code.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2651\"><p style=\"display: inline;\" id=\"2652\">Visualize Xslt Button: Press to visualize XSLT</p></li><li style=\"padding-top: 2pt;padding-left: 60pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2653\"><p style=\"display: inline;\" id=\"2654\">Encode: Checked if you want to see xml formatted data, uncheck to see only content.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2655\"><p style=\"display: inline;\" id=\"2656\">Output of XSLT: it‟s a result; it‟s an output of your Xslt code, its output currentPage value. Same value will insert into templates.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2657\"><p style=\"display: inline;\" id=\"2658\">Press “x” to close Visualize XSLT service.</p></li></ol></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"2659\"><br id=\"2660\"></p><p class=\"s83 heading2661\" style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2661\"><a name=\"bookmark42\" id=\"2662\" style=\"color: blue;\">Xml File umbraco.config</a></p><div id=\"contentheading2661\" style=\"border: 5px solid rgb(0, 0, 255);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2663\">I mentioned Xslt use to fetch data from xml file. You must wonder about what xml file? Where is that xml file? Why it‟s in xml file? And more questions.</p><ul id=\"l59\"><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2665\"><p style=\"display: inline;\" id=\"2666\">Umbraco generates Umbraco.config temporary file it‟s structured in xml format, every time when you made change on content or document type. Umbraco remind you to publish content. It means, when you made change on content Umbraco made change only on Database. Umbraco does not fetch data from database to present data to end users unless you extend it using other programming language. One reason is it is slow process to fetch data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2667\"><br id=\"2668\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2669\">from database as compared to fetching data from xml file. Database may store in separate machine or separate location in server that need to travel data that cause slower process. Umbraco use great idea generating temporary xml files, that xml files cached in memory. Using temporary xml file it‟s dramatically faster to fetch data using Xslt. To see temporary xml generated file you need to locate directory “App_Data” in website root level and find umbraco.config file. “~/App_data/umbraco.config”</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2670\"><p style=\"display: inline;\" id=\"2671\">Open umbraco.config file using Note pad or other software, if you open with Visual studio it will easy to navigate. See captured screen. Your version can be difference.</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2672\"><br id=\"2673\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2674\"><br id=\"2675\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2676\"><span id=\"2677\"><img width=\"616\" height=\"512\" alt=\"image\" src=\"Image_072.png\" id=\"2678\"></span></p><p style=\"padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"2679\">Image: Umbracoconfig.jpg</p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2680\"><a name=\"bookmark43\" id=\"2681\">Relationship between Document Type and Umbraco.config Xml</a></h3><p class=\"s19\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2682\">See Image: Umbracoconfig.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2683\"><br id=\"2684\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2685\">Line 1: <span class=\"p\" id=\"2686\">xml declaration</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2687\"><br id=\"2688\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2689\">Line 2 to line 10: <span class=\"p\" id=\"2690\">DTD schema information</span></h4><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"2691\">Line 13: <span class=\"p\" id=\"2692\">Umbraco Root Element. All Elements go inside root node. Root is parent element for all.</span></h4><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2693\">Line 14: <span class=\"p\" id=\"2694\">Umbraco starts generating xml elements and attributes based on our document type and content. Did you notice Alias that used in Document type is Elements here?</span></h4><ul id=\"l60\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2696\"><p style=\"display: inline;\" id=\"2697\">GeneralContent is alias of Document Type “General Content”. All attributes inside “GeneralContent” element are inserted by Umbraco automatically.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2698\"><p style=\"display: inline;\" id=\"2699\">Now let‟s look child element of “GeneralContent” Element. Two more element “contentTitle” and “contentBody” also created. If you notice that we added two new property “contentTitle” and “contentBody” in Document Type “General Content”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"2700\"><p style=\"display: inline;\" id=\"2701\">Here in umbraco.config xml these new property structured as child of Document Type element tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2702\"><p style=\"display: inline;\" id=\"2703\">Probably you need time to understand, you have to go back to Document Type, see carefully all alias. Come back to umbraco.config xml file and analyze yourself that helps you to understand better.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2704\"><br id=\"2705\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2706\">Line 14: attributes: Umbraco generates few attributes automatically. Most attributes are self explanatory so easier to understand. I feel some attributes need to describe here for Umbraco New developers.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2707\"><p class=\"s32\" style=\"display: inline;\" id=\"2708\">id <span class=\"s10\" id=\"2709\">: it‟s a node id of content each content has different node id</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2710\"><br id=\"2711\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2712\"><p class=\"s32\" style=\"display: inline;\" id=\"2713\">parentID<span class=\"s10\" id=\"2714\">: node id of parent element. If you notice in Content API chapter we pass parent id -1 value. Means create content at root level in content but actually it means create content as child of root element. Umbraco assign root element id = -1 see line 13 Image: “Umbracoconfig.jpg;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2715\"><br id=\"2716\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2717\"><p class=\"s32\" style=\"display: inline;\" id=\"2718\">level<span class=\"s10\" id=\"2719\">: level of content. 1 means at root level if you create child content it will be level 2</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2720\"><br id=\"2721\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2722\"><p class=\"s32\" style=\"display: inline;\" id=\"2723\">nodeName<span class=\"s10\" id=\"2724\">: It‟s not a contentTitle that you provide on document type content title property. it‟s a title of Content that appear at Content Tree Section.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2725\"><br id=\"2726\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2727\"><p class=\"s32\" style=\"display: inline;\" id=\"2728\">urlName<span class=\"s10\" id=\"2729\">: name of url, content access using urlName. Example /home.aspx will load contain id 1084. See line 14 Image: “Umbracoconfig.jpg;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2730\"><br id=\"2731\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2732\"><p class=\"s32\" style=\"display: inline;\" id=\"2733\">nodeType<span class=\"s10\" id=\"2734\">: node id of Document Type</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2735\"><p class=\"s32\" style=\"display: inline;\" id=\"2736\">How do you know Document Type Node id?</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2737\"><br id=\"2738\"></p><p class=\"s10\" style=\"padding-left: 59pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2739\">It‟s a tricky. Just mouse over Document Type at left bottom of browser , browser show JavaScript link like this “javascript:openNodeType(1054);” number between () is node id of Document Type.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2740\"><p class=\"s10\" style=\"display: inline;\" id=\"2741\"><b id=\"2742\">creatorID</b>: id of users who created content. 0 means administrator and always exist in Umbraco user, it has root level of access<span class=\"s20\" id=\"2743\">15</span>.</p></li></ul></div></div><h3 style=\"padding-top: 10pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2744\" class=\"heading2744\"><a name=\"bookmark44\" id=\"2745\" style=\"color: green;\">Fetching data:</a></h3><div id=\"contentheading2744\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"2746\">Let‟s take real example for Semic provider site and be clear about use of Xslt. Semic provider has logo, title and slogan as global items. For global items<span class=\"s3\" id=\"2747\">16</span>, we need to fetch value from siteName, slogan and logo element <span class=\"s19\" id=\"2748\">see line at 26, 27 and 28 respectively at Image:Umbracoconfig.jpg”</span>. Open GlobalSetting.xslt file and add highlighted code into GlobalSetting.xslt. See captured screen and Save Xslt.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2749\"><br id=\"2750\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2751\"><span id=\"2752\"><img width=\"616\" height=\"342\" alt=\"image\" src=\"Image_073.jpg\" id=\"2753\"></span></p><p style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2754\">All html tags are not important, only important is highlighted line. Description:</p><ul id=\"l61\"><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2756\"><p class=\"s78\" style=\"display: inline;\" id=\"2757\">&lt;<span style=\" color: #800000;\" id=\"2758\">xsl</span>:<span style=\" color: #800000;\" id=\"2759\">variable </span><span style=\" color: #F00;\" id=\"2760\">name</span>=\"items\" <span style=\" color: #F00;\" id=\"2761\">select</span>=\"$currentPage/ancestor-or-self::*</p><p class=\"s78\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2762\">/WebSiteGlobalSettings \"/&gt;</p><ul id=\"l62\"><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: justify;\" id=\"2764\"><p class=\"s81\" style=\"display: inline;\" id=\"2765\">Here $ represent variable in XSLT. variable name items will hold data from ‚WebSitesGlobalSettings‛ Element see line at 25 Image: <span class=\"s10\" id=\"2766\">“Umbracoconfig.jpg” page no: xx</span></p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2767\"><p class=\"s81\" style=\"display: inline;\" id=\"2768\">currentPage will select current page.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2769\"><p class=\"s81\" style=\"display: inline;\" id=\"2770\">ancestor-or-self:: move pointer back until root level.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2771\"><p class=\"s81\" style=\"display: inline;\" id=\"2772\">* select all that match</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2773\"><p class=\"s81\" style=\"display: inline;\" id=\"2774\">/ move one step further to child element.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2775\"><p class=\"s81\" style=\"display: inline;\" id=\"2776\">WebsitesGlobalSettings is element name.</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2777\"><p class=\"s78\" style=\"display: inline;\" id=\"2778\">&lt;<span style=\" color: #800000;\" id=\"2779\">xsl</span>:<span style=\" color: #800000;\" id=\"2780\">variable </span><span style=\" color: #F00;\" id=\"2781\">name</span>=\"logo\" <span style=\" color: #F00;\" id=\"2782\">select</span>=\"$items/logo\"/&gt;</p><ul id=\"l63\"><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2784\"><p class=\"s81\" style=\"display: inline;\" id=\"2785\">$items/logo will select logo element and hold data</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2786\"><p class=\"s78\" style=\"display: inline;\" id=\"2787\">&lt;<span style=\" color: #800000;\" id=\"2788\">xsl</span>:<span style=\" color: #800000;\" id=\"2789\">value-of </span><span style=\" color: #F00;\" id=\"2790\">select</span>=\"$items/slogan\"/&gt;</p><ul id=\"l64\"><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2792\"><p class=\"s81\" style=\"display: inline;\" id=\"2793\">$items/slogan: select value from slogan element</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2794\"><p class=\"s78\" style=\"display: inline;\" id=\"2795\">&lt;<span style=\" color: #800000;\" id=\"2796\">img </span><span style=\" color: #F00;\" id=\"2797\">src</span>=\"{$logo}\" <span style=\" color: #F00;\" id=\"2798\">alt</span>=\"semic provider logo; visual identity\"/&gt;</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: justify;\" id=\"2799\"><p class=\"s78\" style=\"display: inline;\" id=\"2800\">Insert value of logo variable. Using $ and followed by name means use of variable, encapsulated data with {}. {} means code inside {} will executed on server by Umbraco CMS.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2801\"><br id=\"2802\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2803\"><span id=\"2804\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_074.png\" id=\"2805\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2806\">15 <span class=\"s10\" id=\"2807\">Root level of access: access that can CRUD ; C-create, R-read, U-update, D-delete</span></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2808\">16 <span class=\"s10\" id=\"2809\">Items those are common for all. For example logo, website name.</span></p><p class=\"s78\" style=\"padding-top: 3pt;padding-left: 31pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2810\"><span class=\"s10\" id=\"2811\">- </span>&lt;<span style=\" color: #800000;\" id=\"2812\">xsl</span>:<span style=\" color: #800000;\" id=\"2813\">value-of </span><span style=\" color: #F00;\" id=\"2814\">select</span>=\"$items/siteName\"/&gt;</p><p class=\"s85\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2815\">o <span class=\"s81\" id=\"2816\">This line will select value of siteName element and output.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2817\"><br id=\"2818\"></p><p class=\"s41\" style=\"padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2819\"><a name=\"bookmark45\" id=\"2820\">Note: alt tag in img element is not compulsory but I strongly recommend having alt tag. It will help for web accessibility and SEO.</a></p><p class=\"s86\" style=\"padding-top: 9pt;padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2821\"><a name=\"a45\" id=\"2822\">Xslt for Navigation:</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2823\"><br id=\"2824\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2825\"><span id=\"2826\"><img width=\"581\" height=\"261\" alt=\"image\" src=\"Image_075.png\" id=\"2827\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2828\"><br id=\"2829\"></p><p style=\"padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2830\">This is another Xslt for Navigation bar. Create new Xslt. Provide name navigation and Checked Create Macro. Copy highlighted text. Note that html is not that much important these are for CSS and layout purpose.</p><p style=\"padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2831\">Description:</p><ul id=\"l65\"><li style=\"padding-top: 1pt;padding-left: 49pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2833\"><p style=\"display: inline;\" id=\"2834\">[string(useInNavigation) = '1'] condition match means select all GeneralContent Element from ~/App_Data/umbraco.config file where useInNavigation checked boxed should be checked. Remember that we added new property at “General Content” Document Type. If editor wants to use general content in navigation bar. Editor should Checked mark on “useInNavigation” when s/he creates content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2835\"><br id=\"2836\"></p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"2837\"><p style=\"display: inline;\" id=\"2838\">Nice Url: umbraco.library:NiceUrl(@id)</p><ul id=\"l66\"><li style=\"padding-top: 11pt;padding-left: 85pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"2840\"><p style=\"display: inline;\" id=\"2841\">NiceUrl(@node id) will generate user friendly nice Url. Remember that urlName are used example: home.aspx</p></li><li style=\"padding-top: 11pt;padding-left: 85pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2842\"><p style=\"display: inline;\" id=\"2843\">@id: it‟s an attribute of selected element at ~/App_Data/umbraco.config xml file. In my case it‟s a node id of content based on “General Content” document type. @ sysmbole represent get value from attributes. See Xslt, Xpath and xml for details.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2844\"><br id=\"2845\"></p><ul id=\"l67\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2847\"><p class=\"s56\" style=\"display: inline;\" id=\"2848\">&lt;<span class=\"p\" id=\"2849\">xsl:value-of select</span>=<span class=\"p\" id=\"2850\">\"contentTitle\"</span>/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2851\"><br id=\"2852\"></p><ul id=\"l68\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2854\"><p class=\"s56\" style=\"display: inline;\" id=\"2855\">Select value from contentTitle element</p></li></ul></li><li style=\"padding-top: 9pt;padding-left: 44pt;text-indent: -21pt;text-align: left;\" id=\"2856\"><p class=\"s56\" style=\"display: inline;\" id=\"2857\">&lt;<span class=\"p\" id=\"2858\">xsl:for-each select</span>=<span class=\"p\" id=\"2859\">\"$items\"</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2860\"><br id=\"2861\"></p><ul id=\"l69\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2863\"><p class=\"s56\" style=\"display: inline;\" id=\"2864\">Used to loop all existing content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2865\"><br id=\"2866\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2867\"><p class=\"s56\" style=\"display: inline;\" id=\"2868\">&lt;<span class=\"p\" id=\"2869\">xsl:if test</span>=<span class=\"p\" id=\"2870\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2871\"><br id=\"2872\"></p><ul id=\"l70\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 106%;text-align: left;\" id=\"2874\"><p class=\"s56\" style=\"display: inline;\" id=\"2875\">Here &amp;gt; means greater than. Test: means execute block of code only if result is more than zero. If items are less than zero no need to loop items.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2876\"><br id=\"2877\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2878\"><a name=\"a46\" id=\"2879\">Note: there is missing code in captured screen means missing code are generated by Umbraco Default and removed from here to reduce space.</a></h4><p class=\"s86\" style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2880\"><a name=\"bookmark46\" id=\"2881\">New Xslt file for News List items.</a></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"2882\">It will be exercise for you I create NewsList.xslt file, here I just include captured screen without description try to describe yourself. It‟s not big but need to knowledge of Xpath. Main purpose of this Xslt is to fetch content from 2<span class=\"s3\" id=\"2883\">nd </span>level menu contain. It will fetch News articles from ~/App_data/umbraco.config xml file. Captured screen are bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2884\"><br id=\"2885\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2886\"><span id=\"2887\"><img width=\"475\" height=\"383\" alt=\"image\" src=\"Image_076.jpg\" id=\"2888\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2889\"><br id=\"2890\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2891\"><a name=\"a47\" id=\"2892\">Chapter 07: Macro</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2893\"><br id=\"2894\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2895\"><br id=\"2896\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2897\"><span id=\"2898\"><img width=\"350\" height=\"1\" alt=\"image\" src=\"Image_077.png\" id=\"2899\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2900\"><br id=\"2901\"></p><h2 style=\"padding-top: 13pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2902\" class=\"heading2902\"><a name=\"bookmark47\" id=\"2903\" style=\"color: lime;\">Macro:</a></h2><div id=\"contentheading2902\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2904\">Marco is use as bridge between xslt, user control or other languages and templates, using macro we can render content or data from data source to templates and templates are responsible to present data to end users. Macro is very important part in Umbraco.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2905\"><span id=\"2906\"><img width=\"616\" height=\"437\" alt=\"image\" src=\"Image_078.png\" id=\"2907\"></span></p><h3 style=\"padding-top: 10pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" style=\"color: green;\">Macro working Environments:</a></h3><div id=\"contentheading2908\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s45\" style=\"padding-top: 8pt;padding-left: 119pt;text-indent: 0pt;text-align: left;\" id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2912\"><br id=\"2913\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2914\">C</p><p style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2915\">D</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2916\"><br id=\"2917\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2918\">E</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2919\"><br id=\"2920\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2921\">F</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2922\"><br id=\"2923\"></p><p style=\"padding-top: 10pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2924\">G</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2925\"><br id=\"2926\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2927\">H</p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: center;\" id=\"2928\">I</p><p style=\"padding-top: 4pt;padding-left: 314pt;text-indent: 0pt;text-align: left;\" id=\"2929\">J</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2930\"><br id=\"2931\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"2932\">K</p><p style=\"padding-top: 6pt;padding-left: 144pt;text-indent: 0pt;text-align: center;\" id=\"2933\">L</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2934\"><br id=\"2935\"></p><p style=\"padding-top: 4pt;padding-left: 145pt;text-indent: 0pt;text-align: center;\" id=\"2936\">M</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2937\"><br id=\"2938\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2939\"><br id=\"2940\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2943\"><p style=\"display: inline;\" id=\"2944\">Save button to save your work or settings</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2945\"><p style=\"display: inline;\" id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p style=\"padding-top: 3pt;padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2949\"><p style=\"display: inline;\" id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2951\"><p style=\"display: inline;\" id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2953\"><p style=\"display: inline;\" id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2955\"><p style=\"display: inline;\" id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2959\"><p style=\"display: inline;\" id=\"2960\">Show preview fetch data on Content Editor.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2961\"><p style=\"display: inline;\" id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2963\"><p style=\"display: inline;\" id=\"2964\">Cached per page: cached page based on requested page</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2965\"><p style=\"display: inline;\" id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2967\"><br id=\"2968\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2971\"><br id=\"2972\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2984\"><p class=\"s8\" style=\"display: inline;\" id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"2987\"><p class=\"s8\" style=\"display: inline;\" id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2989\"><p class=\"s8\" style=\"display: inline;\" id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2991\"><br id=\"2992\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" style=\"color: green;\">Using Macro into templates:</a></h3><div id=\"contentheading2994\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2996\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3000\"><p style=\"display: inline;\" id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3002\"><p style=\"display: inline;\" id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3004\"><p style=\"display: inline;\" id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3007\"><p style=\"display: inline;\" id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"3009\"><p style=\"display: inline;\" id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 262pt;text-align: left;\" id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li style=\"padding-top: 15pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3015\"><p class=\"s8\" style=\"display: inline;\" id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3018\"><br id=\"3019\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3020\"><p class=\"s8\" style=\"display: inline;\" id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3023\"><br id=\"3024\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3025\"><p class=\"s8\" style=\"display: inline;\" id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3028\"><br id=\"3029\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3030\"><p class=\"s8\" style=\"display: inline;\" id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3033\"><br id=\"3034\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3 style=\"padding-top: 9pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" style=\"color: green;\">Instruction to Insert Macro in Content Area:</a></h3></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3038\"><p style=\"display: inline;\" id=\"3039\">Open content “News”</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3040\"><p style=\"display: inline;\" id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3042\"><p style=\"display: inline;\" id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3045\"><p style=\"display: inline;\" id=\"3046\">Select Marco and Press Insert.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3047\"><br id=\"3048\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li style=\"padding-top: 4pt;padding-left: 76pt;text-indent: -18pt;text-align: left;\" id=\"3057\"><p style=\"display: inline;\" id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li style=\"padding-bottom: 2pt;padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3059\"><p style=\"display: inline;\" id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3065\"><br id=\"3066\"></p></li><li style=\"padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3067\"><p style=\"display: inline;\" id=\"3068\">All red dotted area denotes Macro areas.</p></li><li style=\"padding-top: 2pt;padding-left: 40pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"3069\"><p style=\"display: inline;\" id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3071\"><p style=\"display: inline;\" id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3073\"><br id=\"3074\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3075\"><br id=\"3076\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" style=\"color: green;\">Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"3079\"><br id=\"3080\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3081\"><p class=\"s42\" style=\"display: inline;\" id=\"3082\">Macro <span style=\" color: #000;\" id=\"3083\">macro = </span>Macro<span style=\" color: #000;\" id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3086\"><p class=\"s40\" style=\"display: inline;\" id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3088\"><p class=\"s40\" style=\"display: inline;\" id=\"3089\">macro.UseInEditor = <span style=\" color: #00F;\" id=\"3090\">true</span>;</p><ul id=\"l77\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3092\"><p class=\"s40\" style=\"display: inline;\" id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3094\"><p class=\"s40\" style=\"display: inline;\" id=\"3095\">macro.RenderContent = <span style=\" color: #00F;\" id=\"3096\">true</span>;</p><ul id=\"l78\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3098\"><p class=\"s40\" style=\"display: inline;\" id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3100\"><p class=\"s40\" style=\"display: inline;\" id=\"3101\">macro.Xslt = <span style=\" color: #A21515;\" id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3103\"><p class=\"s40\" style=\"display: inline;\" id=\"3104\">provide location of xslt file to use.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3105\"><p class=\"s40\" style=\"display: inline;\" id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3107\"><p class=\"s40\" style=\"display: inline;\" id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3110\"><br id=\"3111\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3112\">Chapter 08:</h1><h1 style=\"padding-top: 14pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3113\">Extending Umbraco CMS</h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"3114\"><br id=\"3115\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3116\"><br id=\"3117\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p style=\"padding-top: 9pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3125\">User control</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3126\">.NET Class Library Razor Engine XSLT</p><p style=\"padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3127\">Python</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3129\">Python is also not covered in this book.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3130\"><br id=\"3131\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" style=\"color: green;\">User Control:</a></h3><div id=\"contentheading3132\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3138\"><p style=\"display: inline;\" id=\"3139\">Add New User Control</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3140\"><p style=\"display: inline;\" id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3145\"><p style=\"display: inline;\" id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"3147\"><br id=\"3148\"></p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3149\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3150\"><br id=\"3151\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3152\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3153\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3154\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3155\">Save to Database</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3156\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3157\"><br id=\"3158\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3159\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3160\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3161\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3162\">Save to Database</p><p class=\"s10\" style=\"padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"3163\">\t\t</p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" style=\"color: green;\">Before start coding:</a></h3><div id=\"contentheading3164\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 108%;text-align: left;\" id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: justify;\" id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3182\"><br id=\"3183\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: justify;\" id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3202\"><br id=\"3203\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3207\">JavaScript.jpg </p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3208\">JavaScript.jpg </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3209\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3212\"><br id=\"3213\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3216\"><br id=\"3217\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"3225\"><p style=\"display: inline;\" id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"3227\"><p style=\"display: inline;\" id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3229\"><p style=\"display: inline;\" id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3231\"><p style=\"display: inline;\" id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3233\"><p style=\"display: inline;\" id=\"3234\">“Regex” means Regular Expression.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3235\"><br id=\"3236\"></p><h4 style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3239\"><br id=\"3240\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3246\"><br id=\"3247\"></p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3251\"><br id=\"3252\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3257\"><br id=\"3258\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3268\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3269\">Name: Email:</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3270\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3271\">Name: Email:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3272\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3273\">Generate Vcard</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3274\">Generate Vcard</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3275\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3276\">Press Submit</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3277\">Press Submit</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3278\"></p><p style=\"padding-top: 4pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3279\">Validate submitted Data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3280\"><br id=\"3281\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3282\"><br id=\"3283\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3284\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3285\">Sent By Email</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3286\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3287\">Sent By Email</p><p class=\"s10\" style=\"padding-left: 152pt;text-indent: 0pt;text-align: left;\" id=\"3288\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"3289\"> </span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3290\"><br id=\"3291\"></p><p style=\"padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3293\"><br id=\"3294\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3297\"><p style=\"display: inline;\" id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3300\"><p style=\"display: inline;\" id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3302\"><p style=\"display: inline;\" id=\"3303\">Create Upload button for Image or Photo</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3304\"><p style=\"display: inline;\" id=\"3305\">Create Button</p><ul id=\"l82\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3307\"><p style=\"display: inline;\" id=\"3308\">To submit data</p><h4 style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3311\"><p style=\"display: inline;\" id=\"3312\">Create Class</p><ul id=\"l83\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3314\"><p style=\"display: inline;\" id=\"3315\">To save data to Database</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3316\"><p style=\"display: inline;\" id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 54pt;text-align: left;\" id=\"3319\"><p style=\"display: inline;\" id=\"3320\">Validate input methods</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3321\"><p style=\"display: inline;\" id=\"3322\">Go Generate Vcard</p></li><li style=\"padding-left: 6pt;text-indent: 54pt;line-height: 107%;text-align: left;\" id=\"3323\"><p style=\"display: inline;\" id=\"3324\">Send Email Store Data to Database</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3325\"><br id=\"3326\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" style=\"color: green;\">Let’s Begin to code:</a></h3><div id=\"contentheading3332\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3335\"><p style=\"display: inline;\" id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3337\"><p style=\"display: inline;\" id=\"3338\">File -&gt; New --&gt; Project</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3339\"><p style=\"display: inline;\" id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3342\"><p style=\"display: inline;\" id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3344\"><p style=\"display: inline;\" id=\"3345\">Name: Vcard Generator</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3346\"><p style=\"display: inline;\" id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3348\"><p style=\"display: inline;\" id=\"3349\">Solution name: leave default, if you want you can change</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3350\"><p style=\"display: inline;\" id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"3353\"><p style=\"display: inline;\" id=\"3354\">It will Create new directory</p></li></ul></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3355\"><p style=\"display: inline;\" id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"3357\"><br id=\"3358\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3368\">It will open new windows</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3374\"><br id=\"3375\"></p><p style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;line-height: 158%;text-align: left;\" id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p style=\"padding-top: 8pt;text-indent: 0pt;text-align: right;\" id=\"3381\">Vcardcontrol.jp</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3382\"><br id=\"3383\"></p><p class=\"s27\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3384\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3385\"><br id=\"3386\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3387\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3388\"><br id=\"3389\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3390\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3391\"><br id=\"3392\"></p></div></div></div></div></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading2101\" class=\"heading2101\"><a name=\"bookmark35\" id=\"2102\" >Templates:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading2101\" ><p  id=\"2103\">Purpose of templates is to present data to client or end users. Umbraco cms make totally separate visual presentation and content, to proof that concept you can preview any content we created before, we don‟t see any content on web it‟s just blank web page because we have not touch template means content is totally separated from visual presentation. Using templates we can present data or content to end users.</p><p  id=\"2104\"><br id=\"2105\"></p><h4  id=\"2106\">Templates are user friendly: <span class=\"p\" id=\"2107\">The way you write code in template is same way as you write html code. You start with doc type deceleration, html, head, and body. No difference I will show you later. Only difference is to fetch data and insert into templates, fetching data can be done in different ways using alias, alias is created by Umbraco in Document Type creation period, use user control to fetch data, use xslt and xpath to fetch data using marco or use Razor Engine. I will focus in XSLT to fetch data from xml, use macro to render data to templates and present to end users.</span></h4><p  id=\"2108\">CSS: the way we use css is not difference other than using in normal html page. It‟s very simple and you can copy your normal css text from text editor and paste to Umbraco CSS editing environment page. It will work as expected without any problem. Two ways are there to use CSS. One way is create css using Umbraco service or Create CSS file separate into normal text editor and place into “css” directory. You can also create your custom directory and use that, directory is not important; important is linking style sheet to templates. Linking style sheet is same as you use in normal html page.</p><p  id=\"2109\"><span id=\"2110\"><img width=\"584\" height=\"298\" alt=\"image\" src=\"Image_056.png\" id=\"2111\"></span></p><p  id=\"2112\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"css/style.css\"/&gt; that is use to link document is style.css file exist inside css directory.No worries Umbraco will also show you path you can copy path to href easily. Lets look captured screen.</p><p  id=\"2113\"><br id=\"2114\"></p><p class=\"s10\"  id=\"2115\">Name: name of style sheet.</p><p class=\"s35\"  id=\"2116\">Start writing your CSS code here</p><p class=\"s9\"  id=\"2117\">&lt;link rel=\"stylesheet\" type=\"text/css\" href=\"<span  id=\"2118\">css/style.css</span>\"/&gt;</p><p  id=\"2119\"><br id=\"2120\"></p><p class=\"s10\"  id=\"2121\">Note: I will not cover CSS explanation in howtoumbraco basic. Style.css will be available in CD.</p><h3  id=\"heading2122\" class=\"heading2122\"><a name=\"bookmark36\" id=\"2123\" >Template working Environment</a></h3><div id=\"contentheading2122\" ><p  id=\"2124\"><br id=\"2125\"></p><p  id=\"2126\"><span id=\"2127\"><img width=\"602\" height=\"326\" alt=\"image\" src=\"Image_057.png\" id=\"2128\"></span></p><p class=\"s38\"  id=\"2129\">1 2 3 4 5 6 7 8 9</p><p  id=\"2130\"><br id=\"2131\"></p><ol id=\"l45\"><li  id=\"2133\"><p  id=\"2134\">Save button, whatever you made change on template, you need to press Save button to save your work.</p></li><li  id=\"2135\"><p  id=\"2136\">Insert Umbraco page field: use to insert page field. Using page field document type alias is used here to insert data into template. Umbraco will fetch and insert content on the fly. Alias that we had in document type are necessary in order to fetch content. By click on icon will list all page alias available to insert.</p><p  id=\"2137\"><span id=\"2138\"><img width=\"331\" height=\"271\" alt=\"image\" src=\"Image_058.jpg\" id=\"2139\"></span></p><p  id=\"2140\">I am going to show one example: instruction: click on empty area at line 3 and Click on “Insert Umbraco Page field” number 2 icon. You can see new windows open with input options.</p><ul id=\"l46\"><li  id=\"2142\"><p  id=\"2143\">Choose field: here you can get list of alias that you created at document type. If you want to follow me select “contentBody” from</p><p  id=\"2144\">dropdown list and press insert. It will insert filed. See captured screen bellow</p><p class=\"s29\"  id=\"2145\">o  <span id=\"2146\"><img width=\"482\" height=\"73\" alt=\"image\" src=\"Image_059.jpg\" id=\"2147\"></span></p></li><li  id=\"2148\"><p  id=\"2149\"><span class=\"s56\" id=\"2150\">&lt;</span><span  id=\"2151\">umbraco:Item </span>field<span class=\"s56\" id=\"2152\">=</span>\"<span  id=\"2153\">contentBody</span>\" runat<span class=\"s56\" id=\"2154\">=</span>\"<span  id=\"2155\">server</span>\"<span class=\"s56\" id=\"2156\">&gt;&lt;/</span><span  id=\"2157\">umbraco:Item</span><span class=\"s56\" id=\"2158\">&gt;</span></p><p  id=\"2159\"><span id=\"2160\"><img width=\"597\" height=\"217\" alt=\"image\" src=\"Image_060.png\" id=\"2161\"></span></p></li><li  id=\"2162\"><p class=\"s58\"  id=\"2163\">&lt;Umbraco:Item runat=”server”&gt; &lt;/Umbraco:item&gt; will executed by Umbraco cms. In my case filed=”contentBody”, here Content that provided in Document type “General Content‟s property „Content Body‟ ” by editor on Content page will be inserted on the fly. So user will see content body data on web page. for more clear see diagram.</p></li></ul><h4  id=\"2164\">Document Type: <span class=\"p\" id=\"2165\">General Content</span></h4><h4  id=\"2166\">Tab: <span class=\"p\" id=\"2167\">Description </span>Property Name: <span class=\"p\" id=\"2168\">Content Body</span></h4><h4  id=\"2169\"><a name=\"a37\" id=\"2170\">Property Alias:</a></h4><p  id=\"2171\">contentBody</p><h4  id=\"2172\">Type: <span class=\"p\" id=\"2173\">Richtext editor</span></h4><p  id=\"2174\"><br id=\"2175\"></p><p  id=\"2176\"><span id=\"2177\"><img width=\"562\" height=\"111\" alt=\"image\" src=\"Image_061.png\" id=\"2178\"></span></p><h4  id=\"2179\">Content: <span class=\"p\" id=\"2180\">Home </span>Description: <span class=\"p\" id=\"2181\">welcome to semic provider.</span></h4><p  id=\"2182\"><br id=\"2183\"></p><p  id=\"2184\"><span id=\"2185\"><img width=\"475\" height=\"153\" alt=\"image\" src=\"Image_062.png\" id=\"2186\"></span></p><h4  id=\"2187\">Field: <span class=\"p\" id=\"2188\">contentBody</span></h4><p  id=\"2189\"><br id=\"2190\"></p><p  id=\"2191\"><span id=\"2192\"><img width=\"561\" height=\"158\" alt=\"image\" src=\"Image_063.png\" id=\"2193\"></span></p><h4  id=\"2194\">Preview of Content Home: <span class=\"p\" id=\"2195\">Now Umbraco fetching content to Web sites.</span></h4><p  id=\"2196\">1084.aspx where 1084 is node id of content Home.</p><p  id=\"2197\"><br id=\"2198\"></p><p class=\"s4\"  id=\"2199\">We created document type “General Content”, added new property “Content Body” with alias “contentBody” and type “Richtext editor”. In Content we add content on Richtext environment. In Template we use alias “contentBody” to fetch data that added on content using Richtext environment. It’s a core concept of Umbraco for templates.</p><p  id=\"2200\"><br id=\"2201\"></p></li><li  id=\"2202\"><p  id=\"2203\">Insert Dictionary Field: Similar as Umbrcao page filed but it is used to insert Dictionary Items. Not covered in this “Howtoumbraco” basic.</p><p  id=\"2204\"><br id=\"2205\"></p></li><li  id=\"2206\"><p  id=\"2207\">Insert Macro: it‟s a mostly used in templates and I will cover this Macro Chapter. Macro is very important chapter. Developer should not miss about Macro.</p><p  id=\"2208\"><br id=\"2209\"></p></li><li  id=\"2210\"><p  id=\"2211\">Insert Content Area Placeholder: We can easily create child templates in Umbraco, child has access to parents generic properties. Umbraco templates have great features “Inheritance Character” that child template can inject data to Parent template using “Insert Content Area Placeholder”, first you create Placeholder in parent template and in child template you insert content area. If you want follow me I want to use “Web Sites Global Settings” templates as Master templates or parent templates. Parent templates can have placeholder to inject data from child templates. Now let‟s insert Content area Placeholder at “Web Sites Global Settings” templates.</p><ul id=\"l47\"><li  id=\"2213\"><p  id=\"2214\">Instruction:</p></li><li  id=\"2215\"><p  id=\"2216\">Open “Web Site Global Setting” Template</p></li><li  id=\"2217\"><p  id=\"2218\">First Click on any place at working environment where you would like to insert content Place holder. Crusher should blink now, Click on “Insert Content area Placeholder” it will open new windows now type placeholder name “ContentBody” and Press Insert. See captured screen highlighted code are just added.</p><p class=\"s29\"  id=\"2219\">o <span id=\"2220\"><img width=\"416\" height=\"162\" alt=\"image\" src=\"Image_064.jpg\" id=\"2221\"></span><span class=\"s28\" id=\"2222\"> </span><span class=\"p\" id=\"2223\"> Inheritance Properties: </span><span class=\"s10\" id=\"2224\">Umbraco template support inheritance properties so we can easily share global setting in sites for example. Navigation bar, heading, logo and web layout are global setting that will remain same look and feel for different content. “Web Sites Global Settings” template contains such global settings. Now I want to inject content from child templates on that place holder “ContentBody” I just created above. To inject data from child template first I have to assign child template. Click on General Content Template, in Master template change from “none” to “Web Site Global Settings” and Save “General Content” template. You can see General Content Templates now moved from root level to child template of “Web site Global Settings” Template. See captured screen</span></p><p  id=\"2225\"><br id=\"2226\"></p><p  id=\"2227\"><span id=\"2228\"><img width=\"496\" height=\"147\" alt=\"image\" src=\"Image_065.jpg\" id=\"2229\"></span></p><p  id=\"2230\">-</p></li></ul></li><li  id=\"2231\"><p  id=\"2232\">Insert content Area: if parents‟ templates have content area placeholder, using insert content area we can insert content area placeholder at child templates. In my case general content is child of “Web Site Global Setting” template. Lets Insert Content area by clicking of “Insert Content Area” icon, select “ContentBody” placeholder and press insert. If you like to cancel, just press cancel. Umbraco content placeholder “ContentBody” inserted after Content place holder “ContentPlaceHolderDefault”. This content place holder is created default by Umbraco. Delete “ContentPlaceHolderDefault” from Template “General content” and Move Umbraco field “contentBody” inside content Placeholder “ContentBody”. Remember to save. If you follow me “General Content” Template code should be like bellow.</p><p  id=\"2233\"><br id=\"2234\"></p><p  id=\"2235\"><span class=\"s59\"  id=\"2236\">&lt;%</span><span class=\"s60\" id=\"2237\">@ </span><span class=\"s61\" id=\"2238\">Master </span><span class=\"s62\" id=\"2239\">Language</span><span class=\"s60\" id=\"2240\">=\"C#\" </span><span class=\"s62\" id=\"2241\">MasterPageFile</span><span class=\"s60\" id=\"2242\">=\"~/masterpages/WebSiteGlobalSettings.master\" </span><span class=\"s62\" id=\"2243\">AutoEventWireup</span><span class=\"s60\" id=\"2244\">=\"true\" </span><span class=\"s59\"  id=\"2245\">%&gt;</span></p><p class=\"s60\"  id=\"2246\">&lt;<span  id=\"2247\">asp</span>:<span  id=\"2248\">Content </span><span  id=\"2249\">ID</span>=\"Content2\" <span  id=\"2250\">ContentPlaceHolderId</span>=\"ContentBody\" <span  id=\"2251\">runat</span>=\"server\"&gt;</p><p class=\"s63\"  id=\"2252\">&lt;!-- Insert \"ContentBody\" markup here --&gt;</p><p class=\"s60\"  id=\"2253\">&lt;<span  id=\"2254\">umbraco</span>:<span  id=\"2255\">Item </span><span  id=\"2256\">ID</span>=\"Item1\" <span  id=\"2257\">field</span>=\"contentBody\" <span  id=\"2258\">runat</span>=\"server\"&gt;&lt;/<span  id=\"2259\">umbraco</span>:<span  id=\"2260\">Item</span>&gt;</p><p class=\"s60\"  id=\"2261\">&lt;/<span  id=\"2262\">asp</span>:<span  id=\"2263\">Content</span>&gt;</p><p  id=\"2264\">- Remember to preview your content after changed in your template<span  id=\"2265\">.</span></p><p  id=\"2266\"><br id=\"2267\"></p></li><li  id=\"2268\"><p  id=\"2269\">Insert Inline Razor Macro: Razor engine is used if you don‟t want to use Xslt to fetch data from xml file. Not covered in this “HowtoUmbraco Basic”.</p><p  id=\"2270\"><br id=\"2271\"></p></li><li  id=\"2272\"><p  id=\"2273\">Help: it will open documentation. Remember to read it if you need help.</p><p  id=\"2274\"><br id=\"2275\"></p></li><li  id=\"2276\"><p  id=\"2277\">Working „Environment or area: Here you add all your template coding.</p></li></ol><p  id=\"2278\">Template &lt;%@ Master Language= \"C#\" MasterPageFile= \"</p><p  id=\"2279\">~/umbraco/masterpages/default.master\" AutoEventWireup=\"true\" %&gt;</p><p  id=\"2280\"><br id=\"2281\"></p><p  id=\"2282\">Description: all templates are inherited by default.master template, it‟s a Umbraco default master template.</p><p  id=\"2283\"><br id=\"2284\"></p><p  id=\"2285\">Content Placeholder: all your html code should go inside Content place holder. If you want to follow me copy and paste code bellow in “Web Site Global Settings” Templates. Note: I am not going to explain code because here nothing new just added html tags. You can look yourself.</p></div><h3  id=\"heading2286\" class=\"heading2286\"><a name=\"bookmark37\" id=\"2287\" >“Web Site Global Settings” Templates:</a></h3><div id=\"contentheading2286\" ><p  id=\"2288\">Note: if you are copying code from here, do not copy <span class=\"s56\" id=\"2289\">&lt;</span>%@ Master Language<span class=\"s56\" id=\"2290\">=</span>\"C#\" MasterPageFile<span class=\"s56\" id=\"2291\">=</span>\"~/umbraco/masterpages/default.master\" AutoEventWireup<span class=\"s56\" id=\"2292\">=</span>\"true\"</p><p  id=\"2293\">%<span class=\"s56\" id=\"2294\">&gt;</span></p><p  id=\"2295\">line because Umbraco will insert that line automatically in that case Umbraco CMS throw out yellow screen of death with Error message “ <b id=\"2296\">Parser Error Message: </b>There can be only one 'master' directive.” To solve this problem make sure there is only one master page template exist on that template. If you want to follow me your “Web Site Global Settings” template code should looks like bellow.</p><p  id=\"2297\"><br id=\"2298\"></p><p  id=\"2299\"><span class=\"s65\"  id=\"2300\">&lt;%</span><span class=\"s66\" id=\"2301\">@ </span><span class=\"s67\" id=\"2302\">Master </span><span class=\"s68\" id=\"2303\">Language</span><span class=\"s66\" id=\"2304\">=\"C#\" </span><span class=\"s68\" id=\"2305\">MasterPageFile</span><span class=\"s66\" id=\"2306\">=\"~/umbraco/masterpages/default.master\" </span><span class=\"s68\" id=\"2307\">AutoEventWireup</span><span class=\"s66\" id=\"2308\">=\"true\" </span><span class=\"s65\"  id=\"2309\">%&gt;</span></p><p class=\"s66\"  id=\"2310\"><span  id=\"2311\">asp</span>:<span  id=\"2312\">Content </span><span  id=\"2313\">ContentPlaceHolderID</span>=\"ContentPlaceHolderDefault\" <span  id=\"2314\">runat</span>=\"server\"&gt;</p><p class=\"s66\"  id=\"2315\">&lt;<span  id=\"2316\">html</span>&gt;</p><p class=\"s66\"  id=\"2317\">&lt;<span  id=\"2318\">head</span>&gt;</p><p class=\"s66\"  id=\"2319\">&lt;<span  id=\"2320\">link </span><span  id=\"2321\">rel</span>=\"stylesheet\" <span  id=\"2322\">type</span>=\"text/css\" <span  id=\"2323\">href</span>=\"css/style.css\"/&gt;</p><p class=\"s66\"  id=\"2324\">&lt;/<span  id=\"2325\">head</span>&gt;</p><p class=\"s66\"  id=\"2326\">&lt;<span  id=\"2327\">body</span>&gt;</p><p class=\"s66\"  id=\"2328\">&lt;<span  id=\"2329\">div </span><span  id=\"2330\">class</span>=\"head\"&gt;</p><p class=\"s66\"  id=\"2331\">&lt;<span  id=\"2332\">div </span><span  id=\"2333\">class</span>=\"top\"&gt;</p><p class=\"s66\"  id=\"2334\">&lt;<span  id=\"2335\">div </span><span  id=\"2336\">class</span>=\"title\"&gt;</p><p  id=\"2337\"><br id=\"2338\"></p><p class=\"s66\"  id=\"2339\">&lt;/<span  id=\"2340\">div</span>&gt;</p><p class=\"s66\"  id=\"2341\">&lt;/<span  id=\"2342\">div</span>&gt;</p><p class=\"s66\"  id=\"2343\">&lt;/<span  id=\"2344\">div</span>&gt;</p><p class=\"s66\"  id=\"2345\">&lt;<span  id=\"2346\">div </span><span  id=\"2347\">class</span>=\"navi\"&gt;</p><p class=\"s66\"  id=\"2348\">&lt;<span  id=\"2349\">div </span><span  id=\"2350\">class</span>=\"navigation\"&gt;</p><p class=\"s66\"  id=\"2351\">&lt;/<span  id=\"2352\">div</span>&gt;</p><p class=\"s66\"  id=\"2353\">&lt;/<span  id=\"2354\">div</span>&gt;</p><p class=\"s66\"  id=\"2355\">&lt;<span  id=\"2356\">div </span><span  id=\"2357\">class</span>=\"middle\"&gt;</p><p class=\"s66\"  id=\"2358\">&lt;<span  id=\"2359\">div </span><span  id=\"2360\">class</span>=\"content\" &gt;</p><p class=\"s66\"  id=\"2361\">&lt;<span  id=\"2362\">asp</span>:<span  id=\"2363\">ContentPlaceHolder </span><span  id=\"2364\">Id</span>=\"ContentBody\" <span  id=\"2365\">runat</span>=\"server\"&gt;</p><p class=\"s69\"  id=\"2366\">&lt;!-- Insert default \"ContentBody\" markup here --&gt;</p><p class=\"s66\"  id=\"2367\">&lt;/<span  id=\"2368\">asp</span>:<span  id=\"2369\">ContentPlaceHolder</span>&gt;</p><p class=\"s66\"  id=\"2370\">&lt;/<span  id=\"2371\">div</span>&gt;</p><p class=\"s66\"  id=\"2372\">&lt;/<span  id=\"2373\">div</span>&gt;</p><p class=\"s66\"  id=\"2374\">&lt;/<span  id=\"2375\">body</span>&gt;</p><p class=\"s66\"  id=\"2376\">&lt;/<span  id=\"2377\">html</span>&gt; &lt;/<span  id=\"2378\">asp</span>:<span  id=\"2379\">Content</span>&gt;</p></div><h3  id=\"heading2380\" class=\"heading2380\"><a name=\"bookmark38\" id=\"2381\" >Template API:</a></h3><div id=\"contentheading2380\" ><p  id=\"2382\">Template API can be found using namespace <span class=\"s66\" id=\"2383\">using </span><span class=\"s70\" id=\"2384\">umbraco.cms.businesslogic.template;</span></p><ul id=\"l48\"><li  id=\"2386\"><p  id=\"2387\">Manual work Create Template:</p><ul id=\"l49\"><li  id=\"2389\"><p  id=\"2390\">That manual work will execute <span  id=\"2391\">Template</span>.MakeNew(name, u);</p></li><li  id=\"2392\"><p  id=\"2393\">Name: name of Template</p></li><li  id=\"2394\"><p  id=\"2395\">U is user. Umbraco will automatically assign user when you logged in backend. If you want to create Template using API you should provide valid user, user should have access to create Template otherwise Umbraco will throughout exception.</p></li></ul></li><li  id=\"2396\"><p  id=\"2397\">Manual work Delete</p><ul id=\"l50\"><li  id=\"2399\"><p  id=\"2400\">It will execute Template.Delete() void methods.</p></li><li  id=\"2401\"><p  id=\"2402\">It‟s not possible to restore deleted templates.</p></li></ul></li><li  id=\"2403\"><p  id=\"2404\">Setting master Template:</p><ul id=\"l51\"><li  id=\"2406\"><p  id=\"2407\">Umbraco will execute Template. MasterTemplate = Template.Id;</p></li><li  id=\"2408\"><p  id=\"2409\">Where Template.Id is node id of parent Template.</p></li></ul></li><li  id=\"2410\"><p  id=\"2411\">Save:</p><ul id=\"l52\"><li  id=\"2413\"><p  id=\"2414\">Save button will execute Save() methods to save work. It will effect to Database see captured screen bellow as reference. I will not explain here but its not difficult to understand if you know basic knowledge of Sql server and Database.</p><p  id=\"2415\"><br id=\"2416\"></p><p  id=\"2417\"><span id=\"2418\"><img width=\"616\" height=\"325\" alt=\"image\" src=\"Image_066.png\" id=\"2419\"></span></p><p  id=\"2420\"><br id=\"2421\"></p><p  id=\"2422\">These results are from Database name „umbracodb‟ table „cmsTemplate‟. In your case database name can be deference as compared to mine.</p><p  id=\"2423\"><br id=\"2424\"></p><p class=\"s10\"  id=\"2425\">Notice:</p><p class=\"s10\"  id=\"2426\">I am not using anymore “insert page field” ways to fetch data in templates because if I fetch data using document type alias it will fetch data only if template are checked in Document type allowed templates. If templates are not associated with document type, Data will not be fetching using “Insert Page field” technique so that I am going to continue to fetch data using Xslt and use macro to render content to templates<span class=\"p\" id=\"2427\">.</span></p><p  id=\"2428\"><br id=\"2429\"></p><h1  id=\"2430\"><a name=\"a38\" id=\"2431\">Chapter 06: XSLT</a></h1><p  id=\"2432\"><br id=\"2433\"></p><p  id=\"2434\"><br id=\"2435\"></p><p  id=\"2436\"><span id=\"2437\"><img width=\"330\" height=\"1\" alt=\"image\" src=\"Image_067.png\" id=\"2438\"></span></p><p  id=\"2439\"><br id=\"2440\"></p><h2  id=\"heading2441\" class=\"heading2441\"><a name=\"bookmark39\" id=\"2442\" >XSLT:</a></h2><div id=\"contentheading2441\" ><p  id=\"2443\">Xslt provides fast data fetching processing from xml file. All published content in your site are structured in xml format by Umbraco system. Xslt is the way to transfer xml data to html format, Xslt and Xpath are used together to provide rich service. Xpath is used to move pointer back and forth to crawl content in xml file or to move pointer from one node to another node. My assumption is you already familiar with Xslt and Xpath, I will directly going to show creating and using Xslt.</p><p  id=\"2444\"><br id=\"2445\"></p><h4  id=\"2446\"><a name=\"a39\" id=\"2447\">Using XSLT:</a></h4><p  id=\"2448\"><br id=\"2449\"></p><p  id=\"2450\">Xslt transfer xml to html, using Xslt we are fetching data from xml and passing to template in Umbraco site. We need to create associated macro first, link that macro with Xslt and Use that macro in Template. Here macro works as bridge between Xslt and Template. Umbraco is user friendly so you don‟t have to worry about macro. Each time you check “Create Macro” when you create new Xslt, Umbraco will automatically generate Macro for you.</p><p  id=\"2451\"><br id=\"2452\"></p><p  id=\"2453\"><span id=\"2454\"><img width=\"333\" height=\"495\" alt=\"image\" src=\"Image_068.png\" id=\"2455\"></span></p><p  id=\"2456\">Let‟s starts to work with Xslt Instruction:</p></div></li></ul></li><li  id=\"2457\"><p  id=\"2458\">Click “Developer” in Sections menu. “XSLT Files” menu is available inside Developer menu items. See captured screen: “Xslt.jpg”.</p></li><li  id=\"2459\"><p  id=\"2460\">Right click on “XSLT Files” and Click “Create”. Umbraco open new windows: if you want to follow me provide these information</p><ul id=\"l53\"><li  id=\"2462\"><p  id=\"2463\">Name: “GlobalSetting”</p></li><li  id=\"2464\"><p  id=\"2465\">Choose a Template: Clean</p></li><li  id=\"2466\"><p  id=\"2467\">Checked: Create Macro</p></li></ul></li><li  id=\"2468\"><p  id=\"2469\">Press “Create” see captured screen bellow “XsltCreate.jpg”</p><p  id=\"2470\"><br id=\"2471\"></p><p  id=\"2472\">“GlobalSetting.xslt” file must be created inside XSLT file menu at Developer section.</p><p class=\"s8\"  id=\"2473\">Purpose of creating Globalsetting.xslt is to fetch Site name, site title and logo.</p><p  id=\"2474\"><br id=\"2475\"></p><p  id=\"2476\">Xslt.jpg</p><p  id=\"2477\"><br id=\"2478\"></p><p  id=\"2479\">XsltCreate.jpg</p><h3  id=\"2480\"><a name=\"bookmark40\" id=\"2481\">Xslt working environments:</a></h3><p  id=\"2482\"><br id=\"2483\"></p><p  id=\"2484\"><span id=\"2485\"><img width=\"616\" height=\"467\" alt=\"image\" src=\"Image_069.png\" id=\"2486\"></span></p><p class=\"s38\"  id=\"2487\">1 2 3 4 5 <span class=\"s72\" id=\"2488\">6 </span><span class=\"s73\" id=\"2489\">7</span></p><p class=\"s38\"  id=\"2490\">8</p><p  id=\"2491\"><br id=\"2492\"></p><p class=\"s38\"  id=\"2493\">9</p><p  id=\"2494\"><br id=\"2495\"></p><p class=\"s38\"  id=\"2496\">A</p><p  id=\"2497\"><br id=\"2498\"></p><p  id=\"2499\"><br id=\"2500\"></p><p  id=\"2501\">Image: xsltEnvironment.jpg</p><p  id=\"2502\">Image: xsltEnvironment.jpg</p><p  id=\"2503\"><span  id=\"2504\"> </span></p><p  id=\"2505\"><br id=\"2506\"></p><ol id=\"l54\"><li  id=\"2508\"><p  id=\"2509\">Coding area: here you can type Xslt code.</p><p  id=\"2510\"><br id=\"2511\"></p><ol id=\"l55\"><li  id=\"2513\"><h4  id=\"2514\">Save <span class=\"p\" id=\"2515\">Button To save work after changed</span></h4></li><li  id=\"2516\"><h4  id=\"2517\">Insert xslt:value of <span class=\"p\" id=\"2518\">: use to insert xslt value, you can also select prevalue. 3- </span>Insert xslt:variable : <span class=\"p\" id=\"2519\">use to insert xslt variable</span></h4></li></ol></li></ol><p  id=\"2520\">4- <b id=\"2521\">Insert xslt:if </b>: use to insert condition statement if 5- <b id=\"2522\">Insert xslt:for-each : </b>use for looping purpose</p><ol id=\"l56\"><li  id=\"2524\"><h4  id=\"2525\">Insert xslt:choose : <span class=\"p\" id=\"2526\">use to insert choose condition statement</span></h4></li><li  id=\"2527\"><h4  id=\"2528\">Visualize Xslt: <span class=\"p\" id=\"2529\">it‟s a big feature in Umbraco. Using visualizes Xslt you can see what output will be made by your Xslt Code on templates. You can also choose different Content and see what will be output.</span></h4></li><li  id=\"2530\"><h4  id=\"2531\">Name <span class=\"p\" id=\"2532\">of xslt file</span></h4></li><li  id=\"2533\"><h4  id=\"2534\">Skip testing: <span class=\"p\" id=\"2535\">if you checked on Skip Testing, Umbraco will not validate your Xslt code so you will not see any error message.</span></h4><p  id=\"2536\"><br id=\"2537\"></p><h4  id=\"2538\"><a name=\"a40\" id=\"2539\">Coding Area:</a></h4></li></ol></li><li  id=\"2540\"><p  id=\"2541\">It starts with xml deceleration and version, it is using xml version 1.0 and encoding utf-8. <span class=\"s19\" id=\"2542\">See at line 1 Image: xsltEnvironment.jpg</span></p></li><li  id=\"2543\"><p  id=\"2544\">You define replacement text yourself at Xslt using DTD<span class=\"s3\" id=\"2545\">14</span>. To use that features you have to have DTD schema knowledge. By default Umbraco inserted one entity.</p><p  id=\"2546\">&lt;!DOCTYPE xsl:stylesheet [&lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p  id=\"2547\">here Enitity nbsp can be used anywhere in xslt. On execution time Umbraco replace nbsp with text „&amp;#x00A0;‟ that we defined at DOCTYPE Entity. <span class=\"s19\" id=\"2548\">See line 2 at Image xsltEnvironment.jpg</span></p></li><li  id=\"2549\"><p  id=\"2550\">Stylesheet Declaration: You can extend Xslt further more using .NET Class libraries. In some cases Xslt may not enough to fetch data in such cases you can extend Xslt. You need to add your Xslt extension here in order to use it.</p><p  id=\"2551\"><br id=\"2552\"></p><p class=\"s74\"  id=\"2553\"><a name=\"bookmark41\" id=\"2554\">.NET Class Registration</a></p><p class=\"s74\"  id=\"2555\">Adding Assembly to Umbraco sites:</p><p class=\"s75\"  id=\"2556\"><a name=\"a41\" id=\"2557\">Open ~/config/xsltExtensions.config file, here you add Assembly first.</a></p><p class=\"s76\"  id=\"2558\">&lt;ext assembly=\"assemblyName\" type=\"assemblyName.namespace.type\" alias=\"custom\"&gt;</p><p class=\"s74\"  id=\"2559\">Assembly <b id=\"2560\">= location of your files</b></p><p class=\"s74\"  id=\"2561\">Type <b id=\"2562\">= namespace name</b></p><p class=\"s74\"  id=\"2563\"><a name=\"a42\" id=\"2564\">Alias </a><b id=\"2565\">= you use that alias at Xslt to refer assembly.</b></p><p  id=\"2566\"><br id=\"2567\"></p><p class=\"s74\"  id=\"2568\">Add alias in xslt stylesheet.</p><p class=\"s75\"  id=\"2569\"><a name=\"a43\" id=\"2570\">Xmlns:LocalName = alias from xsltExtesion registration LocalName is used inside Xslt templates</a></p><p class=\"s75\"  id=\"2571\">Alias = alias that you define when you registered assembly name at</p><p class=\"s75\"  id=\"2572\">~/config/xsltExtesion.config file</p><p class=\"s75\"  id=\"2573\">Now you are ready to use .NET Class library in Xslt.</p><p class=\"s74\"  id=\"2574\">exclude-result-prefixes=\"Assembly Alias”</p><p class=\"s77\"  id=\"2575\">Use exclude to prevent Xslt from outputting namespace name.</p><p class=\"s75\"  id=\"2576\">Note: ~ means your Umbraco root installation directory level.</p></li><li  id=\"2577\"><p class=\"s64\"  id=\"2578\">&lt;<span  id=\"2579\">xsl:output </span><span  id=\"2580\">method</span>=<span  id=\"2581\">\"</span>xml<span  id=\"2582\">\" </span><span  id=\"2583\">omit-xml-declaration</span>=<span  id=\"2584\">\"</span>yes<span  id=\"2585\">\"</span>/&gt;</p><p class=\"s75\"  id=\"2586\"><a name=\"a44\" id=\"2587\">It will omit xml deceleration output</a></p><p  id=\"2588\">Let‟s start to work with Umbraco Xslt</p></li><li  id=\"2589\"><p class=\"s64\"  id=\"2590\">&lt;<span  id=\"2591\">xsl:param </span><span  id=\"2592\">name</span>=<span  id=\"2593\">\"</span>currentPage<span  id=\"2594\">\"</span>/&gt;</p></li><li  id=\"2595\"><p  id=\"2596\">It‟s a very use full param in Umbraco. Umbraco will insert current page data. Current page means page that Templates, Content and Document Type using specific Xslt file in other words currentPage means current page. Value of currentPage depends on article or Content you are visiting now. Let‟s try to output currentPage value and see what will be output.</p></li><li  id=\"2597\"><p class=\"s78\"  id=\"2598\">Template Match</p><p class=\"s78\"  id=\"2599\">&lt;<span  id=\"2600\">xsl:template </span><span  id=\"2601\">match</span>=<span  id=\"2602\">\"</span>/<span  id=\"2603\">\"</span>&gt;</p><p class=\"s78\"  id=\"2604\">&lt;<span  id=\"2605\">xsl:copy-of </span><span  id=\"2606\">select</span>=<span  id=\"2607\">\"</span>$currentPage<span  id=\"2608\">\" </span>/&gt;</p><p class=\"s78\"  id=\"2609\">&lt;/<span  id=\"2610\">xsl:template</span>&gt;</p><p class=\"s82\"  id=\"2611\">o <span class=\"s78\" id=\"2612\">All your logic or html output you code between opening and closing tags of &lt;xsl:template&gt;</span></p><p  id=\"2613\"><br id=\"2614\"></p><p  id=\"2615\"><span id=\"2616\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_070.png\" id=\"2617\"></span></p><p class=\"s20\"  id=\"2618\">14 <span class=\"s10\" id=\"2619\">Document Type Definition</span></p></li><li  id=\"2620\"><p class=\"s78\"  id=\"2621\">Here we use xsl:copy-of select=‛$currentPage‛ to output current page data.</p><p  id=\"2622\"><br id=\"2623\"></p></li><li  id=\"2624\"><p class=\"s78\"  id=\"2625\">To see outp<span class=\"p\" id=\"2626\">ut value use “visualize Xslt” button at top-right corner of Edit xsl working environment. Make sure you choose first Content using “Choose…” menu. Select Content after press “Visualize XSLT” button. You should see some data if content has some data. See captured screen bellow.</span></p></li></ul><p  id=\"2627\"><br id=\"2628\"></p><p  id=\"2629\"><span id=\"2630\"><img width=\"544\" height=\"332\" alt=\"image\" src=\"Image_071.png\" id=\"2631\"></span></p><p class=\"s38\"  id=\"2632\">A B C</p><p class=\"s38\"  id=\"2633\">G</p><p  id=\"2634\"><br id=\"2635\"></p><p class=\"s38\"  id=\"2636\">D</p><p class=\"s38\"  id=\"2637\">E</p><p  id=\"2638\"><br id=\"2639\"></p><p class=\"s38\"  id=\"2640\">F</p><p  id=\"2641\"><br id=\"2642\"></p><ol id=\"l57\"><ol id=\"l58\"><li  id=\"2645\"><p  id=\"2646\">Title of Content: first time it must be empty.</p></li><li  id=\"2647\"><p  id=\"2648\">Delete: To delete selected Content. It will not delete content from Content Section, it will only delete from Visualize Xslt service.</p></li><li  id=\"2649\"><p  id=\"2650\">Choose..: you can easily change or alter Content to visualize XSLT and see different output based on XSLT code.</p></li><li  id=\"2651\"><p  id=\"2652\">Visualize Xslt Button: Press to visualize XSLT</p></li><li  id=\"2653\"><p  id=\"2654\">Encode: Checked if you want to see xml formatted data, uncheck to see only content.</p></li><li  id=\"2655\"><p  id=\"2656\">Output of XSLT: it‟s a result; it‟s an output of your Xslt code, its output currentPage value. Same value will insert into templates.</p></li><li  id=\"2657\"><p  id=\"2658\">Press “x” to close Visualize XSLT service.</p></li></ol></ol><p  id=\"2659\"><br id=\"2660\"></p><p class=\"s83 heading2661\"  id=\"heading2661\"><a name=\"bookmark42\" id=\"2662\" >Xml File umbraco.config</a></p><div id=\"contentheading2661\" ><p  id=\"2663\">I mentioned Xslt use to fetch data from xml file. You must wonder about what xml file? Where is that xml file? Why it‟s in xml file? And more questions.</p><ul id=\"l59\"><li  id=\"2665\"><p  id=\"2666\">Umbraco generates Umbraco.config temporary file it‟s structured in xml format, every time when you made change on content or document type. Umbraco remind you to publish content. It means, when you made change on content Umbraco made change only on Database. Umbraco does not fetch data from database to present data to end users unless you extend it using other programming language. One reason is it is slow process to fetch data</p><p  id=\"2667\"><br id=\"2668\"></p><p  id=\"2669\">from database as compared to fetching data from xml file. Database may store in separate machine or separate location in server that need to travel data that cause slower process. Umbraco use great idea generating temporary xml files, that xml files cached in memory. Using temporary xml file it‟s dramatically faster to fetch data using Xslt. To see temporary xml generated file you need to locate directory “App_Data” in website root level and find umbraco.config file. “~/App_data/umbraco.config”</p></li><li  id=\"2670\"><p  id=\"2671\">Open umbraco.config file using Note pad or other software, if you open with Visual studio it will easy to navigate. See captured screen. Your version can be difference.</p></li></ul><p  id=\"2672\"><br id=\"2673\"></p><p  id=\"2674\"><br id=\"2675\"></p><p  id=\"2676\"><span id=\"2677\"><img width=\"616\" height=\"512\" alt=\"image\" src=\"Image_072.png\" id=\"2678\"></span></p><p  id=\"2679\">Image: Umbracoconfig.jpg</p><h3  id=\"2680\"><a name=\"bookmark43\" id=\"2681\">Relationship between Document Type and Umbraco.config Xml</a></h3><p class=\"s19\"  id=\"2682\">See Image: Umbracoconfig.jpg</p><p  id=\"2683\"><br id=\"2684\"></p><h4  id=\"2685\">Line 1: <span class=\"p\" id=\"2686\">xml declaration</span></h4><p  id=\"2687\"><br id=\"2688\"></p><h4  id=\"2689\">Line 2 to line 10: <span class=\"p\" id=\"2690\">DTD schema information</span></h4><h4  id=\"2691\">Line 13: <span class=\"p\" id=\"2692\">Umbraco Root Element. All Elements go inside root node. Root is parent element for all.</span></h4><h4  id=\"2693\">Line 14: <span class=\"p\" id=\"2694\">Umbraco starts generating xml elements and attributes based on our document type and content. Did you notice Alias that used in Document type is Elements here?</span></h4><ul id=\"l60\"><li  id=\"2696\"><p  id=\"2697\">GeneralContent is alias of Document Type “General Content”. All attributes inside “GeneralContent” element are inserted by Umbraco automatically.</p></li><li  id=\"2698\"><p  id=\"2699\">Now let‟s look child element of “GeneralContent” Element. Two more element “contentTitle” and “contentBody” also created. If you notice that we added two new property “contentTitle” and “contentBody” in Document Type “General Content”.</p></li><li  id=\"2700\"><p  id=\"2701\">Here in umbraco.config xml these new property structured as child of Document Type element tags.</p></li><li  id=\"2702\"><p  id=\"2703\">Probably you need time to understand, you have to go back to Document Type, see carefully all alias. Come back to umbraco.config xml file and analyze yourself that helps you to understand better.</p><p  id=\"2704\"><br id=\"2705\"></p><p  id=\"2706\">Line 14: attributes: Umbraco generates few attributes automatically. Most attributes are self explanatory so easier to understand. I feel some attributes need to describe here for Umbraco New developers.</p></li><li  id=\"2707\"><p class=\"s32\"  id=\"2708\">id <span class=\"s10\" id=\"2709\">: it‟s a node id of content each content has different node id</span></p><p  id=\"2710\"><br id=\"2711\"></p></li><li  id=\"2712\"><p class=\"s32\"  id=\"2713\">parentID<span class=\"s10\" id=\"2714\">: node id of parent element. If you notice in Content API chapter we pass parent id -1 value. Means create content at root level in content but actually it means create content as child of root element. Umbraco assign root element id = -1 see line 13 Image: “Umbracoconfig.jpg;</span></p><p  id=\"2715\"><br id=\"2716\"></p></li><li  id=\"2717\"><p class=\"s32\"  id=\"2718\">level<span class=\"s10\" id=\"2719\">: level of content. 1 means at root level if you create child content it will be level 2</span></p><p  id=\"2720\"><br id=\"2721\"></p></li><li  id=\"2722\"><p class=\"s32\"  id=\"2723\">nodeName<span class=\"s10\" id=\"2724\">: It‟s not a contentTitle that you provide on document type content title property. it‟s a title of Content that appear at Content Tree Section.</span></p><p  id=\"2725\"><br id=\"2726\"></p></li><li  id=\"2727\"><p class=\"s32\"  id=\"2728\">urlName<span class=\"s10\" id=\"2729\">: name of url, content access using urlName. Example /home.aspx will load contain id 1084. See line 14 Image: “Umbracoconfig.jpg;</span></p><p  id=\"2730\"><br id=\"2731\"></p></li><li  id=\"2732\"><p class=\"s32\"  id=\"2733\">nodeType<span class=\"s10\" id=\"2734\">: node id of Document Type</span></p></li><li  id=\"2735\"><p class=\"s32\"  id=\"2736\">How do you know Document Type Node id?</p><p  id=\"2737\"><br id=\"2738\"></p><p class=\"s10\"  id=\"2739\">It‟s a tricky. Just mouse over Document Type at left bottom of browser , browser show JavaScript link like this “javascript:openNodeType(1054);” number between () is node id of Document Type.</p></li><li  id=\"2740\"><p class=\"s10\"  id=\"2741\"><b id=\"2742\">creatorID</b>: id of users who created content. 0 means administrator and always exist in Umbraco user, it has root level of access<span class=\"s20\" id=\"2743\">15</span>.</p></li></ul></div></div><h3  id=\"heading2744\" class=\"heading2744\"><a name=\"bookmark44\" id=\"2745\" >Fetching data:</a></h3><div id=\"contentheading2744\" ><p  id=\"2746\">Let‟s take real example for Semic provider site and be clear about use of Xslt. Semic provider has logo, title and slogan as global items. For global items<span class=\"s3\" id=\"2747\">16</span>, we need to fetch value from siteName, slogan and logo element <span class=\"s19\" id=\"2748\">see line at 26, 27 and 28 respectively at Image:Umbracoconfig.jpg”</span>. Open GlobalSetting.xslt file and add highlighted code into GlobalSetting.xslt. See captured screen and Save Xslt.</p><p  id=\"2749\"><br id=\"2750\"></p><p  id=\"2751\"><span id=\"2752\"><img width=\"616\" height=\"342\" alt=\"image\" src=\"Image_073.jpg\" id=\"2753\"></span></p><p  id=\"2754\">All html tags are not important, only important is highlighted line. Description:</p><ul id=\"l61\"><li  id=\"2756\"><p class=\"s78\"  id=\"2757\">&lt;<span  id=\"2758\">xsl</span>:<span  id=\"2759\">variable </span><span  id=\"2760\">name</span>=\"items\" <span  id=\"2761\">select</span>=\"$currentPage/ancestor-or-self::*</p><p class=\"s78\"  id=\"2762\">/WebSiteGlobalSettings \"/&gt;</p><ul id=\"l62\"><li  id=\"2764\"><p class=\"s81\"  id=\"2765\">Here $ represent variable in XSLT. variable name items will hold data from ‚WebSitesGlobalSettings‛ Element see line at 25 Image: <span class=\"s10\" id=\"2766\">“Umbracoconfig.jpg” page no: xx</span></p></li><li  id=\"2767\"><p class=\"s81\"  id=\"2768\">currentPage will select current page.</p></li><li  id=\"2769\"><p class=\"s81\"  id=\"2770\">ancestor-or-self:: move pointer back until root level.</p></li><li  id=\"2771\"><p class=\"s81\"  id=\"2772\">* select all that match</p></li><li  id=\"2773\"><p class=\"s81\"  id=\"2774\">/ move one step further to child element.</p></li><li  id=\"2775\"><p class=\"s81\"  id=\"2776\">WebsitesGlobalSettings is element name.</p></li></ul></li><li  id=\"2777\"><p class=\"s78\"  id=\"2778\">&lt;<span  id=\"2779\">xsl</span>:<span  id=\"2780\">variable </span><span  id=\"2781\">name</span>=\"logo\" <span  id=\"2782\">select</span>=\"$items/logo\"/&gt;</p><ul id=\"l63\"><li  id=\"2784\"><p class=\"s81\"  id=\"2785\">$items/logo will select logo element and hold data</p></li></ul></li><li  id=\"2786\"><p class=\"s78\"  id=\"2787\">&lt;<span  id=\"2788\">xsl</span>:<span  id=\"2789\">value-of </span><span  id=\"2790\">select</span>=\"$items/slogan\"/&gt;</p><ul id=\"l64\"><li  id=\"2792\"><p class=\"s81\"  id=\"2793\">$items/slogan: select value from slogan element</p></li><li  id=\"2794\"><p class=\"s78\"  id=\"2795\">&lt;<span  id=\"2796\">img </span><span  id=\"2797\">src</span>=\"{$logo}\" <span  id=\"2798\">alt</span>=\"semic provider logo; visual identity\"/&gt;</p></li><li  id=\"2799\"><p class=\"s78\"  id=\"2800\">Insert value of logo variable. Using $ and followed by name means use of variable, encapsulated data with {}. {} means code inside {} will executed on server by Umbraco CMS.</p></li></ul></li></ul><p  id=\"2801\"><br id=\"2802\"></p><p  id=\"2803\"><span id=\"2804\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_074.png\" id=\"2805\"></span></p><p class=\"s20\"  id=\"2806\">15 <span class=\"s10\" id=\"2807\">Root level of access: access that can CRUD ; C-create, R-read, U-update, D-delete</span></p><p class=\"s20\"  id=\"2808\">16 <span class=\"s10\" id=\"2809\">Items those are common for all. For example logo, website name.</span></p><p class=\"s78\"  id=\"2810\"><span class=\"s10\" id=\"2811\">- </span>&lt;<span  id=\"2812\">xsl</span>:<span  id=\"2813\">value-of </span><span  id=\"2814\">select</span>=\"$items/siteName\"/&gt;</p><p class=\"s85\"  id=\"2815\">o <span class=\"s81\" id=\"2816\">This line will select value of siteName element and output.</span></p><p  id=\"2817\"><br id=\"2818\"></p><p class=\"s41\"  id=\"2819\"><a name=\"bookmark45\" id=\"2820\">Note: alt tag in img element is not compulsory but I strongly recommend having alt tag. It will help for web accessibility and SEO.</a></p><p class=\"s86\"  id=\"2821\"><a name=\"a45\" id=\"2822\">Xslt for Navigation:</a></p><p  id=\"2823\"><br id=\"2824\"></p><p  id=\"2825\"><span id=\"2826\"><img width=\"581\" height=\"261\" alt=\"image\" src=\"Image_075.png\" id=\"2827\"></span></p><p  id=\"2828\"><br id=\"2829\"></p><p  id=\"2830\">This is another Xslt for Navigation bar. Create new Xslt. Provide name navigation and Checked Create Macro. Copy highlighted text. Note that html is not that much important these are for CSS and layout purpose.</p><p  id=\"2831\">Description:</p><ul id=\"l65\"><li  id=\"2833\"><p  id=\"2834\">[string(useInNavigation) = '1'] condition match means select all GeneralContent Element from ~/App_Data/umbraco.config file where useInNavigation checked boxed should be checked. Remember that we added new property at “General Content” Document Type. If editor wants to use general content in navigation bar. Editor should Checked mark on “useInNavigation” when s/he creates content.</p><p  id=\"2835\"><br id=\"2836\"></p></li><li  id=\"2837\"><p  id=\"2838\">Nice Url: umbraco.library:NiceUrl(@id)</p><ul id=\"l66\"><li  id=\"2840\"><p  id=\"2841\">NiceUrl(@node id) will generate user friendly nice Url. Remember that urlName are used example: home.aspx</p></li><li  id=\"2842\"><p  id=\"2843\">@id: it‟s an attribute of selected element at ~/App_Data/umbraco.config xml file. In my case it‟s a node id of content based on “General Content” document type. @ sysmbole represent get value from attributes. See Xslt, Xpath and xml for details.</p></li></ul></li></ul><p  id=\"2844\"><br id=\"2845\"></p><ul id=\"l67\"><li  id=\"2847\"><p class=\"s56\"  id=\"2848\">&lt;<span class=\"p\" id=\"2849\">xsl:value-of select</span>=<span class=\"p\" id=\"2850\">\"contentTitle\"</span>/&gt;</p><p  id=\"2851\"><br id=\"2852\"></p><ul id=\"l68\"><li  id=\"2854\"><p class=\"s56\"  id=\"2855\">Select value from contentTitle element</p></li></ul></li><li  id=\"2856\"><p class=\"s56\"  id=\"2857\">&lt;<span class=\"p\" id=\"2858\">xsl:for-each select</span>=<span class=\"p\" id=\"2859\">\"$items\"</span>&gt;</p><p  id=\"2860\"><br id=\"2861\"></p><ul id=\"l69\"><li  id=\"2863\"><p class=\"s56\"  id=\"2864\">Used to loop all existing content</p><p  id=\"2865\"><br id=\"2866\"></p></li></ul></li><li  id=\"2867\"><p class=\"s56\"  id=\"2868\">&lt;<span class=\"p\" id=\"2869\">xsl:if test</span>=<span class=\"p\" id=\"2870\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p  id=\"2871\"><br id=\"2872\"></p><ul id=\"l70\"><li  id=\"2874\"><p class=\"s56\"  id=\"2875\">Here &amp;gt; means greater than. Test: means execute block of code only if result is more than zero. If items are less than zero no need to loop items.</p></li></ul></li></ul><p  id=\"2876\"><br id=\"2877\"></p><h4  id=\"2878\"><a name=\"a46\" id=\"2879\">Note: there is missing code in captured screen means missing code are generated by Umbraco Default and removed from here to reduce space.</a></h4><p class=\"s86\"  id=\"2880\"><a name=\"bookmark46\" id=\"2881\">New Xslt file for News List items.</a></p><p  id=\"2882\">It will be exercise for you I create NewsList.xslt file, here I just include captured screen without description try to describe yourself. It‟s not big but need to knowledge of Xpath. Main purpose of this Xslt is to fetch content from 2<span class=\"s3\" id=\"2883\">nd </span>level menu contain. It will fetch News articles from ~/App_data/umbraco.config xml file. Captured screen are bellow.</p><p  id=\"2884\"><br id=\"2885\"></p><p  id=\"2886\"><span id=\"2887\"><img width=\"475\" height=\"383\" alt=\"image\" src=\"Image_076.jpg\" id=\"2888\"></span></p><p  id=\"2889\"><br id=\"2890\"></p><h1  id=\"2891\"><a name=\"a47\" id=\"2892\">Chapter 07: Macro</a></h1><p  id=\"2893\"><br id=\"2894\"></p><p  id=\"2895\"><br id=\"2896\"></p><p  id=\"2897\"><span id=\"2898\"><img width=\"350\" height=\"1\" alt=\"image\" src=\"Image_077.png\" id=\"2899\"></span></p><p  id=\"2900\"><br id=\"2901\"></p><h2  id=\"heading2902\" class=\"heading2902\"><a name=\"bookmark47\" id=\"2903\" >Macro:</a></h2><div id=\"contentheading2902\" ><p  id=\"2904\">Marco is use as bridge between xslt, user control or other languages and templates, using macro we can render content or data from data source to templates and templates are responsible to present data to end users. Macro is very important part in Umbraco.</p><p  id=\"2905\"><span id=\"2906\"><img width=\"616\" height=\"437\" alt=\"image\" src=\"Image_078.png\" id=\"2907\"></span></p><h3  id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" >Macro working Environments:</a></h3><div id=\"contentheading2908\" ><p class=\"s45\"  id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p  id=\"2912\"><br id=\"2913\"></p><p  id=\"2914\">C</p><p  id=\"2915\">D</p><p  id=\"2916\"><br id=\"2917\"></p><p  id=\"2918\">E</p><p  id=\"2919\"><br id=\"2920\"></p><p  id=\"2921\">F</p><p  id=\"2922\"><br id=\"2923\"></p><p  id=\"2924\">G</p><p  id=\"2925\"><br id=\"2926\"></p><p  id=\"2927\">H</p><p  id=\"2928\">I</p><p  id=\"2929\">J</p><p  id=\"2930\"><br id=\"2931\"></p><p  id=\"2932\">K</p><p  id=\"2933\">L</p><p  id=\"2934\"><br id=\"2935\"></p><p  id=\"2936\">M</p><p  id=\"2937\"><br id=\"2938\"></p><p  id=\"2939\"><br id=\"2940\"></p><p  id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li  id=\"2943\"><p  id=\"2944\">Save button to save your work or settings</p></li><li  id=\"2945\"><p  id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p  id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li  id=\"2949\"><p  id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li  id=\"2951\"><p  id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li  id=\"2953\"><p  id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li  id=\"2955\"><p  id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p  id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li  id=\"2959\"><p  id=\"2960\">Show preview fetch data on Content Editor.</p></li><li  id=\"2961\"><p  id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li  id=\"2963\"><p  id=\"2964\">Cached per page: cached page based on requested page</p></li><li  id=\"2965\"><p  id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p  id=\"2967\"><br id=\"2968\"></p><p  id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p  id=\"2971\"><br id=\"2972\"></p><p  id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\"  id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\"  target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p  id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p  id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li  id=\"2984\"><p class=\"s8\"  id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li  id=\"2987\"><p class=\"s8\"  id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li  id=\"2989\"><p class=\"s8\"  id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p  id=\"2991\"><br id=\"2992\"></p><p  id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3  id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" >Using Macro into templates:</a></h3><div id=\"contentheading2994\" ><p  id=\"2996\">Instruction:</p><p  id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li  id=\"3000\"><p  id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li  id=\"3002\"><p  id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li  id=\"3004\"><p  id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li  id=\"3007\"><p  id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li  id=\"3009\"><p  id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\"  id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li  id=\"3015\"><p class=\"s8\"  id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p  id=\"3018\"><br id=\"3019\"></p></li><li  id=\"3020\"><p class=\"s8\"  id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p  id=\"3023\"><br id=\"3024\"></p></li><li  id=\"3025\"><p class=\"s8\"  id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p  id=\"3028\"><br id=\"3029\"></p></li><li  id=\"3030\"><p class=\"s8\"  id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p  id=\"3033\"><br id=\"3034\"></p><p  id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3  id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" >Instruction to Insert Macro in Content Area:</a></h3></li><li  id=\"3038\"><p  id=\"3039\">Open content “News”</p></li><li  id=\"3040\"><p  id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li  id=\"3042\"><p  id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li  id=\"3045\"><p  id=\"3046\">Select Marco and Press Insert.</p><p  id=\"3047\"><br id=\"3048\"></p><p  id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\"  id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p  id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li  id=\"3057\"><p  id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li  id=\"3059\"><p  id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p  id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p  id=\"3065\"><br id=\"3066\"></p></li><li  id=\"3067\"><p  id=\"3068\">All red dotted area denotes Macro areas.</p></li><li  id=\"3069\"><p  id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li  id=\"3071\"><p  id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p  id=\"3073\"><br id=\"3074\"></p><p  id=\"3075\"><br id=\"3076\"></p><h3  id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" >Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" ><p  id=\"3079\"><br id=\"3080\"></p></div></li><li  id=\"3081\"><p class=\"s42\"  id=\"3082\">Macro <span  id=\"3083\">macro = </span>Macro<span  id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li  id=\"3086\"><p class=\"s40\"  id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li  id=\"3088\"><p class=\"s40\"  id=\"3089\">macro.UseInEditor = <span  id=\"3090\">true</span>;</p><ul id=\"l77\"><li  id=\"3092\"><p class=\"s40\"  id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li  id=\"3094\"><p class=\"s40\"  id=\"3095\">macro.RenderContent = <span  id=\"3096\">true</span>;</p><ul id=\"l78\"><li  id=\"3098\"><p class=\"s40\"  id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li  id=\"3100\"><p class=\"s40\"  id=\"3101\">macro.Xslt = <span  id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li  id=\"3103\"><p class=\"s40\"  id=\"3104\">provide location of xslt file to use.</p></li><li  id=\"3105\"><p class=\"s40\"  id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li  id=\"3107\"><p class=\"s40\"  id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\"  id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p  id=\"3110\"><br id=\"3111\"></p><h1  id=\"3112\">Chapter 08:</h1><h1  id=\"3113\">Extending Umbraco CMS</h1><p  id=\"3114\"><br id=\"3115\"></p><p  id=\"3116\"><br id=\"3117\"></p><p  id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2  id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p  id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p  id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p  id=\"3125\">User control</p><p  id=\"3126\">.NET Class Library Razor Engine XSLT</p><p  id=\"3127\">Python</p><p  id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p  id=\"3129\">Python is also not covered in this book.</p><p  id=\"3130\"><br id=\"3131\"></p><h3  id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" >User Control:</a></h3><div id=\"contentheading3132\" ><p  id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p  id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p  id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li  id=\"3138\"><p  id=\"3139\">Add New User Control</p></li><li  id=\"3140\"><p  id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p  id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li  id=\"3145\"><p  id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p  id=\"3147\"><br id=\"3148\"></p><p  id=\"3149\">Vcard-Process</p><p  id=\"3150\"><br id=\"3151\"></p><p  id=\"3152\">User Provides Personal Information</p><p  id=\"3153\">Generate Vcard</p><p  id=\"3154\">Send Vcard to Email</p><p  id=\"3155\">Save to Database</p><p  id=\"3156\">Vcard-Process</p><p  id=\"3157\"><br id=\"3158\"></p><p  id=\"3159\">User Provides Personal Information</p><p  id=\"3160\">Generate Vcard</p><p  id=\"3161\">Send Vcard to Email</p><p  id=\"3162\">Save to Database</p><p class=\"s10\"  id=\"3163\">\t\t</p><h3  id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" >Before start coding:</a></h3><div id=\"contentheading3164\" ><p  id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p  id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p  id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4  id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p  id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p  id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p  id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4  id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p  id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p  id=\"3182\"><br id=\"3183\"></p><p  id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\"  id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p  id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\"  target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p  id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\"  target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\"  id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\"  id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4  id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p  id=\"3202\"><br id=\"3203\"></p><p  id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\"  id=\"3207\">JavaScript.jpg </p><p class=\"s88\"  id=\"3208\">JavaScript.jpg </p><p  id=\"3209\"></p><p  id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p  id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p  id=\"3212\"><br id=\"3213\"></p><h4  id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p  id=\"3216\"><br id=\"3217\"></p><p  id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p  id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4  id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p  id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li  id=\"3225\"><p  id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li  id=\"3227\"><p  id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li  id=\"3229\"><p  id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li  id=\"3231\"><p  id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li  id=\"3233\"><p  id=\"3234\">“Regex” means Regular Expression.</p><p  id=\"3235\"><br id=\"3236\"></p><h4  id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p  id=\"3239\"><br id=\"3240\"></p><p  id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4  id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p  id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p  id=\"3246\"><br id=\"3247\"></p><h4  id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p  id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p  id=\"3251\"><br id=\"3252\"></p><h4  id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p  id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p  id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p  id=\"3257\"><br id=\"3258\"></p><p  id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p  id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p  id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p  id=\"3268\">User type personal Informatio n</p><p  id=\"3269\">Name: Email:</p><p  id=\"3270\">User type personal Informatio n</p><p  id=\"3271\">Name: Email:</p><p  id=\"3272\"></p><p  id=\"3273\">Generate Vcard</p><p  id=\"3274\">Generate Vcard</p><p  id=\"3275\"></p><p  id=\"3276\">Press Submit</p><p  id=\"3277\">Press Submit</p><p  id=\"3278\"></p><p  id=\"3279\">Validate submitted Data</p><p  id=\"3280\"><br id=\"3281\"></p><p  id=\"3282\"><br id=\"3283\"></p><p  id=\"3284\">Store in Database</p><p  id=\"3285\">Sent By Email</p><p  id=\"3286\">Store in Database</p><p  id=\"3287\">Sent By Email</p><p class=\"s10\"  id=\"3288\"><span  id=\"3289\"> </span>\t</p><p  id=\"3290\"><br id=\"3291\"></p><p  id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p  id=\"3293\"><br id=\"3294\"></p><h4  id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li  id=\"3297\"><p  id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li  id=\"3300\"><p  id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li  id=\"3302\"><p  id=\"3303\">Create Upload button for Image or Photo</p></li><li  id=\"3304\"><p  id=\"3305\">Create Button</p><ul id=\"l82\"><li  id=\"3307\"><p  id=\"3308\">To submit data</p><h4  id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li  id=\"3311\"><p  id=\"3312\">Create Class</p><ul id=\"l83\"><li  id=\"3314\"><p  id=\"3315\">To save data to Database</p></li></ul></li><li  id=\"3316\"><p  id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li  id=\"3319\"><p  id=\"3320\">Validate input methods</p></li><li  id=\"3321\"><p  id=\"3322\">Go Generate Vcard</p></li><li  id=\"3323\"><p  id=\"3324\">Send Email Store Data to Database</p><p  id=\"3325\"><br id=\"3326\"></p><p  id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\"  id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3  id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" >Let’s Begin to code:</a></h3><div id=\"contentheading3332\" ><p  id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li  id=\"3335\"><p  id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li  id=\"3337\"><p  id=\"3338\">File -&gt; New --&gt; Project</p></li><li  id=\"3339\"><p  id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li  id=\"3342\"><p  id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li  id=\"3344\"><p  id=\"3345\">Name: Vcard Generator</p></li><li  id=\"3346\"><p  id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li  id=\"3348\"><p  id=\"3349\">Solution name: leave default, if you want you can change</p></li><li  id=\"3350\"><p  id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li  id=\"3353\"><p  id=\"3354\">It will Create new directory</p></li></ul></li><li  id=\"3355\"><p  id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p  id=\"3357\"><br id=\"3358\"></p><p  id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p  id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p  id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p  id=\"3368\">It will open new windows</p><p  id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p  id=\"3374\"><br id=\"3375\"></p><p  id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p  id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p  id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p  id=\"3381\">Vcardcontrol.jp</p><p  id=\"3382\"><br id=\"3383\"></p><p class=\"s27\"  id=\"3384\">-</p><p  id=\"3385\"><br id=\"3386\"></p><p class=\"s27\"  id=\"3387\">-</p><p  id=\"3388\"><br id=\"3389\"></p><p class=\"s27\"  id=\"3390\">-</p><p  id=\"3391\"><br id=\"3392\"></p></div></div></div></div></div>","sub":[{"pageId":"69","pageLevel":1,"pageOrder":"69","pageParentId":"68","pageName":"Template working Environment","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2122\" class=\"heading2122\"><a name=\"bookmark36\" id=\"2123\" style=\"color: green;\">Template working Environment</a></h3>","pageContent":"<div id=\"contentheading2122\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"2124\"><br id=\"2125\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2126\"><span id=\"2127\"><img width=\"602\" height=\"326\" alt=\"image\" src=\"Image_057.png\" id=\"2128\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 124pt;text-indent: 0pt;text-align: left;\" id=\"2129\">1 2 3 4 5 6 7 8 9</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2130\"><br id=\"2131\"></p><ol id=\"l45\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"2133\"><p style=\"display: inline;\" id=\"2134\">Save button, whatever you made change on template, you need to press Save button to save your work.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2135\"><p style=\"display: inline;\" id=\"2136\">Insert Umbraco page field: use to insert page field. Using page field document type alias is used here to insert data into template. Umbraco will fetch and insert content on the fly. Alias that we had in document type are necessary in order to fetch content. By click on icon will list all page alias available to insert.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2137\"><span id=\"2138\"><img width=\"331\" height=\"271\" alt=\"image\" src=\"Image_058.jpg\" id=\"2139\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2140\">I am going to show one example: instruction: click on empty area at line 3 and Click on “Insert Umbraco Page field” number 2 icon. You can see new windows open with input options.</p><ul id=\"l46\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2142\"><p style=\"display: inline;\" id=\"2143\">Choose field: here you can get list of alias that you created at document type. If you want to follow me select “contentBody” from</p><p style=\"padding-left: 77pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2144\">dropdown list and press insert. It will insert filed. See captured screen bellow</p><p class=\"s29\" style=\"padding-left: 59pt;text-indent: 0pt;text-align: left;\" id=\"2145\">o  <span id=\"2146\"><img width=\"482\" height=\"73\" alt=\"image\" src=\"Image_059.jpg\" id=\"2147\"></span></p></li><li style=\"padding-top: 3pt;padding-left: 83pt;text-indent: -21pt;text-align: left;\" id=\"2148\"><p style=\"display: inline;\" id=\"2149\"><span class=\"s56\" id=\"2150\">&lt;</span><span style=\" color: #E26C09;\" id=\"2151\">umbraco:Item </span>field<span class=\"s56\" id=\"2152\">=</span>\"<span style=\" color: #76923B;\" id=\"2153\">contentBody</span>\" runat<span class=\"s56\" id=\"2154\">=</span>\"<span style=\" color: #76923B;\" id=\"2155\">server</span>\"<span class=\"s56\" id=\"2156\">&gt;&lt;/</span><span style=\" color: #E26C09;\" id=\"2157\">umbraco:Item</span><span class=\"s56\" id=\"2158\">&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2159\"><span id=\"2160\"><img width=\"597\" height=\"217\" alt=\"image\" src=\"Image_060.png\" id=\"2161\"></span></p></li><li style=\"padding-top: 2pt;padding-left: 80pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2162\"><p class=\"s58\" style=\"display: inline;\" id=\"2163\">&lt;Umbraco:Item runat=”server”&gt; &lt;/Umbraco:item&gt; will executed by Umbraco cms. In my case filed=”contentBody”, here Content that provided in Document type “General Content‟s property „Content Body‟ ” by editor on Content page will be inserted on the fly. So user will see content body data on web page. for more clear see diagram.</p></li></ul><h4 style=\"padding-left: 300pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2164\">Document Type: <span class=\"p\" id=\"2165\">General Content</span></h4><h4 style=\"padding-left: 300pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2166\">Tab: <span class=\"p\" id=\"2167\">Description </span>Property Name: <span class=\"p\" id=\"2168\">Content Body</span></h4><h4 style=\"padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2169\"><a name=\"a37\" id=\"2170\">Property Alias:</a></h4><p style=\"padding-top: 2pt;padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2171\">contentBody</p><h4 style=\"padding-top: 2pt;padding-left: 300pt;text-indent: 0pt;text-align: left;\" id=\"2172\">Type: <span class=\"p\" id=\"2173\">Richtext editor</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2174\"><br id=\"2175\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2176\"><span id=\"2177\"><img width=\"562\" height=\"111\" alt=\"image\" src=\"Image_061.png\" id=\"2178\"></span></p><h4 style=\"padding-top: 4pt;padding-left: 19pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2179\">Content: <span class=\"p\" id=\"2180\">Home </span>Description: <span class=\"p\" id=\"2181\">welcome to semic provider.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2182\"><br id=\"2183\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2184\"><span id=\"2185\"><img width=\"475\" height=\"153\" alt=\"image\" src=\"Image_062.png\" id=\"2186\"></span></p><h4 style=\"padding-top: 10pt;padding-left: 192pt;text-indent: 0pt;text-align: center;\" id=\"2187\">Field: <span class=\"p\" id=\"2188\">contentBody</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2189\"><br id=\"2190\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2191\"><span id=\"2192\"><img width=\"561\" height=\"158\" alt=\"image\" src=\"Image_063.png\" id=\"2193\"></span></p><h4 style=\"padding-top: 10pt;padding-left: 19pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2194\">Preview of Content Home: <span class=\"p\" id=\"2195\">Now Umbraco fetching content to Web sites.</span></h4><p style=\"padding-left: 19pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2196\">1084.aspx where 1084 is node id of content Home.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2197\"><br id=\"2198\"></p><p class=\"s4\" style=\"padding-top: 4pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2199\">We created document type “General Content”, added new property “Content Body” with alias “contentBody” and type “Richtext editor”. In Content we add content on Richtext environment. In Template we use alias “contentBody” to fetch data that added on content using Richtext environment. It’s a core concept of Umbraco for templates.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2200\"><br id=\"2201\"></p></li><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2202\"><p style=\"display: inline;\" id=\"2203\">Insert Dictionary Field: Similar as Umbrcao page filed but it is used to insert Dictionary Items. Not covered in this “Howtoumbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2204\"><br id=\"2205\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2206\"><p style=\"display: inline;\" id=\"2207\">Insert Macro: it‟s a mostly used in templates and I will cover this Macro Chapter. Macro is very important chapter. Developer should not miss about Macro.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2208\"><br id=\"2209\"></p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2210\"><p style=\"display: inline;\" id=\"2211\">Insert Content Area Placeholder: We can easily create child templates in Umbraco, child has access to parents generic properties. Umbraco templates have great features “Inheritance Character” that child template can inject data to Parent template using “Insert Content Area Placeholder”, first you create Placeholder in parent template and in child template you insert content area. If you want follow me I want to use “Web Sites Global Settings” templates as Master templates or parent templates. Parent templates can have placeholder to inject data from child templates. Now let‟s insert Content area Placeholder at “Web Sites Global Settings” templates.</p><ul id=\"l47\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2213\"><p style=\"display: inline;\" id=\"2214\">Instruction:</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2215\"><p style=\"display: inline;\" id=\"2216\">Open “Web Site Global Setting” Template</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2217\"><p style=\"display: inline;\" id=\"2218\">First Click on any place at working environment where you would like to insert content Place holder. Crusher should blink now, Click on “Insert Content area Placeholder” it will open new windows now type placeholder name “ContentBody” and Press Insert. See captured screen highlighted code are just added.</p><p class=\"s29\" style=\"padding-left: 5pt;text-indent: 53pt;line-height: 118%;text-align: left;\" id=\"2219\">o <span id=\"2220\"><img width=\"416\" height=\"162\" alt=\"image\" src=\"Image_064.jpg\" id=\"2221\"></span><span class=\"s28\" id=\"2222\"> </span><span class=\"p\" id=\"2223\"> Inheritance Properties: </span><span class=\"s10\" id=\"2224\">Umbraco template support inheritance properties so we can easily share global setting in sites for example. Navigation bar, heading, logo and web layout are global setting that will remain same look and feel for different content. “Web Sites Global Settings” template contains such global settings. Now I want to inject content from child templates on that place holder “ContentBody” I just created above. To inject data from child template first I have to assign child template. Click on General Content Template, in Master template change from “none” to “Web Site Global Settings” and Save “General Content” template. You can see General Content Templates now moved from root level to child template of “Web site Global Settings” Template. See captured screen</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2225\"><br id=\"2226\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2227\"><span id=\"2228\"><img width=\"496\" height=\"147\" alt=\"image\" src=\"Image_065.jpg\" id=\"2229\"></span></p><p style=\"padding-top: 11pt;padding-left: 23pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2230\">-</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2231\"><p style=\"display: inline;\" id=\"2232\">Insert content Area: if parents‟ templates have content area placeholder, using insert content area we can insert content area placeholder at child templates. In my case general content is child of “Web Site Global Setting” template. Lets Insert Content area by clicking of “Insert Content Area” icon, select “ContentBody” placeholder and press insert. If you like to cancel, just press cancel. Umbraco content placeholder “ContentBody” inserted after Content place holder “ContentPlaceHolderDefault”. This content place holder is created default by Umbraco. Delete “ContentPlaceHolderDefault” from Template “General content” and Move Umbraco field “contentBody” inside content Placeholder “ContentBody”. Remember to save. If you follow me “General Content” Template code should be like bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2233\"><br id=\"2234\"></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2235\"><span class=\"s59\" style=\" background-color: #FF0;\" id=\"2236\">&lt;%</span><span class=\"s60\" id=\"2237\">@ </span><span class=\"s61\" id=\"2238\">Master </span><span class=\"s62\" id=\"2239\">Language</span><span class=\"s60\" id=\"2240\">=\"C#\" </span><span class=\"s62\" id=\"2241\">MasterPageFile</span><span class=\"s60\" id=\"2242\">=\"~/masterpages/WebSiteGlobalSettings.master\" </span><span class=\"s62\" id=\"2243\">AutoEventWireup</span><span class=\"s60\" id=\"2244\">=\"true\" </span><span class=\"s59\" style=\" background-color: #FF0;\" id=\"2245\">%&gt;</span></p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2246\">&lt;<span style=\" color: #800000;\" id=\"2247\">asp</span>:<span style=\" color: #800000;\" id=\"2248\">Content </span><span style=\" color: #F00;\" id=\"2249\">ID</span>=\"Content2\" <span style=\" color: #F00;\" id=\"2250\">ContentPlaceHolderId</span>=\"ContentBody\" <span style=\" color: #F00;\" id=\"2251\">runat</span>=\"server\"&gt;</p><p class=\"s63\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2252\">&lt;!-- Insert \"ContentBody\" markup here --&gt;</p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2253\">&lt;<span style=\" color: #800000;\" id=\"2254\">umbraco</span>:<span style=\" color: #800000;\" id=\"2255\">Item </span><span style=\" color: #F00;\" id=\"2256\">ID</span>=\"Item1\" <span style=\" color: #F00;\" id=\"2257\">field</span>=\"contentBody\" <span style=\" color: #F00;\" id=\"2258\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"2259\">umbraco</span>:<span style=\" color: #800000;\" id=\"2260\">Item</span>&gt;</p><p class=\"s60\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"2261\">&lt;/<span style=\" color: #800000;\" id=\"2262\">asp</span>:<span style=\" color: #800000;\" id=\"2263\">Content</span>&gt;</p><p style=\"padding-top: 10pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2264\">- Remember to preview your content after changed in your template<span style=\" color: #00F;\" id=\"2265\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2266\"><br id=\"2267\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2268\"><p style=\"display: inline;\" id=\"2269\">Insert Inline Razor Macro: Razor engine is used if you don‟t want to use Xslt to fetch data from xml file. Not covered in this “HowtoUmbraco Basic”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2270\"><br id=\"2271\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2272\"><p style=\"display: inline;\" id=\"2273\">Help: it will open documentation. Remember to read it if you need help.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2274\"><br id=\"2275\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2276\"><p style=\"display: inline;\" id=\"2277\">Working „Environment or area: Here you add all your template coding.</p></li></ol><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2278\">Template &lt;%@ Master Language= \"C#\" MasterPageFile= \"</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"2279\">~/umbraco/masterpages/default.master\" AutoEventWireup=\"true\" %&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2280\"><br id=\"2281\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2282\">Description: all templates are inherited by default.master template, it‟s a Umbraco default master template.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2283\"><br id=\"2284\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2285\">Content Placeholder: all your html code should go inside Content place holder. If you want to follow me copy and paste code bellow in “Web Site Global Settings” Templates. Note: I am not going to explain code because here nothing new just added html tags. You can look yourself.</p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading2122\" class=\"heading2122\"><a name=\"bookmark36\" id=\"2123\" >Template working Environment</a></h3>","pageStyleReducedContent":"<div id=\"contentheading2122\" ><p  id=\"2124\"><br id=\"2125\"></p><p  id=\"2126\"><span id=\"2127\"><img width=\"602\" height=\"326\" alt=\"image\" src=\"Image_057.png\" id=\"2128\"></span></p><p class=\"s38\"  id=\"2129\">1 2 3 4 5 6 7 8 9</p><p  id=\"2130\"><br id=\"2131\"></p><ol id=\"l45\"><li  id=\"2133\"><p  id=\"2134\">Save button, whatever you made change on template, you need to press Save button to save your work.</p></li><li  id=\"2135\"><p  id=\"2136\">Insert Umbraco page field: use to insert page field. Using page field document type alias is used here to insert data into template. Umbraco will fetch and insert content on the fly. Alias that we had in document type are necessary in order to fetch content. By click on icon will list all page alias available to insert.</p><p  id=\"2137\"><span id=\"2138\"><img width=\"331\" height=\"271\" alt=\"image\" src=\"Image_058.jpg\" id=\"2139\"></span></p><p  id=\"2140\">I am going to show one example: instruction: click on empty area at line 3 and Click on “Insert Umbraco Page field” number 2 icon. You can see new windows open with input options.</p><ul id=\"l46\"><li  id=\"2142\"><p  id=\"2143\">Choose field: here you can get list of alias that you created at document type. If you want to follow me select “contentBody” from</p><p  id=\"2144\">dropdown list and press insert. It will insert filed. See captured screen bellow</p><p class=\"s29\"  id=\"2145\">o  <span id=\"2146\"><img width=\"482\" height=\"73\" alt=\"image\" src=\"Image_059.jpg\" id=\"2147\"></span></p></li><li  id=\"2148\"><p  id=\"2149\"><span class=\"s56\" id=\"2150\">&lt;</span><span  id=\"2151\">umbraco:Item </span>field<span class=\"s56\" id=\"2152\">=</span>\"<span  id=\"2153\">contentBody</span>\" runat<span class=\"s56\" id=\"2154\">=</span>\"<span  id=\"2155\">server</span>\"<span class=\"s56\" id=\"2156\">&gt;&lt;/</span><span  id=\"2157\">umbraco:Item</span><span class=\"s56\" id=\"2158\">&gt;</span></p><p  id=\"2159\"><span id=\"2160\"><img width=\"597\" height=\"217\" alt=\"image\" src=\"Image_060.png\" id=\"2161\"></span></p></li><li  id=\"2162\"><p class=\"s58\"  id=\"2163\">&lt;Umbraco:Item runat=”server”&gt; &lt;/Umbraco:item&gt; will executed by Umbraco cms. In my case filed=”contentBody”, here Content that provided in Document type “General Content‟s property „Content Body‟ ” by editor on Content page will be inserted on the fly. So user will see content body data on web page. for more clear see diagram.</p></li></ul><h4  id=\"2164\">Document Type: <span class=\"p\" id=\"2165\">General Content</span></h4><h4  id=\"2166\">Tab: <span class=\"p\" id=\"2167\">Description </span>Property Name: <span class=\"p\" id=\"2168\">Content Body</span></h4><h4  id=\"2169\"><a name=\"a37\" id=\"2170\">Property Alias:</a></h4><p  id=\"2171\">contentBody</p><h4  id=\"2172\">Type: <span class=\"p\" id=\"2173\">Richtext editor</span></h4><p  id=\"2174\"><br id=\"2175\"></p><p  id=\"2176\"><span id=\"2177\"><img width=\"562\" height=\"111\" alt=\"image\" src=\"Image_061.png\" id=\"2178\"></span></p><h4  id=\"2179\">Content: <span class=\"p\" id=\"2180\">Home </span>Description: <span class=\"p\" id=\"2181\">welcome to semic provider.</span></h4><p  id=\"2182\"><br id=\"2183\"></p><p  id=\"2184\"><span id=\"2185\"><img width=\"475\" height=\"153\" alt=\"image\" src=\"Image_062.png\" id=\"2186\"></span></p><h4  id=\"2187\">Field: <span class=\"p\" id=\"2188\">contentBody</span></h4><p  id=\"2189\"><br id=\"2190\"></p><p  id=\"2191\"><span id=\"2192\"><img width=\"561\" height=\"158\" alt=\"image\" src=\"Image_063.png\" id=\"2193\"></span></p><h4  id=\"2194\">Preview of Content Home: <span class=\"p\" id=\"2195\">Now Umbraco fetching content to Web sites.</span></h4><p  id=\"2196\">1084.aspx where 1084 is node id of content Home.</p><p  id=\"2197\"><br id=\"2198\"></p><p class=\"s4\"  id=\"2199\">We created document type “General Content”, added new property “Content Body” with alias “contentBody” and type “Richtext editor”. In Content we add content on Richtext environment. In Template we use alias “contentBody” to fetch data that added on content using Richtext environment. It’s a core concept of Umbraco for templates.</p><p  id=\"2200\"><br id=\"2201\"></p></li><li  id=\"2202\"><p  id=\"2203\">Insert Dictionary Field: Similar as Umbrcao page filed but it is used to insert Dictionary Items. Not covered in this “Howtoumbraco” basic.</p><p  id=\"2204\"><br id=\"2205\"></p></li><li  id=\"2206\"><p  id=\"2207\">Insert Macro: it‟s a mostly used in templates and I will cover this Macro Chapter. Macro is very important chapter. Developer should not miss about Macro.</p><p  id=\"2208\"><br id=\"2209\"></p></li><li  id=\"2210\"><p  id=\"2211\">Insert Content Area Placeholder: We can easily create child templates in Umbraco, child has access to parents generic properties. Umbraco templates have great features “Inheritance Character” that child template can inject data to Parent template using “Insert Content Area Placeholder”, first you create Placeholder in parent template and in child template you insert content area. If you want follow me I want to use “Web Sites Global Settings” templates as Master templates or parent templates. Parent templates can have placeholder to inject data from child templates. Now let‟s insert Content area Placeholder at “Web Sites Global Settings” templates.</p><ul id=\"l47\"><li  id=\"2213\"><p  id=\"2214\">Instruction:</p></li><li  id=\"2215\"><p  id=\"2216\">Open “Web Site Global Setting” Template</p></li><li  id=\"2217\"><p  id=\"2218\">First Click on any place at working environment where you would like to insert content Place holder. Crusher should blink now, Click on “Insert Content area Placeholder” it will open new windows now type placeholder name “ContentBody” and Press Insert. See captured screen highlighted code are just added.</p><p class=\"s29\"  id=\"2219\">o <span id=\"2220\"><img width=\"416\" height=\"162\" alt=\"image\" src=\"Image_064.jpg\" id=\"2221\"></span><span class=\"s28\" id=\"2222\"> </span><span class=\"p\" id=\"2223\"> Inheritance Properties: </span><span class=\"s10\" id=\"2224\">Umbraco template support inheritance properties so we can easily share global setting in sites for example. Navigation bar, heading, logo and web layout are global setting that will remain same look and feel for different content. “Web Sites Global Settings” template contains such global settings. Now I want to inject content from child templates on that place holder “ContentBody” I just created above. To inject data from child template first I have to assign child template. Click on General Content Template, in Master template change from “none” to “Web Site Global Settings” and Save “General Content” template. You can see General Content Templates now moved from root level to child template of “Web site Global Settings” Template. See captured screen</span></p><p  id=\"2225\"><br id=\"2226\"></p><p  id=\"2227\"><span id=\"2228\"><img width=\"496\" height=\"147\" alt=\"image\" src=\"Image_065.jpg\" id=\"2229\"></span></p><p  id=\"2230\">-</p></li></ul></li><li  id=\"2231\"><p  id=\"2232\">Insert content Area: if parents‟ templates have content area placeholder, using insert content area we can insert content area placeholder at child templates. In my case general content is child of “Web Site Global Setting” template. Lets Insert Content area by clicking of “Insert Content Area” icon, select “ContentBody” placeholder and press insert. If you like to cancel, just press cancel. Umbraco content placeholder “ContentBody” inserted after Content place holder “ContentPlaceHolderDefault”. This content place holder is created default by Umbraco. Delete “ContentPlaceHolderDefault” from Template “General content” and Move Umbraco field “contentBody” inside content Placeholder “ContentBody”. Remember to save. If you follow me “General Content” Template code should be like bellow.</p><p  id=\"2233\"><br id=\"2234\"></p><p  id=\"2235\"><span class=\"s59\"  id=\"2236\">&lt;%</span><span class=\"s60\" id=\"2237\">@ </span><span class=\"s61\" id=\"2238\">Master </span><span class=\"s62\" id=\"2239\">Language</span><span class=\"s60\" id=\"2240\">=\"C#\" </span><span class=\"s62\" id=\"2241\">MasterPageFile</span><span class=\"s60\" id=\"2242\">=\"~/masterpages/WebSiteGlobalSettings.master\" </span><span class=\"s62\" id=\"2243\">AutoEventWireup</span><span class=\"s60\" id=\"2244\">=\"true\" </span><span class=\"s59\"  id=\"2245\">%&gt;</span></p><p class=\"s60\"  id=\"2246\">&lt;<span  id=\"2247\">asp</span>:<span  id=\"2248\">Content </span><span  id=\"2249\">ID</span>=\"Content2\" <span  id=\"2250\">ContentPlaceHolderId</span>=\"ContentBody\" <span  id=\"2251\">runat</span>=\"server\"&gt;</p><p class=\"s63\"  id=\"2252\">&lt;!-- Insert \"ContentBody\" markup here --&gt;</p><p class=\"s60\"  id=\"2253\">&lt;<span  id=\"2254\">umbraco</span>:<span  id=\"2255\">Item </span><span  id=\"2256\">ID</span>=\"Item1\" <span  id=\"2257\">field</span>=\"contentBody\" <span  id=\"2258\">runat</span>=\"server\"&gt;&lt;/<span  id=\"2259\">umbraco</span>:<span  id=\"2260\">Item</span>&gt;</p><p class=\"s60\"  id=\"2261\">&lt;/<span  id=\"2262\">asp</span>:<span  id=\"2263\">Content</span>&gt;</p><p  id=\"2264\">- Remember to preview your content after changed in your template<span  id=\"2265\">.</span></p><p  id=\"2266\"><br id=\"2267\"></p></li><li  id=\"2268\"><p  id=\"2269\">Insert Inline Razor Macro: Razor engine is used if you don‟t want to use Xslt to fetch data from xml file. Not covered in this “HowtoUmbraco Basic”.</p><p  id=\"2270\"><br id=\"2271\"></p></li><li  id=\"2272\"><p  id=\"2273\">Help: it will open documentation. Remember to read it if you need help.</p><p  id=\"2274\"><br id=\"2275\"></p></li><li  id=\"2276\"><p  id=\"2277\">Working „Environment or area: Here you add all your template coding.</p></li></ol><p  id=\"2278\">Template &lt;%@ Master Language= \"C#\" MasterPageFile= \"</p><p  id=\"2279\">~/umbraco/masterpages/default.master\" AutoEventWireup=\"true\" %&gt;</p><p  id=\"2280\"><br id=\"2281\"></p><p  id=\"2282\">Description: all templates are inherited by default.master template, it‟s a Umbraco default master template.</p><p  id=\"2283\"><br id=\"2284\"></p><p  id=\"2285\">Content Placeholder: all your html code should go inside Content place holder. If you want to follow me copy and paste code bellow in “Web Site Global Settings” Templates. Note: I am not going to explain code because here nothing new just added html tags. You can look yourself.</p></div>","sub":[]},{"pageId":"71","pageLevel":1,"pageOrder":"71","pageParentId":"68","pageName":"“Web Site Global Settings” Templates:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2286\" class=\"heading2286\"><a name=\"bookmark37\" id=\"2287\" style=\"color: green;\">“Web Site Global Settings” Templates:</a></h3>","pageContent":"<div id=\"contentheading2286\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2288\">Note: if you are copying code from here, do not copy <span class=\"s56\" id=\"2289\">&lt;</span>%@ Master Language<span class=\"s56\" id=\"2290\">=</span>\"C#\" MasterPageFile<span class=\"s56\" id=\"2291\">=</span>\"~/umbraco/masterpages/default.master\" AutoEventWireup<span class=\"s56\" id=\"2292\">=</span>\"true\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2293\">%<span class=\"s56\" id=\"2294\">&gt;</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 3pt;line-height: 114%;text-align: justify;\" id=\"2295\">line because Umbraco will insert that line automatically in that case Umbraco CMS throw out yellow screen of death with Error message “ <b id=\"2296\">Parser Error Message: </b>There can be only one 'master' directive.” To solve this problem make sure there is only one master page template exist on that template. If you want to follow me your “Web Site Global Settings” template code should looks like bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2297\"><br id=\"2298\"></p><p style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2299\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"2300\">&lt;%</span><span class=\"s66\" id=\"2301\">@ </span><span class=\"s67\" id=\"2302\">Master </span><span class=\"s68\" id=\"2303\">Language</span><span class=\"s66\" id=\"2304\">=\"C#\" </span><span class=\"s68\" id=\"2305\">MasterPageFile</span><span class=\"s66\" id=\"2306\">=\"~/umbraco/masterpages/default.master\" </span><span class=\"s68\" id=\"2307\">AutoEventWireup</span><span class=\"s66\" id=\"2308\">=\"true\" </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"2309\">%&gt;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2310\"><span style=\" color: #800000;\" id=\"2311\">asp</span>:<span style=\" color: #800000;\" id=\"2312\">Content </span><span style=\" color: #F00;\" id=\"2313\">ContentPlaceHolderID</span>=\"ContentPlaceHolderDefault\" <span style=\" color: #F00;\" id=\"2314\">runat</span>=\"server\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2315\">&lt;<span style=\" color: #800000;\" id=\"2316\">html</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2317\">&lt;<span style=\" color: #800000;\" id=\"2318\">head</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2319\">&lt;<span style=\" color: #800000;\" id=\"2320\">link </span><span style=\" color: #F00;\" id=\"2321\">rel</span>=\"stylesheet\" <span style=\" color: #F00;\" id=\"2322\">type</span>=\"text/css\" <span style=\" color: #F00;\" id=\"2323\">href</span>=\"css/style.css\"/&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2324\">&lt;/<span style=\" color: #800000;\" id=\"2325\">head</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2326\">&lt;<span style=\" color: #800000;\" id=\"2327\">body</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2328\">&lt;<span style=\" color: #800000;\" id=\"2329\">div </span><span style=\" color: #F00;\" id=\"2330\">class</span>=\"head\"&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2331\">&lt;<span style=\" color: #800000;\" id=\"2332\">div </span><span style=\" color: #F00;\" id=\"2333\">class</span>=\"top\"&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2334\">&lt;<span style=\" color: #800000;\" id=\"2335\">div </span><span style=\" color: #F00;\" id=\"2336\">class</span>=\"title\"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2337\"><br id=\"2338\"></p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2339\">&lt;/<span style=\" color: #800000;\" id=\"2340\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"2341\">&lt;/<span style=\" color: #800000;\" id=\"2342\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"2343\">&lt;/<span style=\" color: #800000;\" id=\"2344\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2345\">&lt;<span style=\" color: #800000;\" id=\"2346\">div </span><span style=\" color: #F00;\" id=\"2347\">class</span>=\"navi\"&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2348\">&lt;<span style=\" color: #800000;\" id=\"2349\">div </span><span style=\" color: #F00;\" id=\"2350\">class</span>=\"navigation\"&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2351\">&lt;/<span style=\" color: #800000;\" id=\"2352\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2353\">&lt;/<span style=\" color: #800000;\" id=\"2354\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2355\">&lt;<span style=\" color: #800000;\" id=\"2356\">div </span><span style=\" color: #F00;\" id=\"2357\">class</span>=\"middle\"&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"2358\">&lt;<span style=\" color: #800000;\" id=\"2359\">div </span><span style=\" color: #F00;\" id=\"2360\">class</span>=\"content\" &gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2361\">&lt;<span style=\" color: #800000;\" id=\"2362\">asp</span>:<span style=\" color: #800000;\" id=\"2363\">ContentPlaceHolder </span><span style=\" color: #F00;\" id=\"2364\">Id</span>=\"ContentBody\" <span style=\" color: #F00;\" id=\"2365\">runat</span>=\"server\"&gt;</p><p class=\"s69\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2366\">&lt;!-- Insert default \"ContentBody\" markup here --&gt;</p><p class=\"s66\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"2367\">&lt;/<span style=\" color: #800000;\" id=\"2368\">asp</span>:<span style=\" color: #800000;\" id=\"2369\">ContentPlaceHolder</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"2370\">&lt;/<span style=\" color: #800000;\" id=\"2371\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"2372\">&lt;/<span style=\" color: #800000;\" id=\"2373\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2374\">&lt;/<span style=\" color: #800000;\" id=\"2375\">body</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2376\">&lt;/<span style=\" color: #800000;\" id=\"2377\">html</span>&gt; &lt;/<span style=\" color: #800000;\" id=\"2378\">asp</span>:<span style=\" color: #800000;\" id=\"2379\">Content</span>&gt;</p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading2286\" class=\"heading2286\"><a name=\"bookmark37\" id=\"2287\" >“Web Site Global Settings” Templates:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading2286\" ><p  id=\"2288\">Note: if you are copying code from here, do not copy <span class=\"s56\" id=\"2289\">&lt;</span>%@ Master Language<span class=\"s56\" id=\"2290\">=</span>\"C#\" MasterPageFile<span class=\"s56\" id=\"2291\">=</span>\"~/umbraco/masterpages/default.master\" AutoEventWireup<span class=\"s56\" id=\"2292\">=</span>\"true\"</p><p  id=\"2293\">%<span class=\"s56\" id=\"2294\">&gt;</span></p><p  id=\"2295\">line because Umbraco will insert that line automatically in that case Umbraco CMS throw out yellow screen of death with Error message “ <b id=\"2296\">Parser Error Message: </b>There can be only one 'master' directive.” To solve this problem make sure there is only one master page template exist on that template. If you want to follow me your “Web Site Global Settings” template code should looks like bellow.</p><p  id=\"2297\"><br id=\"2298\"></p><p  id=\"2299\"><span class=\"s65\"  id=\"2300\">&lt;%</span><span class=\"s66\" id=\"2301\">@ </span><span class=\"s67\" id=\"2302\">Master </span><span class=\"s68\" id=\"2303\">Language</span><span class=\"s66\" id=\"2304\">=\"C#\" </span><span class=\"s68\" id=\"2305\">MasterPageFile</span><span class=\"s66\" id=\"2306\">=\"~/umbraco/masterpages/default.master\" </span><span class=\"s68\" id=\"2307\">AutoEventWireup</span><span class=\"s66\" id=\"2308\">=\"true\" </span><span class=\"s65\"  id=\"2309\">%&gt;</span></p><p class=\"s66\"  id=\"2310\"><span  id=\"2311\">asp</span>:<span  id=\"2312\">Content </span><span  id=\"2313\">ContentPlaceHolderID</span>=\"ContentPlaceHolderDefault\" <span  id=\"2314\">runat</span>=\"server\"&gt;</p><p class=\"s66\"  id=\"2315\">&lt;<span  id=\"2316\">html</span>&gt;</p><p class=\"s66\"  id=\"2317\">&lt;<span  id=\"2318\">head</span>&gt;</p><p class=\"s66\"  id=\"2319\">&lt;<span  id=\"2320\">link </span><span  id=\"2321\">rel</span>=\"stylesheet\" <span  id=\"2322\">type</span>=\"text/css\" <span  id=\"2323\">href</span>=\"css/style.css\"/&gt;</p><p class=\"s66\"  id=\"2324\">&lt;/<span  id=\"2325\">head</span>&gt;</p><p class=\"s66\"  id=\"2326\">&lt;<span  id=\"2327\">body</span>&gt;</p><p class=\"s66\"  id=\"2328\">&lt;<span  id=\"2329\">div </span><span  id=\"2330\">class</span>=\"head\"&gt;</p><p class=\"s66\"  id=\"2331\">&lt;<span  id=\"2332\">div </span><span  id=\"2333\">class</span>=\"top\"&gt;</p><p class=\"s66\"  id=\"2334\">&lt;<span  id=\"2335\">div </span><span  id=\"2336\">class</span>=\"title\"&gt;</p><p  id=\"2337\"><br id=\"2338\"></p><p class=\"s66\"  id=\"2339\">&lt;/<span  id=\"2340\">div</span>&gt;</p><p class=\"s66\"  id=\"2341\">&lt;/<span  id=\"2342\">div</span>&gt;</p><p class=\"s66\"  id=\"2343\">&lt;/<span  id=\"2344\">div</span>&gt;</p><p class=\"s66\"  id=\"2345\">&lt;<span  id=\"2346\">div </span><span  id=\"2347\">class</span>=\"navi\"&gt;</p><p class=\"s66\"  id=\"2348\">&lt;<span  id=\"2349\">div </span><span  id=\"2350\">class</span>=\"navigation\"&gt;</p><p class=\"s66\"  id=\"2351\">&lt;/<span  id=\"2352\">div</span>&gt;</p><p class=\"s66\"  id=\"2353\">&lt;/<span  id=\"2354\">div</span>&gt;</p><p class=\"s66\"  id=\"2355\">&lt;<span  id=\"2356\">div </span><span  id=\"2357\">class</span>=\"middle\"&gt;</p><p class=\"s66\"  id=\"2358\">&lt;<span  id=\"2359\">div </span><span  id=\"2360\">class</span>=\"content\" &gt;</p><p class=\"s66\"  id=\"2361\">&lt;<span  id=\"2362\">asp</span>:<span  id=\"2363\">ContentPlaceHolder </span><span  id=\"2364\">Id</span>=\"ContentBody\" <span  id=\"2365\">runat</span>=\"server\"&gt;</p><p class=\"s69\"  id=\"2366\">&lt;!-- Insert default \"ContentBody\" markup here --&gt;</p><p class=\"s66\"  id=\"2367\">&lt;/<span  id=\"2368\">asp</span>:<span  id=\"2369\">ContentPlaceHolder</span>&gt;</p><p class=\"s66\"  id=\"2370\">&lt;/<span  id=\"2371\">div</span>&gt;</p><p class=\"s66\"  id=\"2372\">&lt;/<span  id=\"2373\">div</span>&gt;</p><p class=\"s66\"  id=\"2374\">&lt;/<span  id=\"2375\">body</span>&gt;</p><p class=\"s66\"  id=\"2376\">&lt;/<span  id=\"2377\">html</span>&gt; &lt;/<span  id=\"2378\">asp</span>:<span  id=\"2379\">Content</span>&gt;</p></div>","sub":[]},{"pageId":"72","pageLevel":1,"pageOrder":"72","pageParentId":"68","pageName":"Template API:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2380\" class=\"heading2380\"><a name=\"bookmark38\" id=\"2381\" style=\"color: green;\">Template API:</a></h3>","pageContent":"<div id=\"contentheading2380\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2382\">Template API can be found using namespace <span class=\"s66\" id=\"2383\">using </span><span class=\"s70\" id=\"2384\">umbraco.cms.businesslogic.template;</span></p><ul id=\"l48\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"2386\"><p style=\"display: inline;\" id=\"2387\">Manual work Create Template:</p><ul id=\"l49\"><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2389\"><p style=\"display: inline;\" id=\"2390\">That manual work will execute <span style=\" color: #2B91AE;\" id=\"2391\">Template</span>.MakeNew(name, u);</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2392\"><p style=\"display: inline;\" id=\"2393\">Name: name of Template</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"2394\"><p style=\"display: inline;\" id=\"2395\">U is user. Umbraco will automatically assign user when you logged in backend. If you want to create Template using API you should provide valid user, user should have access to create Template otherwise Umbraco will throughout exception.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: justify;\" id=\"2396\"><p style=\"display: inline;\" id=\"2397\">Manual work Delete</p><ul id=\"l50\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2399\"><p style=\"display: inline;\" id=\"2400\">It will execute Template.Delete() void methods.</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2401\"><p style=\"display: inline;\" id=\"2402\">It‟s not possible to restore deleted templates.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: justify;\" id=\"2403\"><p style=\"display: inline;\" id=\"2404\">Setting master Template:</p><ul id=\"l51\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2406\"><p style=\"display: inline;\" id=\"2407\">Umbraco will execute Template. MasterTemplate = Template.Id;</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2408\"><p style=\"display: inline;\" id=\"2409\">Where Template.Id is node id of parent Template.</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 13pt;text-align: justify;\" id=\"2410\"><p style=\"display: inline;\" id=\"2411\">Save:</p><ul id=\"l52\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 14pt;text-align: justify;\" id=\"2413\"><p style=\"display: inline;\" id=\"2414\">Save button will execute Save() methods to save work. It will effect to Database see captured screen bellow as reference. I will not explain here but its not difficult to understand if you know basic knowledge of Sql server and Database.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2415\"><br id=\"2416\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2417\"><span id=\"2418\"><img width=\"616\" height=\"325\" alt=\"image\" src=\"Image_066.png\" id=\"2419\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2420\"><br id=\"2421\"></p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2422\">These results are from Database name „umbracodb‟ table „cmsTemplate‟. In your case database name can be deference as compared to mine.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2423\"><br id=\"2424\"></p><p class=\"s10\" style=\"padding-left: 23pt;text-indent: 0pt;text-align: justify;\" id=\"2425\">Notice:</p><p class=\"s10\" style=\"padding-top: 1pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2426\">I am not using anymore “insert page field” ways to fetch data in templates because if I fetch data using document type alias it will fetch data only if template are checked in Document type allowed templates. If templates are not associated with document type, Data will not be fetching using “Insert Page field” technique so that I am going to continue to fetch data using Xslt and use macro to render content to templates<span class=\"p\" id=\"2427\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2428\"><br id=\"2429\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2430\"><a name=\"a38\" id=\"2431\">Chapter 06: XSLT</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2432\"><br id=\"2433\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2434\"><br id=\"2435\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2436\"><span id=\"2437\"><img width=\"330\" height=\"1\" alt=\"image\" src=\"Image_067.png\" id=\"2438\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2439\"><br id=\"2440\"></p><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2441\" class=\"heading2441\"><a name=\"bookmark39\" id=\"2442\" style=\"color: lime;\">XSLT:</a></h2><div id=\"contentheading2441\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2443\">Xslt provides fast data fetching processing from xml file. All published content in your site are structured in xml format by Umbraco system. Xslt is the way to transfer xml data to html format, Xslt and Xpath are used together to provide rich service. Xpath is used to move pointer back and forth to crawl content in xml file or to move pointer from one node to another node. My assumption is you already familiar with Xslt and Xpath, I will directly going to show creating and using Xslt.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2444\"><br id=\"2445\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2446\"><a name=\"a39\" id=\"2447\">Using XSLT:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2448\"><br id=\"2449\"></p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2450\">Xslt transfer xml to html, using Xslt we are fetching data from xml and passing to template in Umbraco site. We need to create associated macro first, link that macro with Xslt and Use that macro in Template. Here macro works as bridge between Xslt and Template. Umbraco is user friendly so you don‟t have to worry about macro. Each time you check “Create Macro” when you create new Xslt, Umbraco will automatically generate Macro for you.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2451\"><br id=\"2452\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2453\"><span id=\"2454\"><img width=\"333\" height=\"495\" alt=\"image\" src=\"Image_068.png\" id=\"2455\"></span></p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2456\">Let‟s starts to work with Xslt Instruction:</p></div></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2457\"><p style=\"display: inline;\" id=\"2458\">Click “Developer” in Sections menu. “XSLT Files” menu is available inside Developer menu items. See captured screen: “Xslt.jpg”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2459\"><p style=\"display: inline;\" id=\"2460\">Right click on “XSLT Files” and Click “Create”. Umbraco open new windows: if you want to follow me provide these information</p><ul id=\"l53\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2462\"><p style=\"display: inline;\" id=\"2463\">Name: “GlobalSetting”</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2464\"><p style=\"display: inline;\" id=\"2465\">Choose a Template: Clean</p></li><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2466\"><p style=\"display: inline;\" id=\"2467\">Checked: Create Macro</p></li></ul></li><li style=\"padding-top: 1pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2468\"><p style=\"display: inline;\" id=\"2469\">Press “Create” see captured screen bellow “XsltCreate.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2470\"><br id=\"2471\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2472\">“GlobalSetting.xslt” file must be created inside XSLT file menu at Developer section.</p><p class=\"s8\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2473\">Purpose of creating Globalsetting.xslt is to fetch Site name, site title and logo.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2474\"><br id=\"2475\"></p><p style=\"padding-left: 5pt;text-indent: 33pt;text-align: left;\" id=\"2476\">Xslt.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2477\"><br id=\"2478\"></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2479\">XsltCreate.jpg</p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2480\"><a name=\"bookmark40\" id=\"2481\">Xslt working environments:</a></h3><p style=\"text-indent: 0pt;text-align: left;\" id=\"2482\"><br id=\"2483\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2484\"><span id=\"2485\"><img width=\"616\" height=\"467\" alt=\"image\" src=\"Image_069.png\" id=\"2486\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"2487\">1 2 3 4 5 <span class=\"s72\" id=\"2488\">6 </span><span class=\"s73\" id=\"2489\">7</span></p><p class=\"s38\" style=\"padding-top: 9pt;padding-left: 78pt;text-indent: 0pt;text-align: center;\" id=\"2490\">8</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2491\"><br id=\"2492\"></p><p class=\"s38\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"2493\">9</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2494\"><br id=\"2495\"></p><p class=\"s38\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"2496\">A</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2497\"><br id=\"2498\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2499\"><br id=\"2500\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2501\">Image: xsltEnvironment.jpg</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2502\">Image: xsltEnvironment.jpg</p><p style=\"padding-left: 257pt;text-indent: 0pt;text-align: left;\" id=\"2503\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"2504\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2505\"><br id=\"2506\"></p><ol id=\"l54\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2508\"><p style=\"display: inline;\" id=\"2509\">Coding area: here you can type Xslt code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2510\"><br id=\"2511\"></p><ol id=\"l55\"><li style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2513\"><h4 style=\"display: inline;\" id=\"2514\">Save <span class=\"p\" id=\"2515\">Button To save work after changed</span></h4></li><li style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2516\"><h4 style=\"display: inline;\" id=\"2517\">Insert xslt:value of <span class=\"p\" id=\"2518\">: use to insert xslt value, you can also select prevalue. 3- </span>Insert xslt:variable : <span class=\"p\" id=\"2519\">use to insert xslt variable</span></h4></li></ol></li></ol><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2520\">4- <b id=\"2521\">Insert xslt:if </b>: use to insert condition statement if 5- <b id=\"2522\">Insert xslt:for-each : </b>use for looping purpose</p><ol id=\"l56\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2524\"><h4 style=\"display: inline;\" id=\"2525\">Insert xslt:choose : <span class=\"p\" id=\"2526\">use to insert choose condition statement</span></h4></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2527\"><h4 style=\"display: inline;\" id=\"2528\">Visualize Xslt: <span class=\"p\" id=\"2529\">it‟s a big feature in Umbraco. Using visualizes Xslt you can see what output will be made by your Xslt Code on templates. You can also choose different Content and see what will be output.</span></h4></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2530\"><h4 style=\"display: inline;\" id=\"2531\">Name <span class=\"p\" id=\"2532\">of xslt file</span></h4></li><li style=\"padding-top: 2pt;padding-left: 23pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2533\"><h4 style=\"display: inline;\" id=\"2534\">Skip testing: <span class=\"p\" id=\"2535\">if you checked on Skip Testing, Umbraco will not validate your Xslt code so you will not see any error message.</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2536\"><br id=\"2537\"></p><h4 style=\"padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"2538\"><a name=\"a40\" id=\"2539\">Coding Area:</a></h4></li></ol></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2540\"><p style=\"display: inline;\" id=\"2541\">It starts with xml deceleration and version, it is using xml version 1.0 and encoding utf-8. <span class=\"s19\" id=\"2542\">See at line 1 Image: xsltEnvironment.jpg</span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2543\"><p style=\"display: inline;\" id=\"2544\">You define replacement text yourself at Xslt using DTD<span class=\"s3\" id=\"2545\">14</span>. To use that features you have to have DTD schema knowledge. By default Umbraco inserted one entity.</p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2546\">&lt;!DOCTYPE xsl:stylesheet [&lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2547\">here Enitity nbsp can be used anywhere in xslt. On execution time Umbraco replace nbsp with text „&amp;#x00A0;‟ that we defined at DOCTYPE Entity. <span class=\"s19\" id=\"2548\">See line 2 at Image xsltEnvironment.jpg</span></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2549\"><p style=\"display: inline;\" id=\"2550\">Stylesheet Declaration: You can extend Xslt further more using .NET Class libraries. In some cases Xslt may not enough to fetch data in such cases you can extend Xslt. You need to add your Xslt extension here in order to use it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2551\"><br id=\"2552\"></p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2553\"><a name=\"bookmark41\" id=\"2554\">.NET Class Registration</a></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2555\">Adding Assembly to Umbraco sites:</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2556\"><a name=\"a41\" id=\"2557\">Open ~/config/xsltExtensions.config file, here you add Assembly first.</a></p><p class=\"s76\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2558\">&lt;ext assembly=\"assemblyName\" type=\"assemblyName.namespace.type\" alias=\"custom\"&gt;</p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 14pt;text-align: justify;\" id=\"2559\">Assembly <b id=\"2560\">= location of your files</b></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2561\">Type <b id=\"2562\">= namespace name</b></p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2563\"><a name=\"a42\" id=\"2564\">Alias </a><b id=\"2565\">= you use that alias at Xslt to refer assembly.</b></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2566\"><br id=\"2567\"></p><p class=\"s74\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2568\">Add alias in xslt stylesheet.</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2569\"><a name=\"a43\" id=\"2570\">Xmlns:LocalName = alias from xsltExtesion registration LocalName is used inside Xslt templates</a></p><p class=\"s75\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2571\">Alias = alias that you define when you registered assembly name at</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2572\">~/config/xsltExtesion.config file</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2573\">Now you are ready to use .NET Class library in Xslt.</p><p class=\"s74\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2574\">exclude-result-prefixes=\"Assembly Alias”</p><p class=\"s77\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2575\">Use exclude to prevent Xslt from outputting namespace name.</p><p class=\"s75\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2576\">Note: ~ means your Umbraco root installation directory level.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2577\"><p class=\"s64\" style=\"display: inline;\" id=\"2578\">&lt;<span style=\" color: #2B91AE;\" id=\"2579\">xsl:output </span><span style=\" color: #F00;\" id=\"2580\">method</span>=<span style=\" color: #000;\" id=\"2581\">\"</span>xml<span style=\" color: #000;\" id=\"2582\">\" </span><span style=\" color: #F00;\" id=\"2583\">omit-xml-declaration</span>=<span style=\" color: #000;\" id=\"2584\">\"</span>yes<span style=\" color: #000;\" id=\"2585\">\"</span>/&gt;</p><p class=\"s75\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2586\"><a name=\"a44\" id=\"2587\">It will omit xml deceleration output</a></p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2588\">Let‟s start to work with Umbraco Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2589\"><p class=\"s64\" style=\"display: inline;\" id=\"2590\">&lt;<span style=\" color: #2B91AE;\" id=\"2591\">xsl:param </span><span style=\" color: #F00;\" id=\"2592\">name</span>=<span style=\" color: #000;\" id=\"2593\">\"</span>currentPage<span style=\" color: #000;\" id=\"2594\">\"</span>/&gt;</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2595\"><p style=\"display: inline;\" id=\"2596\">It‟s a very use full param in Umbraco. Umbraco will insert current page data. Current page means page that Templates, Content and Document Type using specific Xslt file in other words currentPage means current page. Value of currentPage depends on article or Content you are visiting now. Let‟s try to output currentPage value and see what will be output.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2597\"><p class=\"s78\" style=\"display: inline;\" id=\"2598\">Template Match</p><p class=\"s78\" style=\"padding-left: 113pt;text-indent: 0pt;line-height: 12pt;text-align: center;\" id=\"2599\">&lt;<span style=\" color: #2B91AE;\" id=\"2600\">xsl:template </span><span style=\" color: #F00;\" id=\"2601\">match</span>=<span style=\" color: #000;\" id=\"2602\">\"</span>/<span style=\" color: #000;\" id=\"2603\">\"</span>&gt;</p><p class=\"s78\" style=\"padding-left: 150pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2604\">&lt;<span style=\" color: #2B91AE;\" id=\"2605\">xsl:copy-of </span><span style=\" color: #F00;\" id=\"2606\">select</span>=<span style=\" color: #000;\" id=\"2607\">\"</span>$currentPage<span style=\" color: #000;\" id=\"2608\">\" </span>/&gt;</p><p class=\"s78\" style=\"padding-left: 114pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2609\">&lt;/<span style=\" color: #2B91AE;\" id=\"2610\">xsl:template</span>&gt;</p><p class=\"s82\" style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"2611\">o <span class=\"s78\" id=\"2612\">All your logic or html output you code between opening and closing tags of &lt;xsl:template&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2613\"><br id=\"2614\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2615\"><span id=\"2616\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_070.png\" id=\"2617\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"2618\">14 <span class=\"s10\" id=\"2619\">Document Type Definition</span></p></li><li style=\"padding-top: 4pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2620\"><p class=\"s78\" style=\"display: inline;\" id=\"2621\">Here we use xsl:copy-of select=‛$currentPage‛ to output current page data.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2622\"><br id=\"2623\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2624\"><p class=\"s78\" style=\"display: inline;\" id=\"2625\">To see outp<span class=\"p\" id=\"2626\">ut value use “visualize Xslt” button at top-right corner of Edit xsl working environment. Make sure you choose first Content using “Choose…” menu. Select Content after press “Visualize XSLT” button. You should see some data if content has some data. See captured screen bellow.</span></p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2627\"><br id=\"2628\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2629\"><span id=\"2630\"><img width=\"544\" height=\"332\" alt=\"image\" src=\"Image_071.png\" id=\"2631\"></span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 27pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"2632\">A B C</p><p class=\"s38\" style=\"text-indent: 0pt;line-height: 13pt;text-align: right;\" id=\"2633\">G</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2634\"><br id=\"2635\"></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2636\">D</p><p class=\"s38\" style=\"padding-top: 9pt;text-indent: 0pt;text-align: right;\" id=\"2637\">E</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2638\"><br id=\"2639\"></p><p class=\"s38\" style=\"padding-top: 12pt;padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"2640\">F</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2641\"><br id=\"2642\"></p><ol id=\"l57\"><ol id=\"l58\"><li style=\"padding-top: 4pt;padding-left: 60pt;text-indent: -18pt;text-align: left;\" id=\"2645\"><p style=\"display: inline;\" id=\"2646\">Title of Content: first time it must be empty.</p></li><li style=\"padding-top: 2pt;padding-left: 60pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2647\"><p style=\"display: inline;\" id=\"2648\">Delete: To delete selected Content. It will not delete content from Content Section, it will only delete from Visualize Xslt service.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2649\"><p style=\"display: inline;\" id=\"2650\">Choose..: you can easily change or alter Content to visualize XSLT and see different output based on XSLT code.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2651\"><p style=\"display: inline;\" id=\"2652\">Visualize Xslt Button: Press to visualize XSLT</p></li><li style=\"padding-top: 2pt;padding-left: 60pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2653\"><p style=\"display: inline;\" id=\"2654\">Encode: Checked if you want to see xml formatted data, uncheck to see only content.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2655\"><p style=\"display: inline;\" id=\"2656\">Output of XSLT: it‟s a result; it‟s an output of your Xslt code, its output currentPage value. Same value will insert into templates.</p></li><li style=\"padding-left: 60pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2657\"><p style=\"display: inline;\" id=\"2658\">Press “x” to close Visualize XSLT service.</p></li></ol></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"2659\"><br id=\"2660\"></p><p class=\"s83 heading2661\" style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2661\"><a name=\"bookmark42\" id=\"2662\" style=\"color: blue;\">Xml File umbraco.config</a></p><div id=\"contentheading2661\" style=\"border: 5px solid rgb(0, 0, 255);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2663\">I mentioned Xslt use to fetch data from xml file. You must wonder about what xml file? Where is that xml file? Why it‟s in xml file? And more questions.</p><ul id=\"l59\"><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2665\"><p style=\"display: inline;\" id=\"2666\">Umbraco generates Umbraco.config temporary file it‟s structured in xml format, every time when you made change on content or document type. Umbraco remind you to publish content. It means, when you made change on content Umbraco made change only on Database. Umbraco does not fetch data from database to present data to end users unless you extend it using other programming language. One reason is it is slow process to fetch data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2667\"><br id=\"2668\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2669\">from database as compared to fetching data from xml file. Database may store in separate machine or separate location in server that need to travel data that cause slower process. Umbraco use great idea generating temporary xml files, that xml files cached in memory. Using temporary xml file it‟s dramatically faster to fetch data using Xslt. To see temporary xml generated file you need to locate directory “App_Data” in website root level and find umbraco.config file. “~/App_data/umbraco.config”</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2670\"><p style=\"display: inline;\" id=\"2671\">Open umbraco.config file using Note pad or other software, if you open with Visual studio it will easy to navigate. See captured screen. Your version can be difference.</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2672\"><br id=\"2673\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2674\"><br id=\"2675\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2676\"><span id=\"2677\"><img width=\"616\" height=\"512\" alt=\"image\" src=\"Image_072.png\" id=\"2678\"></span></p><p style=\"padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"2679\">Image: Umbracoconfig.jpg</p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2680\"><a name=\"bookmark43\" id=\"2681\">Relationship between Document Type and Umbraco.config Xml</a></h3><p class=\"s19\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2682\">See Image: Umbracoconfig.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2683\"><br id=\"2684\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2685\">Line 1: <span class=\"p\" id=\"2686\">xml declaration</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2687\"><br id=\"2688\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2689\">Line 2 to line 10: <span class=\"p\" id=\"2690\">DTD schema information</span></h4><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"2691\">Line 13: <span class=\"p\" id=\"2692\">Umbraco Root Element. All Elements go inside root node. Root is parent element for all.</span></h4><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2693\">Line 14: <span class=\"p\" id=\"2694\">Umbraco starts generating xml elements and attributes based on our document type and content. Did you notice Alias that used in Document type is Elements here?</span></h4><ul id=\"l60\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2696\"><p style=\"display: inline;\" id=\"2697\">GeneralContent is alias of Document Type “General Content”. All attributes inside “GeneralContent” element are inserted by Umbraco automatically.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2698\"><p style=\"display: inline;\" id=\"2699\">Now let‟s look child element of “GeneralContent” Element. Two more element “contentTitle” and “contentBody” also created. If you notice that we added two new property “contentTitle” and “contentBody” in Document Type “General Content”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"2700\"><p style=\"display: inline;\" id=\"2701\">Here in umbraco.config xml these new property structured as child of Document Type element tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2702\"><p style=\"display: inline;\" id=\"2703\">Probably you need time to understand, you have to go back to Document Type, see carefully all alias. Come back to umbraco.config xml file and analyze yourself that helps you to understand better.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2704\"><br id=\"2705\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2706\">Line 14: attributes: Umbraco generates few attributes automatically. Most attributes are self explanatory so easier to understand. I feel some attributes need to describe here for Umbraco New developers.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2707\"><p class=\"s32\" style=\"display: inline;\" id=\"2708\">id <span class=\"s10\" id=\"2709\">: it‟s a node id of content each content has different node id</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2710\"><br id=\"2711\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2712\"><p class=\"s32\" style=\"display: inline;\" id=\"2713\">parentID<span class=\"s10\" id=\"2714\">: node id of parent element. If you notice in Content API chapter we pass parent id -1 value. Means create content at root level in content but actually it means create content as child of root element. Umbraco assign root element id = -1 see line 13 Image: “Umbracoconfig.jpg;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2715\"><br id=\"2716\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2717\"><p class=\"s32\" style=\"display: inline;\" id=\"2718\">level<span class=\"s10\" id=\"2719\">: level of content. 1 means at root level if you create child content it will be level 2</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2720\"><br id=\"2721\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2722\"><p class=\"s32\" style=\"display: inline;\" id=\"2723\">nodeName<span class=\"s10\" id=\"2724\">: It‟s not a contentTitle that you provide on document type content title property. it‟s a title of Content that appear at Content Tree Section.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2725\"><br id=\"2726\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2727\"><p class=\"s32\" style=\"display: inline;\" id=\"2728\">urlName<span class=\"s10\" id=\"2729\">: name of url, content access using urlName. Example /home.aspx will load contain id 1084. See line 14 Image: “Umbracoconfig.jpg;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2730\"><br id=\"2731\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2732\"><p class=\"s32\" style=\"display: inline;\" id=\"2733\">nodeType<span class=\"s10\" id=\"2734\">: node id of Document Type</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2735\"><p class=\"s32\" style=\"display: inline;\" id=\"2736\">How do you know Document Type Node id?</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2737\"><br id=\"2738\"></p><p class=\"s10\" style=\"padding-left: 59pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2739\">It‟s a tricky. Just mouse over Document Type at left bottom of browser , browser show JavaScript link like this “javascript:openNodeType(1054);” number between () is node id of Document Type.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2740\"><p class=\"s10\" style=\"display: inline;\" id=\"2741\"><b id=\"2742\">creatorID</b>: id of users who created content. 0 means administrator and always exist in Umbraco user, it has root level of access<span class=\"s20\" id=\"2743\">15</span>.</p></li></ul></div></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading2380\" class=\"heading2380\"><a name=\"bookmark38\" id=\"2381\" >Template API:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading2380\" ><p  id=\"2382\">Template API can be found using namespace <span class=\"s66\" id=\"2383\">using </span><span class=\"s70\" id=\"2384\">umbraco.cms.businesslogic.template;</span></p><ul id=\"l48\"><li  id=\"2386\"><p  id=\"2387\">Manual work Create Template:</p><ul id=\"l49\"><li  id=\"2389\"><p  id=\"2390\">That manual work will execute <span  id=\"2391\">Template</span>.MakeNew(name, u);</p></li><li  id=\"2392\"><p  id=\"2393\">Name: name of Template</p></li><li  id=\"2394\"><p  id=\"2395\">U is user. Umbraco will automatically assign user when you logged in backend. If you want to create Template using API you should provide valid user, user should have access to create Template otherwise Umbraco will throughout exception.</p></li></ul></li><li  id=\"2396\"><p  id=\"2397\">Manual work Delete</p><ul id=\"l50\"><li  id=\"2399\"><p  id=\"2400\">It will execute Template.Delete() void methods.</p></li><li  id=\"2401\"><p  id=\"2402\">It‟s not possible to restore deleted templates.</p></li></ul></li><li  id=\"2403\"><p  id=\"2404\">Setting master Template:</p><ul id=\"l51\"><li  id=\"2406\"><p  id=\"2407\">Umbraco will execute Template. MasterTemplate = Template.Id;</p></li><li  id=\"2408\"><p  id=\"2409\">Where Template.Id is node id of parent Template.</p></li></ul></li><li  id=\"2410\"><p  id=\"2411\">Save:</p><ul id=\"l52\"><li  id=\"2413\"><p  id=\"2414\">Save button will execute Save() methods to save work. It will effect to Database see captured screen bellow as reference. I will not explain here but its not difficult to understand if you know basic knowledge of Sql server and Database.</p><p  id=\"2415\"><br id=\"2416\"></p><p  id=\"2417\"><span id=\"2418\"><img width=\"616\" height=\"325\" alt=\"image\" src=\"Image_066.png\" id=\"2419\"></span></p><p  id=\"2420\"><br id=\"2421\"></p><p  id=\"2422\">These results are from Database name „umbracodb‟ table „cmsTemplate‟. In your case database name can be deference as compared to mine.</p><p  id=\"2423\"><br id=\"2424\"></p><p class=\"s10\"  id=\"2425\">Notice:</p><p class=\"s10\"  id=\"2426\">I am not using anymore “insert page field” ways to fetch data in templates because if I fetch data using document type alias it will fetch data only if template are checked in Document type allowed templates. If templates are not associated with document type, Data will not be fetching using “Insert Page field” technique so that I am going to continue to fetch data using Xslt and use macro to render content to templates<span class=\"p\" id=\"2427\">.</span></p><p  id=\"2428\"><br id=\"2429\"></p><h1  id=\"2430\"><a name=\"a38\" id=\"2431\">Chapter 06: XSLT</a></h1><p  id=\"2432\"><br id=\"2433\"></p><p  id=\"2434\"><br id=\"2435\"></p><p  id=\"2436\"><span id=\"2437\"><img width=\"330\" height=\"1\" alt=\"image\" src=\"Image_067.png\" id=\"2438\"></span></p><p  id=\"2439\"><br id=\"2440\"></p><h2  id=\"heading2441\" class=\"heading2441\"><a name=\"bookmark39\" id=\"2442\" >XSLT:</a></h2><div id=\"contentheading2441\" ><p  id=\"2443\">Xslt provides fast data fetching processing from xml file. All published content in your site are structured in xml format by Umbraco system. Xslt is the way to transfer xml data to html format, Xslt and Xpath are used together to provide rich service. Xpath is used to move pointer back and forth to crawl content in xml file or to move pointer from one node to another node. My assumption is you already familiar with Xslt and Xpath, I will directly going to show creating and using Xslt.</p><p  id=\"2444\"><br id=\"2445\"></p><h4  id=\"2446\"><a name=\"a39\" id=\"2447\">Using XSLT:</a></h4><p  id=\"2448\"><br id=\"2449\"></p><p  id=\"2450\">Xslt transfer xml to html, using Xslt we are fetching data from xml and passing to template in Umbraco site. We need to create associated macro first, link that macro with Xslt and Use that macro in Template. Here macro works as bridge between Xslt and Template. Umbraco is user friendly so you don‟t have to worry about macro. Each time you check “Create Macro” when you create new Xslt, Umbraco will automatically generate Macro for you.</p><p  id=\"2451\"><br id=\"2452\"></p><p  id=\"2453\"><span id=\"2454\"><img width=\"333\" height=\"495\" alt=\"image\" src=\"Image_068.png\" id=\"2455\"></span></p><p  id=\"2456\">Let‟s starts to work with Xslt Instruction:</p></div></li></ul></li><li  id=\"2457\"><p  id=\"2458\">Click “Developer” in Sections menu. “XSLT Files” menu is available inside Developer menu items. See captured screen: “Xslt.jpg”.</p></li><li  id=\"2459\"><p  id=\"2460\">Right click on “XSLT Files” and Click “Create”. Umbraco open new windows: if you want to follow me provide these information</p><ul id=\"l53\"><li  id=\"2462\"><p  id=\"2463\">Name: “GlobalSetting”</p></li><li  id=\"2464\"><p  id=\"2465\">Choose a Template: Clean</p></li><li  id=\"2466\"><p  id=\"2467\">Checked: Create Macro</p></li></ul></li><li  id=\"2468\"><p  id=\"2469\">Press “Create” see captured screen bellow “XsltCreate.jpg”</p><p  id=\"2470\"><br id=\"2471\"></p><p  id=\"2472\">“GlobalSetting.xslt” file must be created inside XSLT file menu at Developer section.</p><p class=\"s8\"  id=\"2473\">Purpose of creating Globalsetting.xslt is to fetch Site name, site title and logo.</p><p  id=\"2474\"><br id=\"2475\"></p><p  id=\"2476\">Xslt.jpg</p><p  id=\"2477\"><br id=\"2478\"></p><p  id=\"2479\">XsltCreate.jpg</p><h3  id=\"2480\"><a name=\"bookmark40\" id=\"2481\">Xslt working environments:</a></h3><p  id=\"2482\"><br id=\"2483\"></p><p  id=\"2484\"><span id=\"2485\"><img width=\"616\" height=\"467\" alt=\"image\" src=\"Image_069.png\" id=\"2486\"></span></p><p class=\"s38\"  id=\"2487\">1 2 3 4 5 <span class=\"s72\" id=\"2488\">6 </span><span class=\"s73\" id=\"2489\">7</span></p><p class=\"s38\"  id=\"2490\">8</p><p  id=\"2491\"><br id=\"2492\"></p><p class=\"s38\"  id=\"2493\">9</p><p  id=\"2494\"><br id=\"2495\"></p><p class=\"s38\"  id=\"2496\">A</p><p  id=\"2497\"><br id=\"2498\"></p><p  id=\"2499\"><br id=\"2500\"></p><p  id=\"2501\">Image: xsltEnvironment.jpg</p><p  id=\"2502\">Image: xsltEnvironment.jpg</p><p  id=\"2503\"><span  id=\"2504\"> </span></p><p  id=\"2505\"><br id=\"2506\"></p><ol id=\"l54\"><li  id=\"2508\"><p  id=\"2509\">Coding area: here you can type Xslt code.</p><p  id=\"2510\"><br id=\"2511\"></p><ol id=\"l55\"><li  id=\"2513\"><h4  id=\"2514\">Save <span class=\"p\" id=\"2515\">Button To save work after changed</span></h4></li><li  id=\"2516\"><h4  id=\"2517\">Insert xslt:value of <span class=\"p\" id=\"2518\">: use to insert xslt value, you can also select prevalue. 3- </span>Insert xslt:variable : <span class=\"p\" id=\"2519\">use to insert xslt variable</span></h4></li></ol></li></ol><p  id=\"2520\">4- <b id=\"2521\">Insert xslt:if </b>: use to insert condition statement if 5- <b id=\"2522\">Insert xslt:for-each : </b>use for looping purpose</p><ol id=\"l56\"><li  id=\"2524\"><h4  id=\"2525\">Insert xslt:choose : <span class=\"p\" id=\"2526\">use to insert choose condition statement</span></h4></li><li  id=\"2527\"><h4  id=\"2528\">Visualize Xslt: <span class=\"p\" id=\"2529\">it‟s a big feature in Umbraco. Using visualizes Xslt you can see what output will be made by your Xslt Code on templates. You can also choose different Content and see what will be output.</span></h4></li><li  id=\"2530\"><h4  id=\"2531\">Name <span class=\"p\" id=\"2532\">of xslt file</span></h4></li><li  id=\"2533\"><h4  id=\"2534\">Skip testing: <span class=\"p\" id=\"2535\">if you checked on Skip Testing, Umbraco will not validate your Xslt code so you will not see any error message.</span></h4><p  id=\"2536\"><br id=\"2537\"></p><h4  id=\"2538\"><a name=\"a40\" id=\"2539\">Coding Area:</a></h4></li></ol></li><li  id=\"2540\"><p  id=\"2541\">It starts with xml deceleration and version, it is using xml version 1.0 and encoding utf-8. <span class=\"s19\" id=\"2542\">See at line 1 Image: xsltEnvironment.jpg</span></p></li><li  id=\"2543\"><p  id=\"2544\">You define replacement text yourself at Xslt using DTD<span class=\"s3\" id=\"2545\">14</span>. To use that features you have to have DTD schema knowledge. By default Umbraco inserted one entity.</p><p  id=\"2546\">&lt;!DOCTYPE xsl:stylesheet [&lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p  id=\"2547\">here Enitity nbsp can be used anywhere in xslt. On execution time Umbraco replace nbsp with text „&amp;#x00A0;‟ that we defined at DOCTYPE Entity. <span class=\"s19\" id=\"2548\">See line 2 at Image xsltEnvironment.jpg</span></p></li><li  id=\"2549\"><p  id=\"2550\">Stylesheet Declaration: You can extend Xslt further more using .NET Class libraries. In some cases Xslt may not enough to fetch data in such cases you can extend Xslt. You need to add your Xslt extension here in order to use it.</p><p  id=\"2551\"><br id=\"2552\"></p><p class=\"s74\"  id=\"2553\"><a name=\"bookmark41\" id=\"2554\">.NET Class Registration</a></p><p class=\"s74\"  id=\"2555\">Adding Assembly to Umbraco sites:</p><p class=\"s75\"  id=\"2556\"><a name=\"a41\" id=\"2557\">Open ~/config/xsltExtensions.config file, here you add Assembly first.</a></p><p class=\"s76\"  id=\"2558\">&lt;ext assembly=\"assemblyName\" type=\"assemblyName.namespace.type\" alias=\"custom\"&gt;</p><p class=\"s74\"  id=\"2559\">Assembly <b id=\"2560\">= location of your files</b></p><p class=\"s74\"  id=\"2561\">Type <b id=\"2562\">= namespace name</b></p><p class=\"s74\"  id=\"2563\"><a name=\"a42\" id=\"2564\">Alias </a><b id=\"2565\">= you use that alias at Xslt to refer assembly.</b></p><p  id=\"2566\"><br id=\"2567\"></p><p class=\"s74\"  id=\"2568\">Add alias in xslt stylesheet.</p><p class=\"s75\"  id=\"2569\"><a name=\"a43\" id=\"2570\">Xmlns:LocalName = alias from xsltExtesion registration LocalName is used inside Xslt templates</a></p><p class=\"s75\"  id=\"2571\">Alias = alias that you define when you registered assembly name at</p><p class=\"s75\"  id=\"2572\">~/config/xsltExtesion.config file</p><p class=\"s75\"  id=\"2573\">Now you are ready to use .NET Class library in Xslt.</p><p class=\"s74\"  id=\"2574\">exclude-result-prefixes=\"Assembly Alias”</p><p class=\"s77\"  id=\"2575\">Use exclude to prevent Xslt from outputting namespace name.</p><p class=\"s75\"  id=\"2576\">Note: ~ means your Umbraco root installation directory level.</p></li><li  id=\"2577\"><p class=\"s64\"  id=\"2578\">&lt;<span  id=\"2579\">xsl:output </span><span  id=\"2580\">method</span>=<span  id=\"2581\">\"</span>xml<span  id=\"2582\">\" </span><span  id=\"2583\">omit-xml-declaration</span>=<span  id=\"2584\">\"</span>yes<span  id=\"2585\">\"</span>/&gt;</p><p class=\"s75\"  id=\"2586\"><a name=\"a44\" id=\"2587\">It will omit xml deceleration output</a></p><p  id=\"2588\">Let‟s start to work with Umbraco Xslt</p></li><li  id=\"2589\"><p class=\"s64\"  id=\"2590\">&lt;<span  id=\"2591\">xsl:param </span><span  id=\"2592\">name</span>=<span  id=\"2593\">\"</span>currentPage<span  id=\"2594\">\"</span>/&gt;</p></li><li  id=\"2595\"><p  id=\"2596\">It‟s a very use full param in Umbraco. Umbraco will insert current page data. Current page means page that Templates, Content and Document Type using specific Xslt file in other words currentPage means current page. Value of currentPage depends on article or Content you are visiting now. Let‟s try to output currentPage value and see what will be output.</p></li><li  id=\"2597\"><p class=\"s78\"  id=\"2598\">Template Match</p><p class=\"s78\"  id=\"2599\">&lt;<span  id=\"2600\">xsl:template </span><span  id=\"2601\">match</span>=<span  id=\"2602\">\"</span>/<span  id=\"2603\">\"</span>&gt;</p><p class=\"s78\"  id=\"2604\">&lt;<span  id=\"2605\">xsl:copy-of </span><span  id=\"2606\">select</span>=<span  id=\"2607\">\"</span>$currentPage<span  id=\"2608\">\" </span>/&gt;</p><p class=\"s78\"  id=\"2609\">&lt;/<span  id=\"2610\">xsl:template</span>&gt;</p><p class=\"s82\"  id=\"2611\">o <span class=\"s78\" id=\"2612\">All your logic or html output you code between opening and closing tags of &lt;xsl:template&gt;</span></p><p  id=\"2613\"><br id=\"2614\"></p><p  id=\"2615\"><span id=\"2616\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_070.png\" id=\"2617\"></span></p><p class=\"s20\"  id=\"2618\">14 <span class=\"s10\" id=\"2619\">Document Type Definition</span></p></li><li  id=\"2620\"><p class=\"s78\"  id=\"2621\">Here we use xsl:copy-of select=‛$currentPage‛ to output current page data.</p><p  id=\"2622\"><br id=\"2623\"></p></li><li  id=\"2624\"><p class=\"s78\"  id=\"2625\">To see outp<span class=\"p\" id=\"2626\">ut value use “visualize Xslt” button at top-right corner of Edit xsl working environment. Make sure you choose first Content using “Choose…” menu. Select Content after press “Visualize XSLT” button. You should see some data if content has some data. See captured screen bellow.</span></p></li></ul><p  id=\"2627\"><br id=\"2628\"></p><p  id=\"2629\"><span id=\"2630\"><img width=\"544\" height=\"332\" alt=\"image\" src=\"Image_071.png\" id=\"2631\"></span></p><p class=\"s38\"  id=\"2632\">A B C</p><p class=\"s38\"  id=\"2633\">G</p><p  id=\"2634\"><br id=\"2635\"></p><p class=\"s38\"  id=\"2636\">D</p><p class=\"s38\"  id=\"2637\">E</p><p  id=\"2638\"><br id=\"2639\"></p><p class=\"s38\"  id=\"2640\">F</p><p  id=\"2641\"><br id=\"2642\"></p><ol id=\"l57\"><ol id=\"l58\"><li  id=\"2645\"><p  id=\"2646\">Title of Content: first time it must be empty.</p></li><li  id=\"2647\"><p  id=\"2648\">Delete: To delete selected Content. It will not delete content from Content Section, it will only delete from Visualize Xslt service.</p></li><li  id=\"2649\"><p  id=\"2650\">Choose..: you can easily change or alter Content to visualize XSLT and see different output based on XSLT code.</p></li><li  id=\"2651\"><p  id=\"2652\">Visualize Xslt Button: Press to visualize XSLT</p></li><li  id=\"2653\"><p  id=\"2654\">Encode: Checked if you want to see xml formatted data, uncheck to see only content.</p></li><li  id=\"2655\"><p  id=\"2656\">Output of XSLT: it‟s a result; it‟s an output of your Xslt code, its output currentPage value. Same value will insert into templates.</p></li><li  id=\"2657\"><p  id=\"2658\">Press “x” to close Visualize XSLT service.</p></li></ol></ol><p  id=\"2659\"><br id=\"2660\"></p><p class=\"s83 heading2661\"  id=\"heading2661\"><a name=\"bookmark42\" id=\"2662\" >Xml File umbraco.config</a></p><div id=\"contentheading2661\" ><p  id=\"2663\">I mentioned Xslt use to fetch data from xml file. You must wonder about what xml file? Where is that xml file? Why it‟s in xml file? And more questions.</p><ul id=\"l59\"><li  id=\"2665\"><p  id=\"2666\">Umbraco generates Umbraco.config temporary file it‟s structured in xml format, every time when you made change on content or document type. Umbraco remind you to publish content. It means, when you made change on content Umbraco made change only on Database. Umbraco does not fetch data from database to present data to end users unless you extend it using other programming language. One reason is it is slow process to fetch data</p><p  id=\"2667\"><br id=\"2668\"></p><p  id=\"2669\">from database as compared to fetching data from xml file. Database may store in separate machine or separate location in server that need to travel data that cause slower process. Umbraco use great idea generating temporary xml files, that xml files cached in memory. Using temporary xml file it‟s dramatically faster to fetch data using Xslt. To see temporary xml generated file you need to locate directory “App_Data” in website root level and find umbraco.config file. “~/App_data/umbraco.config”</p></li><li  id=\"2670\"><p  id=\"2671\">Open umbraco.config file using Note pad or other software, if you open with Visual studio it will easy to navigate. See captured screen. Your version can be difference.</p></li></ul><p  id=\"2672\"><br id=\"2673\"></p><p  id=\"2674\"><br id=\"2675\"></p><p  id=\"2676\"><span id=\"2677\"><img width=\"616\" height=\"512\" alt=\"image\" src=\"Image_072.png\" id=\"2678\"></span></p><p  id=\"2679\">Image: Umbracoconfig.jpg</p><h3  id=\"2680\"><a name=\"bookmark43\" id=\"2681\">Relationship between Document Type and Umbraco.config Xml</a></h3><p class=\"s19\"  id=\"2682\">See Image: Umbracoconfig.jpg</p><p  id=\"2683\"><br id=\"2684\"></p><h4  id=\"2685\">Line 1: <span class=\"p\" id=\"2686\">xml declaration</span></h4><p  id=\"2687\"><br id=\"2688\"></p><h4  id=\"2689\">Line 2 to line 10: <span class=\"p\" id=\"2690\">DTD schema information</span></h4><h4  id=\"2691\">Line 13: <span class=\"p\" id=\"2692\">Umbraco Root Element. All Elements go inside root node. Root is parent element for all.</span></h4><h4  id=\"2693\">Line 14: <span class=\"p\" id=\"2694\">Umbraco starts generating xml elements and attributes based on our document type and content. Did you notice Alias that used in Document type is Elements here?</span></h4><ul id=\"l60\"><li  id=\"2696\"><p  id=\"2697\">GeneralContent is alias of Document Type “General Content”. All attributes inside “GeneralContent” element are inserted by Umbraco automatically.</p></li><li  id=\"2698\"><p  id=\"2699\">Now let‟s look child element of “GeneralContent” Element. Two more element “contentTitle” and “contentBody” also created. If you notice that we added two new property “contentTitle” and “contentBody” in Document Type “General Content”.</p></li><li  id=\"2700\"><p  id=\"2701\">Here in umbraco.config xml these new property structured as child of Document Type element tags.</p></li><li  id=\"2702\"><p  id=\"2703\">Probably you need time to understand, you have to go back to Document Type, see carefully all alias. Come back to umbraco.config xml file and analyze yourself that helps you to understand better.</p><p  id=\"2704\"><br id=\"2705\"></p><p  id=\"2706\">Line 14: attributes: Umbraco generates few attributes automatically. Most attributes are self explanatory so easier to understand. I feel some attributes need to describe here for Umbraco New developers.</p></li><li  id=\"2707\"><p class=\"s32\"  id=\"2708\">id <span class=\"s10\" id=\"2709\">: it‟s a node id of content each content has different node id</span></p><p  id=\"2710\"><br id=\"2711\"></p></li><li  id=\"2712\"><p class=\"s32\"  id=\"2713\">parentID<span class=\"s10\" id=\"2714\">: node id of parent element. If you notice in Content API chapter we pass parent id -1 value. Means create content at root level in content but actually it means create content as child of root element. Umbraco assign root element id = -1 see line 13 Image: “Umbracoconfig.jpg;</span></p><p  id=\"2715\"><br id=\"2716\"></p></li><li  id=\"2717\"><p class=\"s32\"  id=\"2718\">level<span class=\"s10\" id=\"2719\">: level of content. 1 means at root level if you create child content it will be level 2</span></p><p  id=\"2720\"><br id=\"2721\"></p></li><li  id=\"2722\"><p class=\"s32\"  id=\"2723\">nodeName<span class=\"s10\" id=\"2724\">: It‟s not a contentTitle that you provide on document type content title property. it‟s a title of Content that appear at Content Tree Section.</span></p><p  id=\"2725\"><br id=\"2726\"></p></li><li  id=\"2727\"><p class=\"s32\"  id=\"2728\">urlName<span class=\"s10\" id=\"2729\">: name of url, content access using urlName. Example /home.aspx will load contain id 1084. See line 14 Image: “Umbracoconfig.jpg;</span></p><p  id=\"2730\"><br id=\"2731\"></p></li><li  id=\"2732\"><p class=\"s32\"  id=\"2733\">nodeType<span class=\"s10\" id=\"2734\">: node id of Document Type</span></p></li><li  id=\"2735\"><p class=\"s32\"  id=\"2736\">How do you know Document Type Node id?</p><p  id=\"2737\"><br id=\"2738\"></p><p class=\"s10\"  id=\"2739\">It‟s a tricky. Just mouse over Document Type at left bottom of browser , browser show JavaScript link like this “javascript:openNodeType(1054);” number between () is node id of Document Type.</p></li><li  id=\"2740\"><p class=\"s10\"  id=\"2741\"><b id=\"2742\">creatorID</b>: id of users who created content. 0 means administrator and always exist in Umbraco user, it has root level of access<span class=\"s20\" id=\"2743\">15</span>.</p></li></ul></div></div>","sub":[]}]},{"pageId":"74","pageLevel":0,"pageOrder":"74","pageParentId":"-1","pageName":"XSLT:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2441\" class=\"heading2441\"><a name=\"bookmark39\" id=\"2442\" style=\"color: lime;\">XSLT:</a></h2>","pageContent":"<div id=\"contentheading2441\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2443\">Xslt provides fast data fetching processing from xml file. All published content in your site are structured in xml format by Umbraco system. Xslt is the way to transfer xml data to html format, Xslt and Xpath are used together to provide rich service. Xpath is used to move pointer back and forth to crawl content in xml file or to move pointer from one node to another node. My assumption is you already familiar with Xslt and Xpath, I will directly going to show creating and using Xslt.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2444\"><br id=\"2445\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2446\"><a name=\"a39\" id=\"2447\">Using XSLT:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2448\"><br id=\"2449\"></p><p style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2450\">Xslt transfer xml to html, using Xslt we are fetching data from xml and passing to template in Umbraco site. We need to create associated macro first, link that macro with Xslt and Use that macro in Template. Here macro works as bridge between Xslt and Template. Umbraco is user friendly so you don‟t have to worry about macro. Each time you check “Create Macro” when you create new Xslt, Umbraco will automatically generate Macro for you.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2451\"><br id=\"2452\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2453\"><span id=\"2454\"><img width=\"333\" height=\"495\" alt=\"image\" src=\"Image_068.png\" id=\"2455\"></span></p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"2456\">Let‟s starts to work with Xslt Instruction:</p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading2441\" class=\"heading2441\"><a name=\"bookmark39\" id=\"2442\" >XSLT:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading2441\" ><p  id=\"2443\">Xslt provides fast data fetching processing from xml file. All published content in your site are structured in xml format by Umbraco system. Xslt is the way to transfer xml data to html format, Xslt and Xpath are used together to provide rich service. Xpath is used to move pointer back and forth to crawl content in xml file or to move pointer from one node to another node. My assumption is you already familiar with Xslt and Xpath, I will directly going to show creating and using Xslt.</p><p  id=\"2444\"><br id=\"2445\"></p><h4  id=\"2446\"><a name=\"a39\" id=\"2447\">Using XSLT:</a></h4><p  id=\"2448\"><br id=\"2449\"></p><p  id=\"2450\">Xslt transfer xml to html, using Xslt we are fetching data from xml and passing to template in Umbraco site. We need to create associated macro first, link that macro with Xslt and Use that macro in Template. Here macro works as bridge between Xslt and Template. Umbraco is user friendly so you don‟t have to worry about macro. Each time you check “Create Macro” when you create new Xslt, Umbraco will automatically generate Macro for you.</p><p  id=\"2451\"><br id=\"2452\"></p><p  id=\"2453\"><span id=\"2454\"><img width=\"333\" height=\"495\" alt=\"image\" src=\"Image_068.png\" id=\"2455\"></span></p><p  id=\"2456\">Let‟s starts to work with Xslt Instruction:</p></div>","sub":[{"pageId":"81","pageLevel":2,"pageOrder":"81","pageParentId":"74","pageName":"Xml File umbraco.config","endPointPath":"","pageHeading":"<p class=\"s83 heading2661\" style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading2661\"><a name=\"bookmark42\" id=\"2662\" style=\"color: blue;\">Xml File umbraco.config</a></p>","pageContent":"<div id=\"contentheading2661\" style=\"border: 5px solid rgb(0, 0, 255);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2663\">I mentioned Xslt use to fetch data from xml file. You must wonder about what xml file? Where is that xml file? Why it‟s in xml file? And more questions.</p><ul id=\"l59\"><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2665\"><p style=\"display: inline;\" id=\"2666\">Umbraco generates Umbraco.config temporary file it‟s structured in xml format, every time when you made change on content or document type. Umbraco remind you to publish content. It means, when you made change on content Umbraco made change only on Database. Umbraco does not fetch data from database to present data to end users unless you extend it using other programming language. One reason is it is slow process to fetch data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2667\"><br id=\"2668\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2669\">from database as compared to fetching data from xml file. Database may store in separate machine or separate location in server that need to travel data that cause slower process. Umbraco use great idea generating temporary xml files, that xml files cached in memory. Using temporary xml file it‟s dramatically faster to fetch data using Xslt. To see temporary xml generated file you need to locate directory “App_Data” in website root level and find umbraco.config file. “~/App_data/umbraco.config”</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2670\"><p style=\"display: inline;\" id=\"2671\">Open umbraco.config file using Note pad or other software, if you open with Visual studio it will easy to navigate. See captured screen. Your version can be difference.</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2672\"><br id=\"2673\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2674\"><br id=\"2675\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2676\"><span id=\"2677\"><img width=\"616\" height=\"512\" alt=\"image\" src=\"Image_072.png\" id=\"2678\"></span></p><p style=\"padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"2679\">Image: Umbracoconfig.jpg</p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2680\"><a name=\"bookmark43\" id=\"2681\">Relationship between Document Type and Umbraco.config Xml</a></h3><p class=\"s19\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2682\">See Image: Umbracoconfig.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2683\"><br id=\"2684\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2685\">Line 1: <span class=\"p\" id=\"2686\">xml declaration</span></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"2687\"><br id=\"2688\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2689\">Line 2 to line 10: <span class=\"p\" id=\"2690\">DTD schema information</span></h4><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"2691\">Line 13: <span class=\"p\" id=\"2692\">Umbraco Root Element. All Elements go inside root node. Root is parent element for all.</span></h4><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2693\">Line 14: <span class=\"p\" id=\"2694\">Umbraco starts generating xml elements and attributes based on our document type and content. Did you notice Alias that used in Document type is Elements here?</span></h4><ul id=\"l60\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2696\"><p style=\"display: inline;\" id=\"2697\">GeneralContent is alias of Document Type “General Content”. All attributes inside “GeneralContent” element are inserted by Umbraco automatically.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2698\"><p style=\"display: inline;\" id=\"2699\">Now let‟s look child element of “GeneralContent” Element. Two more element “contentTitle” and “contentBody” also created. If you notice that we added two new property “contentTitle” and “contentBody” in Document Type “General Content”.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"2700\"><p style=\"display: inline;\" id=\"2701\">Here in umbraco.config xml these new property structured as child of Document Type element tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2702\"><p style=\"display: inline;\" id=\"2703\">Probably you need time to understand, you have to go back to Document Type, see carefully all alias. Come back to umbraco.config xml file and analyze yourself that helps you to understand better.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2704\"><br id=\"2705\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2706\">Line 14: attributes: Umbraco generates few attributes automatically. Most attributes are self explanatory so easier to understand. I feel some attributes need to describe here for Umbraco New developers.</p></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2707\"><p class=\"s32\" style=\"display: inline;\" id=\"2708\">id <span class=\"s10\" id=\"2709\">: it‟s a node id of content each content has different node id</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2710\"><br id=\"2711\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2712\"><p class=\"s32\" style=\"display: inline;\" id=\"2713\">parentID<span class=\"s10\" id=\"2714\">: node id of parent element. If you notice in Content API chapter we pass parent id -1 value. Means create content at root level in content but actually it means create content as child of root element. Umbraco assign root element id = -1 see line 13 Image: “Umbracoconfig.jpg;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2715\"><br id=\"2716\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2717\"><p class=\"s32\" style=\"display: inline;\" id=\"2718\">level<span class=\"s10\" id=\"2719\">: level of content. 1 means at root level if you create child content it will be level 2</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2720\"><br id=\"2721\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2722\"><p class=\"s32\" style=\"display: inline;\" id=\"2723\">nodeName<span class=\"s10\" id=\"2724\">: It‟s not a contentTitle that you provide on document type content title property. it‟s a title of Content that appear at Content Tree Section.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2725\"><br id=\"2726\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"2727\"><p class=\"s32\" style=\"display: inline;\" id=\"2728\">urlName<span class=\"s10\" id=\"2729\">: name of url, content access using urlName. Example /home.aspx will load contain id 1084. See line 14 Image: “Umbracoconfig.jpg;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2730\"><br id=\"2731\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2732\"><p class=\"s32\" style=\"display: inline;\" id=\"2733\">nodeType<span class=\"s10\" id=\"2734\">: node id of Document Type</span></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2735\"><p class=\"s32\" style=\"display: inline;\" id=\"2736\">How do you know Document Type Node id?</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2737\"><br id=\"2738\"></p><p class=\"s10\" style=\"padding-left: 59pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2739\">It‟s a tricky. Just mouse over Document Type at left bottom of browser , browser show JavaScript link like this “javascript:openNodeType(1054);” number between () is node id of Document Type.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"2740\"><p class=\"s10\" style=\"display: inline;\" id=\"2741\"><b id=\"2742\">creatorID</b>: id of users who created content. 0 means administrator and always exist in Umbraco user, it has root level of access<span class=\"s20\" id=\"2743\">15</span>.</p></li></ul></div>","templateType":"article:reference","pageStyleReducedHeading":"<p class=\"s83 heading2661\"  id=\"heading2661\"><a name=\"bookmark42\" id=\"2662\" >Xml File umbraco.config</a></p>","pageStyleReducedContent":"<div id=\"contentheading2661\" ><p  id=\"2663\">I mentioned Xslt use to fetch data from xml file. You must wonder about what xml file? Where is that xml file? Why it‟s in xml file? And more questions.</p><ul id=\"l59\"><li  id=\"2665\"><p  id=\"2666\">Umbraco generates Umbraco.config temporary file it‟s structured in xml format, every time when you made change on content or document type. Umbraco remind you to publish content. It means, when you made change on content Umbraco made change only on Database. Umbraco does not fetch data from database to present data to end users unless you extend it using other programming language. One reason is it is slow process to fetch data</p><p  id=\"2667\"><br id=\"2668\"></p><p  id=\"2669\">from database as compared to fetching data from xml file. Database may store in separate machine or separate location in server that need to travel data that cause slower process. Umbraco use great idea generating temporary xml files, that xml files cached in memory. Using temporary xml file it‟s dramatically faster to fetch data using Xslt. To see temporary xml generated file you need to locate directory “App_Data” in website root level and find umbraco.config file. “~/App_data/umbraco.config”</p></li><li  id=\"2670\"><p  id=\"2671\">Open umbraco.config file using Note pad or other software, if you open with Visual studio it will easy to navigate. See captured screen. Your version can be difference.</p></li></ul><p  id=\"2672\"><br id=\"2673\"></p><p  id=\"2674\"><br id=\"2675\"></p><p  id=\"2676\"><span id=\"2677\"><img width=\"616\" height=\"512\" alt=\"image\" src=\"Image_072.png\" id=\"2678\"></span></p><p  id=\"2679\">Image: Umbracoconfig.jpg</p><h3  id=\"2680\"><a name=\"bookmark43\" id=\"2681\">Relationship between Document Type and Umbraco.config Xml</a></h3><p class=\"s19\"  id=\"2682\">See Image: Umbracoconfig.jpg</p><p  id=\"2683\"><br id=\"2684\"></p><h4  id=\"2685\">Line 1: <span class=\"p\" id=\"2686\">xml declaration</span></h4><p  id=\"2687\"><br id=\"2688\"></p><h4  id=\"2689\">Line 2 to line 10: <span class=\"p\" id=\"2690\">DTD schema information</span></h4><h4  id=\"2691\">Line 13: <span class=\"p\" id=\"2692\">Umbraco Root Element. All Elements go inside root node. Root is parent element for all.</span></h4><h4  id=\"2693\">Line 14: <span class=\"p\" id=\"2694\">Umbraco starts generating xml elements and attributes based on our document type and content. Did you notice Alias that used in Document type is Elements here?</span></h4><ul id=\"l60\"><li  id=\"2696\"><p  id=\"2697\">GeneralContent is alias of Document Type “General Content”. All attributes inside “GeneralContent” element are inserted by Umbraco automatically.</p></li><li  id=\"2698\"><p  id=\"2699\">Now let‟s look child element of “GeneralContent” Element. Two more element “contentTitle” and “contentBody” also created. If you notice that we added two new property “contentTitle” and “contentBody” in Document Type “General Content”.</p></li><li  id=\"2700\"><p  id=\"2701\">Here in umbraco.config xml these new property structured as child of Document Type element tags.</p></li><li  id=\"2702\"><p  id=\"2703\">Probably you need time to understand, you have to go back to Document Type, see carefully all alias. Come back to umbraco.config xml file and analyze yourself that helps you to understand better.</p><p  id=\"2704\"><br id=\"2705\"></p><p  id=\"2706\">Line 14: attributes: Umbraco generates few attributes automatically. Most attributes are self explanatory so easier to understand. I feel some attributes need to describe here for Umbraco New developers.</p></li><li  id=\"2707\"><p class=\"s32\"  id=\"2708\">id <span class=\"s10\" id=\"2709\">: it‟s a node id of content each content has different node id</span></p><p  id=\"2710\"><br id=\"2711\"></p></li><li  id=\"2712\"><p class=\"s32\"  id=\"2713\">parentID<span class=\"s10\" id=\"2714\">: node id of parent element. If you notice in Content API chapter we pass parent id -1 value. Means create content at root level in content but actually it means create content as child of root element. Umbraco assign root element id = -1 see line 13 Image: “Umbracoconfig.jpg;</span></p><p  id=\"2715\"><br id=\"2716\"></p></li><li  id=\"2717\"><p class=\"s32\"  id=\"2718\">level<span class=\"s10\" id=\"2719\">: level of content. 1 means at root level if you create child content it will be level 2</span></p><p  id=\"2720\"><br id=\"2721\"></p></li><li  id=\"2722\"><p class=\"s32\"  id=\"2723\">nodeName<span class=\"s10\" id=\"2724\">: It‟s not a contentTitle that you provide on document type content title property. it‟s a title of Content that appear at Content Tree Section.</span></p><p  id=\"2725\"><br id=\"2726\"></p></li><li  id=\"2727\"><p class=\"s32\"  id=\"2728\">urlName<span class=\"s10\" id=\"2729\">: name of url, content access using urlName. Example /home.aspx will load contain id 1084. See line 14 Image: “Umbracoconfig.jpg;</span></p><p  id=\"2730\"><br id=\"2731\"></p></li><li  id=\"2732\"><p class=\"s32\"  id=\"2733\">nodeType<span class=\"s10\" id=\"2734\">: node id of Document Type</span></p></li><li  id=\"2735\"><p class=\"s32\"  id=\"2736\">How do you know Document Type Node id?</p><p  id=\"2737\"><br id=\"2738\"></p><p class=\"s10\"  id=\"2739\">It‟s a tricky. Just mouse over Document Type at left bottom of browser , browser show JavaScript link like this “javascript:openNodeType(1054);” number between () is node id of Document Type.</p></li><li  id=\"2740\"><p class=\"s10\"  id=\"2741\"><b id=\"2742\">creatorID</b>: id of users who created content. 0 means administrator and always exist in Umbraco user, it has root level of access<span class=\"s20\" id=\"2743\">15</span>.</p></li></ul></div>","sub":[]},{"pageId":"82","pageLevel":1,"pageOrder":"82","pageParentId":"74","pageName":"Fetching data:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 10pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2744\" class=\"heading2744\"><a name=\"bookmark44\" id=\"2745\" style=\"color: green;\">Fetching data:</a></h3>","pageContent":"<div id=\"contentheading2744\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"2746\">Let‟s take real example for Semic provider site and be clear about use of Xslt. Semic provider has logo, title and slogan as global items. For global items<span class=\"s3\" id=\"2747\">16</span>, we need to fetch value from siteName, slogan and logo element <span class=\"s19\" id=\"2748\">see line at 26, 27 and 28 respectively at Image:Umbracoconfig.jpg”</span>. Open GlobalSetting.xslt file and add highlighted code into GlobalSetting.xslt. See captured screen and Save Xslt.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2749\"><br id=\"2750\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"2751\"><span id=\"2752\"><img width=\"616\" height=\"342\" alt=\"image\" src=\"Image_073.jpg\" id=\"2753\"></span></p><p style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2754\">All html tags are not important, only important is highlighted line. Description:</p><ul id=\"l61\"><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2756\"><p class=\"s78\" style=\"display: inline;\" id=\"2757\">&lt;<span style=\" color: #800000;\" id=\"2758\">xsl</span>:<span style=\" color: #800000;\" id=\"2759\">variable </span><span style=\" color: #F00;\" id=\"2760\">name</span>=\"items\" <span style=\" color: #F00;\" id=\"2761\">select</span>=\"$currentPage/ancestor-or-self::*</p><p class=\"s78\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2762\">/WebSiteGlobalSettings \"/&gt;</p><ul id=\"l62\"><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: justify;\" id=\"2764\"><p class=\"s81\" style=\"display: inline;\" id=\"2765\">Here $ represent variable in XSLT. variable name items will hold data from ‚WebSitesGlobalSettings‛ Element see line at 25 Image: <span class=\"s10\" id=\"2766\">“Umbracoconfig.jpg” page no: xx</span></p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2767\"><p class=\"s81\" style=\"display: inline;\" id=\"2768\">currentPage will select current page.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2769\"><p class=\"s81\" style=\"display: inline;\" id=\"2770\">ancestor-or-self:: move pointer back until root level.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2771\"><p class=\"s81\" style=\"display: inline;\" id=\"2772\">* select all that match</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2773\"><p class=\"s81\" style=\"display: inline;\" id=\"2774\">/ move one step further to child element.</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2775\"><p class=\"s81\" style=\"display: inline;\" id=\"2776\">WebsitesGlobalSettings is element name.</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2777\"><p class=\"s78\" style=\"display: inline;\" id=\"2778\">&lt;<span style=\" color: #800000;\" id=\"2779\">xsl</span>:<span style=\" color: #800000;\" id=\"2780\">variable </span><span style=\" color: #F00;\" id=\"2781\">name</span>=\"logo\" <span style=\" color: #F00;\" id=\"2782\">select</span>=\"$items/logo\"/&gt;</p><ul id=\"l63\"><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2784\"><p class=\"s81\" style=\"display: inline;\" id=\"2785\">$items/logo will select logo element and hold data</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2786\"><p class=\"s78\" style=\"display: inline;\" id=\"2787\">&lt;<span style=\" color: #800000;\" id=\"2788\">xsl</span>:<span style=\" color: #800000;\" id=\"2789\">value-of </span><span style=\" color: #F00;\" id=\"2790\">select</span>=\"$items/slogan\"/&gt;</p><ul id=\"l64\"><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2792\"><p class=\"s81\" style=\"display: inline;\" id=\"2793\">$items/slogan: select value from slogan element</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"2794\"><p class=\"s78\" style=\"display: inline;\" id=\"2795\">&lt;<span style=\" color: #800000;\" id=\"2796\">img </span><span style=\" color: #F00;\" id=\"2797\">src</span>=\"{$logo}\" <span style=\" color: #F00;\" id=\"2798\">alt</span>=\"semic provider logo; visual identity\"/&gt;</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: justify;\" id=\"2799\"><p class=\"s78\" style=\"display: inline;\" id=\"2800\">Insert value of logo variable. Using $ and followed by name means use of variable, encapsulated data with {}. {} means code inside {} will executed on server by Umbraco CMS.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2801\"><br id=\"2802\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2803\"><span id=\"2804\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_074.png\" id=\"2805\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2806\">15 <span class=\"s10\" id=\"2807\">Root level of access: access that can CRUD ; C-create, R-read, U-update, D-delete</span></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"2808\">16 <span class=\"s10\" id=\"2809\">Items those are common for all. For example logo, website name.</span></p><p class=\"s78\" style=\"padding-top: 3pt;padding-left: 31pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2810\"><span class=\"s10\" id=\"2811\">- </span>&lt;<span style=\" color: #800000;\" id=\"2812\">xsl</span>:<span style=\" color: #800000;\" id=\"2813\">value-of </span><span style=\" color: #F00;\" id=\"2814\">select</span>=\"$items/siteName\"/&gt;</p><p class=\"s85\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"2815\">o <span class=\"s81\" id=\"2816\">This line will select value of siteName element and output.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2817\"><br id=\"2818\"></p><p class=\"s41\" style=\"padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2819\"><a name=\"bookmark45\" id=\"2820\">Note: alt tag in img element is not compulsory but I strongly recommend having alt tag. It will help for web accessibility and SEO.</a></p><p class=\"s86\" style=\"padding-top: 9pt;padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2821\"><a name=\"a45\" id=\"2822\">Xslt for Navigation:</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2823\"><br id=\"2824\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"2825\"><span id=\"2826\"><img width=\"581\" height=\"261\" alt=\"image\" src=\"Image_075.png\" id=\"2827\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2828\"><br id=\"2829\"></p><p style=\"padding-left: 13pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2830\">This is another Xslt for Navigation bar. Create new Xslt. Provide name navigation and Checked Create Macro. Copy highlighted text. Note that html is not that much important these are for CSS and layout purpose.</p><p style=\"padding-left: 13pt;text-indent: 0pt;text-align: justify;\" id=\"2831\">Description:</p><ul id=\"l65\"><li style=\"padding-top: 1pt;padding-left: 49pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"2833\"><p style=\"display: inline;\" id=\"2834\">[string(useInNavigation) = '1'] condition match means select all GeneralContent Element from ~/App_Data/umbraco.config file where useInNavigation checked boxed should be checked. Remember that we added new property at “General Content” Document Type. If editor wants to use general content in navigation bar. Editor should Checked mark on “useInNavigation” when s/he creates content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2835\"><br id=\"2836\"></p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"2837\"><p style=\"display: inline;\" id=\"2838\">Nice Url: umbraco.library:NiceUrl(@id)</p><ul id=\"l66\"><li style=\"padding-top: 11pt;padding-left: 85pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"2840\"><p style=\"display: inline;\" id=\"2841\">NiceUrl(@node id) will generate user friendly nice Url. Remember that urlName are used example: home.aspx</p></li><li style=\"padding-top: 11pt;padding-left: 85pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2842\"><p style=\"display: inline;\" id=\"2843\">@id: it‟s an attribute of selected element at ~/App_Data/umbraco.config xml file. In my case it‟s a node id of content based on “General Content” document type. @ sysmbole represent get value from attributes. See Xslt, Xpath and xml for details.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2844\"><br id=\"2845\"></p><ul id=\"l67\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2847\"><p class=\"s56\" style=\"display: inline;\" id=\"2848\">&lt;<span class=\"p\" id=\"2849\">xsl:value-of select</span>=<span class=\"p\" id=\"2850\">\"contentTitle\"</span>/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2851\"><br id=\"2852\"></p><ul id=\"l68\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2854\"><p class=\"s56\" style=\"display: inline;\" id=\"2855\">Select value from contentTitle element</p></li></ul></li><li style=\"padding-top: 9pt;padding-left: 44pt;text-indent: -21pt;text-align: left;\" id=\"2856\"><p class=\"s56\" style=\"display: inline;\" id=\"2857\">&lt;<span class=\"p\" id=\"2858\">xsl:for-each select</span>=<span class=\"p\" id=\"2859\">\"$items\"</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2860\"><br id=\"2861\"></p><ul id=\"l69\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"2863\"><p class=\"s56\" style=\"display: inline;\" id=\"2864\">Used to loop all existing content</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2865\"><br id=\"2866\"></p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2867\"><p class=\"s56\" style=\"display: inline;\" id=\"2868\">&lt;<span class=\"p\" id=\"2869\">xsl:if test</span>=<span class=\"p\" id=\"2870\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2871\"><br id=\"2872\"></p><ul id=\"l70\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 106%;text-align: left;\" id=\"2874\"><p class=\"s56\" style=\"display: inline;\" id=\"2875\">Here &amp;gt; means greater than. Test: means execute block of code only if result is more than zero. If items are less than zero no need to loop items.</p></li></ul></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"2876\"><br id=\"2877\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2878\"><a name=\"a46\" id=\"2879\">Note: there is missing code in captured screen means missing code are generated by Umbraco Default and removed from here to reduce space.</a></h4><p class=\"s86\" style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2880\"><a name=\"bookmark46\" id=\"2881\">New Xslt file for News List items.</a></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"2882\">It will be exercise for you I create NewsList.xslt file, here I just include captured screen without description try to describe yourself. It‟s not big but need to knowledge of Xpath. Main purpose of this Xslt is to fetch content from 2<span class=\"s3\" id=\"2883\">nd </span>level menu contain. It will fetch News articles from ~/App_data/umbraco.config xml file. Captured screen are bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2884\"><br id=\"2885\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2886\"><span id=\"2887\"><img width=\"475\" height=\"383\" alt=\"image\" src=\"Image_076.jpg\" id=\"2888\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2889\"><br id=\"2890\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2891\"><a name=\"a47\" id=\"2892\">Chapter 07: Macro</a></h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"2893\"><br id=\"2894\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2895\"><br id=\"2896\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2897\"><span id=\"2898\"><img width=\"350\" height=\"1\" alt=\"image\" src=\"Image_077.png\" id=\"2899\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2900\"><br id=\"2901\"></p><h2 style=\"padding-top: 13pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2902\" class=\"heading2902\"><a name=\"bookmark47\" id=\"2903\" style=\"color: lime;\">Macro:</a></h2><div id=\"contentheading2902\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2904\">Marco is use as bridge between xslt, user control or other languages and templates, using macro we can render content or data from data source to templates and templates are responsible to present data to end users. Macro is very important part in Umbraco.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2905\"><span id=\"2906\"><img width=\"616\" height=\"437\" alt=\"image\" src=\"Image_078.png\" id=\"2907\"></span></p><h3 style=\"padding-top: 10pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" style=\"color: green;\">Macro working Environments:</a></h3><div id=\"contentheading2908\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s45\" style=\"padding-top: 8pt;padding-left: 119pt;text-indent: 0pt;text-align: left;\" id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2912\"><br id=\"2913\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2914\">C</p><p style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2915\">D</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2916\"><br id=\"2917\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2918\">E</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2919\"><br id=\"2920\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2921\">F</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2922\"><br id=\"2923\"></p><p style=\"padding-top: 10pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2924\">G</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2925\"><br id=\"2926\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2927\">H</p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: center;\" id=\"2928\">I</p><p style=\"padding-top: 4pt;padding-left: 314pt;text-indent: 0pt;text-align: left;\" id=\"2929\">J</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2930\"><br id=\"2931\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"2932\">K</p><p style=\"padding-top: 6pt;padding-left: 144pt;text-indent: 0pt;text-align: center;\" id=\"2933\">L</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2934\"><br id=\"2935\"></p><p style=\"padding-top: 4pt;padding-left: 145pt;text-indent: 0pt;text-align: center;\" id=\"2936\">M</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2937\"><br id=\"2938\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2939\"><br id=\"2940\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2943\"><p style=\"display: inline;\" id=\"2944\">Save button to save your work or settings</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2945\"><p style=\"display: inline;\" id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p style=\"padding-top: 3pt;padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2949\"><p style=\"display: inline;\" id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2951\"><p style=\"display: inline;\" id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2953\"><p style=\"display: inline;\" id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2955\"><p style=\"display: inline;\" id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2959\"><p style=\"display: inline;\" id=\"2960\">Show preview fetch data on Content Editor.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2961\"><p style=\"display: inline;\" id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2963\"><p style=\"display: inline;\" id=\"2964\">Cached per page: cached page based on requested page</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2965\"><p style=\"display: inline;\" id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2967\"><br id=\"2968\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2971\"><br id=\"2972\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2984\"><p class=\"s8\" style=\"display: inline;\" id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"2987\"><p class=\"s8\" style=\"display: inline;\" id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2989\"><p class=\"s8\" style=\"display: inline;\" id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2991\"><br id=\"2992\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" style=\"color: green;\">Using Macro into templates:</a></h3><div id=\"contentheading2994\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2996\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3000\"><p style=\"display: inline;\" id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3002\"><p style=\"display: inline;\" id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3004\"><p style=\"display: inline;\" id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3007\"><p style=\"display: inline;\" id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"3009\"><p style=\"display: inline;\" id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 262pt;text-align: left;\" id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li style=\"padding-top: 15pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3015\"><p class=\"s8\" style=\"display: inline;\" id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3018\"><br id=\"3019\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3020\"><p class=\"s8\" style=\"display: inline;\" id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3023\"><br id=\"3024\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3025\"><p class=\"s8\" style=\"display: inline;\" id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3028\"><br id=\"3029\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3030\"><p class=\"s8\" style=\"display: inline;\" id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3033\"><br id=\"3034\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3 style=\"padding-top: 9pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" style=\"color: green;\">Instruction to Insert Macro in Content Area:</a></h3></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3038\"><p style=\"display: inline;\" id=\"3039\">Open content “News”</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3040\"><p style=\"display: inline;\" id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3042\"><p style=\"display: inline;\" id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3045\"><p style=\"display: inline;\" id=\"3046\">Select Marco and Press Insert.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3047\"><br id=\"3048\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li style=\"padding-top: 4pt;padding-left: 76pt;text-indent: -18pt;text-align: left;\" id=\"3057\"><p style=\"display: inline;\" id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li style=\"padding-bottom: 2pt;padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3059\"><p style=\"display: inline;\" id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3065\"><br id=\"3066\"></p></li><li style=\"padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3067\"><p style=\"display: inline;\" id=\"3068\">All red dotted area denotes Macro areas.</p></li><li style=\"padding-top: 2pt;padding-left: 40pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"3069\"><p style=\"display: inline;\" id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3071\"><p style=\"display: inline;\" id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3073\"><br id=\"3074\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3075\"><br id=\"3076\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" style=\"color: green;\">Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"3079\"><br id=\"3080\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3081\"><p class=\"s42\" style=\"display: inline;\" id=\"3082\">Macro <span style=\" color: #000;\" id=\"3083\">macro = </span>Macro<span style=\" color: #000;\" id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3086\"><p class=\"s40\" style=\"display: inline;\" id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3088\"><p class=\"s40\" style=\"display: inline;\" id=\"3089\">macro.UseInEditor = <span style=\" color: #00F;\" id=\"3090\">true</span>;</p><ul id=\"l77\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3092\"><p class=\"s40\" style=\"display: inline;\" id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3094\"><p class=\"s40\" style=\"display: inline;\" id=\"3095\">macro.RenderContent = <span style=\" color: #00F;\" id=\"3096\">true</span>;</p><ul id=\"l78\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3098\"><p class=\"s40\" style=\"display: inline;\" id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3100\"><p class=\"s40\" style=\"display: inline;\" id=\"3101\">macro.Xslt = <span style=\" color: #A21515;\" id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3103\"><p class=\"s40\" style=\"display: inline;\" id=\"3104\">provide location of xslt file to use.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3105\"><p class=\"s40\" style=\"display: inline;\" id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3107\"><p class=\"s40\" style=\"display: inline;\" id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3110\"><br id=\"3111\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3112\">Chapter 08:</h1><h1 style=\"padding-top: 14pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3113\">Extending Umbraco CMS</h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"3114\"><br id=\"3115\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3116\"><br id=\"3117\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p style=\"padding-top: 9pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3125\">User control</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3126\">.NET Class Library Razor Engine XSLT</p><p style=\"padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3127\">Python</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3129\">Python is also not covered in this book.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3130\"><br id=\"3131\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" style=\"color: green;\">User Control:</a></h3><div id=\"contentheading3132\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3138\"><p style=\"display: inline;\" id=\"3139\">Add New User Control</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3140\"><p style=\"display: inline;\" id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3145\"><p style=\"display: inline;\" id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"3147\"><br id=\"3148\"></p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3149\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3150\"><br id=\"3151\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3152\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3153\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3154\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3155\">Save to Database</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3156\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3157\"><br id=\"3158\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3159\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3160\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3161\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3162\">Save to Database</p><p class=\"s10\" style=\"padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"3163\">\t\t</p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" style=\"color: green;\">Before start coding:</a></h3><div id=\"contentheading3164\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 108%;text-align: left;\" id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: justify;\" id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3182\"><br id=\"3183\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: justify;\" id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3202\"><br id=\"3203\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3207\">JavaScript.jpg </p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3208\">JavaScript.jpg </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3209\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3212\"><br id=\"3213\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3216\"><br id=\"3217\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"3225\"><p style=\"display: inline;\" id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"3227\"><p style=\"display: inline;\" id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3229\"><p style=\"display: inline;\" id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3231\"><p style=\"display: inline;\" id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3233\"><p style=\"display: inline;\" id=\"3234\">“Regex” means Regular Expression.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3235\"><br id=\"3236\"></p><h4 style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3239\"><br id=\"3240\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3246\"><br id=\"3247\"></p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3251\"><br id=\"3252\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3257\"><br id=\"3258\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3268\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3269\">Name: Email:</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3270\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3271\">Name: Email:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3272\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3273\">Generate Vcard</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3274\">Generate Vcard</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3275\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3276\">Press Submit</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3277\">Press Submit</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3278\"></p><p style=\"padding-top: 4pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3279\">Validate submitted Data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3280\"><br id=\"3281\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3282\"><br id=\"3283\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3284\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3285\">Sent By Email</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3286\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3287\">Sent By Email</p><p class=\"s10\" style=\"padding-left: 152pt;text-indent: 0pt;text-align: left;\" id=\"3288\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"3289\"> </span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3290\"><br id=\"3291\"></p><p style=\"padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3293\"><br id=\"3294\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3297\"><p style=\"display: inline;\" id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3300\"><p style=\"display: inline;\" id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3302\"><p style=\"display: inline;\" id=\"3303\">Create Upload button for Image or Photo</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3304\"><p style=\"display: inline;\" id=\"3305\">Create Button</p><ul id=\"l82\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3307\"><p style=\"display: inline;\" id=\"3308\">To submit data</p><h4 style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3311\"><p style=\"display: inline;\" id=\"3312\">Create Class</p><ul id=\"l83\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3314\"><p style=\"display: inline;\" id=\"3315\">To save data to Database</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3316\"><p style=\"display: inline;\" id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 54pt;text-align: left;\" id=\"3319\"><p style=\"display: inline;\" id=\"3320\">Validate input methods</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3321\"><p style=\"display: inline;\" id=\"3322\">Go Generate Vcard</p></li><li style=\"padding-left: 6pt;text-indent: 54pt;line-height: 107%;text-align: left;\" id=\"3323\"><p style=\"display: inline;\" id=\"3324\">Send Email Store Data to Database</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3325\"><br id=\"3326\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" style=\"color: green;\">Let’s Begin to code:</a></h3><div id=\"contentheading3332\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3335\"><p style=\"display: inline;\" id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3337\"><p style=\"display: inline;\" id=\"3338\">File -&gt; New --&gt; Project</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3339\"><p style=\"display: inline;\" id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3342\"><p style=\"display: inline;\" id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3344\"><p style=\"display: inline;\" id=\"3345\">Name: Vcard Generator</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3346\"><p style=\"display: inline;\" id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3348\"><p style=\"display: inline;\" id=\"3349\">Solution name: leave default, if you want you can change</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3350\"><p style=\"display: inline;\" id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"3353\"><p style=\"display: inline;\" id=\"3354\">It will Create new directory</p></li></ul></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3355\"><p style=\"display: inline;\" id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"3357\"><br id=\"3358\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3368\">It will open new windows</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3374\"><br id=\"3375\"></p><p style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;line-height: 158%;text-align: left;\" id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p style=\"padding-top: 8pt;text-indent: 0pt;text-align: right;\" id=\"3381\">Vcardcontrol.jp</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3382\"><br id=\"3383\"></p><p class=\"s27\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3384\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3385\"><br id=\"3386\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3387\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3388\"><br id=\"3389\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3390\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3391\"><br id=\"3392\"></p></div></div></div></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading2744\" class=\"heading2744\"><a name=\"bookmark44\" id=\"2745\" >Fetching data:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading2744\" ><p  id=\"2746\">Let‟s take real example for Semic provider site and be clear about use of Xslt. Semic provider has logo, title and slogan as global items. For global items<span class=\"s3\" id=\"2747\">16</span>, we need to fetch value from siteName, slogan and logo element <span class=\"s19\" id=\"2748\">see line at 26, 27 and 28 respectively at Image:Umbracoconfig.jpg”</span>. Open GlobalSetting.xslt file and add highlighted code into GlobalSetting.xslt. See captured screen and Save Xslt.</p><p  id=\"2749\"><br id=\"2750\"></p><p  id=\"2751\"><span id=\"2752\"><img width=\"616\" height=\"342\" alt=\"image\" src=\"Image_073.jpg\" id=\"2753\"></span></p><p  id=\"2754\">All html tags are not important, only important is highlighted line. Description:</p><ul id=\"l61\"><li  id=\"2756\"><p class=\"s78\"  id=\"2757\">&lt;<span  id=\"2758\">xsl</span>:<span  id=\"2759\">variable </span><span  id=\"2760\">name</span>=\"items\" <span  id=\"2761\">select</span>=\"$currentPage/ancestor-or-self::*</p><p class=\"s78\"  id=\"2762\">/WebSiteGlobalSettings \"/&gt;</p><ul id=\"l62\"><li  id=\"2764\"><p class=\"s81\"  id=\"2765\">Here $ represent variable in XSLT. variable name items will hold data from ‚WebSitesGlobalSettings‛ Element see line at 25 Image: <span class=\"s10\" id=\"2766\">“Umbracoconfig.jpg” page no: xx</span></p></li><li  id=\"2767\"><p class=\"s81\"  id=\"2768\">currentPage will select current page.</p></li><li  id=\"2769\"><p class=\"s81\"  id=\"2770\">ancestor-or-self:: move pointer back until root level.</p></li><li  id=\"2771\"><p class=\"s81\"  id=\"2772\">* select all that match</p></li><li  id=\"2773\"><p class=\"s81\"  id=\"2774\">/ move one step further to child element.</p></li><li  id=\"2775\"><p class=\"s81\"  id=\"2776\">WebsitesGlobalSettings is element name.</p></li></ul></li><li  id=\"2777\"><p class=\"s78\"  id=\"2778\">&lt;<span  id=\"2779\">xsl</span>:<span  id=\"2780\">variable </span><span  id=\"2781\">name</span>=\"logo\" <span  id=\"2782\">select</span>=\"$items/logo\"/&gt;</p><ul id=\"l63\"><li  id=\"2784\"><p class=\"s81\"  id=\"2785\">$items/logo will select logo element and hold data</p></li></ul></li><li  id=\"2786\"><p class=\"s78\"  id=\"2787\">&lt;<span  id=\"2788\">xsl</span>:<span  id=\"2789\">value-of </span><span  id=\"2790\">select</span>=\"$items/slogan\"/&gt;</p><ul id=\"l64\"><li  id=\"2792\"><p class=\"s81\"  id=\"2793\">$items/slogan: select value from slogan element</p></li><li  id=\"2794\"><p class=\"s78\"  id=\"2795\">&lt;<span  id=\"2796\">img </span><span  id=\"2797\">src</span>=\"{$logo}\" <span  id=\"2798\">alt</span>=\"semic provider logo; visual identity\"/&gt;</p></li><li  id=\"2799\"><p class=\"s78\"  id=\"2800\">Insert value of logo variable. Using $ and followed by name means use of variable, encapsulated data with {}. {} means code inside {} will executed on server by Umbraco CMS.</p></li></ul></li></ul><p  id=\"2801\"><br id=\"2802\"></p><p  id=\"2803\"><span id=\"2804\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_074.png\" id=\"2805\"></span></p><p class=\"s20\"  id=\"2806\">15 <span class=\"s10\" id=\"2807\">Root level of access: access that can CRUD ; C-create, R-read, U-update, D-delete</span></p><p class=\"s20\"  id=\"2808\">16 <span class=\"s10\" id=\"2809\">Items those are common for all. For example logo, website name.</span></p><p class=\"s78\"  id=\"2810\"><span class=\"s10\" id=\"2811\">- </span>&lt;<span  id=\"2812\">xsl</span>:<span  id=\"2813\">value-of </span><span  id=\"2814\">select</span>=\"$items/siteName\"/&gt;</p><p class=\"s85\"  id=\"2815\">o <span class=\"s81\" id=\"2816\">This line will select value of siteName element and output.</span></p><p  id=\"2817\"><br id=\"2818\"></p><p class=\"s41\"  id=\"2819\"><a name=\"bookmark45\" id=\"2820\">Note: alt tag in img element is not compulsory but I strongly recommend having alt tag. It will help for web accessibility and SEO.</a></p><p class=\"s86\"  id=\"2821\"><a name=\"a45\" id=\"2822\">Xslt for Navigation:</a></p><p  id=\"2823\"><br id=\"2824\"></p><p  id=\"2825\"><span id=\"2826\"><img width=\"581\" height=\"261\" alt=\"image\" src=\"Image_075.png\" id=\"2827\"></span></p><p  id=\"2828\"><br id=\"2829\"></p><p  id=\"2830\">This is another Xslt for Navigation bar. Create new Xslt. Provide name navigation and Checked Create Macro. Copy highlighted text. Note that html is not that much important these are for CSS and layout purpose.</p><p  id=\"2831\">Description:</p><ul id=\"l65\"><li  id=\"2833\"><p  id=\"2834\">[string(useInNavigation) = '1'] condition match means select all GeneralContent Element from ~/App_Data/umbraco.config file where useInNavigation checked boxed should be checked. Remember that we added new property at “General Content” Document Type. If editor wants to use general content in navigation bar. Editor should Checked mark on “useInNavigation” when s/he creates content.</p><p  id=\"2835\"><br id=\"2836\"></p></li><li  id=\"2837\"><p  id=\"2838\">Nice Url: umbraco.library:NiceUrl(@id)</p><ul id=\"l66\"><li  id=\"2840\"><p  id=\"2841\">NiceUrl(@node id) will generate user friendly nice Url. Remember that urlName are used example: home.aspx</p></li><li  id=\"2842\"><p  id=\"2843\">@id: it‟s an attribute of selected element at ~/App_Data/umbraco.config xml file. In my case it‟s a node id of content based on “General Content” document type. @ sysmbole represent get value from attributes. See Xslt, Xpath and xml for details.</p></li></ul></li></ul><p  id=\"2844\"><br id=\"2845\"></p><ul id=\"l67\"><li  id=\"2847\"><p class=\"s56\"  id=\"2848\">&lt;<span class=\"p\" id=\"2849\">xsl:value-of select</span>=<span class=\"p\" id=\"2850\">\"contentTitle\"</span>/&gt;</p><p  id=\"2851\"><br id=\"2852\"></p><ul id=\"l68\"><li  id=\"2854\"><p class=\"s56\"  id=\"2855\">Select value from contentTitle element</p></li></ul></li><li  id=\"2856\"><p class=\"s56\"  id=\"2857\">&lt;<span class=\"p\" id=\"2858\">xsl:for-each select</span>=<span class=\"p\" id=\"2859\">\"$items\"</span>&gt;</p><p  id=\"2860\"><br id=\"2861\"></p><ul id=\"l69\"><li  id=\"2863\"><p class=\"s56\"  id=\"2864\">Used to loop all existing content</p><p  id=\"2865\"><br id=\"2866\"></p></li></ul></li><li  id=\"2867\"><p class=\"s56\"  id=\"2868\">&lt;<span class=\"p\" id=\"2869\">xsl:if test</span>=<span class=\"p\" id=\"2870\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p  id=\"2871\"><br id=\"2872\"></p><ul id=\"l70\"><li  id=\"2874\"><p class=\"s56\"  id=\"2875\">Here &amp;gt; means greater than. Test: means execute block of code only if result is more than zero. If items are less than zero no need to loop items.</p></li></ul></li></ul><p  id=\"2876\"><br id=\"2877\"></p><h4  id=\"2878\"><a name=\"a46\" id=\"2879\">Note: there is missing code in captured screen means missing code are generated by Umbraco Default and removed from here to reduce space.</a></h4><p class=\"s86\"  id=\"2880\"><a name=\"bookmark46\" id=\"2881\">New Xslt file for News List items.</a></p><p  id=\"2882\">It will be exercise for you I create NewsList.xslt file, here I just include captured screen without description try to describe yourself. It‟s not big but need to knowledge of Xpath. Main purpose of this Xslt is to fetch content from 2<span class=\"s3\" id=\"2883\">nd </span>level menu contain. It will fetch News articles from ~/App_data/umbraco.config xml file. Captured screen are bellow.</p><p  id=\"2884\"><br id=\"2885\"></p><p  id=\"2886\"><span id=\"2887\"><img width=\"475\" height=\"383\" alt=\"image\" src=\"Image_076.jpg\" id=\"2888\"></span></p><p  id=\"2889\"><br id=\"2890\"></p><h1  id=\"2891\"><a name=\"a47\" id=\"2892\">Chapter 07: Macro</a></h1><p  id=\"2893\"><br id=\"2894\"></p><p  id=\"2895\"><br id=\"2896\"></p><p  id=\"2897\"><span id=\"2898\"><img width=\"350\" height=\"1\" alt=\"image\" src=\"Image_077.png\" id=\"2899\"></span></p><p  id=\"2900\"><br id=\"2901\"></p><h2  id=\"heading2902\" class=\"heading2902\"><a name=\"bookmark47\" id=\"2903\" >Macro:</a></h2><div id=\"contentheading2902\" ><p  id=\"2904\">Marco is use as bridge between xslt, user control or other languages and templates, using macro we can render content or data from data source to templates and templates are responsible to present data to end users. Macro is very important part in Umbraco.</p><p  id=\"2905\"><span id=\"2906\"><img width=\"616\" height=\"437\" alt=\"image\" src=\"Image_078.png\" id=\"2907\"></span></p><h3  id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" >Macro working Environments:</a></h3><div id=\"contentheading2908\" ><p class=\"s45\"  id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p  id=\"2912\"><br id=\"2913\"></p><p  id=\"2914\">C</p><p  id=\"2915\">D</p><p  id=\"2916\"><br id=\"2917\"></p><p  id=\"2918\">E</p><p  id=\"2919\"><br id=\"2920\"></p><p  id=\"2921\">F</p><p  id=\"2922\"><br id=\"2923\"></p><p  id=\"2924\">G</p><p  id=\"2925\"><br id=\"2926\"></p><p  id=\"2927\">H</p><p  id=\"2928\">I</p><p  id=\"2929\">J</p><p  id=\"2930\"><br id=\"2931\"></p><p  id=\"2932\">K</p><p  id=\"2933\">L</p><p  id=\"2934\"><br id=\"2935\"></p><p  id=\"2936\">M</p><p  id=\"2937\"><br id=\"2938\"></p><p  id=\"2939\"><br id=\"2940\"></p><p  id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li  id=\"2943\"><p  id=\"2944\">Save button to save your work or settings</p></li><li  id=\"2945\"><p  id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p  id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li  id=\"2949\"><p  id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li  id=\"2951\"><p  id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li  id=\"2953\"><p  id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li  id=\"2955\"><p  id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p  id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li  id=\"2959\"><p  id=\"2960\">Show preview fetch data on Content Editor.</p></li><li  id=\"2961\"><p  id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li  id=\"2963\"><p  id=\"2964\">Cached per page: cached page based on requested page</p></li><li  id=\"2965\"><p  id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p  id=\"2967\"><br id=\"2968\"></p><p  id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p  id=\"2971\"><br id=\"2972\"></p><p  id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\"  id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\"  target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p  id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p  id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li  id=\"2984\"><p class=\"s8\"  id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li  id=\"2987\"><p class=\"s8\"  id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li  id=\"2989\"><p class=\"s8\"  id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p  id=\"2991\"><br id=\"2992\"></p><p  id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3  id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" >Using Macro into templates:</a></h3><div id=\"contentheading2994\" ><p  id=\"2996\">Instruction:</p><p  id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li  id=\"3000\"><p  id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li  id=\"3002\"><p  id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li  id=\"3004\"><p  id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li  id=\"3007\"><p  id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li  id=\"3009\"><p  id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\"  id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li  id=\"3015\"><p class=\"s8\"  id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p  id=\"3018\"><br id=\"3019\"></p></li><li  id=\"3020\"><p class=\"s8\"  id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p  id=\"3023\"><br id=\"3024\"></p></li><li  id=\"3025\"><p class=\"s8\"  id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p  id=\"3028\"><br id=\"3029\"></p></li><li  id=\"3030\"><p class=\"s8\"  id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p  id=\"3033\"><br id=\"3034\"></p><p  id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3  id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" >Instruction to Insert Macro in Content Area:</a></h3></li><li  id=\"3038\"><p  id=\"3039\">Open content “News”</p></li><li  id=\"3040\"><p  id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li  id=\"3042\"><p  id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li  id=\"3045\"><p  id=\"3046\">Select Marco and Press Insert.</p><p  id=\"3047\"><br id=\"3048\"></p><p  id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\"  id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p  id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li  id=\"3057\"><p  id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li  id=\"3059\"><p  id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p  id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p  id=\"3065\"><br id=\"3066\"></p></li><li  id=\"3067\"><p  id=\"3068\">All red dotted area denotes Macro areas.</p></li><li  id=\"3069\"><p  id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li  id=\"3071\"><p  id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p  id=\"3073\"><br id=\"3074\"></p><p  id=\"3075\"><br id=\"3076\"></p><h3  id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" >Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" ><p  id=\"3079\"><br id=\"3080\"></p></div></li><li  id=\"3081\"><p class=\"s42\"  id=\"3082\">Macro <span  id=\"3083\">macro = </span>Macro<span  id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li  id=\"3086\"><p class=\"s40\"  id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li  id=\"3088\"><p class=\"s40\"  id=\"3089\">macro.UseInEditor = <span  id=\"3090\">true</span>;</p><ul id=\"l77\"><li  id=\"3092\"><p class=\"s40\"  id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li  id=\"3094\"><p class=\"s40\"  id=\"3095\">macro.RenderContent = <span  id=\"3096\">true</span>;</p><ul id=\"l78\"><li  id=\"3098\"><p class=\"s40\"  id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li  id=\"3100\"><p class=\"s40\"  id=\"3101\">macro.Xslt = <span  id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li  id=\"3103\"><p class=\"s40\"  id=\"3104\">provide location of xslt file to use.</p></li><li  id=\"3105\"><p class=\"s40\"  id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li  id=\"3107\"><p class=\"s40\"  id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\"  id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p  id=\"3110\"><br id=\"3111\"></p><h1  id=\"3112\">Chapter 08:</h1><h1  id=\"3113\">Extending Umbraco CMS</h1><p  id=\"3114\"><br id=\"3115\"></p><p  id=\"3116\"><br id=\"3117\"></p><p  id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2  id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p  id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p  id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p  id=\"3125\">User control</p><p  id=\"3126\">.NET Class Library Razor Engine XSLT</p><p  id=\"3127\">Python</p><p  id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p  id=\"3129\">Python is also not covered in this book.</p><p  id=\"3130\"><br id=\"3131\"></p><h3  id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" >User Control:</a></h3><div id=\"contentheading3132\" ><p  id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p  id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p  id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li  id=\"3138\"><p  id=\"3139\">Add New User Control</p></li><li  id=\"3140\"><p  id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p  id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li  id=\"3145\"><p  id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p  id=\"3147\"><br id=\"3148\"></p><p  id=\"3149\">Vcard-Process</p><p  id=\"3150\"><br id=\"3151\"></p><p  id=\"3152\">User Provides Personal Information</p><p  id=\"3153\">Generate Vcard</p><p  id=\"3154\">Send Vcard to Email</p><p  id=\"3155\">Save to Database</p><p  id=\"3156\">Vcard-Process</p><p  id=\"3157\"><br id=\"3158\"></p><p  id=\"3159\">User Provides Personal Information</p><p  id=\"3160\">Generate Vcard</p><p  id=\"3161\">Send Vcard to Email</p><p  id=\"3162\">Save to Database</p><p class=\"s10\"  id=\"3163\">\t\t</p><h3  id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" >Before start coding:</a></h3><div id=\"contentheading3164\" ><p  id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p  id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p  id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4  id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p  id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p  id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p  id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4  id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p  id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p  id=\"3182\"><br id=\"3183\"></p><p  id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\"  id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p  id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\"  target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p  id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\"  target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\"  id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\"  id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4  id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p  id=\"3202\"><br id=\"3203\"></p><p  id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\"  id=\"3207\">JavaScript.jpg </p><p class=\"s88\"  id=\"3208\">JavaScript.jpg </p><p  id=\"3209\"></p><p  id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p  id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p  id=\"3212\"><br id=\"3213\"></p><h4  id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p  id=\"3216\"><br id=\"3217\"></p><p  id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p  id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4  id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p  id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li  id=\"3225\"><p  id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li  id=\"3227\"><p  id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li  id=\"3229\"><p  id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li  id=\"3231\"><p  id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li  id=\"3233\"><p  id=\"3234\">“Regex” means Regular Expression.</p><p  id=\"3235\"><br id=\"3236\"></p><h4  id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p  id=\"3239\"><br id=\"3240\"></p><p  id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4  id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p  id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p  id=\"3246\"><br id=\"3247\"></p><h4  id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p  id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p  id=\"3251\"><br id=\"3252\"></p><h4  id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p  id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p  id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p  id=\"3257\"><br id=\"3258\"></p><p  id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p  id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p  id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p  id=\"3268\">User type personal Informatio n</p><p  id=\"3269\">Name: Email:</p><p  id=\"3270\">User type personal Informatio n</p><p  id=\"3271\">Name: Email:</p><p  id=\"3272\"></p><p  id=\"3273\">Generate Vcard</p><p  id=\"3274\">Generate Vcard</p><p  id=\"3275\"></p><p  id=\"3276\">Press Submit</p><p  id=\"3277\">Press Submit</p><p  id=\"3278\"></p><p  id=\"3279\">Validate submitted Data</p><p  id=\"3280\"><br id=\"3281\"></p><p  id=\"3282\"><br id=\"3283\"></p><p  id=\"3284\">Store in Database</p><p  id=\"3285\">Sent By Email</p><p  id=\"3286\">Store in Database</p><p  id=\"3287\">Sent By Email</p><p class=\"s10\"  id=\"3288\"><span  id=\"3289\"> </span>\t</p><p  id=\"3290\"><br id=\"3291\"></p><p  id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p  id=\"3293\"><br id=\"3294\"></p><h4  id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li  id=\"3297\"><p  id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li  id=\"3300\"><p  id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li  id=\"3302\"><p  id=\"3303\">Create Upload button for Image or Photo</p></li><li  id=\"3304\"><p  id=\"3305\">Create Button</p><ul id=\"l82\"><li  id=\"3307\"><p  id=\"3308\">To submit data</p><h4  id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li  id=\"3311\"><p  id=\"3312\">Create Class</p><ul id=\"l83\"><li  id=\"3314\"><p  id=\"3315\">To save data to Database</p></li></ul></li><li  id=\"3316\"><p  id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li  id=\"3319\"><p  id=\"3320\">Validate input methods</p></li><li  id=\"3321\"><p  id=\"3322\">Go Generate Vcard</p></li><li  id=\"3323\"><p  id=\"3324\">Send Email Store Data to Database</p><p  id=\"3325\"><br id=\"3326\"></p><p  id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\"  id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3  id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" >Let’s Begin to code:</a></h3><div id=\"contentheading3332\" ><p  id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li  id=\"3335\"><p  id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li  id=\"3337\"><p  id=\"3338\">File -&gt; New --&gt; Project</p></li><li  id=\"3339\"><p  id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li  id=\"3342\"><p  id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li  id=\"3344\"><p  id=\"3345\">Name: Vcard Generator</p></li><li  id=\"3346\"><p  id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li  id=\"3348\"><p  id=\"3349\">Solution name: leave default, if you want you can change</p></li><li  id=\"3350\"><p  id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li  id=\"3353\"><p  id=\"3354\">It will Create new directory</p></li></ul></li><li  id=\"3355\"><p  id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p  id=\"3357\"><br id=\"3358\"></p><p  id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p  id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p  id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p  id=\"3368\">It will open new windows</p><p  id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p  id=\"3374\"><br id=\"3375\"></p><p  id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p  id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p  id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p  id=\"3381\">Vcardcontrol.jp</p><p  id=\"3382\"><br id=\"3383\"></p><p class=\"s27\"  id=\"3384\">-</p><p  id=\"3385\"><br id=\"3386\"></p><p class=\"s27\"  id=\"3387\">-</p><p  id=\"3388\"><br id=\"3389\"></p><p class=\"s27\"  id=\"3390\">-</p><p  id=\"3391\"><br id=\"3392\"></p></div></div></div></div>","sub":[]}]},{"pageId":"86","pageLevel":0,"pageOrder":"86","pageParentId":"-1","pageName":"Macro:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 13pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2902\" class=\"heading2902\"><a name=\"bookmark47\" id=\"2903\" style=\"color: lime;\">Macro:</a></h2>","pageContent":"<div id=\"contentheading2902\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2904\">Marco is use as bridge between xslt, user control or other languages and templates, using macro we can render content or data from data source to templates and templates are responsible to present data to end users. Macro is very important part in Umbraco.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2905\"><span id=\"2906\"><img width=\"616\" height=\"437\" alt=\"image\" src=\"Image_078.png\" id=\"2907\"></span></p><h3 style=\"padding-top: 10pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" style=\"color: green;\">Macro working Environments:</a></h3><div id=\"contentheading2908\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s45\" style=\"padding-top: 8pt;padding-left: 119pt;text-indent: 0pt;text-align: left;\" id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2912\"><br id=\"2913\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2914\">C</p><p style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2915\">D</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2916\"><br id=\"2917\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2918\">E</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2919\"><br id=\"2920\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2921\">F</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2922\"><br id=\"2923\"></p><p style=\"padding-top: 10pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2924\">G</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2925\"><br id=\"2926\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2927\">H</p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: center;\" id=\"2928\">I</p><p style=\"padding-top: 4pt;padding-left: 314pt;text-indent: 0pt;text-align: left;\" id=\"2929\">J</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2930\"><br id=\"2931\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"2932\">K</p><p style=\"padding-top: 6pt;padding-left: 144pt;text-indent: 0pt;text-align: center;\" id=\"2933\">L</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2934\"><br id=\"2935\"></p><p style=\"padding-top: 4pt;padding-left: 145pt;text-indent: 0pt;text-align: center;\" id=\"2936\">M</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2937\"><br id=\"2938\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2939\"><br id=\"2940\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2943\"><p style=\"display: inline;\" id=\"2944\">Save button to save your work or settings</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2945\"><p style=\"display: inline;\" id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p style=\"padding-top: 3pt;padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2949\"><p style=\"display: inline;\" id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2951\"><p style=\"display: inline;\" id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2953\"><p style=\"display: inline;\" id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2955\"><p style=\"display: inline;\" id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2959\"><p style=\"display: inline;\" id=\"2960\">Show preview fetch data on Content Editor.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2961\"><p style=\"display: inline;\" id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2963\"><p style=\"display: inline;\" id=\"2964\">Cached per page: cached page based on requested page</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2965\"><p style=\"display: inline;\" id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2967\"><br id=\"2968\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2971\"><br id=\"2972\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2984\"><p class=\"s8\" style=\"display: inline;\" id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"2987\"><p class=\"s8\" style=\"display: inline;\" id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2989\"><p class=\"s8\" style=\"display: inline;\" id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2991\"><br id=\"2992\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" style=\"color: green;\">Using Macro into templates:</a></h3><div id=\"contentheading2994\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2996\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3000\"><p style=\"display: inline;\" id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3002\"><p style=\"display: inline;\" id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3004\"><p style=\"display: inline;\" id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3007\"><p style=\"display: inline;\" id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"3009\"><p style=\"display: inline;\" id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 262pt;text-align: left;\" id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li style=\"padding-top: 15pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3015\"><p class=\"s8\" style=\"display: inline;\" id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3018\"><br id=\"3019\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3020\"><p class=\"s8\" style=\"display: inline;\" id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3023\"><br id=\"3024\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3025\"><p class=\"s8\" style=\"display: inline;\" id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3028\"><br id=\"3029\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3030\"><p class=\"s8\" style=\"display: inline;\" id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3033\"><br id=\"3034\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3 style=\"padding-top: 9pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" style=\"color: green;\">Instruction to Insert Macro in Content Area:</a></h3></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3038\"><p style=\"display: inline;\" id=\"3039\">Open content “News”</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3040\"><p style=\"display: inline;\" id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3042\"><p style=\"display: inline;\" id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3045\"><p style=\"display: inline;\" id=\"3046\">Select Marco and Press Insert.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3047\"><br id=\"3048\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li style=\"padding-top: 4pt;padding-left: 76pt;text-indent: -18pt;text-align: left;\" id=\"3057\"><p style=\"display: inline;\" id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li style=\"padding-bottom: 2pt;padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3059\"><p style=\"display: inline;\" id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3065\"><br id=\"3066\"></p></li><li style=\"padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3067\"><p style=\"display: inline;\" id=\"3068\">All red dotted area denotes Macro areas.</p></li><li style=\"padding-top: 2pt;padding-left: 40pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"3069\"><p style=\"display: inline;\" id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3071\"><p style=\"display: inline;\" id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3073\"><br id=\"3074\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3075\"><br id=\"3076\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" style=\"color: green;\">Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"3079\"><br id=\"3080\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3081\"><p class=\"s42\" style=\"display: inline;\" id=\"3082\">Macro <span style=\" color: #000;\" id=\"3083\">macro = </span>Macro<span style=\" color: #000;\" id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3086\"><p class=\"s40\" style=\"display: inline;\" id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3088\"><p class=\"s40\" style=\"display: inline;\" id=\"3089\">macro.UseInEditor = <span style=\" color: #00F;\" id=\"3090\">true</span>;</p><ul id=\"l77\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3092\"><p class=\"s40\" style=\"display: inline;\" id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3094\"><p class=\"s40\" style=\"display: inline;\" id=\"3095\">macro.RenderContent = <span style=\" color: #00F;\" id=\"3096\">true</span>;</p><ul id=\"l78\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3098\"><p class=\"s40\" style=\"display: inline;\" id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3100\"><p class=\"s40\" style=\"display: inline;\" id=\"3101\">macro.Xslt = <span style=\" color: #A21515;\" id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3103\"><p class=\"s40\" style=\"display: inline;\" id=\"3104\">provide location of xslt file to use.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3105\"><p class=\"s40\" style=\"display: inline;\" id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3107\"><p class=\"s40\" style=\"display: inline;\" id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3110\"><br id=\"3111\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3112\">Chapter 08:</h1><h1 style=\"padding-top: 14pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3113\">Extending Umbraco CMS</h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"3114\"><br id=\"3115\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3116\"><br id=\"3117\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p style=\"padding-top: 9pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3125\">User control</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3126\">.NET Class Library Razor Engine XSLT</p><p style=\"padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3127\">Python</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3129\">Python is also not covered in this book.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3130\"><br id=\"3131\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" style=\"color: green;\">User Control:</a></h3><div id=\"contentheading3132\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3138\"><p style=\"display: inline;\" id=\"3139\">Add New User Control</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3140\"><p style=\"display: inline;\" id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3145\"><p style=\"display: inline;\" id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"3147\"><br id=\"3148\"></p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3149\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3150\"><br id=\"3151\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3152\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3153\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3154\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3155\">Save to Database</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3156\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3157\"><br id=\"3158\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3159\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3160\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3161\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3162\">Save to Database</p><p class=\"s10\" style=\"padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"3163\">\t\t</p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" style=\"color: green;\">Before start coding:</a></h3><div id=\"contentheading3164\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 108%;text-align: left;\" id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: justify;\" id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3182\"><br id=\"3183\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: justify;\" id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3202\"><br id=\"3203\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3207\">JavaScript.jpg </p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3208\">JavaScript.jpg </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3209\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3212\"><br id=\"3213\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3216\"><br id=\"3217\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"3225\"><p style=\"display: inline;\" id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"3227\"><p style=\"display: inline;\" id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3229\"><p style=\"display: inline;\" id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3231\"><p style=\"display: inline;\" id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3233\"><p style=\"display: inline;\" id=\"3234\">“Regex” means Regular Expression.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3235\"><br id=\"3236\"></p><h4 style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3239\"><br id=\"3240\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3246\"><br id=\"3247\"></p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3251\"><br id=\"3252\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3257\"><br id=\"3258\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3268\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3269\">Name: Email:</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3270\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3271\">Name: Email:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3272\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3273\">Generate Vcard</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3274\">Generate Vcard</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3275\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3276\">Press Submit</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3277\">Press Submit</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3278\"></p><p style=\"padding-top: 4pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3279\">Validate submitted Data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3280\"><br id=\"3281\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3282\"><br id=\"3283\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3284\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3285\">Sent By Email</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3286\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3287\">Sent By Email</p><p class=\"s10\" style=\"padding-left: 152pt;text-indent: 0pt;text-align: left;\" id=\"3288\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"3289\"> </span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3290\"><br id=\"3291\"></p><p style=\"padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3293\"><br id=\"3294\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3297\"><p style=\"display: inline;\" id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3300\"><p style=\"display: inline;\" id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3302\"><p style=\"display: inline;\" id=\"3303\">Create Upload button for Image or Photo</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3304\"><p style=\"display: inline;\" id=\"3305\">Create Button</p><ul id=\"l82\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3307\"><p style=\"display: inline;\" id=\"3308\">To submit data</p><h4 style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3311\"><p style=\"display: inline;\" id=\"3312\">Create Class</p><ul id=\"l83\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3314\"><p style=\"display: inline;\" id=\"3315\">To save data to Database</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3316\"><p style=\"display: inline;\" id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 54pt;text-align: left;\" id=\"3319\"><p style=\"display: inline;\" id=\"3320\">Validate input methods</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3321\"><p style=\"display: inline;\" id=\"3322\">Go Generate Vcard</p></li><li style=\"padding-left: 6pt;text-indent: 54pt;line-height: 107%;text-align: left;\" id=\"3323\"><p style=\"display: inline;\" id=\"3324\">Send Email Store Data to Database</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3325\"><br id=\"3326\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" style=\"color: green;\">Let’s Begin to code:</a></h3><div id=\"contentheading3332\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3335\"><p style=\"display: inline;\" id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3337\"><p style=\"display: inline;\" id=\"3338\">File -&gt; New --&gt; Project</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3339\"><p style=\"display: inline;\" id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3342\"><p style=\"display: inline;\" id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3344\"><p style=\"display: inline;\" id=\"3345\">Name: Vcard Generator</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3346\"><p style=\"display: inline;\" id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3348\"><p style=\"display: inline;\" id=\"3349\">Solution name: leave default, if you want you can change</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3350\"><p style=\"display: inline;\" id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"3353\"><p style=\"display: inline;\" id=\"3354\">It will Create new directory</p></li></ul></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3355\"><p style=\"display: inline;\" id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"3357\"><br id=\"3358\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3368\">It will open new windows</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3374\"><br id=\"3375\"></p><p style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;line-height: 158%;text-align: left;\" id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p style=\"padding-top: 8pt;text-indent: 0pt;text-align: right;\" id=\"3381\">Vcardcontrol.jp</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3382\"><br id=\"3383\"></p><p class=\"s27\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3384\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3385\"><br id=\"3386\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3387\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3388\"><br id=\"3389\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3390\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3391\"><br id=\"3392\"></p></div></div></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading2902\" class=\"heading2902\"><a name=\"bookmark47\" id=\"2903\" >Macro:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading2902\" ><p  id=\"2904\">Marco is use as bridge between xslt, user control or other languages and templates, using macro we can render content or data from data source to templates and templates are responsible to present data to end users. Macro is very important part in Umbraco.</p><p  id=\"2905\"><span id=\"2906\"><img width=\"616\" height=\"437\" alt=\"image\" src=\"Image_078.png\" id=\"2907\"></span></p><h3  id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" >Macro working Environments:</a></h3><div id=\"contentheading2908\" ><p class=\"s45\"  id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p  id=\"2912\"><br id=\"2913\"></p><p  id=\"2914\">C</p><p  id=\"2915\">D</p><p  id=\"2916\"><br id=\"2917\"></p><p  id=\"2918\">E</p><p  id=\"2919\"><br id=\"2920\"></p><p  id=\"2921\">F</p><p  id=\"2922\"><br id=\"2923\"></p><p  id=\"2924\">G</p><p  id=\"2925\"><br id=\"2926\"></p><p  id=\"2927\">H</p><p  id=\"2928\">I</p><p  id=\"2929\">J</p><p  id=\"2930\"><br id=\"2931\"></p><p  id=\"2932\">K</p><p  id=\"2933\">L</p><p  id=\"2934\"><br id=\"2935\"></p><p  id=\"2936\">M</p><p  id=\"2937\"><br id=\"2938\"></p><p  id=\"2939\"><br id=\"2940\"></p><p  id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li  id=\"2943\"><p  id=\"2944\">Save button to save your work or settings</p></li><li  id=\"2945\"><p  id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p  id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li  id=\"2949\"><p  id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li  id=\"2951\"><p  id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li  id=\"2953\"><p  id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li  id=\"2955\"><p  id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p  id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li  id=\"2959\"><p  id=\"2960\">Show preview fetch data on Content Editor.</p></li><li  id=\"2961\"><p  id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li  id=\"2963\"><p  id=\"2964\">Cached per page: cached page based on requested page</p></li><li  id=\"2965\"><p  id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p  id=\"2967\"><br id=\"2968\"></p><p  id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p  id=\"2971\"><br id=\"2972\"></p><p  id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\"  id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\"  target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p  id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p  id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li  id=\"2984\"><p class=\"s8\"  id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li  id=\"2987\"><p class=\"s8\"  id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li  id=\"2989\"><p class=\"s8\"  id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p  id=\"2991\"><br id=\"2992\"></p><p  id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3  id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" >Using Macro into templates:</a></h3><div id=\"contentheading2994\" ><p  id=\"2996\">Instruction:</p><p  id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li  id=\"3000\"><p  id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li  id=\"3002\"><p  id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li  id=\"3004\"><p  id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li  id=\"3007\"><p  id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li  id=\"3009\"><p  id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\"  id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li  id=\"3015\"><p class=\"s8\"  id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p  id=\"3018\"><br id=\"3019\"></p></li><li  id=\"3020\"><p class=\"s8\"  id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p  id=\"3023\"><br id=\"3024\"></p></li><li  id=\"3025\"><p class=\"s8\"  id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p  id=\"3028\"><br id=\"3029\"></p></li><li  id=\"3030\"><p class=\"s8\"  id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p  id=\"3033\"><br id=\"3034\"></p><p  id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3  id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" >Instruction to Insert Macro in Content Area:</a></h3></li><li  id=\"3038\"><p  id=\"3039\">Open content “News”</p></li><li  id=\"3040\"><p  id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li  id=\"3042\"><p  id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li  id=\"3045\"><p  id=\"3046\">Select Marco and Press Insert.</p><p  id=\"3047\"><br id=\"3048\"></p><p  id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\"  id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p  id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li  id=\"3057\"><p  id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li  id=\"3059\"><p  id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p  id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p  id=\"3065\"><br id=\"3066\"></p></li><li  id=\"3067\"><p  id=\"3068\">All red dotted area denotes Macro areas.</p></li><li  id=\"3069\"><p  id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li  id=\"3071\"><p  id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p  id=\"3073\"><br id=\"3074\"></p><p  id=\"3075\"><br id=\"3076\"></p><h3  id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" >Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" ><p  id=\"3079\"><br id=\"3080\"></p></div></li><li  id=\"3081\"><p class=\"s42\"  id=\"3082\">Macro <span  id=\"3083\">macro = </span>Macro<span  id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li  id=\"3086\"><p class=\"s40\"  id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li  id=\"3088\"><p class=\"s40\"  id=\"3089\">macro.UseInEditor = <span  id=\"3090\">true</span>;</p><ul id=\"l77\"><li  id=\"3092\"><p class=\"s40\"  id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li  id=\"3094\"><p class=\"s40\"  id=\"3095\">macro.RenderContent = <span  id=\"3096\">true</span>;</p><ul id=\"l78\"><li  id=\"3098\"><p class=\"s40\"  id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li  id=\"3100\"><p class=\"s40\"  id=\"3101\">macro.Xslt = <span  id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li  id=\"3103\"><p class=\"s40\"  id=\"3104\">provide location of xslt file to use.</p></li><li  id=\"3105\"><p class=\"s40\"  id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li  id=\"3107\"><p class=\"s40\"  id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\"  id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p  id=\"3110\"><br id=\"3111\"></p><h1  id=\"3112\">Chapter 08:</h1><h1  id=\"3113\">Extending Umbraco CMS</h1><p  id=\"3114\"><br id=\"3115\"></p><p  id=\"3116\"><br id=\"3117\"></p><p  id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2  id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p  id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p  id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p  id=\"3125\">User control</p><p  id=\"3126\">.NET Class Library Razor Engine XSLT</p><p  id=\"3127\">Python</p><p  id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p  id=\"3129\">Python is also not covered in this book.</p><p  id=\"3130\"><br id=\"3131\"></p><h3  id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" >User Control:</a></h3><div id=\"contentheading3132\" ><p  id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p  id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p  id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li  id=\"3138\"><p  id=\"3139\">Add New User Control</p></li><li  id=\"3140\"><p  id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p  id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li  id=\"3145\"><p  id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p  id=\"3147\"><br id=\"3148\"></p><p  id=\"3149\">Vcard-Process</p><p  id=\"3150\"><br id=\"3151\"></p><p  id=\"3152\">User Provides Personal Information</p><p  id=\"3153\">Generate Vcard</p><p  id=\"3154\">Send Vcard to Email</p><p  id=\"3155\">Save to Database</p><p  id=\"3156\">Vcard-Process</p><p  id=\"3157\"><br id=\"3158\"></p><p  id=\"3159\">User Provides Personal Information</p><p  id=\"3160\">Generate Vcard</p><p  id=\"3161\">Send Vcard to Email</p><p  id=\"3162\">Save to Database</p><p class=\"s10\"  id=\"3163\">\t\t</p><h3  id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" >Before start coding:</a></h3><div id=\"contentheading3164\" ><p  id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p  id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p  id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4  id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p  id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p  id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p  id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4  id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p  id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p  id=\"3182\"><br id=\"3183\"></p><p  id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\"  id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p  id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\"  target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p  id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\"  target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\"  id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\"  id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4  id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p  id=\"3202\"><br id=\"3203\"></p><p  id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\"  id=\"3207\">JavaScript.jpg </p><p class=\"s88\"  id=\"3208\">JavaScript.jpg </p><p  id=\"3209\"></p><p  id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p  id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p  id=\"3212\"><br id=\"3213\"></p><h4  id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p  id=\"3216\"><br id=\"3217\"></p><p  id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p  id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4  id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p  id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li  id=\"3225\"><p  id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li  id=\"3227\"><p  id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li  id=\"3229\"><p  id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li  id=\"3231\"><p  id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li  id=\"3233\"><p  id=\"3234\">“Regex” means Regular Expression.</p><p  id=\"3235\"><br id=\"3236\"></p><h4  id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p  id=\"3239\"><br id=\"3240\"></p><p  id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4  id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p  id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p  id=\"3246\"><br id=\"3247\"></p><h4  id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p  id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p  id=\"3251\"><br id=\"3252\"></p><h4  id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p  id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p  id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p  id=\"3257\"><br id=\"3258\"></p><p  id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p  id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p  id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p  id=\"3268\">User type personal Informatio n</p><p  id=\"3269\">Name: Email:</p><p  id=\"3270\">User type personal Informatio n</p><p  id=\"3271\">Name: Email:</p><p  id=\"3272\"></p><p  id=\"3273\">Generate Vcard</p><p  id=\"3274\">Generate Vcard</p><p  id=\"3275\"></p><p  id=\"3276\">Press Submit</p><p  id=\"3277\">Press Submit</p><p  id=\"3278\"></p><p  id=\"3279\">Validate submitted Data</p><p  id=\"3280\"><br id=\"3281\"></p><p  id=\"3282\"><br id=\"3283\"></p><p  id=\"3284\">Store in Database</p><p  id=\"3285\">Sent By Email</p><p  id=\"3286\">Store in Database</p><p  id=\"3287\">Sent By Email</p><p class=\"s10\"  id=\"3288\"><span  id=\"3289\"> </span>\t</p><p  id=\"3290\"><br id=\"3291\"></p><p  id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p  id=\"3293\"><br id=\"3294\"></p><h4  id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li  id=\"3297\"><p  id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li  id=\"3300\"><p  id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li  id=\"3302\"><p  id=\"3303\">Create Upload button for Image or Photo</p></li><li  id=\"3304\"><p  id=\"3305\">Create Button</p><ul id=\"l82\"><li  id=\"3307\"><p  id=\"3308\">To submit data</p><h4  id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li  id=\"3311\"><p  id=\"3312\">Create Class</p><ul id=\"l83\"><li  id=\"3314\"><p  id=\"3315\">To save data to Database</p></li></ul></li><li  id=\"3316\"><p  id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li  id=\"3319\"><p  id=\"3320\">Validate input methods</p></li><li  id=\"3321\"><p  id=\"3322\">Go Generate Vcard</p></li><li  id=\"3323\"><p  id=\"3324\">Send Email Store Data to Database</p><p  id=\"3325\"><br id=\"3326\"></p><p  id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\"  id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3  id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" >Let’s Begin to code:</a></h3><div id=\"contentheading3332\" ><p  id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li  id=\"3335\"><p  id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li  id=\"3337\"><p  id=\"3338\">File -&gt; New --&gt; Project</p></li><li  id=\"3339\"><p  id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li  id=\"3342\"><p  id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li  id=\"3344\"><p  id=\"3345\">Name: Vcard Generator</p></li><li  id=\"3346\"><p  id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li  id=\"3348\"><p  id=\"3349\">Solution name: leave default, if you want you can change</p></li><li  id=\"3350\"><p  id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li  id=\"3353\"><p  id=\"3354\">It will Create new directory</p></li></ul></li><li  id=\"3355\"><p  id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p  id=\"3357\"><br id=\"3358\"></p><p  id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p  id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p  id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p  id=\"3368\">It will open new windows</p><p  id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p  id=\"3374\"><br id=\"3375\"></p><p  id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p  id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p  id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p  id=\"3381\">Vcardcontrol.jp</p><p  id=\"3382\"><br id=\"3383\"></p><p class=\"s27\"  id=\"3384\">-</p><p  id=\"3385\"><br id=\"3386\"></p><p class=\"s27\"  id=\"3387\">-</p><p  id=\"3388\"><br id=\"3389\"></p><p class=\"s27\"  id=\"3390\">-</p><p  id=\"3391\"><br id=\"3392\"></p></div></div></div>","sub":[{"pageId":"87","pageLevel":1,"pageOrder":"87","pageParentId":"86","pageName":"Macro working Environments:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 10pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" style=\"color: green;\">Macro working Environments:</a></h3>","pageContent":"<div id=\"contentheading2908\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s45\" style=\"padding-top: 8pt;padding-left: 119pt;text-indent: 0pt;text-align: left;\" id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2912\"><br id=\"2913\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2914\">C</p><p style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"2915\">D</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2916\"><br id=\"2917\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2918\">E</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2919\"><br id=\"2920\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2921\">F</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2922\"><br id=\"2923\"></p><p style=\"padding-top: 10pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2924\">G</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2925\"><br id=\"2926\"></p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"2927\">H</p><p style=\"padding-top: 4pt;padding-left: 111pt;text-indent: 0pt;text-align: center;\" id=\"2928\">I</p><p style=\"padding-top: 4pt;padding-left: 314pt;text-indent: 0pt;text-align: left;\" id=\"2929\">J</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2930\"><br id=\"2931\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"2932\">K</p><p style=\"padding-top: 6pt;padding-left: 144pt;text-indent: 0pt;text-align: center;\" id=\"2933\">L</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2934\"><br id=\"2935\"></p><p style=\"padding-top: 4pt;padding-left: 145pt;text-indent: 0pt;text-align: center;\" id=\"2936\">M</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2937\"><br id=\"2938\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2939\"><br id=\"2940\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"2943\"><p style=\"display: inline;\" id=\"2944\">Save button to save your work or settings</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2945\"><p style=\"display: inline;\" id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p style=\"padding-top: 3pt;padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2949\"><p style=\"display: inline;\" id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"2951\"><p style=\"display: inline;\" id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2953\"><p style=\"display: inline;\" id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2955\"><p style=\"display: inline;\" id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2959\"><p style=\"display: inline;\" id=\"2960\">Show preview fetch data on Content Editor.</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"2961\"><p style=\"display: inline;\" id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"2963\"><p style=\"display: inline;\" id=\"2964\">Cached per page: cached page based on requested page</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"2965\"><p style=\"display: inline;\" id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2967\"><br id=\"2968\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2971\"><br id=\"2972\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li style=\"padding-top: 4pt;padding-left: 41pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"2984\"><p class=\"s8\" style=\"display: inline;\" id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: justify;\" id=\"2987\"><p class=\"s8\" style=\"display: inline;\" id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li style=\"padding-top: 1pt;padding-left: 77pt;text-indent: -18pt;line-height: 112%;text-align: justify;\" id=\"2989\"><p class=\"s8\" style=\"display: inline;\" id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2991\"><br id=\"2992\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" style=\"color: green;\">Using Macro into templates:</a></h3><div id=\"contentheading2994\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2996\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3000\"><p style=\"display: inline;\" id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3002\"><p style=\"display: inline;\" id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3004\"><p style=\"display: inline;\" id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li style=\"padding-top: 3pt;padding-left: 42pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3007\"><p style=\"display: inline;\" id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"3009\"><p style=\"display: inline;\" id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 262pt;text-align: left;\" id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li style=\"padding-top: 15pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3015\"><p class=\"s8\" style=\"display: inline;\" id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3018\"><br id=\"3019\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3020\"><p class=\"s8\" style=\"display: inline;\" id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3023\"><br id=\"3024\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3025\"><p class=\"s8\" style=\"display: inline;\" id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3028\"><br id=\"3029\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3030\"><p class=\"s8\" style=\"display: inline;\" id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3033\"><br id=\"3034\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3 style=\"padding-top: 9pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" style=\"color: green;\">Instruction to Insert Macro in Content Area:</a></h3></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3038\"><p style=\"display: inline;\" id=\"3039\">Open content “News”</p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3040\"><p style=\"display: inline;\" id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3042\"><p style=\"display: inline;\" id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3045\"><p style=\"display: inline;\" id=\"3046\">Select Marco and Press Insert.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3047\"><br id=\"3048\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li style=\"padding-top: 4pt;padding-left: 76pt;text-indent: -18pt;text-align: left;\" id=\"3057\"><p style=\"display: inline;\" id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li style=\"padding-bottom: 2pt;padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3059\"><p style=\"display: inline;\" id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3065\"><br id=\"3066\"></p></li><li style=\"padding-left: 40pt;text-indent: -18pt;text-align: left;\" id=\"3067\"><p style=\"display: inline;\" id=\"3068\">All red dotted area denotes Macro areas.</p></li><li style=\"padding-top: 2pt;padding-left: 40pt;text-indent: -18pt;line-height: 115%;text-align: justify;\" id=\"3069\"><p style=\"display: inline;\" id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li style=\"padding-left: 40pt;text-indent: -18pt;line-height: 114%;text-align: justify;\" id=\"3071\"><p style=\"display: inline;\" id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3073\"><br id=\"3074\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3075\"><br id=\"3076\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" style=\"color: green;\">Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"3079\"><br id=\"3080\"></p></div></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3081\"><p class=\"s42\" style=\"display: inline;\" id=\"3082\">Macro <span style=\" color: #000;\" id=\"3083\">macro = </span>Macro<span style=\" color: #000;\" id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3086\"><p class=\"s40\" style=\"display: inline;\" id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3088\"><p class=\"s40\" style=\"display: inline;\" id=\"3089\">macro.UseInEditor = <span style=\" color: #00F;\" id=\"3090\">true</span>;</p><ul id=\"l77\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3092\"><p class=\"s40\" style=\"display: inline;\" id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3094\"><p class=\"s40\" style=\"display: inline;\" id=\"3095\">macro.RenderContent = <span style=\" color: #00F;\" id=\"3096\">true</span>;</p><ul id=\"l78\"><li style=\"padding-left: 77pt;text-indent: -18pt;text-align: justify;\" id=\"3098\"><p class=\"s40\" style=\"display: inline;\" id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3100\"><p class=\"s40\" style=\"display: inline;\" id=\"3101\">macro.Xslt = <span style=\" color: #A21515;\" id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3103\"><p class=\"s40\" style=\"display: inline;\" id=\"3104\">provide location of xslt file to use.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3105\"><p class=\"s40\" style=\"display: inline;\" id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"3107\"><p class=\"s40\" style=\"display: inline;\" id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3110\"><br id=\"3111\"></p><h1 style=\"padding-top: 5pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3112\">Chapter 08:</h1><h1 style=\"padding-top: 14pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3113\">Extending Umbraco CMS</h1><p style=\"text-indent: 0pt;text-align: left;\" id=\"3114\"><br id=\"3115\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3116\"><br id=\"3117\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p style=\"padding-top: 9pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3125\">User control</p><p style=\"padding-top: 2pt;padding-left: 41pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3126\">.NET Class Library Razor Engine XSLT</p><p style=\"padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3127\">Python</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3129\">Python is also not covered in this book.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3130\"><br id=\"3131\"></p><h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" style=\"color: green;\">User Control:</a></h3><div id=\"contentheading3132\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3138\"><p style=\"display: inline;\" id=\"3139\">Add New User Control</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3140\"><p style=\"display: inline;\" id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3145\"><p style=\"display: inline;\" id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"3147\"><br id=\"3148\"></p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3149\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3150\"><br id=\"3151\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3152\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3153\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3154\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3155\">Save to Database</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3156\">Vcard-Process</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3157\"><br id=\"3158\"></p><p style=\"padding-left: 24pt;text-indent: 0pt;line-height: 16pt;text-align: left;\" id=\"3159\">User Provides Personal Information</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3160\">Generate Vcard</p><p style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"3161\">Send Vcard to Email</p><p style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"3162\">Save to Database</p><p class=\"s10\" style=\"padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"3163\">\t\t</p><h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" style=\"color: green;\">Before start coding:</a></h3><div id=\"contentheading3164\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 108%;text-align: left;\" id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: justify;\" id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3182\"><br id=\"3183\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: justify;\" id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3202\"><br id=\"3203\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3207\">JavaScript.jpg </p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3208\">JavaScript.jpg </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3209\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3212\"><br id=\"3213\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3216\"><br id=\"3217\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"3225\"><p style=\"display: inline;\" id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"3227\"><p style=\"display: inline;\" id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3229\"><p style=\"display: inline;\" id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3231\"><p style=\"display: inline;\" id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3233\"><p style=\"display: inline;\" id=\"3234\">“Regex” means Regular Expression.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3235\"><br id=\"3236\"></p><h4 style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3239\"><br id=\"3240\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3246\"><br id=\"3247\"></p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3251\"><br id=\"3252\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3257\"><br id=\"3258\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3268\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3269\">Name: Email:</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3270\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3271\">Name: Email:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3272\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3273\">Generate Vcard</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3274\">Generate Vcard</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3275\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3276\">Press Submit</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3277\">Press Submit</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3278\"></p><p style=\"padding-top: 4pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3279\">Validate submitted Data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3280\"><br id=\"3281\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3282\"><br id=\"3283\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3284\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3285\">Sent By Email</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3286\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3287\">Sent By Email</p><p class=\"s10\" style=\"padding-left: 152pt;text-indent: 0pt;text-align: left;\" id=\"3288\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"3289\"> </span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3290\"><br id=\"3291\"></p><p style=\"padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3293\"><br id=\"3294\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3297\"><p style=\"display: inline;\" id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3300\"><p style=\"display: inline;\" id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3302\"><p style=\"display: inline;\" id=\"3303\">Create Upload button for Image or Photo</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3304\"><p style=\"display: inline;\" id=\"3305\">Create Button</p><ul id=\"l82\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3307\"><p style=\"display: inline;\" id=\"3308\">To submit data</p><h4 style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3311\"><p style=\"display: inline;\" id=\"3312\">Create Class</p><ul id=\"l83\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3314\"><p style=\"display: inline;\" id=\"3315\">To save data to Database</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3316\"><p style=\"display: inline;\" id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 54pt;text-align: left;\" id=\"3319\"><p style=\"display: inline;\" id=\"3320\">Validate input methods</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3321\"><p style=\"display: inline;\" id=\"3322\">Go Generate Vcard</p></li><li style=\"padding-left: 6pt;text-indent: 54pt;line-height: 107%;text-align: left;\" id=\"3323\"><p style=\"display: inline;\" id=\"3324\">Send Email Store Data to Database</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3325\"><br id=\"3326\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" style=\"color: green;\">Let’s Begin to code:</a></h3><div id=\"contentheading3332\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3335\"><p style=\"display: inline;\" id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3337\"><p style=\"display: inline;\" id=\"3338\">File -&gt; New --&gt; Project</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3339\"><p style=\"display: inline;\" id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3342\"><p style=\"display: inline;\" id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3344\"><p style=\"display: inline;\" id=\"3345\">Name: Vcard Generator</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3346\"><p style=\"display: inline;\" id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3348\"><p style=\"display: inline;\" id=\"3349\">Solution name: leave default, if you want you can change</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3350\"><p style=\"display: inline;\" id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"3353\"><p style=\"display: inline;\" id=\"3354\">It will Create new directory</p></li></ul></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3355\"><p style=\"display: inline;\" id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"3357\"><br id=\"3358\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3368\">It will open new windows</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3374\"><br id=\"3375\"></p><p style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;line-height: 158%;text-align: left;\" id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p style=\"padding-top: 8pt;text-indent: 0pt;text-align: right;\" id=\"3381\">Vcardcontrol.jp</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3382\"><br id=\"3383\"></p><p class=\"s27\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3384\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3385\"><br id=\"3386\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3387\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3388\"><br id=\"3389\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3390\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3391\"><br id=\"3392\"></p></div></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading2908\" class=\"heading2908\"><a name=\"bookmark48\" id=\"2909\" >Macro working Environments:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading2908\" ><p class=\"s45\"  id=\"2910\">A <span class=\"p\" id=\"2911\">B</span></p><p  id=\"2912\"><br id=\"2913\"></p><p  id=\"2914\">C</p><p  id=\"2915\">D</p><p  id=\"2916\"><br id=\"2917\"></p><p  id=\"2918\">E</p><p  id=\"2919\"><br id=\"2920\"></p><p  id=\"2921\">F</p><p  id=\"2922\"><br id=\"2923\"></p><p  id=\"2924\">G</p><p  id=\"2925\"><br id=\"2926\"></p><p  id=\"2927\">H</p><p  id=\"2928\">I</p><p  id=\"2929\">J</p><p  id=\"2930\"><br id=\"2931\"></p><p  id=\"2932\">K</p><p  id=\"2933\">L</p><p  id=\"2934\"><br id=\"2935\"></p><p  id=\"2936\">M</p><p  id=\"2937\"><br id=\"2938\"></p><p  id=\"2939\"><br id=\"2940\"></p><p  id=\"2941\">Let me say something here before I start talking about marco working environments. I did not create macro here instead I checked “Create macro” option when I created three Xslt Files. If you followed me you should have same macro as me. If you did not checked “Create marco” option when you created Xslt, do not worry you can right click at Macro menu and Press “Create” it will open same windows as you are viewing now and start proving similar information like as in captured screen. it will be fine.</p><ol id=\"l71\"><li  id=\"2943\"><p  id=\"2944\">Save button to save your work or settings</p></li><li  id=\"2945\"><p  id=\"2946\">Parameters: macro allows you to insert parameter into macro. Whenever you use that macro you should provide value to parameter based on parameter type you created. In Xslt you can use that parameters using &lt;xsl:value-of</p><p  id=\"2947\">select=/macro/parameterAlis /&gt;. I will provide you reference to look more about Macro Parameters<span class=\"s3\" id=\"2948\">17</span>.</p></li><li  id=\"2949\"><p  id=\"2950\">Name of Macro: you provide name, if you checked “Create Macro” during Xslt creation time Umbraco will automatically assign name.</p></li><li  id=\"2951\"><p  id=\"2952\">Alias of macro, alias are available to insert macro into templates and content.</p></li><li  id=\"2953\"><p  id=\"2954\">Currently all three macro I have will associated with xslt. Here you can select your Xslt file that you want to use with macro</p></li><li  id=\"2955\"><p  id=\"2956\">If you create user control. You should select user control. I will show you later G- Use .NET custom control assembly and type.</p></li></ol><p  id=\"2957\">H- Or Use other script files for example Razor Engine. I- Checked if you want to use in Content Editor</p><ol id=\"l72\"><li  id=\"2959\"><p  id=\"2960\">Show preview fetch data on Content Editor.</p></li><li  id=\"2961\"><p  id=\"2962\">Cache for performance issue. Changing value will cause Umbraco to cache fetch data into server. It‟s duration of cache time. 10 second means cache macro output for 10 second</p></li><li  id=\"2963\"><p  id=\"2964\">Cached per page: cached page based on requested page</p></li><li  id=\"2965\"><p  id=\"2966\">Cached per personalized: checked if you want to cache Macro output based on members or person who visiting web pages.</p><p  id=\"2967\"><br id=\"2968\"></p><p  id=\"2969\">Let‟s see another macro “News List”: it‟s not difference but I checked in Use in Editor. <span class=\"s19\" id=\"2970\">See captured screen, found in next page</span>. If you do not have macro created you can easily create by right click on macro and press “Create” provide following captured screen information and Press “Save”</p><p  id=\"2971\"><br id=\"2972\"></p><p  id=\"2973\"><span id=\"2974\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_079.png\" id=\"2975\"></span></p><p class=\"s10\"  id=\"2976\"><a href=\"http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro-\"  target=\"_blank\" id=\"2977\">17 </a>http://our.umbraco.org/wiki/reference/templates/umbracomacro-element/macro- parameters/advanced-macro-parameter-syntax</p><p  id=\"2978\"><span id=\"2979\"><img width=\"525\" height=\"416\" alt=\"image\" src=\"Image_080.jpg\" id=\"2980\"></span></p><p  id=\"2981\"><br id=\"2982\"></p><ul id=\"l73\"><li  id=\"2984\"><p class=\"s8\"  id=\"2985\">Have you notice I checked in “Use in Editor” and I unchecked in “Cache By Page”.</p><ul id=\"l74\"><li  id=\"2987\"><p class=\"s8\"  id=\"2988\">I want to use news list macro in content editor so I checked “Use in Editor”</p></li><li  id=\"2989\"><p class=\"s8\"  id=\"2990\">News list macro are responsible to list all resent news and news means should be delivered instantly without delay so that I do not want to cache news items. If I cache news item, recently news will be delay to display to end users.</p><p  id=\"2991\"><br id=\"2992\"></p><p  id=\"2993\">Let‟s get fun by inserting macro to templates and see how our web page looks likes, If you followed me. We need to insert Two Macro “Global Setting” and “Navigation” at “Web Site Global Settings” templates and One Macro “News List” should be inserted into Content title News.</p><h3  id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" >Using Macro into templates:</a></h3><div id=\"contentheading2994\" ><p  id=\"2996\">Instruction:</p><p  id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div></li></ul></li><li  id=\"3000\"><p  id=\"3001\">Open “Web Site Global Settings” Templates</p></li><li  id=\"3002\"><p  id=\"3003\">click on between opening and closing Div class=”Title” tags.</p></li><li  id=\"3004\"><p  id=\"3005\">Click on Insert macro. Select “Global Setting” Umbraco will insert automatically. <span class=\"s16\" id=\"3006\">see Image right-&gt;</span></p></li><li  id=\"3007\"><p  id=\"3008\">Repeat same process to insert navigation macro. Make sure you have to insert macro inside opening and closing div class=”navigation”</p></li><li  id=\"3009\"><p  id=\"3010\">If you followed me “WebSite Global Settings” Template should look like <span class=\"s16\" id=\"3011\">this see highlighted area in captured screen bellow.</span></p><p class=\"s16\"  id=\"3012\">-      <span id=\"3013\"><img width=\"500\" height=\"346\" alt=\"image\" src=\"Image_082.jpg\" id=\"3014\"></span></p></li><li  id=\"3015\"><p class=\"s8\"  id=\"3016\">&lt;umbraco:Macro&gt;: <span class=\"p\" id=\"3017\">means, Macro starting tags</span></p><p  id=\"3018\"><br id=\"3019\"></p></li><li  id=\"3020\"><p class=\"s8\"  id=\"3021\">Alias: <span class=\"p\" id=\"3022\">alias of Macro we defined in Macro Section</span></p><p  id=\"3023\"><br id=\"3024\"></p></li><li  id=\"3025\"><p class=\"s8\"  id=\"3026\">Runat=”server”: <span class=\"p\" id=\"3027\">Means execute that block of code at server</span></p><p  id=\"3028\"><br id=\"3029\"></p></li><li  id=\"3030\"><p class=\"s8\"  id=\"3031\">&lt;/umbraco:Macro&gt;: <span class=\"p\" id=\"3032\">closing of macros tags</span></p><p  id=\"3033\"><br id=\"3034\"></p><p  id=\"3035\">Lets insert Macro into Content Editor as well and get knowledge of use of macro in different sections. Open content Section. I already create content “News” based on “General Content” Document Type. If you did not create, create first and continue to insert Macro in Content Editor. Using Macro in Content Editor is another way to fetch data in Umbraco CMS. When you create content make sure you checked “Use In Navigation” check box for Content “News” otherwise “News” Content would not show up in navigation bar.</p><h3  id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" >Instruction to Insert Macro in Content Area:</a></h3></li><li  id=\"3038\"><p  id=\"3039\">Open content “News”</p></li><li  id=\"3040\"><p  id=\"3041\">Click Tabs “Description”. It will show up Content body Area.</p></li><li  id=\"3042\"><p  id=\"3043\">Navigate Insert Macro at top-right corner of Richtext editor tools<span class=\"s3\" id=\"3044\">18</span></p></li><li  id=\"3045\"><p  id=\"3046\">Select Marco and Press Insert.</p><p  id=\"3047\"><br id=\"3048\"></p><p  id=\"3049\"><span id=\"3050\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_083.png\" id=\"3051\"></span></p><p class=\"s20\"  id=\"3052\">18 <span class=\"s10\" id=\"3053\">Rich text editor tools. It means your Document Type property should have “Rich Text Editor” data type selected. Insert marco is not available for data type “simple text editor”.</span></p><p  id=\"3054\"><br id=\"3055\"></p><ul id=\"l75\"><li  id=\"3057\"><p  id=\"3058\">Make sure to press “Save and Publish” Button.</p></li></ul></li><li  id=\"3059\"><p  id=\"3060\">If you followed me. <span class=\"s10\" id=\"3061\">See highlighted area at captured screen bellow as reference</span>.</p><p  id=\"3062\"><span id=\"3063\"><img width=\"616\" height=\"281\" alt=\"image\" src=\"Image_084.png\" id=\"3064\"></span></p><p  id=\"3065\"><br id=\"3066\"></p></li><li  id=\"3067\"><p  id=\"3068\">All red dotted area denotes Macro areas.</p></li><li  id=\"3069\"><p  id=\"3070\">Did you see Two content are fetched at Content Editor? It is because we checked “Render in Content Editor” in News List Macro settings.</p></li><li  id=\"3071\"><p  id=\"3072\">If you see Empty “Insert Macro” menu means you did not checked “Use in Editor” check box in “News List” Macro settings. So go back to “News List” Macro and checked “use in Editor” After this macro should be available to insert at Content Editor.</p><p  id=\"3073\"><br id=\"3074\"></p><p  id=\"3075\"><br id=\"3076\"></p><h3  id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" >Macro API (Application Programming Interface)</a></h3><div id=\"contentheading3077\" ><p  id=\"3079\"><br id=\"3080\"></p></div></li><li  id=\"3081\"><p class=\"s42\"  id=\"3082\">Macro <span  id=\"3083\">macro = </span>Macro<span  id=\"3084\">.MakeNew(name);</span></p><ul id=\"l76\"><li  id=\"3086\"><p class=\"s40\"  id=\"3087\">Passing name will made new macro. Alias will be assign automatically. You can change it later if you want to change</p></li></ul></li><li  id=\"3088\"><p class=\"s40\"  id=\"3089\">macro.UseInEditor = <span  id=\"3090\">true</span>;</p><ul id=\"l77\"><li  id=\"3092\"><p class=\"s40\"  id=\"3093\">set value True if you want to use Macro into Content Editor. Else set False</p></li></ul></li><li  id=\"3094\"><p class=\"s40\"  id=\"3095\">macro.RenderContent = <span  id=\"3096\">true</span>;</p><ul id=\"l78\"><li  id=\"3098\"><p class=\"s40\"  id=\"3099\">Set True if you want to render content into Content Editor. Else set Flase</p></li></ul></li><li  id=\"3100\"><p class=\"s40\"  id=\"3101\">macro.Xslt = <span  id=\"3102\">\"/xslt/NewsList.xslt\"</span>;</p></li><li  id=\"3103\"><p class=\"s40\"  id=\"3104\">provide location of xslt file to use.</p></li><li  id=\"3105\"><p class=\"s40\"  id=\"3106\">In above example macro is linking to ‚NewsList.xslt‛ xslt file.</p></li><li  id=\"3107\"><p class=\"s40\"  id=\"3108\">macro.Save();</p></li></ul><p class=\"s87\"  id=\"3109\">When you press Save Button, Umbraco execute Save() void method.</p><p  id=\"3110\"><br id=\"3111\"></p><h1  id=\"3112\">Chapter 08:</h1><h1  id=\"3113\">Extending Umbraco CMS</h1><p  id=\"3114\"><br id=\"3115\"></p><p  id=\"3116\"><br id=\"3117\"></p><p  id=\"3118\"><span id=\"3119\"><img width=\"534\" height=\"1\" alt=\"image\" src=\"Image_085.png\" id=\"3120\"></span></p><h2  id=\"3121\"><a name=\"bookmark52\" id=\"3122\">Extending Umbraco CMS</a></h2><p  id=\"3123\">Default Umbraco CMS may not contain enough methods or function that your website requires, in such case you need to extend Umbraco CMS website.</p><p  id=\"3124\">Extending Umbraco CMS is not difficult if you already work with ASP.NET application. There are many ways to extend Umbraco CMS. Some are listed below.</p><p  id=\"3125\">User control</p><p  id=\"3126\">.NET Class Library Razor Engine XSLT</p><p  id=\"3127\">Python</p><p  id=\"3128\">Here I will discuss top two lists to extend Umbraco CMS. XSLT I already covered. Razor Engine is based on MVC and not covered in this book.</p><p  id=\"3129\">Python is also not covered in this book.</p><p  id=\"3130\"><br id=\"3131\"></p><h3  id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" >User Control:</a></h3><div id=\"contentheading3132\" ><p  id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p  id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p  id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li  id=\"3138\"><p  id=\"3139\">Add New User Control</p></li><li  id=\"3140\"><p  id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p  id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li  id=\"3145\"><p  id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div></li></ol><p  id=\"3147\"><br id=\"3148\"></p><p  id=\"3149\">Vcard-Process</p><p  id=\"3150\"><br id=\"3151\"></p><p  id=\"3152\">User Provides Personal Information</p><p  id=\"3153\">Generate Vcard</p><p  id=\"3154\">Send Vcard to Email</p><p  id=\"3155\">Save to Database</p><p  id=\"3156\">Vcard-Process</p><p  id=\"3157\"><br id=\"3158\"></p><p  id=\"3159\">User Provides Personal Information</p><p  id=\"3160\">Generate Vcard</p><p  id=\"3161\">Send Vcard to Email</p><p  id=\"3162\">Save to Database</p><p class=\"s10\"  id=\"3163\">\t\t</p><h3  id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" >Before start coding:</a></h3><div id=\"contentheading3164\" ><p  id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p  id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p  id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4  id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p  id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p  id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p  id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4  id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p  id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p  id=\"3182\"><br id=\"3183\"></p><p  id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\"  id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p  id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\"  target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p  id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\"  target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\"  id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\"  id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4  id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p  id=\"3202\"><br id=\"3203\"></p><p  id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\"  id=\"3207\">JavaScript.jpg </p><p class=\"s88\"  id=\"3208\">JavaScript.jpg </p><p  id=\"3209\"></p><p  id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p  id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p  id=\"3212\"><br id=\"3213\"></p><h4  id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p  id=\"3216\"><br id=\"3217\"></p><p  id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p  id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4  id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p  id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li  id=\"3225\"><p  id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li  id=\"3227\"><p  id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li  id=\"3229\"><p  id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li  id=\"3231\"><p  id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li  id=\"3233\"><p  id=\"3234\">“Regex” means Regular Expression.</p><p  id=\"3235\"><br id=\"3236\"></p><h4  id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p  id=\"3239\"><br id=\"3240\"></p><p  id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4  id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p  id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p  id=\"3246\"><br id=\"3247\"></p><h4  id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p  id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p  id=\"3251\"><br id=\"3252\"></p><h4  id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p  id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p  id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p  id=\"3257\"><br id=\"3258\"></p><p  id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p  id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p  id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p  id=\"3268\">User type personal Informatio n</p><p  id=\"3269\">Name: Email:</p><p  id=\"3270\">User type personal Informatio n</p><p  id=\"3271\">Name: Email:</p><p  id=\"3272\"></p><p  id=\"3273\">Generate Vcard</p><p  id=\"3274\">Generate Vcard</p><p  id=\"3275\"></p><p  id=\"3276\">Press Submit</p><p  id=\"3277\">Press Submit</p><p  id=\"3278\"></p><p  id=\"3279\">Validate submitted Data</p><p  id=\"3280\"><br id=\"3281\"></p><p  id=\"3282\"><br id=\"3283\"></p><p  id=\"3284\">Store in Database</p><p  id=\"3285\">Sent By Email</p><p  id=\"3286\">Store in Database</p><p  id=\"3287\">Sent By Email</p><p class=\"s10\"  id=\"3288\"><span  id=\"3289\"> </span>\t</p><p  id=\"3290\"><br id=\"3291\"></p><p  id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p  id=\"3293\"><br id=\"3294\"></p><h4  id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li  id=\"3297\"><p  id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li  id=\"3300\"><p  id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li  id=\"3302\"><p  id=\"3303\">Create Upload button for Image or Photo</p></li><li  id=\"3304\"><p  id=\"3305\">Create Button</p><ul id=\"l82\"><li  id=\"3307\"><p  id=\"3308\">To submit data</p><h4  id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li  id=\"3311\"><p  id=\"3312\">Create Class</p><ul id=\"l83\"><li  id=\"3314\"><p  id=\"3315\">To save data to Database</p></li></ul></li><li  id=\"3316\"><p  id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li  id=\"3319\"><p  id=\"3320\">Validate input methods</p></li><li  id=\"3321\"><p  id=\"3322\">Go Generate Vcard</p></li><li  id=\"3323\"><p  id=\"3324\">Send Email Store Data to Database</p><p  id=\"3325\"><br id=\"3326\"></p><p  id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\"  id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3  id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" >Let’s Begin to code:</a></h3><div id=\"contentheading3332\" ><p  id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li  id=\"3335\"><p  id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li  id=\"3337\"><p  id=\"3338\">File -&gt; New --&gt; Project</p></li><li  id=\"3339\"><p  id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li  id=\"3342\"><p  id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li  id=\"3344\"><p  id=\"3345\">Name: Vcard Generator</p></li><li  id=\"3346\"><p  id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li  id=\"3348\"><p  id=\"3349\">Solution name: leave default, if you want you can change</p></li><li  id=\"3350\"><p  id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li  id=\"3353\"><p  id=\"3354\">It will Create new directory</p></li></ul></li><li  id=\"3355\"><p  id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p  id=\"3357\"><br id=\"3358\"></p><p  id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p  id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p  id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p  id=\"3368\">It will open new windows</p><p  id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p  id=\"3374\"><br id=\"3375\"></p><p  id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p  id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p  id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p  id=\"3381\">Vcardcontrol.jp</p><p  id=\"3382\"><br id=\"3383\"></p><p class=\"s27\"  id=\"3384\">-</p><p  id=\"3385\"><br id=\"3386\"></p><p class=\"s27\"  id=\"3387\">-</p><p  id=\"3388\"><br id=\"3389\"></p><p class=\"s27\"  id=\"3390\">-</p><p  id=\"3391\"><br id=\"3392\"></p></div></div>","sub":[]},{"pageId":"88","pageLevel":1,"pageOrder":"88","pageParentId":"86","pageName":"Using Macro into templates:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" style=\"color: green;\">Using Macro into templates:</a></h3>","pageContent":"<div id=\"contentheading2994\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"2996\">Instruction:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading2994\" class=\"heading2994\"><a name=\"bookmark49\" id=\"2995\" >Using Macro into templates:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading2994\" ><p  id=\"2996\">Instruction:</p><p  id=\"2997\"><span id=\"2998\"><img width=\"209\" height=\"143\" alt=\"image\" src=\"Image_081.jpg\" id=\"2999\"></span></p></div>","sub":[]},{"pageId":"89","pageLevel":1,"pageOrder":"89","pageParentId":"86","pageName":"Instruction to Insert Macro in Content Area:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 9pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" style=\"color: green;\">Instruction to Insert Macro in Content Area:</a></h3>","pageContent":"","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading3036\" class=\"heading3036\"><a name=\"bookmark50\" id=\"3037\" >Instruction to Insert Macro in Content Area:</a></h3>","pageStyleReducedContent":"","sub":[]},{"pageId":"90","pageLevel":1,"pageOrder":"90","pageParentId":"86","pageName":"Macro API (Application Programming Interface)","endPointPath":"","pageHeading":"<h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" style=\"color: green;\">Macro API (Application Programming Interface)</a></h3>","pageContent":"<div id=\"contentheading3077\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"3079\"><br id=\"3080\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading3077\" class=\"heading3077\"><a name=\"bookmark51\" id=\"3078\" >Macro API (Application Programming Interface)</a></h3>","pageStyleReducedContent":"<div id=\"contentheading3077\" ><p  id=\"3079\"><br id=\"3080\"></p></div>","sub":[]},{"pageId":"91","pageLevel":1,"pageOrder":"91","pageParentId":"86","pageName":"User Control:","endPointPath":"","pageHeading":"<h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" style=\"color: green;\">User Control:</a></h3>","pageContent":"<div id=\"contentheading3132\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3138\"><p style=\"display: inline;\" id=\"3139\">Add New User Control</p></li><li style=\"padding-top: 2pt;padding-left: 41pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"3140\"><p style=\"display: inline;\" id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li style=\"padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3145\"><p style=\"display: inline;\" id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading3132\" class=\"heading3132\"><a name=\"bookmark53\" id=\"3133\" >User Control:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading3132\" ><p  id=\"3134\">User control is not difficult, if you already work with user control in ASP.NET websites, you will feel comfortable. The way you write the code is same as you write in ASP.NET websites. There is no difference writing code for Umbraco. Let‟s see image diagram bellow as references and make concept for User control.</p><p  id=\"3135\">In our Vcard Web sites, main production is to provide Online Vcard Generator So that user can create Vcard including image.</p><p  id=\"3136\">Assume that now you are not creating UserControl to Umbraco sits instead you are creating for ASP.NET websites. Make a plan same way that you would do in ASP.NET websites using Usercontrol. My approach to create Vcard generator in ASP.NET is follows</p><ol id=\"l79\"><li  id=\"3138\"><p  id=\"3139\">Add New User Control</p></li><li  id=\"3140\"><p  id=\"3141\">Add Input textbox to type text, Add Upload to upload Image in View Page (“.ascx”)</p><p  id=\"3142\"><span id=\"3143\"><img width=\"601\" height=\"144\" alt=\"image\" src=\"Image_086.png\" id=\"3144\"></span></p></li><li  id=\"3145\"><p  id=\"3146\">Add Button To Upload and Create Vcard Methods 4- Writhe c# Code in Code Behind page (“.ascx.cs”)</p></li></ol></div>","sub":[]},{"pageId":"92","pageLevel":1,"pageOrder":"92","pageParentId":"86","pageName":"Before start coding:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" style=\"color: green;\">Before start coding:</a></h3>","pageContent":"<div id=\"contentheading3164\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 108%;text-align: left;\" id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 15pt;text-align: justify;\" id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4 style=\"padding-top: 10pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3182\"><br id=\"3183\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: justify;\" id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: justify;\" id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4 style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3202\"><br id=\"3203\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3207\">JavaScript.jpg </p><p class=\"s88\" style=\"padding-top: 7pt;padding-left: 163pt;text-indent: 0pt;text-align: left;\" id=\"3208\">JavaScript.jpg </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3209\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3212\"><br id=\"3213\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3216\"><br id=\"3217\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4 style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 109%;text-align: justify;\" id=\"3225\"><p style=\"display: inline;\" id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 113%;text-align: justify;\" id=\"3227\"><p style=\"display: inline;\" id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3229\"><p style=\"display: inline;\" id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;line-height: 110%;text-align: justify;\" id=\"3231\"><p style=\"display: inline;\" id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3233\"><p style=\"display: inline;\" id=\"3234\">“Regex” means Regular Expression.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3235\"><br id=\"3236\"></p><h4 style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"3239\"><br id=\"3240\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 112%;text-align: justify;\" id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3246\"><br id=\"3247\"></p><h4 style=\"padding-top: 11pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3251\"><br id=\"3252\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: justify;\" id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3257\"><br id=\"3258\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3268\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3269\">Name: Email:</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3270\">User type personal Informatio n</p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"3271\">Name: Email:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3272\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3273\">Generate Vcard</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3274\">Generate Vcard</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3275\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3276\">Press Submit</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"3277\">Press Submit</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3278\"></p><p style=\"padding-top: 4pt;padding-left: 235pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"3279\">Validate submitted Data</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3280\"><br id=\"3281\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3282\"><br id=\"3283\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3284\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3285\">Sent By Email</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3286\">Store in Database</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"3287\">Sent By Email</p><p class=\"s10\" style=\"padding-left: 152pt;text-indent: 0pt;text-align: left;\" id=\"3288\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"3289\"> </span>\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3290\"><br id=\"3291\"></p><p style=\"padding-top: 4pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3293\"><br id=\"3294\"></p><h4 style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li style=\"padding-top: 2pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3297\"><p style=\"display: inline;\" id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3300\"><p style=\"display: inline;\" id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3302\"><p style=\"display: inline;\" id=\"3303\">Create Upload button for Image or Photo</p></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3304\"><p style=\"display: inline;\" id=\"3305\">Create Button</p><ul id=\"l82\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3307\"><p style=\"display: inline;\" id=\"3308\">To submit data</p><h4 style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li style=\"padding-top: 1pt;padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3311\"><p style=\"display: inline;\" id=\"3312\">Create Class</p><ul id=\"l83\"><li style=\"padding-top: 1pt;padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3314\"><p style=\"display: inline;\" id=\"3315\">To save data to Database</p></li></ul></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"3316\"><p style=\"display: inline;\" id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li style=\"padding-top: 1pt;padding-left: 6pt;text-indent: 54pt;text-align: left;\" id=\"3319\"><p style=\"display: inline;\" id=\"3320\">Validate input methods</p></li><li style=\"padding-left: 78pt;text-indent: -18pt;text-align: left;\" id=\"3321\"><p style=\"display: inline;\" id=\"3322\">Go Generate Vcard</p></li><li style=\"padding-left: 6pt;text-indent: 54pt;line-height: 107%;text-align: left;\" id=\"3323\"><p style=\"display: inline;\" id=\"3324\">Send Email Store Data to Database</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3325\"><br id=\"3326\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" style=\"color: green;\">Let’s Begin to code:</a></h3><div id=\"contentheading3332\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li style=\"padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3335\"><p style=\"display: inline;\" id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3337\"><p style=\"display: inline;\" id=\"3338\">File -&gt; New --&gt; Project</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3339\"><p style=\"display: inline;\" id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;line-height: 107%;text-align: left;\" id=\"3342\"><p style=\"display: inline;\" id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3344\"><p style=\"display: inline;\" id=\"3345\">Name: Vcard Generator</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3346\"><p style=\"display: inline;\" id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3348\"><p style=\"display: inline;\" id=\"3349\">Solution name: leave default, if you want you can change</p></li><li style=\"padding-top: 11pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3350\"><p style=\"display: inline;\" id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li style=\"padding-top: 11pt;padding-left: 77pt;text-indent: -18pt;text-align: left;\" id=\"3353\"><p style=\"display: inline;\" id=\"3354\">It will Create new directory</p></li></ul></li><li style=\"padding-top: 10pt;padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"3355\"><p style=\"display: inline;\" id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"3357\"><br id=\"3358\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3368\">It will open new windows</p><p style=\"padding-top: 8pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3374\"><br id=\"3375\"></p><p style=\"padding-top: 4pt;padding-left: 24pt;text-indent: 0pt;line-height: 158%;text-align: left;\" id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p style=\"padding-left: 24pt;text-indent: 0pt;text-align: left;\" id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p style=\"padding-top: 8pt;text-indent: 0pt;text-align: right;\" id=\"3381\">Vcardcontrol.jp</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3382\"><br id=\"3383\"></p><p class=\"s27\" style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3384\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3385\"><br id=\"3386\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3387\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3388\"><br id=\"3389\"></p><p class=\"s27\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"3390\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3391\"><br id=\"3392\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading3164\" class=\"heading3164\"><a name=\"bookmark54\" id=\"3165\" >Before start coding:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading3164\" ><p  id=\"3166\">You get short idea to create usercontrol for ASP.NET web site. It‟s a similar way for Umbraco also. We need to create Usercontrol first. Before start coding or programming I have to say something about how to start for VCARD.</p><p  id=\"3167\">Vcard is personal information that understands by machine. Personal information contains Name, Email, Phone, Image, Address, Title etc. To generate Vcard we should have personal information of user. User visit website so we need to provide some sort of input environment where use can type using keyboard or other assistive technology devices and retrieve data from client side. We can process to generate Vcard when we get enough information. Here what does it mean “enough Information”?</p><p  id=\"3168\">It can be different answers, in our Vcard concept. Vcard should be send to Email address means Email must have and should be valid otherwise we will not able to send Vcard through email. In our Vcard website Name is compulsory and other information are optional.</p><h4  id=\"3169\"><a name=\"a48\" id=\"3170\">Never trust Client:</a></h4><p  id=\"3171\">Clients are not controllable. Consciously or unconsciously clients may send invalid, harmful and dangerous data because we are providing input environment to end users. There is some security <span class=\"s3\" id=\"3172\">19</span>an issue.</p><p  id=\"3173\">For example: XSS<span class=\"s3\" id=\"3174\">20 </span>(cross site script) and SQL Injection<span class=\"s3\" id=\"3175\">21 </span>are the major security</p><p  id=\"3176\">issues<span class=\"s3\" id=\"3177\">22</span>. To prevent from these attacks programmer needs to consider security issues like validation and remove special characters. Validation means validate input field like email must contain “identity”, symbol “@”, Domain Name and Domain Extension example “.com” or sub domain also acceptable. Special Characters<span class=\"s3\" id=\"3178\">23 </span>means those character are preserved by programming languages and used on program. Example “;” that used to end block of code.</p><h4  id=\"3179\"><a name=\"a49\" id=\"3180\">Client side validation</a></h4><p  id=\"3181\">This is fast way to validate input data on client side using JavaScript or Jquery languages. Using client side validation, browser do not need to transfer data from Client to Server to Client. Browser will execute client side program and validate before submit data to server. Using client side validate we can provide rich validate environment. It‟s a fast way but we should not trust to client because client easily disable or escape these validation steps if s/he knows about program. For example if I program email validation using JavaScript. Let‟s open Firefox and Open “Option”. You will see “Enable JavaScript” option in “Content” Section. If you uncheck it and Press OK, it will disable JavaScript. See Captured Screen in next page “JavaScript.jpg”</p><p  id=\"3182\"><br id=\"3183\"></p><p  id=\"3184\"><span id=\"3185\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_087.png\" id=\"3186\"></span></p><p class=\"s20\"  id=\"3187\">19 <span class=\"s10\" id=\"3188\">Security Issues based on 2</span>nd <span class=\"s10\" id=\"3189\">semester IT security class by Tue Becher.</span></p><p  id=\"3190\"><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\"  target=\"_blank\" id=\"3191\">20 </a><a href=\"http://en.wikipedia.org/wiki/Cross-site_scripting\" class=\"s11\" target=\"_blank\" id=\"3192\">http://en.wikipedia.org/wiki/Cross-site_scripting</a></p><p  id=\"3193\"><a href=\"http://en.wikipedia.org/wiki/Sql_injection\"  target=\"_blank\" id=\"3194\">21 </a><a href=\"http://en.wikipedia.org/wiki/Sql_injection\" class=\"s11\" target=\"_blank\" id=\"3195\">http://en.wikipedia.org/wiki/Sql_injection</a></p><p class=\"s20\"  id=\"3196\">22 <a href=\"http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html\" class=\"s11\" target=\"_blank\" id=\"3197\">Based on http://sanjevsharma.blogspot.com/2008/05/aspnet-top-security-issues-checklist.html</a></p><p class=\"s20\"  id=\"3198\">23 <span class=\"s10\" id=\"3199\">Special characters like , ; “” „‟ {} / etc.</span></p><h4  id=\"3200\"><a name=\"a50\" id=\"3201\">Did you notice any problem here when you disable JavaScript?</a></h4><p  id=\"3202\"><br id=\"3203\"></p><p  id=\"3204\"><span id=\"3205\"><img width=\"359\" height=\"270\" alt=\"image\" src=\"Image_088.png\" id=\"3206\"></span></p><p class=\"s88\"  id=\"3207\">JavaScript.jpg </p><p class=\"s88\"  id=\"3208\">JavaScript.jpg </p><p  id=\"3209\"></p><p  id=\"3210\">I explain more and it will be clear. Email is validating using JavaScript Code, but client can easily disable JavaScript on their browser when Client submit data all JavaScript Validation does not work because JavaScript is disable by Client in that case email validation is fail. So that to provide more secure we should also implement Server side validation.</p><p  id=\"3211\">Note: I will not cover “Client Side Validation” in this “How To Umbraco” basic.</p><p  id=\"3212\"><br id=\"3213\"></p><h4  id=\"3214\"><a name=\"a51\" id=\"3215\">Server Side Validation:</a></h4><p  id=\"3216\"><br id=\"3217\"></p><p  id=\"3218\">Server where client does not have control but you have control over server, make validation on server</p><p  id=\"3219\">site will make site more secure that input data is in Valid format and not harmful. I cover shortly about server side validation here if you need more about Server Side Validation you can look up yourself.</p><h4  id=\"3220\"><a name=\"a52\" id=\"3221\">Here I will cover:</a></h4><p  id=\"3222\"><br id=\"3223\"></p><ul id=\"l80\"><li  id=\"3225\"><p  id=\"3226\">Name validation. For example it must have alphabet characters no numbers and Name must not be empty.</p></li><li  id=\"3227\"><p  id=\"3228\">Phone: it will validate Danish phone number format, its 8 digital characters without country code. You can easily implement phone number validation for other country code. Only difference is number of digital character. For example in Nepal mobile number has Ten digital format and Land line phones has eight digital characters in that case you need to provide two different mobile or phone validation rules.</p></li><li  id=\"3229\"><p  id=\"3230\">Email: I will use third party validation, someone already coded to validate email I will use it, of course I will explain what does it means.</p></li><li  id=\"3231\"><p  id=\"3232\">Replace Especial characters: I will show you how to replace special characters using Regex.</p></li><li  id=\"3233\"><p  id=\"3234\">“Regex” means Regular Expression.</p><p  id=\"3235\"><br id=\"3236\"></p><h4  id=\"3237\"><a name=\"a53\" id=\"3238\">Submit Button:</a></h4><p  id=\"3239\"><br id=\"3240\"></p><p  id=\"3241\">After filling personal information user should able to submit form. For this purpose we need to create Button.</p><h4  id=\"3242\"><a name=\"a54\" id=\"3243\">Storing Personal Data:</a></h4><p  id=\"3244\">After user submitting data, we do not only generate Vcard but also Vcard is sent to Email. We also save to Database for later purpose<span class=\"s3\" id=\"3245\">24</span>. For example if users want to edit some information later or User wants to generate Vcard later on, it‟s not good idea to provide same information more than once to create Vcard so we need to save data to Database, and retrieve whenever we need it.</p><p  id=\"3246\"><br id=\"3247\"></p><h4  id=\"3248\"><a name=\"a55\" id=\"3249\">Generate Vcard:</a></h4><p  id=\"3250\">When user submits personal information then we need to process to generate Vcard.</p><p  id=\"3251\"><br id=\"3252\"></p><h4  id=\"3253\"><a name=\"a56\" id=\"3254\">Send Email:</a></h4><p  id=\"3255\">As Vcard case, Vcard should be sent to Email.</p><p  id=\"3256\">Let‟s generate Visual Diagram how these will be done.</p><p  id=\"3257\"><br id=\"3258\"></p><p  id=\"3259\"><span id=\"3260\"><img width=\"203\" height=\"132\" alt=\"image\" src=\"Image_089.png\" id=\"3261\"></span></p><p  id=\"3262\"><span id=\"3263\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_090.png\" id=\"3264\"></span></p><p  id=\"3265\"><span id=\"3266\"><img width=\"32\" height=\"8\" alt=\"image\" src=\"Image_091.png\" id=\"3267\"></span></p><p  id=\"3268\">User type personal Informatio n</p><p  id=\"3269\">Name: Email:</p><p  id=\"3270\">User type personal Informatio n</p><p  id=\"3271\">Name: Email:</p><p  id=\"3272\"></p><p  id=\"3273\">Generate Vcard</p><p  id=\"3274\">Generate Vcard</p><p  id=\"3275\"></p><p  id=\"3276\">Press Submit</p><p  id=\"3277\">Press Submit</p><p  id=\"3278\"></p><p  id=\"3279\">Validate submitted Data</p><p  id=\"3280\"><br id=\"3281\"></p><p  id=\"3282\"><br id=\"3283\"></p><p  id=\"3284\">Store in Database</p><p  id=\"3285\">Sent By Email</p><p  id=\"3286\">Store in Database</p><p  id=\"3287\">Sent By Email</p><p class=\"s10\"  id=\"3288\"><span  id=\"3289\"> </span>\t</p><p  id=\"3290\"><br id=\"3291\"></p><p  id=\"3292\">These are visual diagram before start coding let‟s reviews so it will be easier to code.</p><p  id=\"3293\"><br id=\"3294\"></p><h4  id=\"3295\"><a name=\"a57\" id=\"3296\">Needs to do in “User Control Design View”</a></h4></li><li  id=\"3297\"><p  id=\"3298\">Create Seven Text Box for</p><ul id=\"l81\"><li  id=\"3300\"><p  id=\"3301\">Name, street, postal code, country, phone, email and website,</p></li></ul></li><li  id=\"3302\"><p  id=\"3303\">Create Upload button for Image or Photo</p></li><li  id=\"3304\"><p  id=\"3305\">Create Button</p><ul id=\"l82\"><li  id=\"3307\"><p  id=\"3308\">To submit data</p><h4  id=\"3309\"><a name=\"a58\" id=\"3310\">Needs to do in “Code behind Page”</a></h4></li></ul></li><li  id=\"3311\"><p  id=\"3312\">Create Class</p><ul id=\"l83\"><li  id=\"3314\"><p  id=\"3315\">To save data to Database</p></li></ul></li><li  id=\"3316\"><p  id=\"3317\">Write Code to process following jobs.</p><ul id=\"l84\"><li  id=\"3319\"><p  id=\"3320\">Validate input methods</p></li><li  id=\"3321\"><p  id=\"3322\">Go Generate Vcard</p></li><li  id=\"3323\"><p  id=\"3324\">Send Email Store Data to Database</p><p  id=\"3325\"><br id=\"3326\"></p><p  id=\"3327\"><span id=\"3328\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_092.png\" id=\"3329\"></span></p><p class=\"s20\"  id=\"3330\">24 <span class=\"s10\" id=\"3331\">Later purpose means if you want to reuse email, name or location etc after user submitted form.</span></p><h3  id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" >Let’s Begin to code:</a></h3><div id=\"contentheading3332\" ><p  id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div></li><li  id=\"3335\"><p  id=\"3336\">If You have not installed yet, please back to “Requirements” and install Visual Studio</p></li></ul></li><li  id=\"3337\"><p  id=\"3338\">File -&gt; New --&gt; Project</p></li><li  id=\"3339\"><p  id=\"3340\">Select Web --&gt; ASP.NET Empty Web Application… Visual C#</p><ul id=\"l85\"><li  id=\"3342\"><p  id=\"3343\">You can choose VB if you know how to code in VB but here I will use C#</p></li></ul></li><li  id=\"3344\"><p  id=\"3345\">Name: Vcard Generator</p></li><li  id=\"3346\"><p  id=\"3347\">Location: choose different location if you want. I am using “Desktop”</p></li><li  id=\"3348\"><p  id=\"3349\">Solution name: leave default, if you want you can change</p></li><li  id=\"3350\"><p  id=\"3351\">Checked : Create Director for solution</p><ul id=\"l86\"><li  id=\"3353\"><p  id=\"3354\">It will Create new directory</p></li></ul></li><li  id=\"3355\"><p  id=\"3356\">Press OK. See captured screen bellow</p></li></ul><p  id=\"3357\"><br id=\"3358\"></p><p  id=\"3359\"><span id=\"3360\"><img width=\"491\" height=\"275\" alt=\"image\" src=\"Image_093.jpg\" id=\"3361\"></span></p><p  id=\"3362\">It should create new solution called “VCardGenerator”. Now you need to add user Control</p><p  id=\"3363\">Right Click on Solution. <span class=\"s89\" id=\"3364\"></span><span class=\"s28\" id=\"3365\"> </span>Add <span class=\"s89\" id=\"3366\"></span><span class=\"s28\" id=\"3367\"> </span>New Items.</p><p  id=\"3368\">It will open new windows</p><p  id=\"3369\">Select <span class=\"s89\" id=\"3370\"></span><span class=\"s28\" id=\"3371\"> </span>Web <span class=\"s89\" id=\"3372\"></span><span class=\"s28\" id=\"3373\"> </span>Web User Control</p><p  id=\"3374\"><br id=\"3375\"></p><p  id=\"3376\">Name “VcardControl.ascx” and Press Add. You can change name if you want.</p><p  id=\"3377\"><span id=\"3378\"><img width=\"554\" height=\"314\" alt=\"image\" src=\"Image_094.png\" id=\"3379\"></span></p><p  id=\"3380\">See captured screen “vcardcontrol.jpg”.</p><p  id=\"3381\">Vcardcontrol.jp</p><p  id=\"3382\"><br id=\"3383\"></p><p class=\"s27\"  id=\"3384\">-</p><p  id=\"3385\"><br id=\"3386\"></p><p class=\"s27\"  id=\"3387\">-</p><p  id=\"3388\"><br id=\"3389\"></p><p class=\"s27\"  id=\"3390\">-</p><p  id=\"3391\"><br id=\"3392\"></p></div>","sub":[]},{"pageId":"104","pageLevel":1,"pageOrder":"104","pageParentId":"86","pageName":"Let’s Begin to code:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" style=\"color: green;\">Let’s Begin to code:</a></h3>","pageContent":"<div id=\"contentheading3332\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading3332\" class=\"heading3332\"><a name=\"bookmark55\" id=\"3333\" >Let’s Begin to code:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading3332\" ><p  id=\"3334\">Follow the steps To Create Project first Open Visual Studio</p></div>","sub":[]},{"pageId":"105","pageLevel":1,"pageOrder":"105","pageParentId":"86","pageName":"CustomValidator for Name:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading3915\" class=\"heading3915\"><a name=\"bookmark56\" id=\"3916\" style=\"color: green;\">CustomValidator for Name:</a></h3>","pageContent":"<div id=\"contentheading3915\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 35pt;text-align: justify;\" id=\"3917\">Let‟s Create CustomValidator for Name, Open Design View “VcardControl.ascx” and double click on CustomValidator that link to Name Textbox. If you follow me your code behind page should looks like this</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3918\"><br id=\"3919\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"3920\"><span id=\"3921\"><img width=\"626\" height=\"120\" alt=\"image\" src=\"Image_097.png\" id=\"3922\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"3923\"><br id=\"3924\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading3915\" class=\"heading3915\"><a name=\"bookmark56\" id=\"3916\" >CustomValidator for Name:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading3915\" ><p  id=\"3917\">Let‟s Create CustomValidator for Name, Open Design View “VcardControl.ascx” and double click on CustomValidator that link to Name Textbox. If you follow me your code behind page should looks like this</p><p  id=\"3918\"><br id=\"3919\"></p><p  id=\"3920\"><span id=\"3921\"><img width=\"626\" height=\"120\" alt=\"image\" src=\"Image_097.png\" id=\"3922\"></span></p><p  id=\"3923\"><br id=\"3924\"></p></div>","sub":[]},{"pageId":"106","pageLevel":1,"pageOrder":"106","pageParentId":"86","pageName":"Email Validation:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4002\" class=\"heading4002\"><a name=\"bookmark57\" id=\"4003\" style=\"color: green;\">Email Validation:</a></h3>","pageContent":"","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading4002\" class=\"heading4002\"><a name=\"bookmark57\" id=\"4003\" >Email Validation:</a></h3>","pageStyleReducedContent":"","sub":[]},{"pageId":"107","pageLevel":1,"pageOrder":"107","pageParentId":"86","pageName":"Phone Validation:","endPointPath":"","pageHeading":"<h3 style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4093\" class=\"heading4093\"><a name=\"bookmark58\" id=\"4094\" style=\"color: green;\">Phone Validation:</a></h3>","pageContent":"<div id=\"contentheading4093\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"4095\"><br id=\"4096\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4097\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4098\">CustomValidatorPhone_ServerValidate:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4099\"><br id=\"4100\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4101\"><span style=\" color: #00F;\" id=\"4102\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"4103\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4104\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4105\">{</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4106\">if <span style=\" color: #000;\" id=\"4107\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4108\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4109\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4110\">}</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4111\">else</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4112\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4113\">args.IsValid = <span style=\" color: #00F;\" id=\"4114\">true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4115\">}</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4116\">}</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4117\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4118\">CustomValidatorPhone_ServerValidate:</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4119\"><br id=\"4120\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4121\"><span style=\" color: #00F;\" id=\"4122\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"4123\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4124\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4125\">{</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4126\">if <span style=\" color: #000;\" id=\"4127\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4128\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4129\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4130\">}</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4131\">else</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4132\">{</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4133\">args.IsValid = <span style=\" color: #00F;\" id=\"4134\">true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4135\">}</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4136\">}</p><p style=\"padding-left: 14pt;text-indent: 0pt;text-align: left;\" id=\"4137\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4138\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4139\"><br id=\"4140\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4141\"><br id=\"4142\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4143\"><span id=\"4144\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_098.png\" id=\"4145\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"4146\">25 <a href=\"http://msdn.microsoft.com/en-us/library/01escwtf.aspx\" class=\"s11\" target=\"_blank\" id=\"4147\">Methods originally created by http://msdn.microsoft.com/en-us/library/01escwtf.aspx</a></p><p class=\"s93\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4148\">Description: “CustomValidatorPhone_ServerValidate”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4149\"><br id=\"4150\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4151\">First we check if user typed some value in Phone Number text box or not. If user typed some character on input text box its length must be greater than zero. If input value is great than zero, we need to validate whether it is valid phone number or not. We pass value to ValidatePhone() methods, ValidatePhone() method return true or false. If it is valid args.IsValid value is set to true, if not value is set to false.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4152\"><br id=\"4153\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4154\">Else statement execute if input value is empty or less than zero character length. It means user do not want to provide phone number on their Vcard so that args.IsValid is set to true.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4155\"><br id=\"4156\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4157\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4158\">ValidatePhone() methods:</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4159\">public bool <span style=\" color: #000;\" id=\"4160\">ValidatePhone(</span>string <span style=\" color: #000;\" id=\"4161\">input)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4162\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4163\"><span style=\" color: #00F;\" id=\"4164\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"4165\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"4166\">Regex </span>num = <span style=\" color: #00F;\" id=\"4167\">new </span><span style=\" color: #2B91AE;\" id=\"4168\">Regex</span>(<span style=\" color: #A21515;\" id=\"4169\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4170\">return <span style=\" color: #000;\" id=\"4171\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4172\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4173\">Description:</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4174\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span style=\" color: #00F;\" id=\"4175\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4176\">9 digits, it will return false because it’s not valid phone number.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4177\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4178\">ValidatePhone() methods:</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4179\">public bool <span style=\" color: #000;\" id=\"4180\">ValidatePhone(</span>string <span style=\" color: #000;\" id=\"4181\">input)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4182\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4183\"><span style=\" color: #00F;\" id=\"4184\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"4185\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"4186\">Regex </span>num = <span style=\" color: #00F;\" id=\"4187\">new </span><span style=\" color: #2B91AE;\" id=\"4188\">Regex</span>(<span style=\" color: #A21515;\" id=\"4189\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4190\">return <span style=\" color: #000;\" id=\"4191\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4192\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4193\">Description:</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4194\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span style=\" color: #00F;\" id=\"4195\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4196\">9 digits, it will return false because it’s not valid phone number.</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4197\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4198\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4199\"><br id=\"4200\"></p><p class=\"s100\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4201\">Validation for rest of Input Fields Street, PostalCode, City, Country, and Website are listed at appendix as complete code or putting all code together “Vcardcontrol.ascx.cs” page title. Please check appendix page for more details.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4202\"><br id=\"4203\"></p><h4 style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4204\"><a name=\"a59\" id=\"4205\">Create Button Events.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"4206\"><br id=\"4207\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4208\">End user submits data by clicking Create Button; here we have to do all processing steps. I have listed steps that need to do after end user clicks on “Create Button”.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4209\"><br id=\"4210\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading4093\" class=\"heading4093\"><a name=\"bookmark58\" id=\"4094\" >Phone Validation:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading4093\" ><p  id=\"4095\"><br id=\"4096\"></p><p  id=\"4097\"><span class=\"s65\"  id=\"4098\">CustomValidatorPhone_ServerValidate:</span></p><p  id=\"4099\"><br id=\"4100\"></p><p class=\"s70\"  id=\"4101\"><span  id=\"4102\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"4103\">object </span>source, <span  id=\"4104\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"4105\">{</p><p class=\"s66\"  id=\"4106\">if <span  id=\"4107\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"4108\">{</p><p class=\"s70\"  id=\"4109\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\"  id=\"4110\">}</p><p class=\"s66\"  id=\"4111\">else</p><p class=\"s70\"  id=\"4112\">{</p><p class=\"s70\"  id=\"4113\">args.IsValid = <span  id=\"4114\">true</span>;</p><p class=\"s70\"  id=\"4115\">}</p><p class=\"s70\"  id=\"4116\">}</p><p  id=\"4117\"><span class=\"s65\"  id=\"4118\">CustomValidatorPhone_ServerValidate:</span></p><p  id=\"4119\"><br id=\"4120\"></p><p class=\"s70\"  id=\"4121\"><span  id=\"4122\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"4123\">object </span>source, <span  id=\"4124\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"4125\">{</p><p class=\"s66\"  id=\"4126\">if <span  id=\"4127\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"4128\">{</p><p class=\"s70\"  id=\"4129\">args.IsValid = ValidatePhone(args.Value);</p><p class=\"s70\"  id=\"4130\">}</p><p class=\"s66\"  id=\"4131\">else</p><p class=\"s70\"  id=\"4132\">{</p><p class=\"s70\"  id=\"4133\">args.IsValid = <span  id=\"4134\">true</span>;</p><p class=\"s70\"  id=\"4135\">}</p><p class=\"s70\"  id=\"4136\">}</p><p  id=\"4137\"><span  id=\"4138\"> </span></p><p  id=\"4139\"><br id=\"4140\"></p><p  id=\"4141\"><br id=\"4142\"></p><p  id=\"4143\"><span id=\"4144\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_098.png\" id=\"4145\"></span></p><p class=\"s20\"  id=\"4146\">25 <a href=\"http://msdn.microsoft.com/en-us/library/01escwtf.aspx\" class=\"s11\" target=\"_blank\" id=\"4147\">Methods originally created by http://msdn.microsoft.com/en-us/library/01escwtf.aspx</a></p><p class=\"s93\"  id=\"4148\">Description: “CustomValidatorPhone_ServerValidate”</p><p  id=\"4149\"><br id=\"4150\"></p><p class=\"s93\"  id=\"4151\">First we check if user typed some value in Phone Number text box or not. If user typed some character on input text box its length must be greater than zero. If input value is great than zero, we need to validate whether it is valid phone number or not. We pass value to ValidatePhone() methods, ValidatePhone() method return true or false. If it is valid args.IsValid value is set to true, if not value is set to false.</p><p  id=\"4152\"><br id=\"4153\"></p><p class=\"s93\"  id=\"4154\">Else statement execute if input value is empty or less than zero character length. It means user do not want to provide phone number on their Vcard so that args.IsValid is set to true.</p><p  id=\"4155\"><br id=\"4156\"></p><p  id=\"4157\"><span class=\"s65\"  id=\"4158\">ValidatePhone() methods:</span></p><p class=\"s66\"  id=\"4159\">public bool <span  id=\"4160\">ValidatePhone(</span>string <span  id=\"4161\">input)</span></p><p class=\"s70\"  id=\"4162\">{</p><p class=\"s70\"  id=\"4163\"><span  id=\"4164\">if </span>(input.Length != 8) { <span  id=\"4165\">return false</span>; } <span  id=\"4166\">Regex </span>num = <span  id=\"4167\">new </span><span  id=\"4168\">Regex</span>(<span  id=\"4169\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"4170\">return <span  id=\"4171\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"4172\">}</p><p class=\"s70\"  id=\"4173\">Description:</p><p class=\"s70\"  id=\"4174\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span  id=\"4175\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\"  id=\"4176\">9 digits, it will return false because it’s not valid phone number.</p><p  id=\"4177\"><span class=\"s65\"  id=\"4178\">ValidatePhone() methods:</span></p><p class=\"s66\"  id=\"4179\">public bool <span  id=\"4180\">ValidatePhone(</span>string <span  id=\"4181\">input)</span></p><p class=\"s70\"  id=\"4182\">{</p><p class=\"s70\"  id=\"4183\"><span  id=\"4184\">if </span>(input.Length != 8) { <span  id=\"4185\">return false</span>; } <span  id=\"4186\">Regex </span>num = <span  id=\"4187\">new </span><span  id=\"4188\">Regex</span>(<span  id=\"4189\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"4190\">return <span  id=\"4191\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"4192\">}</p><p class=\"s70\"  id=\"4193\">Description:</p><p class=\"s70\"  id=\"4194\">It is not new, only logic inside method block of code is new. It will compare input value to pattern. First it will check if input value is not equal to 8 characters length, it’s not valid mobile or phone number in Denmark so <span  id=\"4195\">return false</span>. Here I will only include validating Danish phone number. If you need for other countries look yourself. Process is similar only number pattern is difference. If input value is equal to 8 characters but characters contain alphabets, it’s not valid number because phone number does not contain alphanumeric character. It must be numeric character. So Regex will compare input value with pattern. If input value is not from 0 to</p><p class=\"s70\"  id=\"4196\">9 digits, it will return false because it’s not valid phone number.</p><p  id=\"4197\"><span  id=\"4198\"> </span></p><p  id=\"4199\"><br id=\"4200\"></p><p class=\"s100\"  id=\"4201\">Validation for rest of Input Fields Street, PostalCode, City, Country, and Website are listed at appendix as complete code or putting all code together “Vcardcontrol.ascx.cs” page title. Please check appendix page for more details.</p><p  id=\"4202\"><br id=\"4203\"></p><h4  id=\"4204\"><a name=\"a59\" id=\"4205\">Create Button Events.</a></h4><p  id=\"4206\"><br id=\"4207\"></p><p class=\"s93\"  id=\"4208\">End user submits data by clicking Create Button; here we have to do all processing steps. I have listed steps that need to do after end user clicks on “Create Button”.</p><p  id=\"4209\"><br id=\"4210\"></p></div>","sub":[]},{"pageId":"109","pageLevel":1,"pageOrder":"109","pageParentId":"86","pageName":"Step 1: Hold or Store Submitted Data","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4238\" class=\"heading4238\"><a name=\"bookmark59\" id=\"4239\" style=\"color: green;\">Step 1: Hold or Store Submitted Data</a></h3>","pageContent":"<div id=\"contentheading4238\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4240\">-it‟s a very easy. See example for holding or retrieving value for Name from client side. <span style=\" color: #00F;\" id=\"4241\">string </span>name = RemoveSpecialCharacter(TextBoxName.Text); I have created string variable name, name is equal to TextBoxName.Text, here TextBoxName is id of TextBoxName and .Text means text value from input textbox. I passed text value from input textbox to method “RemoveSpecialCharacter()” to remove special character. At the end string name will be equal to data or value that user typed in textbox other then special characters.</p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"4242\">Repeat same process for rest of input data. See example as references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4243\"><br id=\"4244\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4245\"><br id=\"4246\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4247\">string <span style=\" color: #000;\" id=\"4248\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"4249\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"4250\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"4251\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4252\">string <span style=\" color: #000;\" id=\"4253\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4254\">string <span style=\" color: #000;\" id=\"4255\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"4256\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4257\"><br id=\"4258\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4259\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4260\">string <span style=\" color: #000;\" id=\"4261\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"4262\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"4263\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"4264\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4265\">string <span style=\" color: #000;\" id=\"4266\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4267\">string <span style=\" color: #000;\" id=\"4268\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"4269\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4270\"><br id=\"4271\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4272\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4273\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4274\"> </span></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading4238\" class=\"heading4238\"><a name=\"bookmark59\" id=\"4239\" >Step 1: Hold or Store Submitted Data</a></h3>","pageStyleReducedContent":"<div id=\"contentheading4238\" ><p class=\"s93\"  id=\"4240\">-it‟s a very easy. See example for holding or retrieving value for Name from client side. <span  id=\"4241\">string </span>name = RemoveSpecialCharacter(TextBoxName.Text); I have created string variable name, name is equal to TextBoxName.Text, here TextBoxName is id of TextBoxName and .Text means text value from input textbox. I passed text value from input textbox to method “RemoveSpecialCharacter()” to remove special character. At the end string name will be equal to data or value that user typed in textbox other then special characters.</p><p class=\"s93\"  id=\"4242\">Repeat same process for rest of input data. See example as references.</p><p  id=\"4243\"><br id=\"4244\"></p><p  id=\"4245\"><br id=\"4246\"></p><p class=\"s66\"  id=\"4247\">string <span  id=\"4248\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"4249\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"4250\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"4251\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"4252\">string <span  id=\"4253\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"4254\">string <span  id=\"4255\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"4256\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p  id=\"4257\"><br id=\"4258\"></p><p class=\"s70\"  id=\"4259\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p class=\"s66\"  id=\"4260\">string <span  id=\"4261\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"4262\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"4263\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"4264\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"4265\">string <span  id=\"4266\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"4267\">string <span  id=\"4268\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"4269\">phone = RemoveSpecialCharacter(TextBoxPhone.Text);</span></p><p  id=\"4270\"><br id=\"4271\"></p><p class=\"s70\"  id=\"4272\">Note: email is without RemoveSpecialCharater methods, it is because if user submits especial characters in email, Email validation will set false, in that case further process will not continue to generate Vcard.</p><p  id=\"4273\"><span  id=\"4274\"> </span></p></div>","sub":[]},{"pageId":"110","pageLevel":1,"pageOrder":"110","pageParentId":"86","pageName":"Step 2: Validate Data","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4275\" class=\"heading4275\"><a name=\"bookmark60\" id=\"4276\" style=\"color: green;\">Step 2: Validate Data</a></h3>","pageContent":"<div id=\"contentheading4275\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4277\">Double click on “Create” button, visual studio will automatically add event and open code behind page. If you follow me it must be looks like bellow</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4278\"><br id=\"4279\"></p><p class=\"s93\" style=\"padding-left: 10pt;text-indent: 0pt;text-align: left;\" id=\"4280\"><span style=\" color: #00F;\" id=\"4281\">protected void </span>ButtonCreate_Click(<span style=\" color: #00F;\" id=\"4282\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"4283\">EventArgs </span>e)</p><p class=\"s93\" style=\"padding-left: 26pt;text-indent: 0pt;text-align: left;\" id=\"4284\">{</p><p class=\"s90\" style=\"padding-left: 36pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4285\">if <span style=\" color: #000;\" id=\"4286\">(Page.IsValid)</span></p><p class=\"s93\" style=\"padding-left: 36pt;text-indent: 0pt;text-align: left;\" id=\"4287\">{ // processing code goes here…….. }</p><p class=\"s93\" style=\"padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"4288\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4289\"><br id=\"4290\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4291\">Visual studio creates ButtonCreate_Click() method events automatically. I added if(Page.IsValid) statement. It is very important to check all validation must be true, Page.IsValid will check whether page is valid or not.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4292\"><br id=\"4293\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4294\">For example</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4295\"><span style=\" color: #00F;\" id=\"4296\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"4297\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4298\">ServerValidateEventArgs </span>args)</p><p style=\"padding-left: 17pt;text-indent: 0pt;text-align: left;\" id=\"4299\"><span class=\"s70\" id=\"4300\">{ </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4301\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4302\">; }</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4303\"><br id=\"4304\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4305\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4306\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span style=\" color: #00F;\" id=\"4307\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4308\">For example</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4309\"><span style=\" color: #00F;\" id=\"4310\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"4311\">object </span>source, <span style=\" color: #2B91AE;\" id=\"4312\">ServerValidateEventArgs </span>args)</p><p style=\"padding-left: 17pt;text-indent: 0pt;text-align: left;\" id=\"4313\"><span class=\"s70\" id=\"4314\">{ </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"4315\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4316\">; }</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4317\"><br id=\"4318\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4319\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4320\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span style=\" color: #00F;\" id=\"4321\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p style=\"padding-left: 4pt;text-indent: 0pt;text-align: left;\" id=\"4322\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4323\"> </span></p><p class=\"s93\" style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"4324\">If there is any validation fails or has false value, error message will show up at error summary and will not execute if(Page.IsValid) {} block of code.</p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading4275\" class=\"heading4275\"><a name=\"bookmark60\" id=\"4276\" >Step 2: Validate Data</a></h3>","pageStyleReducedContent":"<div id=\"contentheading4275\" ><p class=\"s93\"  id=\"4277\">Double click on “Create” button, visual studio will automatically add event and open code behind page. If you follow me it must be looks like bellow</p><p  id=\"4278\"><br id=\"4279\"></p><p class=\"s93\"  id=\"4280\"><span  id=\"4281\">protected void </span>ButtonCreate_Click(<span  id=\"4282\">object </span>sender, <span  id=\"4283\">EventArgs </span>e)</p><p class=\"s93\"  id=\"4284\">{</p><p class=\"s90\"  id=\"4285\">if <span  id=\"4286\">(Page.IsValid)</span></p><p class=\"s93\"  id=\"4287\">{ // processing code goes here…….. }</p><p class=\"s93\"  id=\"4288\">}</p><p  id=\"4289\"><br id=\"4290\"></p><p class=\"s93\"  id=\"4291\">Visual studio creates ButtonCreate_Click() method events automatically. I added if(Page.IsValid) statement. It is very important to check all validation must be true, Page.IsValid will check whether page is valid or not.</p><p  id=\"4292\"><br id=\"4293\"></p><p class=\"s70\"  id=\"4294\">For example</p><p class=\"s70\"  id=\"4295\"><span  id=\"4296\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"4297\">object </span>source, <span  id=\"4298\">ServerValidateEventArgs </span>args)</p><p  id=\"4299\"><span class=\"s70\" id=\"4300\">{ </span><span class=\"s65\"  id=\"4301\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4302\">; }</span></p><p  id=\"4303\"><br id=\"4304\"></p><p class=\"s70\"  id=\"4305\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\"  id=\"4306\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span  id=\"4307\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p class=\"s70\"  id=\"4308\">For example</p><p class=\"s70\"  id=\"4309\"><span  id=\"4310\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"4311\">object </span>source, <span  id=\"4312\">ServerValidateEventArgs </span>args)</p><p  id=\"4313\"><span class=\"s70\" id=\"4314\">{ </span><span class=\"s65\"  id=\"4315\">args.IsValid = ValidateEmail(args.Value.ToString())</span><span class=\"s70\" id=\"4316\">; }</span></p><p  id=\"4317\"><br id=\"4318\"></p><p class=\"s70\"  id=\"4319\">In highlighted text above, if valid email address is provided by user then args.IsValid</p><p class=\"s70\"  id=\"4320\">= true; in order to be Page.IsValid = true, args.IsValid must be equal to true in highlighted text above. This is an example for email. In our Vcard website there is more than email validation so that all validation should be true in order to execute <span  id=\"4321\">if </span>(Page.IsValid) { } block of code. Remember that Validation for Name, Street, PostalCode, City, Country, Phone, Email, Website and photo should have be true.</p><p  id=\"4322\"><span  id=\"4323\"> </span></p><p class=\"s93\"  id=\"4324\">If there is any validation fails or has false value, error message will show up at error summary and will not execute if(Page.IsValid) {} block of code.</p></div>","sub":[]},{"pageId":"111","pageLevel":1,"pageOrder":"111","pageParentId":"86","pageName":"Step 3- Image Upload and Save to Server:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 12pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4329\" class=\"heading4329\"><a name=\"bookmark61\" id=\"4330\" style=\"color: green;\">Step 3- Image Upload and Save to Server:</a></h3>","pageContent":"<div id=\"contentheading4329\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-bottom: 1pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"4331\">In Vcard, user is allowed to have Vcard with image, in order to generate vcard with image user should able to upload image using browse button. Add Upload Button, make Id is naming convention so upload button will be easy to recognize on code behind page. if you added Button it must look like bellow.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4332\">VcardControl.ascx</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4333\">&lt;<span style=\" color: #800000;\" id=\"4334\">asp</span>:<span style=\" color: #800000;\" id=\"4335\">FileUpload </span><span style=\" color: #F00;\" id=\"4336\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"4337\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4338\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4339\">VcardControl.ascx</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4340\">&lt;<span style=\" color: #800000;\" id=\"4341\">asp</span>:<span style=\" color: #800000;\" id=\"4342\">FileUpload </span><span style=\" color: #F00;\" id=\"4343\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"4344\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4345\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4346\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4347\"> </span></p><p class=\"s93\" style=\"padding-top: 6pt;padding-left: 5pt;text-indent: 2pt;line-height: 117%;text-align: justify;\" id=\"4348\">In code behind page: using posted.saveas() methods, image will be uploaded to server. See code bellow as references. Your logic can be difference.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4349\"><br id=\"4350\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4351\"><span id=\"4352\"><img width=\"598\" height=\"588\" alt=\"image\" src=\"Image_099.png\" id=\"4353\"></span></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4354\">if <span style=\" color: #000;\" id=\"4355\">(FileUploadPhoto.PostedFile != </span>null <span style=\" color: #000;\" id=\"4356\">&amp;&amp; FileUploadPhoto.PostedFile.ContentLength</span></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4357\">&gt; 0)</p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4358\">{ <span style=\" color: #00F;\" id=\"4359\">string </span>guid = id.ToString(<span style=\" color: #A21515;\" id=\"4360\">\"N\"</span>);</p><p class=\"s70\" style=\"padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"4361\"><span style=\" color: #00F;\" id=\"4362\">string </span>imageDirectory = Server.MapPath(<span style=\" color: #A21515;\" id=\"4363\">\"vcardimage\"</span>); <span style=\" color: #00F;\" id=\"4364\">if </span>(<span style=\" color: #2B91AE;\" id=\"4365\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\" style=\"padding-left: 42pt;text-indent: 0pt;text-align: left;\" id=\"4366\">{</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4367\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4368\">Server.MapPath(<span style=\" color: #A21515;\" id=\"4369\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4370\">}</p><p class=\"s66\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4371\">else</p><p class=\"s70\" style=\"padding-left: 68pt;text-indent: 0pt;text-align: left;\" id=\"4372\">{ <span style=\" color: #2B91AE;\" id=\"4373\">Directory</span>.CreateDirectory(Server.MapPath(<span style=\" color: #A21515;\" id=\"4374\">\"vcardimage\"</span>));</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4375\"><br id=\"4376\"></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4377\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span style=\" color: #A21515;\" id=\"4378\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 27pt;text-indent: 0pt;text-align: left;\" id=\"4379\">}</p><p class=\"s70\" style=\"padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"4380\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4381\"><br id=\"4382\"></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4383\">Description:</p><ul id=\"l94\"><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4385\"><p class=\"s70\" style=\"display: inline;\" id=\"4386\">Fist we ensure that user browse or select file and Content Length of file is greater than zero that can be achieve by using FileUploadPhoto.PostedFile != <span style=\" color: #00F;\" id=\"4387\">null (means posted files should not equal to null or empy) and </span>FileUploadPhoto.PostedFile.ContentLength &gt; 0 means length of file should be greater than zero. if file name and content length is greater than zero we go to next step.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4388\"><br id=\"4389\"></p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4390\"><p class=\"s70\" style=\"display: inline;\" id=\"4391\">Second: we make new guid, its unique id that system generates automatically, in theory guid is never be same or do not match each other. You may have raise questions here why do we need guid? We need because when user upload files we do not know what file name user has, if two user upload different file but same image file name and file type, system will overwride old files. To prevent from this we add extra string to file name so that file name will not be same even user upload more than one files on same name and file format.</p></li></ul></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading4329\" class=\"heading4329\"><a name=\"bookmark61\" id=\"4330\" >Step 3- Image Upload and Save to Server:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading4329\" ><p class=\"s93\"  id=\"4331\">In Vcard, user is allowed to have Vcard with image, in order to generate vcard with image user should able to upload image using browse button. Add Upload Button, make Id is naming convention so upload button will be easy to recognize on code behind page. if you added Button it must look like bellow.</p><p class=\"s70\"  id=\"4332\">VcardControl.ascx</p><p class=\"s66\"  id=\"4333\">&lt;<span  id=\"4334\">asp</span>:<span  id=\"4335\">FileUpload </span><span  id=\"4336\">ID</span>=\"FileUploadPhoto\" <span  id=\"4337\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\"  id=\"4338\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p class=\"s70\"  id=\"4339\">VcardControl.ascx</p><p class=\"s66\"  id=\"4340\">&lt;<span  id=\"4341\">asp</span>:<span  id=\"4342\">FileUpload </span><span  id=\"4343\">ID</span>=\"FileUploadPhoto\" <span  id=\"4344\">runat</span>=\"server\" /&gt; Description: FileUpload allows to upload file</p><p class=\"s66\"  id=\"4345\">ID= ‚FileUploadPhoto‛ it’s an id of file upload used in code behind page. Runat = ‚server‛ will execute that code at server.</p><p  id=\"4346\"><span  id=\"4347\"> </span></p><p class=\"s93\"  id=\"4348\">In code behind page: using posted.saveas() methods, image will be uploaded to server. See code bellow as references. Your logic can be difference.</p><p  id=\"4349\"><br id=\"4350\"></p><p  id=\"4351\"><span id=\"4352\"><img width=\"598\" height=\"588\" alt=\"image\" src=\"Image_099.png\" id=\"4353\"></span></p><p class=\"s66\"  id=\"4354\">if <span  id=\"4355\">(FileUploadPhoto.PostedFile != </span>null <span  id=\"4356\">&amp;&amp; FileUploadPhoto.PostedFile.ContentLength</span></p><p class=\"s70\"  id=\"4357\">&gt; 0)</p><p class=\"s70\"  id=\"4358\">{ <span  id=\"4359\">string </span>guid = id.ToString(<span  id=\"4360\">\"N\"</span>);</p><p class=\"s70\"  id=\"4361\"><span  id=\"4362\">string </span>imageDirectory = Server.MapPath(<span  id=\"4363\">\"vcardimage\"</span>); <span  id=\"4364\">if </span>(<span  id=\"4365\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\"  id=\"4366\">{</p><p class=\"s70\"  id=\"4367\">FileUploadPhoto.PostedFile.SaveAs(</p><p class=\"s70\"  id=\"4368\">Server.MapPath(<span  id=\"4369\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"4370\">}</p><p class=\"s66\"  id=\"4371\">else</p><p class=\"s70\"  id=\"4372\">{ <span  id=\"4373\">Directory</span>.CreateDirectory(Server.MapPath(<span  id=\"4374\">\"vcardimage\"</span>));</p><p  id=\"4375\"><br id=\"4376\"></p><p class=\"s70\"  id=\"4377\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span  id=\"4378\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"4379\">}</p><p class=\"s70\"  id=\"4380\">}</p><p  id=\"4381\"><br id=\"4382\"></p><p class=\"s70\"  id=\"4383\">Description:</p><ul id=\"l94\"><li  id=\"4385\"><p class=\"s70\"  id=\"4386\">Fist we ensure that user browse or select file and Content Length of file is greater than zero that can be achieve by using FileUploadPhoto.PostedFile != <span  id=\"4387\">null (means posted files should not equal to null or empy) and </span>FileUploadPhoto.PostedFile.ContentLength &gt; 0 means length of file should be greater than zero. if file name and content length is greater than zero we go to next step.</p><p  id=\"4388\"><br id=\"4389\"></p></li><li  id=\"4390\"><p class=\"s70\"  id=\"4391\">Second: we make new guid, its unique id that system generates automatically, in theory guid is never be same or do not match each other. You may have raise questions here why do we need guid? We need because when user upload files we do not know what file name user has, if two user upload different file but same image file name and file type, system will overwride old files. To prevent from this we add extra string to file name so that file name will not be same even user upload more than one files on same name and file format.</p></li></ul></div>","sub":[]},{"pageId":"112","pageLevel":1,"pageOrder":"112","pageParentId":"86","pageName":"Step 4: Generate Vcard:","endPointPath":"","pageHeading":"<h3 style=\"padding-left: 6pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4442\" class=\"heading4442\"><a name=\"bookmark62\" id=\"4443\" style=\"color: green;\">Step 4: Generate Vcard:</a></h3>","pageContent":"<div id=\"contentheading4442\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"4444\"><span id=\"4445\"><img width=\"606\" height=\"395\" alt=\"image\" src=\"Image_100.png\" id=\"4446\"></span></p><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 35pt;line-height: 112%;text-align: justify;\" id=\"4447\">Now we have required information, validation and image. It‟s time to generate Vcard. Writing Vcard is no difference from writing file and adding text line to file. See bellow code as reference. Only difference is structure and data. If you want to know more about Vcard structure you can visit microformat official web sites at microformat.org. Also see references<span class=\"s3\" id=\"4448\">26</span>. Your idea may be difference than mine idea.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4449\"><br id=\"4450\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4451\"><br id=\"4452\"></p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4453\"><span class=\"p\" id=\"4454\">Methods Name: GenerateVcard() Parameters: </span>string <span style=\" color: #000;\" id=\"4455\">firstName, </span>string</p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4456\">streetAddress, <span style=\" color: #00F;\" id=\"4457\">string </span>zip, <span style=\" color: #00F;\" id=\"4458\">string </span>city, <span style=\" color: #00F;\" id=\"4459\">string </span>country, <span style=\" color: #00F;\" id=\"4460\">string </span>email, <span style=\" color: #00F;\" id=\"4461\">string </span>phone, <span style=\" color: #00F;\" id=\"4462\">string </span>web and <span style=\" color: #00F;\" id=\"4463\">string </span>image</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4464\"><span class=\"p\" id=\"4465\">Methods Name: GenerateVcard() Parameters: </span>string <span style=\" color: #000;\" id=\"4466\">firstName, </span>string</p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4467\">streetAddress, <span style=\" color: #00F;\" id=\"4468\">string </span>zip, <span style=\" color: #00F;\" id=\"4469\">string </span>city, <span style=\" color: #00F;\" id=\"4470\">string </span>country, <span style=\" color: #00F;\" id=\"4471\">string </span>email, <span style=\" color: #00F;\" id=\"4472\">string </span>phone, <span style=\" color: #00F;\" id=\"4473\">string </span>web and <span style=\" color: #00F;\" id=\"4474\">string </span>image</p><p style=\"padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"4475\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4476\"><br id=\"4477\"></p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4478\">Code:</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4479\">var <span style=\" color: #000;\" id=\"4480\">vcardStringBuilder = </span>new <span style=\" color: #2B91AE;\" id=\"4481\">StringBuilder</span><span style=\" color: #000;\" id=\"4482\">();</span></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4483\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4484\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4485\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4486\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"4487\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"4488\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"4489\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"4490\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"4491\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4492\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4493\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4494\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4495\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4496\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"4497\">\":\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"4498\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4499\">);</p><p class=\"s70\" style=\"text-indent: 73pt;text-align: left;\" id=\"4500\">vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"4501\">string</span>.Empty); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4502\">\"END:VCARD\"</span>);</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4503\">return <span style=\" color: #000;\" id=\"4504\">vcardStringBuilder.ToString();</span></p><p class=\"s70\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4505\">Code:</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4506\">var <span style=\" color: #000;\" id=\"4507\">vcardStringBuilder = </span>new <span style=\" color: #2B91AE;\" id=\"4508\">StringBuilder</span><span style=\" color: #000;\" id=\"4509\">();</span></p><p class=\"s70\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4510\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4511\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4512\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4513\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"4514\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"4515\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"4516\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"4517\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"4518\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4519\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4520\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4521\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4522\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4523\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"4524\">\":\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"4525\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4526\">);</p><p class=\"s70\" style=\"text-indent: 73pt;text-align: left;\" id=\"4527\">vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"4528\">string</span>.Empty); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"4529\">\"END:VCARD\"</span>);</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"4530\">return <span style=\" color: #000;\" id=\"4531\">vcardStringBuilder.ToString();</span></p><p class=\"s10\" style=\"padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"4532\">\t</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4533\"><br id=\"4534\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4535\"><br id=\"4536\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4537\"><span id=\"4538\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_101.png\" id=\"4539\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"4540\"><a href=\"http://en.wikipedia.org/wiki/VCard\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"4541\">26 </a>http://en.wikipedia.org/wiki/VCard for vcard example</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4542\"><br id=\"4543\"></p><p style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4544\">Methods Name: GenerateVcard() Description:</p><ul id=\"l101\"><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4546\"><p style=\"display: inline;\" id=\"4547\">Start writing with line “<span class=\"s99\" id=\"4548\">BEGIN:VCARD</span><span class=\"s70\" id=\"4549\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li style=\"padding-top: 2pt;padding-left: 35pt;text-indent: -17pt;line-height: 14pt;text-align: left;\" id=\"4550\"><p class=\"s70\" style=\"display: inline;\" id=\"4551\">I append rest of information after ‚<span style=\" color: #A21515;\" id=\"4552\">BEGIN:VCARD</span>‛ before ‚<span style=\" color: #A21515;\" id=\"4553\">END:VCARD</span><span class=\"p\" id=\"4554\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li style=\"padding-left: 35pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4555\"><p class=\"s70\" style=\"display: inline;\" id=\"4556\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4557\"><p class=\"s70\" style=\"display: inline;\" id=\"4558\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4559\">o</p><p class=\"s70\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4560\">{</p><p style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4561\">Methods Name: GenerateVcard() Description:</p><ul id=\"l102\"><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4563\"><p style=\"display: inline;\" id=\"4564\">Start writing with line “<span class=\"s99\" id=\"4565\">BEGIN:VCARD</span><span class=\"s70\" id=\"4566\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li style=\"padding-top: 2pt;padding-left: 35pt;text-indent: -17pt;line-height: 14pt;text-align: left;\" id=\"4567\"><p class=\"s70\" style=\"display: inline;\" id=\"4568\">I append rest of information after ‚<span style=\" color: #A21515;\" id=\"4569\">BEGIN:VCARD</span>‛ before ‚<span style=\" color: #A21515;\" id=\"4570\">END:VCARD</span><span class=\"p\" id=\"4571\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li style=\"padding-left: 35pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4572\"><p class=\"s70\" style=\"display: inline;\" id=\"4573\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li style=\"padding-left: 35pt;text-indent: -17pt;text-align: left;\" id=\"4574\"><p class=\"s70\" style=\"display: inline;\" id=\"4575\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\" style=\"padding-left: 53pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4576\">o</p><p class=\"s70\" style=\"padding-left: 15pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4577\">{</p><p style=\"padding-left: 13pt;text-indent: 0pt;text-align: left;\" id=\"4578\"></p><p class=\"s101\" style=\"text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4579\">o</p><p class=\"s101\" style=\"text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4580\">o</p><p style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4581\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4582\"><br id=\"4583\"></p><ul id=\"l103\"><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 10pt;text-align: left;\" id=\"4585\"><p class=\"s70\" style=\"display: inline;\" id=\"4586\">Make sure to specify ‚<span style=\" color: #A21515;\" id=\"4587\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4588\">actual image string.</p><ul id=\"l104\"><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4590\"><p class=\"s70\" style=\"display: inline;\" id=\"4591\">Here PHOTO: used to indicate Vcard contains image</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4592\"><p class=\"s70\" style=\"display: inline;\" id=\"4593\">Encoding: types of encode, in our case Base64</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4594\"><p class=\"s70\" style=\"display: inline;\" id=\"4595\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4596\"><p class=\"s70\" style=\"display: inline;\" id=\"4597\">Finally Vcard is return in format of String for further process.</p></li></ul><ul id=\"l105\"><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 10pt;text-align: left;\" id=\"4599\"><p class=\"s70\" style=\"display: inline;\" id=\"4600\">Make sure to specify ‚<span style=\" color: #A21515;\" id=\"4601\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4602\">actual image string.</p><ul id=\"l106\"><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4604\"><p class=\"s70\" style=\"display: inline;\" id=\"4605\">Here PHOTO: used to indicate Vcard contains image</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4606\"><p class=\"s70\" style=\"display: inline;\" id=\"4607\">Encoding: types of encode, in our case Base64</p></li><li style=\"padding-left: 53pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4608\"><p class=\"s70\" style=\"display: inline;\" id=\"4609\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li style=\"padding-left: 17pt;text-indent: -17pt;line-height: 11pt;text-align: left;\" id=\"4610\"><p class=\"s70\" style=\"display: inline;\" id=\"4611\">Finally Vcard is return in format of String for further process.</p></li></ul><p style=\"padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"4612\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4613\"><br id=\"4614\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4615\"><span id=\"4616\"><img width=\"606\" height=\"362\" alt=\"image\" src=\"Image_102.png\" id=\"4617\"></span></p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4618\">public byte<span style=\" color: #000;\" id=\"4619\">[] ReadImage(</span>string <span style=\" color: #000;\" id=\"4620\">image)</span></p><p class=\"s66\" style=\"padding-left: 21pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4621\">return <span style=\" color: #2B91AE;\" id=\"4622\">File</span><span style=\" color: #000;\" id=\"4623\">.ReadAllBytes(image); }</span></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"4624\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span style=\" color: #2B91AE;\" id=\"4625\">Convert</span>.ToBase64String() methods.</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"4626\">public byte<span style=\" color: #000;\" id=\"4627\">[] ReadImage(</span>string <span style=\" color: #000;\" id=\"4628\">image)</span></p><p class=\"s66\" style=\"padding-left: 21pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4629\">return <span style=\" color: #2B91AE;\" id=\"4630\">File</span><span style=\" color: #000;\" id=\"4631\">.ReadAllBytes(image); }</span></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"4632\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span style=\" color: #2B91AE;\" id=\"4633\">Convert</span>.ToBase64String() methods.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4634\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading4442\" class=\"heading4442\"><a name=\"bookmark62\" id=\"4443\" >Step 4: Generate Vcard:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading4442\" ><p  id=\"4444\"><span id=\"4445\"><img width=\"606\" height=\"395\" alt=\"image\" src=\"Image_100.png\" id=\"4446\"></span></p><p  id=\"4447\">Now we have required information, validation and image. It‟s time to generate Vcard. Writing Vcard is no difference from writing file and adding text line to file. See bellow code as reference. Only difference is structure and data. If you want to know more about Vcard structure you can visit microformat official web sites at microformat.org. Also see references<span class=\"s3\" id=\"4448\">26</span>. Your idea may be difference than mine idea.</p><p  id=\"4449\"><br id=\"4450\"></p><p  id=\"4451\"><br id=\"4452\"></p><p class=\"s66\"  id=\"4453\"><span class=\"p\" id=\"4454\">Methods Name: GenerateVcard() Parameters: </span>string <span  id=\"4455\">firstName, </span>string</p><p class=\"s70\"  id=\"4456\">streetAddress, <span  id=\"4457\">string </span>zip, <span  id=\"4458\">string </span>city, <span  id=\"4459\">string </span>country, <span  id=\"4460\">string </span>email, <span  id=\"4461\">string </span>phone, <span  id=\"4462\">string </span>web and <span  id=\"4463\">string </span>image</p><p class=\"s66\"  id=\"4464\"><span class=\"p\" id=\"4465\">Methods Name: GenerateVcard() Parameters: </span>string <span  id=\"4466\">firstName, </span>string</p><p class=\"s70\"  id=\"4467\">streetAddress, <span  id=\"4468\">string </span>zip, <span  id=\"4469\">string </span>city, <span  id=\"4470\">string </span>country, <span  id=\"4471\">string </span>email, <span  id=\"4472\">string </span>phone, <span  id=\"4473\">string </span>web and <span  id=\"4474\">string </span>image</p><p  id=\"4475\"></p><p  id=\"4476\"><br id=\"4477\"></p><p class=\"s70\"  id=\"4478\">Code:</p><p class=\"s66\"  id=\"4479\">var <span  id=\"4480\">vcardStringBuilder = </span>new <span  id=\"4481\">StringBuilder</span><span  id=\"4482\">();</span></p><p class=\"s70\"  id=\"4483\">vcardStringBuilder.AppendLine(<span  id=\"4484\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4485\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4486\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"4487\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"4488\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"4489\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"4490\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"4491\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"4492\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"4493\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span  id=\"4494\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\"  id=\"4495\">vcardStringBuilder.AppendLine(<span  id=\"4496\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"4497\">\":\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4498\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\"  id=\"4499\">);</p><p class=\"s70\"  id=\"4500\">vcardStringBuilder.AppendLine(<span  id=\"4501\">string</span>.Empty); vcardStringBuilder.AppendLine(<span  id=\"4502\">\"END:VCARD\"</span>);</p><p class=\"s66\"  id=\"4503\">return <span  id=\"4504\">vcardStringBuilder.ToString();</span></p><p class=\"s70\"  id=\"4505\">Code:</p><p class=\"s66\"  id=\"4506\">var <span  id=\"4507\">vcardStringBuilder = </span>new <span  id=\"4508\">StringBuilder</span><span  id=\"4509\">();</span></p><p class=\"s70\"  id=\"4510\">vcardStringBuilder.AppendLine(<span  id=\"4511\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4512\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4513\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"4514\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"4515\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"4516\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"4517\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"4518\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"4519\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"4520\">\"URL;type=pref:\" </span>+ url); vcardStringBuilder.AppendLine(<span  id=\"4521\">\"EMAIL:\" </span>+ email);</p><p class=\"s70\"  id=\"4522\">vcardStringBuilder.AppendLine(<span  id=\"4523\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"4524\">\":\"</span>); vcardStringBuilder.AppendLine(<span  id=\"4525\">Convert</span>.ToBase64String(ReadImage(image))</p><p class=\"s70\"  id=\"4526\">);</p><p class=\"s70\"  id=\"4527\">vcardStringBuilder.AppendLine(<span  id=\"4528\">string</span>.Empty); vcardStringBuilder.AppendLine(<span  id=\"4529\">\"END:VCARD\"</span>);</p><p class=\"s66\"  id=\"4530\">return <span  id=\"4531\">vcardStringBuilder.ToString();</span></p><p class=\"s10\"  id=\"4532\">\t</p><p  id=\"4533\"><br id=\"4534\"></p><p  id=\"4535\"><br id=\"4536\"></p><p  id=\"4537\"><span id=\"4538\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_101.png\" id=\"4539\"></span></p><p class=\"s10\"  id=\"4540\"><a href=\"http://en.wikipedia.org/wiki/VCard\"  target=\"_blank\" id=\"4541\">26 </a>http://en.wikipedia.org/wiki/VCard for vcard example</p><p  id=\"4542\"><br id=\"4543\"></p><p  id=\"4544\">Methods Name: GenerateVcard() Description:</p><ul id=\"l101\"><li  id=\"4546\"><p  id=\"4547\">Start writing with line “<span class=\"s99\" id=\"4548\">BEGIN:VCARD</span><span class=\"s70\" id=\"4549\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li  id=\"4550\"><p class=\"s70\"  id=\"4551\">I append rest of information after ‚<span  id=\"4552\">BEGIN:VCARD</span>‛ before ‚<span  id=\"4553\">END:VCARD</span><span class=\"p\" id=\"4554\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li  id=\"4555\"><p class=\"s70\"  id=\"4556\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li  id=\"4557\"><p class=\"s70\"  id=\"4558\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\"  id=\"4559\">o</p><p class=\"s70\"  id=\"4560\">{</p><p  id=\"4561\">Methods Name: GenerateVcard() Description:</p><ul id=\"l102\"><li  id=\"4563\"><p  id=\"4564\">Start writing with line “<span class=\"s99\" id=\"4565\">BEGIN:VCARD</span><span class=\"s70\" id=\"4566\">‛ using StringBuilder.AppendLine() methods.</span></p></li><li  id=\"4567\"><p class=\"s70\"  id=\"4568\">I append rest of information after ‚<span  id=\"4569\">BEGIN:VCARD</span>‛ before ‚<span  id=\"4570\">END:VCARD</span><span class=\"p\" id=\"4571\">“. Its Vcard structure we must follow otherwise Vcard will not work as expected.</span></p></li><li  id=\"4572\"><p class=\"s70\"  id=\"4573\">Other structure I will not explain here it’s not hard to understand if you know Vcard structure. For more details about structure see reference link.</p></li><li  id=\"4574\"><p class=\"s70\"  id=\"4575\">Adding image to Vcard may be difficult you to understand so I will explain here. In Vcard image should be added as characters so that first we need to read all images as byte array see ReadImage(image path) methods bellow.</p></li></ul><p class=\"s101\"  id=\"4576\">o</p><p class=\"s70\"  id=\"4577\">{</p><p  id=\"4578\"></p><p class=\"s101\"  id=\"4579\">o</p><p class=\"s101\"  id=\"4580\">o</p><p  id=\"4581\"></p><p  id=\"4582\"><br id=\"4583\"></p><ul id=\"l103\"><li  id=\"4585\"><p class=\"s70\"  id=\"4586\">Make sure to specify ‚<span  id=\"4587\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\"  id=\"4588\">actual image string.</p><ul id=\"l104\"><li  id=\"4590\"><p class=\"s70\"  id=\"4591\">Here PHOTO: used to indicate Vcard contains image</p></li><li  id=\"4592\"><p class=\"s70\"  id=\"4593\">Encoding: types of encode, in our case Base64</p></li><li  id=\"4594\"><p class=\"s70\"  id=\"4595\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li  id=\"4596\"><p class=\"s70\"  id=\"4597\">Finally Vcard is return in format of String for further process.</p></li></ul><ul id=\"l105\"><li  id=\"4599\"><p class=\"s70\"  id=\"4600\">Make sure to specify ‚<span  id=\"4601\">PHOTO;ENCODING=BASE64;TYPE= file type</span>‛ before appending</p><p class=\"s70\"  id=\"4602\">actual image string.</p><ul id=\"l106\"><li  id=\"4604\"><p class=\"s70\"  id=\"4605\">Here PHOTO: used to indicate Vcard contains image</p></li><li  id=\"4606\"><p class=\"s70\"  id=\"4607\">Encoding: types of encode, in our case Base64</p></li><li  id=\"4608\"><p class=\"s70\"  id=\"4609\">Type: type of image or format. Example .jpg, .png .gif etc.</p></li></ul></li><li  id=\"4610\"><p class=\"s70\"  id=\"4611\">Finally Vcard is return in format of String for further process.</p></li></ul><p  id=\"4612\"></p><p  id=\"4613\"><br id=\"4614\"></p><p  id=\"4615\"><span id=\"4616\"><img width=\"606\" height=\"362\" alt=\"image\" src=\"Image_102.png\" id=\"4617\"></span></p><p class=\"s66\"  id=\"4618\">public byte<span  id=\"4619\">[] ReadImage(</span>string <span  id=\"4620\">image)</span></p><p class=\"s66\"  id=\"4621\">return <span  id=\"4622\">File</span><span  id=\"4623\">.ReadAllBytes(image); }</span></p><p class=\"s70\"  id=\"4624\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span  id=\"4625\">Convert</span>.ToBase64String() methods.</p><p class=\"s66\"  id=\"4626\">public byte<span  id=\"4627\">[] ReadImage(</span>string <span  id=\"4628\">image)</span></p><p class=\"s66\"  id=\"4629\">return <span  id=\"4630\">File</span><span  id=\"4631\">.ReadAllBytes(image); }</span></p><p class=\"s70\"  id=\"4632\">Here I pass image file location, using File.ReatAllBytes() methods, it will read image as bytes and return it than I need to convert to string using <span  id=\"4633\">Convert</span>.ToBase64String() methods.</p><p  id=\"4634\"></p></div>","sub":[]},{"pageId":"113","pageLevel":1,"pageOrder":"113","pageParentId":"86","pageName":"Step 5: Send attach Email with Vcard","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 4pt; padding-left: 8pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4635\" class=\"heading4635\"><a name=\"bookmark63\" id=\"4636\" style=\"color: green;\">Step 5: Send attach Email with Vcard</a></h3>","pageContent":"<div id=\"contentheading4635\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4637\">After generating Vcard, Vcard needs to be delivered by Email attachment. Take a look bellow code how to send email using SMTP. I use gmx<span class=\"s3\" id=\"4638\">27 </span>as an example.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4639\"><br id=\"4640\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4641\">private void <span style=\" color: #000;\" id=\"4642\">SendVcard(</span>string <span style=\" color: #000;\" id=\"4643\">subject, </span>string <span style=\" color: #000;\" id=\"4644\">body, </span>string <span style=\" color: #000;\" id=\"4645\">email, </span>string <span style=\" color: #000;\" id=\"4646\">file)</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: -41pt;text-align: left;\" id=\"4647\">{ <span style=\" color: #00F;\" id=\"4648\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4649\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #2B91AE;\" id=\"4650\">MemoryStream </span>stream = <span style=\" color: #00F;\" id=\"4651\">new </span><span style=\" color: #2B91AE;\" id=\"4652\">MemoryStream</span>(byteArray); <span style=\" color: #2B91AE;\" id=\"4653\">MailMessage </span>message = <span style=\" color: #00F;\" id=\"4654\">new </span><span style=\" color: #2B91AE;\" id=\"4655\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4656\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4657\">message.From = <span style=\" color: #00F;\" id=\"4658\">new </span><span style=\" color: #2B91AE;\" id=\"4659\">MailAddress</span>(<span style=\" color: #A21515;\" id=\"4660\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4661\">SmtpClient <span style=\" color: #000;\" id=\"4662\">client = </span><span style=\" color: #00F;\" id=\"4663\">new </span>SmtpClient<span style=\" color: #000;\" id=\"4664\">();</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4665\"><span style=\" color: #2B91AE;\" id=\"4666\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4667\">new </span><span style=\" color: #2B91AE;\" id=\"4668\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4669\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4670\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\" style=\"padding-left: 193pt;text-indent: -102pt;text-align: left;\" id=\"4671\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span style=\" color: #00F;\" id=\"4672\">new</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 24pt;text-align: left;\" id=\"4673\"><span style=\" color: #2B91AE;\" id=\"4674\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"4675\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"4676\">\" password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"4677\">true</span>;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4678\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4679\">}</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4680\">Sender id= replace with your sender id</p><ul id=\"l107\"><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4682\"><p class=\"s70\" style=\"display: inline;\" id=\"4683\">User id = replace with real user id that has access to use SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4684\"><p class=\"s70\" style=\"display: inline;\" id=\"4685\">Password = replace with real valid password to access SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4686\"><p class=\"s70\" style=\"display: inline;\" id=\"4687\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4688\">private void <span style=\" color: #000;\" id=\"4689\">SendVcard(</span>string <span style=\" color: #000;\" id=\"4690\">subject, </span>string <span style=\" color: #000;\" id=\"4691\">body, </span>string <span style=\" color: #000;\" id=\"4692\">email, </span>string <span style=\" color: #000;\" id=\"4693\">file)</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: -41pt;text-align: left;\" id=\"4694\">{ <span style=\" color: #00F;\" id=\"4695\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4696\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #2B91AE;\" id=\"4697\">MemoryStream </span>stream = <span style=\" color: #00F;\" id=\"4698\">new </span><span style=\" color: #2B91AE;\" id=\"4699\">MemoryStream</span>(byteArray); <span style=\" color: #2B91AE;\" id=\"4700\">MailMessage </span>message = <span style=\" color: #00F;\" id=\"4701\">new </span><span style=\" color: #2B91AE;\" id=\"4702\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4703\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4704\">message.From = <span style=\" color: #00F;\" id=\"4705\">new </span><span style=\" color: #2B91AE;\" id=\"4706\">MailAddress</span>(<span style=\" color: #A21515;\" id=\"4707\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4708\">SmtpClient <span style=\" color: #000;\" id=\"4709\">client = </span><span style=\" color: #00F;\" id=\"4710\">new </span>SmtpClient<span style=\" color: #000;\" id=\"4711\">();</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4712\"><span style=\" color: #2B91AE;\" id=\"4713\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4714\">new </span><span style=\" color: #2B91AE;\" id=\"4715\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4716\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;text-align: left;\" id=\"4717\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\" style=\"padding-left: 193pt;text-indent: -102pt;text-align: left;\" id=\"4718\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span style=\" color: #00F;\" id=\"4719\">new</span></p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 24pt;text-align: left;\" id=\"4720\"><span style=\" color: #2B91AE;\" id=\"4721\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"4722\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"4723\">\" password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"4724\">true</span>;</p><p class=\"s70\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4725\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;text-align: left;\" id=\"4726\">}</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4727\">Sender id= replace with your sender id</p><ul id=\"l108\"><li style=\"padding-left: 61pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4729\"><p class=\"s70\" style=\"display: inline;\" id=\"4730\">User id = replace with real user id that has access to use SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4731\"><p class=\"s70\" style=\"display: inline;\" id=\"4732\">Password = replace with real valid password to access SMTP service</p></li><li style=\"padding-left: 61pt;text-indent: -18pt;text-align: left;\" id=\"4733\"><p class=\"s70\" style=\"display: inline;\" id=\"4734\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4735\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4736\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4737\"><br id=\"4738\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4739\"><span id=\"4740\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_103.png\" id=\"4741\"></span></p><p class=\"s10\" style=\"padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"4742\"><a href=\"http://www.gmx.com/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"4743\">27 </a><span style=\" color: #00F; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: underline; font-size: 10pt;\" id=\"4744\">www.gmx.com </span>is free smtp provider as gmail.com, yahoo.com and hotmail.com need upgrade to use their smtp service using API.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4745\"><br id=\"4746\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"4747\">Description:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4748\"><br id=\"4749\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 10pt;text-align: left;\" id=\"4750\">Description: <span style=\" color: #000;\" id=\"4751\">input </span>string <span style=\" color: #000;\" id=\"4752\">subject, </span>string <span style=\" color: #000;\" id=\"4753\">body, </span>string <span style=\" color: #000;\" id=\"4754\">email and </span>string <span style=\" color: #000;\" id=\"4755\">file are parameters, required to send email.</span></p><ul id=\"l109\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4757\"><p class=\"s70\" style=\"display: inline;\" id=\"4758\"><span style=\" color: #00F;\" id=\"4759\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4760\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l110\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4762\"><p class=\"s70\" style=\"display: inline;\" id=\"4763\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4764\"><p class=\"s70\" style=\"display: inline;\" id=\"4765\">MemoryStream is used to write bytes into memory</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4766\"><p class=\"s98\" style=\"display: inline;\" id=\"4767\">MailMessage <span style=\" color: #000;\" id=\"4768\">message = </span><span style=\" color: #00F;\" id=\"4769\">new </span>MailMessage<span style=\" color: #000;\" id=\"4770\">();</span></p><ul id=\"l111\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4772\"><p class=\"s98\" style=\"display: inline;\" id=\"4773\">instantiate MailMessage</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4774\"><p class=\"s70\" style=\"display: inline;\" id=\"4775\">added receiver address, subject, sender</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4776\"><p class=\"s70\" style=\"display: inline;\" id=\"4777\">using Attachment we can attach files into email</p><ul id=\"l112\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4779\"><p class=\"s70\" style=\"display: inline;\" id=\"4780\"><span style=\" color: #2B91AE;\" id=\"4781\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4782\">new </span><span style=\" color: #2B91AE;\" id=\"4783\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4784\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4785\"><p class=\"s70\" style=\"display: inline;\" id=\"4786\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4787\"><p class=\"s70\" style=\"display: inline;\" id=\"4788\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 10pt;text-align: left;\" id=\"4789\">Description: <span style=\" color: #000;\" id=\"4790\">input </span>string <span style=\" color: #000;\" id=\"4791\">subject, </span>string <span style=\" color: #000;\" id=\"4792\">body, </span>string <span style=\" color: #000;\" id=\"4793\">email and </span>string <span style=\" color: #000;\" id=\"4794\">file are parameters, required to send email.</span></p><ul id=\"l113\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4796\"><p class=\"s70\" style=\"display: inline;\" id=\"4797\"><span style=\" color: #00F;\" id=\"4798\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"4799\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l114\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4801\"><p class=\"s70\" style=\"display: inline;\" id=\"4802\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4803\"><p class=\"s70\" style=\"display: inline;\" id=\"4804\">MemoryStream is used to write bytes into memory</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4805\"><p class=\"s98\" style=\"display: inline;\" id=\"4806\">MailMessage <span style=\" color: #000;\" id=\"4807\">message = </span><span style=\" color: #00F;\" id=\"4808\">new </span>MailMessage<span style=\" color: #000;\" id=\"4809\">();</span></p><ul id=\"l115\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4811\"><p class=\"s98\" style=\"display: inline;\" id=\"4812\">instantiate MailMessage</p></li><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4813\"><p class=\"s70\" style=\"display: inline;\" id=\"4814\">added receiver address, subject, sender</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4815\"><p class=\"s70\" style=\"display: inline;\" id=\"4816\">using Attachment we can attach files into email</p><ul id=\"l116\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4818\"><p class=\"s70\" style=\"display: inline;\" id=\"4819\"><span style=\" color: #2B91AE;\" id=\"4820\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"4821\">new </span><span style=\" color: #2B91AE;\" id=\"4822\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"4823\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4824\"><p class=\"s70\" style=\"display: inline;\" id=\"4825\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4826\"><p class=\"s70\" style=\"display: inline;\" id=\"4827\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4828\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4829\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4830\"><br id=\"4831\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"4832\">Here Vcard is sent to Email address, it make sure that email address should be valid and right person, but it also cause user may need to check spam email.</p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading4635\" class=\"heading4635\"><a name=\"bookmark63\" id=\"4636\" >Step 5: Send attach Email with Vcard</a></h3>","pageStyleReducedContent":"<div id=\"contentheading4635\" ><p  id=\"4637\">After generating Vcard, Vcard needs to be delivered by Email attachment. Take a look bellow code how to send email using SMTP. I use gmx<span class=\"s3\" id=\"4638\">27 </span>as an example.</p><p  id=\"4639\"><br id=\"4640\"></p><p class=\"s66\"  id=\"4641\">private void <span  id=\"4642\">SendVcard(</span>string <span  id=\"4643\">subject, </span>string <span  id=\"4644\">body, </span>string <span  id=\"4645\">email, </span>string <span  id=\"4646\">file)</span></p><p class=\"s70\"  id=\"4647\">{ <span  id=\"4648\">byte</span>[] byteArray = <span  id=\"4649\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"4650\">MemoryStream </span>stream = <span  id=\"4651\">new </span><span  id=\"4652\">MemoryStream</span>(byteArray); <span  id=\"4653\">MailMessage </span>message = <span  id=\"4654\">new </span><span  id=\"4655\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\"  id=\"4656\">message.Body = body;</p><p class=\"s70\"  id=\"4657\">message.From = <span  id=\"4658\">new </span><span  id=\"4659\">MailAddress</span>(<span  id=\"4660\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\"  id=\"4661\">SmtpClient <span  id=\"4662\">client = </span><span  id=\"4663\">new </span>SmtpClient<span  id=\"4664\">();</span></p><p class=\"s70\"  id=\"4665\"><span  id=\"4666\">Attachment </span>vcard = <span  id=\"4667\">new </span><span  id=\"4668\">Attachment</span>(stream, <span  id=\"4669\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"4670\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\"  id=\"4671\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span  id=\"4672\">new</span></p><p class=\"s70\"  id=\"4673\"><span  id=\"4674\">NetworkCredential</span>(<span  id=\"4675\">\"user id \"</span>, <span  id=\"4676\">\" password\"</span>); client.EnableSsl = <span  id=\"4677\">true</span>;</p><p class=\"s70\"  id=\"4678\">client.Send(message);</p><p class=\"s70\"  id=\"4679\">}</p><p class=\"s70\"  id=\"4680\">Sender id= replace with your sender id</p><ul id=\"l107\"><li  id=\"4682\"><p class=\"s70\"  id=\"4683\">User id = replace with real user id that has access to use SMTP service</p></li><li  id=\"4684\"><p class=\"s70\"  id=\"4685\">Password = replace with real valid password to access SMTP service</p></li><li  id=\"4686\"><p class=\"s70\"  id=\"4687\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p class=\"s66\"  id=\"4688\">private void <span  id=\"4689\">SendVcard(</span>string <span  id=\"4690\">subject, </span>string <span  id=\"4691\">body, </span>string <span  id=\"4692\">email, </span>string <span  id=\"4693\">file)</span></p><p class=\"s70\"  id=\"4694\">{ <span  id=\"4695\">byte</span>[] byteArray = <span  id=\"4696\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"4697\">MemoryStream </span>stream = <span  id=\"4698\">new </span><span  id=\"4699\">MemoryStream</span>(byteArray); <span  id=\"4700\">MailMessage </span>message = <span  id=\"4701\">new </span><span  id=\"4702\">MailMessage</span>(); message.Subject = subject;</p><p class=\"s70\"  id=\"4703\">message.Body = body;</p><p class=\"s70\"  id=\"4704\">message.From = <span  id=\"4705\">new </span><span  id=\"4706\">MailAddress</span>(<span  id=\"4707\">\"sender id \"</span>); message.To.Add(email);</p><p class=\"s98\"  id=\"4708\">SmtpClient <span  id=\"4709\">client = </span><span  id=\"4710\">new </span>SmtpClient<span  id=\"4711\">();</span></p><p class=\"s70\"  id=\"4712\"><span  id=\"4713\">Attachment </span>vcard = <span  id=\"4714\">new </span><span  id=\"4715\">Attachment</span>(stream, <span  id=\"4716\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"4717\">client.Host = host name example \"mail.gmx.com\";</p><p class=\"s70\"  id=\"4718\">client.Port = SMTP port number. Example 587 for gmx smtp service. client.Credentials = <span  id=\"4719\">new</span></p><p class=\"s70\"  id=\"4720\"><span  id=\"4721\">NetworkCredential</span>(<span  id=\"4722\">\"user id \"</span>, <span  id=\"4723\">\" password\"</span>); client.EnableSsl = <span  id=\"4724\">true</span>;</p><p class=\"s70\"  id=\"4725\">client.Send(message);</p><p class=\"s70\"  id=\"4726\">}</p><p class=\"s70\"  id=\"4727\">Sender id= replace with your sender id</p><ul id=\"l108\"><li  id=\"4729\"><p class=\"s70\"  id=\"4730\">User id = replace with real user id that has access to use SMTP service</p></li><li  id=\"4731\"><p class=\"s70\"  id=\"4732\">Password = replace with real valid password to access SMTP service</p></li><li  id=\"4733\"><p class=\"s70\"  id=\"4734\">Host = replace with real host name. For more details contact to your web hosting provider company.</p></li></ul><p  id=\"4735\"><span  id=\"4736\"> </span></p><p  id=\"4737\"><br id=\"4738\"></p><p  id=\"4739\"><span id=\"4740\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_103.png\" id=\"4741\"></span></p><p class=\"s10\"  id=\"4742\"><a href=\"http://www.gmx.com/\"  target=\"_blank\" id=\"4743\">27 </a><span  id=\"4744\">www.gmx.com </span>is free smtp provider as gmail.com, yahoo.com and hotmail.com need upgrade to use their smtp service using API.</p><p  id=\"4745\"><br id=\"4746\"></p><p  id=\"4747\">Description:</p><p  id=\"4748\"><br id=\"4749\"></p><p class=\"s66\"  id=\"4750\">Description: <span  id=\"4751\">input </span>string <span  id=\"4752\">subject, </span>string <span  id=\"4753\">body, </span>string <span  id=\"4754\">email and </span>string <span  id=\"4755\">file are parameters, required to send email.</span></p><ul id=\"l109\"><li  id=\"4757\"><p class=\"s70\"  id=\"4758\"><span  id=\"4759\">byte</span>[] byteArray = <span  id=\"4760\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l110\"><li  id=\"4762\"><p class=\"s70\"  id=\"4763\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li  id=\"4764\"><p class=\"s70\"  id=\"4765\">MemoryStream is used to write bytes into memory</p></li></ul></li><li  id=\"4766\"><p class=\"s98\"  id=\"4767\">MailMessage <span  id=\"4768\">message = </span><span  id=\"4769\">new </span>MailMessage<span  id=\"4770\">();</span></p><ul id=\"l111\"><li  id=\"4772\"><p class=\"s98\"  id=\"4773\">instantiate MailMessage</p></li><li  id=\"4774\"><p class=\"s70\"  id=\"4775\">added receiver address, subject, sender</p></li></ul></li><li  id=\"4776\"><p class=\"s70\"  id=\"4777\">using Attachment we can attach files into email</p><ul id=\"l112\"><li  id=\"4779\"><p class=\"s70\"  id=\"4780\"><span  id=\"4781\">Attachment </span>vcard = <span  id=\"4782\">new </span><span  id=\"4783\">Attachment</span>(stream, <span  id=\"4784\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li  id=\"4785\"><p class=\"s70\"  id=\"4786\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li  id=\"4787\"><p class=\"s70\"  id=\"4788\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p class=\"s66\"  id=\"4789\">Description: <span  id=\"4790\">input </span>string <span  id=\"4791\">subject, </span>string <span  id=\"4792\">body, </span>string <span  id=\"4793\">email and </span>string <span  id=\"4794\">file are parameters, required to send email.</span></p><ul id=\"l113\"><li  id=\"4796\"><p class=\"s70\"  id=\"4797\"><span  id=\"4798\">byte</span>[] byteArray = <span  id=\"4799\">Encoding</span>.ASCII.GetBytes(file);</p><ul id=\"l114\"><li  id=\"4801\"><p class=\"s70\"  id=\"4802\">Read all bytes that are Vcard, We created Vcard in step 4.</p></li><li  id=\"4803\"><p class=\"s70\"  id=\"4804\">MemoryStream is used to write bytes into memory</p></li></ul></li><li  id=\"4805\"><p class=\"s98\"  id=\"4806\">MailMessage <span  id=\"4807\">message = </span><span  id=\"4808\">new </span>MailMessage<span  id=\"4809\">();</span></p><ul id=\"l115\"><li  id=\"4811\"><p class=\"s98\"  id=\"4812\">instantiate MailMessage</p></li><li  id=\"4813\"><p class=\"s70\"  id=\"4814\">added receiver address, subject, sender</p></li></ul></li><li  id=\"4815\"><p class=\"s70\"  id=\"4816\">using Attachment we can attach files into email</p><ul id=\"l116\"><li  id=\"4818\"><p class=\"s70\"  id=\"4819\"><span  id=\"4820\">Attachment </span>vcard = <span  id=\"4821\">new </span><span  id=\"4822\">Attachment</span>(stream, <span  id=\"4823\">\"PersonalVCard.vcf\"</span>);</p></li></ul></li><li  id=\"4824\"><p class=\"s70\"  id=\"4825\">Instantiate SmtpClient service, add Host, Port, Credentials (authentication), and finally call Send() method to send email.</p></li><li  id=\"4826\"><p class=\"s70\"  id=\"4827\">EnalbeSsl= true means use secure socket layer.</p></li></ul><p  id=\"4828\"><span  id=\"4829\"> </span></p><p  id=\"4830\"><br id=\"4831\"></p><p  id=\"4832\">Here Vcard is sent to Email address, it make sure that email address should be valid and right person, but it also cause user may need to check spam email.</p></div>","sub":[]},{"pageId":"114","pageLevel":1,"pageOrder":"114","pageParentId":"86","pageName":"What if server or SMTP fails to send email?","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 9pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading4833\" class=\"heading4833\"><a name=\"bookmark64\" id=\"4834\" style=\"color: green;\">What if server or SMTP fails to send email?</a></h3>","pageContent":"<div id=\"contentheading4833\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"4835\">Lets create option for incase SMTP fails to send email. See code bellow</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4836\"><br id=\"4837\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4838\"><br id=\"4839\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4840\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4841\">/// <span style=\" color: #008000;\" id=\"4842\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4843\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4844\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"4845\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"4846\">public void </span><span style=\" color: #000;\" id=\"4847\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"4848\">byte </span><span style=\" color: #000;\" id=\"4849\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4850\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4851\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"4852\">true</span>;</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 5pt;text-align: left;\" id=\"4853\">Response.ContentType = <span style=\" color: #A21515;\" id=\"4854\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"4855\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"4856\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"4857\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"4858\">);</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4859\">Response.Charset = <span style=\" color: #A21515;\" id=\"4860\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4861\">HttpContext<span style=\" color: #000;\" id=\"4862\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4863\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4864\"><br id=\"4865\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4866\">Description: I will describe very shortly.</p><ul id=\"l117\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4868\"><p class=\"s70\" style=\"display: inline;\" id=\"4869\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4870\"><p class=\"s70\" style=\"display: inline;\" id=\"4871\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4872\"><p class=\"s70\" style=\"display: inline;\" id=\"4873\">clear any content if there is any by calling Clear() methods.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4874\"><p class=\"s70\" style=\"display: inline;\" id=\"4875\">Set buffer true</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4876\"><p class=\"s70\" style=\"display: inline;\" id=\"4877\">Content type is Vcard</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4878\"><p class=\"s70\" style=\"display: inline;\" id=\"4879\">Add headers and File name</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4880\"><p class=\"s70\" style=\"display: inline;\" id=\"4881\">Start writing Vcard by using BinaryWriter() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4882\"><p class=\"s70\" style=\"display: inline;\" id=\"4883\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4884\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 17pt;text-indent: 0pt;text-align: center;\" id=\"4885\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4886\">/// <span style=\" color: #008000;\" id=\"4887\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4888\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4889\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"4890\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"4891\">public void </span><span style=\" color: #000;\" id=\"4892\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"4893\">byte </span><span style=\" color: #000;\" id=\"4894\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4895\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4896\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"4897\">true</span>;</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 5pt;text-align: left;\" id=\"4898\">Response.ContentType = <span style=\" color: #A21515;\" id=\"4899\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"4900\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"4901\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 17pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"4902\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"4903\">);</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4904\">Response.Charset = <span style=\" color: #A21515;\" id=\"4905\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"4906\">HttpContext<span style=\" color: #000;\" id=\"4907\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"4908\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4909\"><br id=\"4910\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4911\">Description: I will describe very shortly.</p><ul id=\"l118\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4913\"><p class=\"s70\" style=\"display: inline;\" id=\"4914\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4915\"><p class=\"s70\" style=\"display: inline;\" id=\"4916\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4917\"><p class=\"s70\" style=\"display: inline;\" id=\"4918\">clear any content if there is any by calling Clear() methods.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4919\"><p class=\"s70\" style=\"display: inline;\" id=\"4920\">Set buffer true</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4921\"><p class=\"s70\" style=\"display: inline;\" id=\"4922\">Content type is Vcard</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4923\"><p class=\"s70\" style=\"display: inline;\" id=\"4924\">Add headers and File name</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"4925\"><p class=\"s70\" style=\"display: inline;\" id=\"4926\">Start writing Vcard by using BinaryWriter() methods</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"4927\"><p class=\"s70\" style=\"display: inline;\" id=\"4928\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4929\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4930\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"4931\"> </span></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading4833\" class=\"heading4833\"><a name=\"bookmark64\" id=\"4834\" >What if server or SMTP fails to send email?</a></h3>","pageStyleReducedContent":"<div id=\"contentheading4833\" ><p  id=\"4835\">Lets create option for incase SMTP fails to send email. See code bellow</p><p  id=\"4836\"><br id=\"4837\"></p><p  id=\"4838\"><br id=\"4839\"></p><p class=\"s103\"  id=\"4840\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"4841\">/// <span  id=\"4842\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"4843\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"4844\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"4845\">The vcard file.</span>&lt;/param&gt; <span  id=\"4846\">public void </span><span  id=\"4847\">DownloadVcard(</span><span  id=\"4848\">byte </span><span  id=\"4849\">[] vcardFile)</span></p><p class=\"s70\"  id=\"4850\">{</p><p class=\"s70\"  id=\"4851\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"4852\">true</span>;</p><p class=\"s70\"  id=\"4853\">Response.ContentType = <span  id=\"4854\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"4855\">\"content-disposition\"</span>, <span  id=\"4856\">\"attach;filename =</span></p><p class=\"s99\"  id=\"4857\">YourVcard.vcf\"<span  id=\"4858\">);</span></p><p class=\"s70\"  id=\"4859\">Response.Charset = <span  id=\"4860\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"4861\">HttpContext<span  id=\"4862\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"4863\">}</p><p  id=\"4864\"><br id=\"4865\"></p><p class=\"s70\"  id=\"4866\">Description: I will describe very shortly.</p><ul id=\"l117\"><li  id=\"4868\"><p class=\"s70\"  id=\"4869\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li  id=\"4870\"><p class=\"s70\"  id=\"4871\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li  id=\"4872\"><p class=\"s70\"  id=\"4873\">clear any content if there is any by calling Clear() methods.</p></li><li  id=\"4874\"><p class=\"s70\"  id=\"4875\">Set buffer true</p></li><li  id=\"4876\"><p class=\"s70\"  id=\"4877\">Content type is Vcard</p></li><li  id=\"4878\"><p class=\"s70\"  id=\"4879\">Add headers and File name</p></li><li  id=\"4880\"><p class=\"s70\"  id=\"4881\">Start writing Vcard by using BinaryWriter() methods</p></li><li  id=\"4882\"><p class=\"s70\"  id=\"4883\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\"  id=\"4884\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p class=\"s103\"  id=\"4885\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"4886\">/// <span  id=\"4887\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"4888\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"4889\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"4890\">The vcard file.</span>&lt;/param&gt; <span  id=\"4891\">public void </span><span  id=\"4892\">DownloadVcard(</span><span  id=\"4893\">byte </span><span  id=\"4894\">[] vcardFile)</span></p><p class=\"s70\"  id=\"4895\">{</p><p class=\"s70\"  id=\"4896\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"4897\">true</span>;</p><p class=\"s70\"  id=\"4898\">Response.ContentType = <span  id=\"4899\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"4900\">\"content-disposition\"</span>, <span  id=\"4901\">\"attach;filename =</span></p><p class=\"s99\"  id=\"4902\">YourVcard.vcf\"<span  id=\"4903\">);</span></p><p class=\"s70\"  id=\"4904\">Response.Charset = <span  id=\"4905\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"4906\">HttpContext<span  id=\"4907\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"4908\">}</p><p  id=\"4909\"><br id=\"4910\"></p><p class=\"s70\"  id=\"4911\">Description: I will describe very shortly.</p><ul id=\"l118\"><li  id=\"4913\"><p class=\"s70\"  id=\"4914\">created methods DownloadVcard() and took one parameters it’s a Vcard File</p></li><li  id=\"4915\"><p class=\"s70\"  id=\"4916\">start clearing headers if there is any by calling ClearHeaders() methods</p></li><li  id=\"4917\"><p class=\"s70\"  id=\"4918\">clear any content if there is any by calling Clear() methods.</p></li><li  id=\"4919\"><p class=\"s70\"  id=\"4920\">Set buffer true</p></li><li  id=\"4921\"><p class=\"s70\"  id=\"4922\">Content type is Vcard</p></li><li  id=\"4923\"><p class=\"s70\"  id=\"4924\">Add headers and File name</p></li><li  id=\"4925\"><p class=\"s70\"  id=\"4926\">Start writing Vcard by using BinaryWriter() methods</p></li><li  id=\"4927\"><p class=\"s70\"  id=\"4928\">Finall complete writing and httpcontent by using CompleteRequest() and End() methods.</p></li></ul><p class=\"s105\"  id=\"4929\">Call DownloadVcard() methods at Catch Block of code in SendVcard() methods. See complete code at appendix page.</p><p  id=\"4930\"><span  id=\"4931\"> </span></p></div>","sub":[]},{"pageId":"115","pageLevel":1,"pageOrder":"115","pageParentId":"86","pageName":"Step 6: Store data to Database for later use","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 3pt; padding-left: 6pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading4932\" class=\"heading4932\"><a name=\"bookmark65\" id=\"4933\" style=\"color: green;\">Step 6: Store data to Database for later use</a></h3>","pageContent":"<div id=\"contentheading4932\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4934\">In this step we will store Vcard data into Database for later use. To store data, first we need to ensure that table and fields are exits into database. Here is over view of logic how I am going to do this job done.</p><ol id=\"l119\"><li style=\"padding-top: 9pt;padding-left: 6pt;text-indent: 18pt;text-align: left;\" id=\"4936\"><p style=\"display: inline;\" id=\"4937\">Create table and fields into Database</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4938\"><br id=\"4939\"></p></li><li style=\"padding-left: 42pt;text-indent: -18pt;text-align: left;\" id=\"4940\"><p style=\"display: inline;\" id=\"4941\">Check table before insert data.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4942\"><br id=\"4943\"></p></li><li style=\"padding-left: 6pt;text-indent: 18pt;line-height: 175%;text-align: left;\" id=\"4944\"><p style=\"display: inline;\" id=\"4945\">Insert data into table and fields using Umbraco system Create Table and Fields into Database<span class=\"s3\" id=\"4946\">28</span></p></li></ol><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"4947\">There are many way to create table and fields into database. You may create using Sql Server Management Studio or you can create using C# code. Here I will explain sustainable way to program.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4948\"><br id=\"4949\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4950\"><span id=\"4951\"><img width=\"617\" height=\"475\" alt=\"image\" src=\"Image_104.png\" id=\"4952\"></span></p><p class=\"s10\" style=\"padding-top: 4pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4953\">Creating Table and Fields:</p><p class=\"s78\" style=\"padding-top: 1pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4954\">string <span style=\" color: #000;\" id=\"4955\">queryString = </span><span style=\" color: #A21515;\" id=\"4956\">@\" CREATE TABLE [vcardimage](</span></p><p class=\"s106\" style=\"padding-left: 148pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"4957\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s106\" style=\"padding-left: 148pt;text-indent: 5pt;text-align: left;\" id=\"4958\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s106\" style=\"padding-left: 148pt;text-indent: 0pt;text-align: left;\" id=\"4959\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"4960\">;</span></p><p class=\"s81\" style=\"padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"4961\">I have created queryString first. CREATE TABLE [ table name ] is used to create table. Fields are added inside open and close brackets.</p><ul id=\"l120\"><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4963\"><p class=\"s106\" style=\"display: inline;\" id=\"4964\">[id] [int] IDENTITY(1,1) NOT NULL <span style=\" color: #000;\" id=\"4965\">means: [id] is field name, [int] short form of integer is its property, (1,1) means increase automatically by +1, NOT NULL means field id should not be null it must contains data.</span></p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4966\"><p class=\"s106\" style=\"display: inline;\" id=\"4967\">[name] [nvarchar] (250) NULL, [name]: field name is name, its property is nvarchar and (250) means its maximum capacity, Null means name field may be null or empty</p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4968\"><p class=\"s81\" style=\"display: inline;\" id=\"4969\">Street, country, phone, email, website and imageguid are similar as Name field</p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4970\"><p class=\"s81\" style=\"display: inline;\" id=\"4971\">postalCode and DateTime has different properties int (integer) and Datetime respectively.</p></li><li style=\"padding-left: 52pt;text-indent: -18pt;text-align: left;\" id=\"4972\"><p class=\"s81\" style=\"display: inline;\" id=\"4973\">For more details check Sql query languages.</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"4974\"><br id=\"4975\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4976\"><br id=\"4977\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"4978\"><span id=\"4979\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_105.png\" id=\"4980\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"4981\">28 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"4982\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"4983\">%E2%80%93-comments</p><p class=\"s19\" style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"4984\">Note: Given creating table and fields example are only for MsSql database, if you using MySql database code may be difference<span class=\"p\" id=\"4985\">.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"4986\"><br id=\"4987\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4988\">Executing queryString:</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"4989\">Follow the steps:</p><ul id=\"l121\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4991\"><p style=\"display: inline;\" id=\"4992\">Create sql command object</p><ul id=\"l122\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"4994\"><p class=\"s98\" style=\"display: inline;\" id=\"4995\"><span class=\"p\" id=\"4996\">using </span>SqlCommand <span style=\" color: #000;\" id=\"4997\">command = </span><span style=\" color: #00F;\" id=\"4998\">new </span>SqlCommand<span style=\" color: #000;\" id=\"4999\">(queryString, connection)</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5000\"><p class=\"s70\" style=\"display: inline;\" id=\"5001\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5002\"><p class=\"s70\" style=\"display: inline;\" id=\"5003\">To reuse Umbraco connection string use folling code</p><ul id=\"l123\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5005\"><p class=\"s98\" style=\"display: inline;\" id=\"5006\">SqlConnection <span style=\" color: #000;\" id=\"5007\">connection = </span><span style=\" color: #00F;\" id=\"5008\">new </span>SqlConnection<span style=\" color: #000;\" id=\"5009\">(</span>GlobalSettings<span style=\" color: #000;\" id=\"5010\">.DbDSN);</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5011\"><p class=\"s70\" style=\"display: inline;\" id=\"5012\">Make sure to add reference <span style=\" color: #00F;\" id=\"5013\">using </span>umbraco before use <span style=\" color: #2B91AE;\" id=\"5014\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5015\"><p class=\"s70\" style=\"display: inline;\" id=\"5016\">Open database connection using connection.Open();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5017\"><p class=\"s70\" style=\"display: inline;\" id=\"5018\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5019\"><p class=\"s70\" style=\"display: inline;\" id=\"5020\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"5021\"><p class=\"s70\" style=\"display: inline;\" id=\"5022\">connection.Close();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"5023\"><p class=\"s70\" style=\"display: inline;\" id=\"5024\">Finally close connection by calling Close() methods.</p></li></ul><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5025\">Executing queryString:</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5026\">Follow the steps:</p><ul id=\"l124\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"5028\"><p style=\"display: inline;\" id=\"5029\">Create sql command object</p><ul id=\"l125\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"5031\"><p class=\"s98\" style=\"display: inline;\" id=\"5032\"><span class=\"p\" id=\"5033\">using </span>SqlCommand <span style=\" color: #000;\" id=\"5034\">command = </span><span style=\" color: #00F;\" id=\"5035\">new </span>SqlCommand<span style=\" color: #000;\" id=\"5036\">(queryString, connection)</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5037\"><p class=\"s70\" style=\"display: inline;\" id=\"5038\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5039\"><p class=\"s70\" style=\"display: inline;\" id=\"5040\">To reuse Umbraco connection string use folling code</p><ul id=\"l126\"><li style=\"padding-left: 79pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5042\"><p class=\"s98\" style=\"display: inline;\" id=\"5043\">SqlConnection <span style=\" color: #000;\" id=\"5044\">connection = </span><span style=\" color: #00F;\" id=\"5045\">new </span>SqlConnection<span style=\" color: #000;\" id=\"5046\">(</span>GlobalSettings<span style=\" color: #000;\" id=\"5047\">.DbDSN);</span></p></li><li style=\"padding-left: 79pt;text-indent: -18pt;text-align: left;\" id=\"5048\"><p class=\"s70\" style=\"display: inline;\" id=\"5049\">Make sure to add reference <span style=\" color: #00F;\" id=\"5050\">using </span>umbraco before use <span style=\" color: #2B91AE;\" id=\"5051\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5052\"><p class=\"s70\" style=\"display: inline;\" id=\"5053\">Open database connection using connection.Open();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 13pt;text-align: left;\" id=\"5054\"><p class=\"s70\" style=\"display: inline;\" id=\"5055\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5056\"><p class=\"s70\" style=\"display: inline;\" id=\"5057\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 12pt;text-align: left;\" id=\"5058\"><p class=\"s70\" style=\"display: inline;\" id=\"5059\">connection.Close();</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 15pt;text-align: left;\" id=\"5060\"><p class=\"s70\" style=\"display: inline;\" id=\"5061\">Finally close connection by calling Close() methods.</p></li></ul><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5062\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5063\"> </span></p><p class=\"s93\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5064\">Code all in one for CreateTable methods</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5065\"><br id=\"5066\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5067\"><span id=\"5068\"><img width=\"621\" height=\"478\" alt=\"image\" src=\"Image_106.png\" id=\"5069\"></span></p><p class=\"s107\" style=\"padding-top: 3pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"5070\">private static bool <span style=\" color: #000;\" id=\"5071\">CreateTable(</span>string <span style=\" color: #000;\" id=\"5072\">tableName)</span></p><p class=\"s108\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5073\">{</p><p class=\"s107\" style=\"padding-left: 74pt;text-indent: 0pt;text-align: left;\" id=\"5074\">try</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;text-align: left;\" id=\"5075\">{</p><p style=\"padding-top: 9pt;padding-left: 15pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5076\">Never forget to put code block inside try{} catch{}.</p><p class=\"s109\" style=\"padding-left: 15pt;text-indent: 79pt;text-align: left;\" id=\"5077\">SqlConnection <span style=\" color: #000;\" id=\"5078\">connection = </span><span style=\" color: #00F;\" id=\"5079\">new </span>SqlConnection<span style=\" color: #000;\" id=\"5080\">(</span>GlobalSettings<span style=\" color: #000;\" id=\"5081\">.DbDSN);</span></p><p class=\"s107\" style=\"padding-left: 94pt;text-indent: 0pt;text-align: left;\" id=\"5082\">string <span style=\" color: #000;\" id=\"5083\">queryString =</span></p><p class=\"s110\" style=\"padding-left: 114pt;text-indent: 0pt;text-align: left;\" id=\"5084\">@\" CREATE TABLE [vcardimage](</p><p class=\"s110\" style=\"padding-left: 134pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5085\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s110\" style=\"padding-left: 134pt;text-indent: 4pt;text-align: left;\" id=\"5086\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s110\" style=\"padding-left: 134pt;text-indent: 0pt;text-align: left;\" id=\"5087\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"5088\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5089\"><br id=\"5090\"></p><p class=\"s109\" style=\"padding-left: 15pt;text-indent: 44pt;text-align: left;\" id=\"5091\">SqlCommand <span style=\" color: #000;\" id=\"5092\">command = </span><span style=\" color: #00F;\" id=\"5093\">new </span>SqlCommand<span style=\" color: #000;\" id=\"5094\">(queryString, connection);</span></p><p class=\"s108\" style=\"padding-left: 94pt;text-indent: 0pt;text-align: left;\" id=\"5095\">connection.Open(); command.ExecuteNonQuery(); connection.Close(); <span style=\" color: #00F;\" id=\"5096\">return true</span>;</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5097\">}</p><p class=\"s107\" style=\"padding-left: 74pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5098\">catch</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;text-align: left;\" id=\"5099\">{</p><p class=\"s107\" style=\"padding-left: 94pt;text-indent: 0pt;text-align: left;\" id=\"5100\">return false<span style=\" color: #000;\" id=\"5101\">;</span></p><p style=\"padding-top: 5pt;padding-left: 15pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5102\">First it will try to execute code if there is nothing wrong it will return true. It means table and fields successfully created. If there is anything wrong while executing code it will catch those errors and return false. False means table and fields did not create successfully.</p><p style=\"padding-top: 10pt;padding-left: 15pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5103\">Using Try {} Catch{} page does not break on yellow dead screen if something</p><p style=\"padding-left: 15pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"5104\">goes wrong.</p><p class=\"s108\" style=\"padding-left: 74pt;text-indent: 0pt;line-height: 9pt;text-align: left;\" id=\"5105\">}</p><p class=\"s108\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5106\">}</p><h4 style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5107\"><a name=\"a60\" id=\"5108\">Check Table exist:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5109\"><br id=\"5110\"></p><p class=\"s93\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5111\">Using Umbraco system we can easily check table name see code bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5112\"><br id=\"5113\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5114\">CheckTable() methods.</p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5115\">private static bool <span style=\" color: #000;\" id=\"5116\">CheckTable(</span>string <span style=\" color: #000;\" id=\"5117\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5118\">{</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 0pt;text-align: left;\" id=\"5119\"><span style=\" color: #2B91AE;\" id=\"5120\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"5121\">new </span><span style=\" color: #2B91AE;\" id=\"5122\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"5123\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"5124\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5125\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5126\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5127\"><br id=\"5128\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5129\">Make sure to add reference: <span style=\" color: #00F;\" id=\"5130\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5131\">CheckTable() methods.</p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5132\">private static bool <span style=\" color: #000;\" id=\"5133\">CheckTable(</span>string <span style=\" color: #000;\" id=\"5134\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5135\">{</p><p class=\"s70\" style=\"padding-left: 64pt;text-indent: 0pt;text-align: left;\" id=\"5136\"><span style=\" color: #2B91AE;\" id=\"5137\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"5138\">new </span><span style=\" color: #2B91AE;\" id=\"5139\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"5140\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"5141\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 43pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5142\">}</p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5143\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5144\"><br id=\"5145\"></p><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5146\">Make sure to add reference: <span style=\" color: #00F;\" id=\"5147\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"5148\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5149\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5150\"><br id=\"5151\"></p><p class=\"s93\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5152\">Intert Data:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5153\"><br id=\"5154\"></p><p class=\"s93\" style=\"padding-top: 2pt;text-indent: 0pt;text-align: left;\" id=\"5155\">database. see code bellow.</p><p class=\"s93\" style=\"padding-top: 2pt;text-indent: 0pt;text-align: left;\" id=\"5156\">database. see code bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5157\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5158\"><span id=\"5159\"><img width=\"628\" height=\"517\" alt=\"image\" src=\"Image_107.png\" id=\"5160\"></span></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5161\">InsertTable() Methods:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5162\"><br id=\"5163\"></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5164\">public static bool <span style=\" color: #000;\" id=\"5165\">InsertTable(</span>string <span style=\" color: #000;\" id=\"5166\">name, </span>string <span style=\" color: #000;\" id=\"5167\">street, </span>string <span style=\" color: #000;\" id=\"5168\">postalcode, </span>string <span style=\" color: #000;\" id=\"5169\">country, </span>string <span style=\" color: #000;\" id=\"5170\">phone, </span>string <span style=\" color: #000;\" id=\"5171\">email, </span>string <span style=\" color: #000;\" id=\"5172\">website, </span>string <span style=\" color: #000;\" id=\"5173\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5174\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: -5pt;text-align: left;\" id=\"5175\"><span style=\" color: #00F;\" id=\"5176\">string </span>tableName = <span style=\" color: #A21515;\" id=\"5177\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"5178\">try</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5179\">{</p><p class=\"s66\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5180\">if <span style=\" color: #000;\" id=\"5181\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5182\">{CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5183\">ISqlHelper <span style=\" color: #000;\" id=\"5184\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"5185\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 104pt;text-align: left;\" id=\"5186\">@\"insert into \"<span style=\" color: #000;\" id=\"5187\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"5188\">+</span></p><p class=\"s99\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5189\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5190\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"5191\">,</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5192\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5193\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5194\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5195\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5196\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5197\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5198\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5199\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5200\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5201\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"5202\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"5203\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5204\">}</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5205\"><span style=\" color: #00F;\" id=\"5206\">catch</span>(<span style=\" color: #2B91AE;\" id=\"5207\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5208\">{</p><p class=\"s66\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5209\">return false<span style=\" color: #000;\" id=\"5210\">;</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5211\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5212\"><br id=\"5213\"></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5214\">}</p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5215\">InsertTable() Methods:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5216\"><br id=\"5217\"></p><p class=\"s66\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5218\">public static bool <span style=\" color: #000;\" id=\"5219\">InsertTable(</span>string <span style=\" color: #000;\" id=\"5220\">name, </span>string <span style=\" color: #000;\" id=\"5221\">street, </span>string <span style=\" color: #000;\" id=\"5222\">postalcode, </span>string <span style=\" color: #000;\" id=\"5223\">country, </span>string <span style=\" color: #000;\" id=\"5224\">phone, </span>string <span style=\" color: #000;\" id=\"5225\">email, </span>string <span style=\" color: #000;\" id=\"5226\">website, </span>string <span style=\" color: #000;\" id=\"5227\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5228\">{</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: -5pt;text-align: left;\" id=\"5229\"><span style=\" color: #00F;\" id=\"5230\">string </span>tableName = <span style=\" color: #A21515;\" id=\"5231\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"5232\">try</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5233\">{</p><p class=\"s66\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5234\">if <span style=\" color: #000;\" id=\"5235\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5236\">{CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5237\">ISqlHelper <span style=\" color: #000;\" id=\"5238\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"5239\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 104pt;text-align: left;\" id=\"5240\">@\"insert into \"<span style=\" color: #000;\" id=\"5241\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"5242\">+</span></p><p class=\"s99\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5243\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5244\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"5245\">,</span></p><p class=\"s70\" style=\"padding-left: 111pt;text-indent: 0pt;text-align: left;\" id=\"5246\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5247\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5248\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5249\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5250\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5251\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5252\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5253\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5254\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"5255\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"5256\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"5257\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5258\">}</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5259\"><span style=\" color: #00F;\" id=\"5260\">catch</span>(<span style=\" color: #2B91AE;\" id=\"5261\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5262\">{</p><p class=\"s66\" style=\"padding-left: 90pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5263\">return false<span style=\" color: #000;\" id=\"5264\">;</span></p><p class=\"s70\" style=\"padding-left: 69pt;text-indent: 0pt;text-align: left;\" id=\"5265\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5266\"><br id=\"5267\"></p><p class=\"s70\" style=\"padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5268\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5269\"></p><p class=\"s93\" style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5270\">If there is no table exist, we can create table using Create<span class=\"s111\" id=\"5271\">29 </span>Table() methods<span class=\"s111\" id=\"5272\">30</span>, it‟s time to insert data into</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5273\"><br id=\"5274\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"5275\"><span id=\"5276\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_108.png\" id=\"5277\"></span></p><p class=\"s20\" style=\"padding-top: 3pt;padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5278\">29 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"5279\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5280\">%E2%80%93-comments</p><p class=\"s20\" style=\"padding-left: 6pt;text-indent: 0pt;line-height: 12pt;text-align: left;\" id=\"5281\">30 <span class=\"s10\" id=\"5282\">See createTable() methods on previous chapter.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5283\"><br id=\"5284\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5285\">Description of <span class=\"s70\" id=\"5286\">InsertTable() Methods:</span></p><ul id=\"l127\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5288\"><p class=\"s70\" style=\"display: inline;\" id=\"5289\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5290\"><p class=\"s70\" style=\"display: inline;\" id=\"5291\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5292\"><p class=\"s70\" style=\"display: inline;\" id=\"5293\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5294\"><p class=\"s70\" style=\"display: inline;\" id=\"5295\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5296\"><p class=\"s70\" style=\"display: inline;\" id=\"5297\">Forth if not return false. Something happen wrong.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5298\"><p class=\"s70\" style=\"display: inline;\" id=\"5299\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5300\">Note: make sure to reference <span style=\" color: #00F;\" id=\"5301\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5302\">Description of <span class=\"s70\" id=\"5303\">InsertTable() Methods:</span></p><ul id=\"l128\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5305\"><p class=\"s70\" style=\"display: inline;\" id=\"5306\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5307\"><p class=\"s70\" style=\"display: inline;\" id=\"5308\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5309\"><p class=\"s70\" style=\"display: inline;\" id=\"5310\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5311\"><p class=\"s70\" style=\"display: inline;\" id=\"5312\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 11pt;text-align: left;\" id=\"5313\"><p class=\"s70\" style=\"display: inline;\" id=\"5314\">Forth if not return false. Something happen wrong.</p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5315\"><p class=\"s70\" style=\"display: inline;\" id=\"5316\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5317\">Note: make sure to reference <span style=\" color: #00F;\" id=\"5318\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5319\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5320\"> </span></p><p class=\"s38\" style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5321\">Putting all code together.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5322\"><br id=\"5323\"></p><p style=\"padding-top: 4pt;padding-left: 41pt;text-indent: 0pt;text-align: left;\" id=\"5324\"><span class=\"s112\" style=\" background-color: #FF0;\" id=\"5325\">VcardControl.ascx.cs</span></p><p style=\"padding-top: 1pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"5326\"><span class=\"s112\" style=\" background-color: #FF0;\" id=\"5327\">For complete code, please visit appendix page and find page title “VcardControl.ascx.cs”.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5328\"><br id=\"5329\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading4932\" class=\"heading4932\"><a name=\"bookmark65\" id=\"4933\" >Step 6: Store data to Database for later use</a></h3>","pageStyleReducedContent":"<div id=\"contentheading4932\" ><p  id=\"4934\">In this step we will store Vcard data into Database for later use. To store data, first we need to ensure that table and fields are exits into database. Here is over view of logic how I am going to do this job done.</p><ol id=\"l119\"><li  id=\"4936\"><p  id=\"4937\">Create table and fields into Database</p><p  id=\"4938\"><br id=\"4939\"></p></li><li  id=\"4940\"><p  id=\"4941\">Check table before insert data.</p><p  id=\"4942\"><br id=\"4943\"></p></li><li  id=\"4944\"><p  id=\"4945\">Insert data into table and fields using Umbraco system Create Table and Fields into Database<span class=\"s3\" id=\"4946\">28</span></p></li></ol><p  id=\"4947\">There are many way to create table and fields into database. You may create using Sql Server Management Studio or you can create using C# code. Here I will explain sustainable way to program.</p><p  id=\"4948\"><br id=\"4949\"></p><p  id=\"4950\"><span id=\"4951\"><img width=\"617\" height=\"475\" alt=\"image\" src=\"Image_104.png\" id=\"4952\"></span></p><p class=\"s10\"  id=\"4953\">Creating Table and Fields:</p><p class=\"s78\"  id=\"4954\">string <span  id=\"4955\">queryString = </span><span  id=\"4956\">@\" CREATE TABLE [vcardimage](</span></p><p class=\"s106\"  id=\"4957\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s106\"  id=\"4958\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s106\"  id=\"4959\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"4960\">;</span></p><p class=\"s81\"  id=\"4961\">I have created queryString first. CREATE TABLE [ table name ] is used to create table. Fields are added inside open and close brackets.</p><ul id=\"l120\"><li  id=\"4963\"><p class=\"s106\"  id=\"4964\">[id] [int] IDENTITY(1,1) NOT NULL <span  id=\"4965\">means: [id] is field name, [int] short form of integer is its property, (1,1) means increase automatically by +1, NOT NULL means field id should not be null it must contains data.</span></p></li><li  id=\"4966\"><p class=\"s106\"  id=\"4967\">[name] [nvarchar] (250) NULL, [name]: field name is name, its property is nvarchar and (250) means its maximum capacity, Null means name field may be null or empty</p></li><li  id=\"4968\"><p class=\"s81\"  id=\"4969\">Street, country, phone, email, website and imageguid are similar as Name field</p></li><li  id=\"4970\"><p class=\"s81\"  id=\"4971\">postalCode and DateTime has different properties int (integer) and Datetime respectively.</p></li><li  id=\"4972\"><p class=\"s81\"  id=\"4973\">For more details check Sql query languages.</p></li></ul><p  id=\"4974\"><br id=\"4975\"></p><p  id=\"4976\"><br id=\"4977\"></p><p  id=\"4978\"><span id=\"4979\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_105.png\" id=\"4980\"></span></p><p class=\"s20\"  id=\"4981\">28 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"4982\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\"  id=\"4983\">%E2%80%93-comments</p><p class=\"s19\"  id=\"4984\">Note: Given creating table and fields example are only for MsSql database, if you using MySql database code may be difference<span class=\"p\" id=\"4985\">.</span></p><p  id=\"4986\"><br id=\"4987\"></p><p  id=\"4988\">Executing queryString:</p><p class=\"s70\"  id=\"4989\">Follow the steps:</p><ul id=\"l121\"><li  id=\"4991\"><p  id=\"4992\">Create sql command object</p><ul id=\"l122\"><li  id=\"4994\"><p class=\"s98\"  id=\"4995\"><span class=\"p\" id=\"4996\">using </span>SqlCommand <span  id=\"4997\">command = </span><span  id=\"4998\">new </span>SqlCommand<span  id=\"4999\">(queryString, connection)</span></p></li><li  id=\"5000\"><p class=\"s70\"  id=\"5001\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li  id=\"5002\"><p class=\"s70\"  id=\"5003\">To reuse Umbraco connection string use folling code</p><ul id=\"l123\"><li  id=\"5005\"><p class=\"s98\"  id=\"5006\">SqlConnection <span  id=\"5007\">connection = </span><span  id=\"5008\">new </span>SqlConnection<span  id=\"5009\">(</span>GlobalSettings<span  id=\"5010\">.DbDSN);</span></p></li><li  id=\"5011\"><p class=\"s70\"  id=\"5012\">Make sure to add reference <span  id=\"5013\">using </span>umbraco before use <span  id=\"5014\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li  id=\"5015\"><p class=\"s70\"  id=\"5016\">Open database connection using connection.Open();</p></li><li  id=\"5017\"><p class=\"s70\"  id=\"5018\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li  id=\"5019\"><p class=\"s70\"  id=\"5020\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li  id=\"5021\"><p class=\"s70\"  id=\"5022\">connection.Close();</p></li><li  id=\"5023\"><p class=\"s70\"  id=\"5024\">Finally close connection by calling Close() methods.</p></li></ul><p  id=\"5025\">Executing queryString:</p><p class=\"s70\"  id=\"5026\">Follow the steps:</p><ul id=\"l124\"><li  id=\"5028\"><p  id=\"5029\">Create sql command object</p><ul id=\"l125\"><li  id=\"5031\"><p class=\"s98\"  id=\"5032\"><span class=\"p\" id=\"5033\">using </span>SqlCommand <span  id=\"5034\">command = </span><span  id=\"5035\">new </span>SqlCommand<span  id=\"5036\">(queryString, connection)</span></p></li><li  id=\"5037\"><p class=\"s70\"  id=\"5038\">pass queryString, we just created and pass connection string. Connection string is very important because it contains database location and authentication. To create table user should have admin access to Database.</p></li></ul></li><li  id=\"5039\"><p class=\"s70\"  id=\"5040\">To reuse Umbraco connection string use folling code</p><ul id=\"l126\"><li  id=\"5042\"><p class=\"s98\"  id=\"5043\">SqlConnection <span  id=\"5044\">connection = </span><span  id=\"5045\">new </span>SqlConnection<span  id=\"5046\">(</span>GlobalSettings<span  id=\"5047\">.DbDSN);</span></p></li><li  id=\"5048\"><p class=\"s70\"  id=\"5049\">Make sure to add reference <span  id=\"5050\">using </span>umbraco before use <span  id=\"5051\">GlobalSettings</span>.DbDSN.</p></li></ul></li><li  id=\"5052\"><p class=\"s70\"  id=\"5053\">Open database connection using connection.Open();</p></li><li  id=\"5054\"><p class=\"s70\"  id=\"5055\">Use ExecuteNonQuery() Methods, command.ExecuteNonQuery();</p></li><li  id=\"5056\"><p class=\"s70\"  id=\"5057\">Why do we use ExecuteNonQuery() method, its because we just need to execute code, no need to retrieve any data back after executing code. It’s a fast process and increase performance.</p></li><li  id=\"5058\"><p class=\"s70\"  id=\"5059\">connection.Close();</p></li><li  id=\"5060\"><p class=\"s70\"  id=\"5061\">Finally close connection by calling Close() methods.</p></li></ul><p  id=\"5062\"><span  id=\"5063\"> </span></p><p class=\"s93\"  id=\"5064\">Code all in one for CreateTable methods</p><p  id=\"5065\"><br id=\"5066\"></p><p  id=\"5067\"><span id=\"5068\"><img width=\"621\" height=\"478\" alt=\"image\" src=\"Image_106.png\" id=\"5069\"></span></p><p class=\"s107\"  id=\"5070\">private static bool <span  id=\"5071\">CreateTable(</span>string <span  id=\"5072\">tableName)</span></p><p class=\"s108\"  id=\"5073\">{</p><p class=\"s107\"  id=\"5074\">try</p><p class=\"s108\"  id=\"5075\">{</p><p  id=\"5076\">Never forget to put code block inside try{} catch{}.</p><p class=\"s109\"  id=\"5077\">SqlConnection <span  id=\"5078\">connection = </span><span  id=\"5079\">new </span>SqlConnection<span  id=\"5080\">(</span>GlobalSettings<span  id=\"5081\">.DbDSN);</span></p><p class=\"s107\"  id=\"5082\">string <span  id=\"5083\">queryString =</span></p><p class=\"s110\"  id=\"5084\">@\" CREATE TABLE [vcardimage](</p><p class=\"s110\"  id=\"5085\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s110\"  id=\"5086\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s110\"  id=\"5087\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"5088\">;</span></p><p  id=\"5089\"><br id=\"5090\"></p><p class=\"s109\"  id=\"5091\">SqlCommand <span  id=\"5092\">command = </span><span  id=\"5093\">new </span>SqlCommand<span  id=\"5094\">(queryString, connection);</span></p><p class=\"s108\"  id=\"5095\">connection.Open(); command.ExecuteNonQuery(); connection.Close(); <span  id=\"5096\">return true</span>;</p><p class=\"s108\"  id=\"5097\">}</p><p class=\"s107\"  id=\"5098\">catch</p><p class=\"s108\"  id=\"5099\">{</p><p class=\"s107\"  id=\"5100\">return false<span  id=\"5101\">;</span></p><p  id=\"5102\">First it will try to execute code if there is nothing wrong it will return true. It means table and fields successfully created. If there is anything wrong while executing code it will catch those errors and return false. False means table and fields did not create successfully.</p><p  id=\"5103\">Using Try {} Catch{} page does not break on yellow dead screen if something</p><p  id=\"5104\">goes wrong.</p><p class=\"s108\"  id=\"5105\">}</p><p class=\"s108\"  id=\"5106\">}</p><h4  id=\"5107\"><a name=\"a60\" id=\"5108\">Check Table exist:</a></h4><p  id=\"5109\"><br id=\"5110\"></p><p class=\"s93\"  id=\"5111\">Using Umbraco system we can easily check table name see code bellow.</p><p  id=\"5112\"><br id=\"5113\"></p><p class=\"s70\"  id=\"5114\">CheckTable() methods.</p><p class=\"s66\"  id=\"5115\">private static bool <span  id=\"5116\">CheckTable(</span>string <span  id=\"5117\">tableName)</span></p><p class=\"s70\"  id=\"5118\">{</p><p class=\"s70\"  id=\"5119\"><span  id=\"5120\">SqlServerHelper </span>sqlHeplper = <span  id=\"5121\">new </span><span  id=\"5122\">SqlServerHelper</span>(<span  id=\"5123\">GlobalSettings</span>.DbDSN); <span  id=\"5124\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"5125\">}</p><p class=\"s70\"  id=\"5126\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p  id=\"5127\"><br id=\"5128\"></p><p class=\"s70\"  id=\"5129\">Make sure to add reference: <span  id=\"5130\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p class=\"s70\"  id=\"5131\">CheckTable() methods.</p><p class=\"s66\"  id=\"5132\">private static bool <span  id=\"5133\">CheckTable(</span>string <span  id=\"5134\">tableName)</span></p><p class=\"s70\"  id=\"5135\">{</p><p class=\"s70\"  id=\"5136\"><span  id=\"5137\">SqlServerHelper </span>sqlHeplper = <span  id=\"5138\">new </span><span  id=\"5139\">SqlServerHelper</span>(<span  id=\"5140\">GlobalSettings</span>.DbDSN); <span  id=\"5141\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"5142\">}</p><p class=\"s70\"  id=\"5143\">Description: using GlobalSettings.DBDSN we get sql connection string, SqlServerHelper object has containsTable() methods by passing table name it will return bool value true or false. If there is table it will return true.</p><p  id=\"5144\"><br id=\"5145\"></p><p class=\"s70\"  id=\"5146\">Make sure to add reference: <span  id=\"5147\">using </span>umbraco.DataLayer.SqlHelpers.SqlServer provided by Umbraco CMS.</p><p  id=\"5148\"><span  id=\"5149\"> </span></p><p  id=\"5150\"><br id=\"5151\"></p><p class=\"s93\"  id=\"5152\">Intert Data:</p><p  id=\"5153\"><br id=\"5154\"></p><p class=\"s93\"  id=\"5155\">database. see code bellow.</p><p class=\"s93\"  id=\"5156\">database. see code bellow.</p><p  id=\"5157\"></p><p  id=\"5158\"><span id=\"5159\"><img width=\"628\" height=\"517\" alt=\"image\" src=\"Image_107.png\" id=\"5160\"></span></p><p class=\"s70\"  id=\"5161\">InsertTable() Methods:</p><p  id=\"5162\"><br id=\"5163\"></p><p class=\"s66\"  id=\"5164\">public static bool <span  id=\"5165\">InsertTable(</span>string <span  id=\"5166\">name, </span>string <span  id=\"5167\">street, </span>string <span  id=\"5168\">postalcode, </span>string <span  id=\"5169\">country, </span>string <span  id=\"5170\">phone, </span>string <span  id=\"5171\">email, </span>string <span  id=\"5172\">website, </span>string <span  id=\"5173\">imageguid)</span></p><p class=\"s70\"  id=\"5174\">{</p><p class=\"s70\"  id=\"5175\"><span  id=\"5176\">string </span>tableName = <span  id=\"5177\">\"vcardimage\"</span>; <span  id=\"5178\">try</span></p><p class=\"s70\"  id=\"5179\">{</p><p class=\"s66\"  id=\"5180\">if <span  id=\"5181\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"5182\">{CreateTable(tableName); }</p><p class=\"s98\"  id=\"5183\">ISqlHelper <span  id=\"5184\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"5185\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"5186\">@\"insert into \"<span  id=\"5187\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"5188\">+</span></p><p class=\"s99\"  id=\"5189\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"5190\">@website, @imageguid, @date);\"<span  id=\"5191\">,</span></p><p class=\"s70\"  id=\"5192\">sqlHelper.CreateParameter(<span  id=\"5193\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"5194\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"5195\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"5196\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"5197\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"5198\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"5199\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"5200\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"5201\">\"@date\"</span>, <span  id=\"5202\">DateTime</span>.Now)); <span  id=\"5203\">return true</span>;</p><p class=\"s70\"  id=\"5204\">}</p><p class=\"s70\"  id=\"5205\"><span  id=\"5206\">catch</span>(<span  id=\"5207\">Exception</span>)</p><p class=\"s70\"  id=\"5208\">{</p><p class=\"s66\"  id=\"5209\">return false<span  id=\"5210\">;</span></p><p class=\"s70\"  id=\"5211\">}</p><p  id=\"5212\"><br id=\"5213\"></p><p class=\"s70\"  id=\"5214\">}</p><p class=\"s70\"  id=\"5215\">InsertTable() Methods:</p><p  id=\"5216\"><br id=\"5217\"></p><p class=\"s66\"  id=\"5218\">public static bool <span  id=\"5219\">InsertTable(</span>string <span  id=\"5220\">name, </span>string <span  id=\"5221\">street, </span>string <span  id=\"5222\">postalcode, </span>string <span  id=\"5223\">country, </span>string <span  id=\"5224\">phone, </span>string <span  id=\"5225\">email, </span>string <span  id=\"5226\">website, </span>string <span  id=\"5227\">imageguid)</span></p><p class=\"s70\"  id=\"5228\">{</p><p class=\"s70\"  id=\"5229\"><span  id=\"5230\">string </span>tableName = <span  id=\"5231\">\"vcardimage\"</span>; <span  id=\"5232\">try</span></p><p class=\"s70\"  id=\"5233\">{</p><p class=\"s66\"  id=\"5234\">if <span  id=\"5235\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"5236\">{CreateTable(tableName); }</p><p class=\"s98\"  id=\"5237\">ISqlHelper <span  id=\"5238\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"5239\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"5240\">@\"insert into \"<span  id=\"5241\">+ tableName+ </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"5242\">+</span></p><p class=\"s99\"  id=\"5243\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"5244\">@website, @imageguid, @date);\"<span  id=\"5245\">,</span></p><p class=\"s70\"  id=\"5246\">sqlHelper.CreateParameter(<span  id=\"5247\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"5248\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"5249\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"5250\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"5251\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"5252\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"5253\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"5254\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"5255\">\"@date\"</span>, <span  id=\"5256\">DateTime</span>.Now)); <span  id=\"5257\">return true</span>;</p><p class=\"s70\"  id=\"5258\">}</p><p class=\"s70\"  id=\"5259\"><span  id=\"5260\">catch</span>(<span  id=\"5261\">Exception</span>)</p><p class=\"s70\"  id=\"5262\">{</p><p class=\"s66\"  id=\"5263\">return false<span  id=\"5264\">;</span></p><p class=\"s70\"  id=\"5265\">}</p><p  id=\"5266\"><br id=\"5267\"></p><p class=\"s70\"  id=\"5268\">}</p><p  id=\"5269\"></p><p class=\"s93\"  id=\"5270\">If there is no table exist, we can create table using Create<span class=\"s111\" id=\"5271\">29 </span>Table() methods<span class=\"s111\" id=\"5272\">30</span>, it‟s time to insert data into</p><p  id=\"5273\"><br id=\"5274\"></p><p  id=\"5275\"><span id=\"5276\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_108.png\" id=\"5277\"></span></p><p class=\"s20\"  id=\"5278\">29 <a href=\"http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-\" class=\"s11\" target=\"_blank\" id=\"5279\">Inspired by http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205-</a></p><p class=\"s10\"  id=\"5280\">%E2%80%93-comments</p><p class=\"s20\"  id=\"5281\">30 <span class=\"s10\" id=\"5282\">See createTable() methods on previous chapter.</span></p><p  id=\"5283\"><br id=\"5284\"></p><p  id=\"5285\">Description of <span class=\"s70\" id=\"5286\">InsertTable() Methods:</span></p><ul id=\"l127\"><li  id=\"5288\"><p class=\"s70\"  id=\"5289\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li  id=\"5290\"><p class=\"s70\"  id=\"5291\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li  id=\"5292\"><p class=\"s70\"  id=\"5293\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li  id=\"5294\"><p class=\"s70\"  id=\"5295\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li  id=\"5296\"><p class=\"s70\"  id=\"5297\">Forth if not return false. Something happen wrong.</p></li><li  id=\"5298\"><p class=\"s70\"  id=\"5299\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\"  id=\"5300\">Note: make sure to reference <span  id=\"5301\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p  id=\"5302\">Description of <span class=\"s70\" id=\"5303\">InsertTable() Methods:</span></p><ul id=\"l128\"><li  id=\"5305\"><p class=\"s70\"  id=\"5306\">First we check if table exist or not using if(!CheckTable(tableName)) if not we call CreateTable() methods to create table by passing table name.</p></li><li  id=\"5307\"><p class=\"s70\"  id=\"5308\">Second we call ISqlHelper object of Umbraco System, ISqlHelper object has ExecuteNonQuery() methods, that requires query string and parameters.</p></li><li  id=\"5309\"><p class=\"s70\"  id=\"5310\">To add parameters we call another methods of ISqlHelper object called CreateParameters().</p></li><li  id=\"5311\"><p class=\"s70\"  id=\"5312\">Third if it’s successfully inserted we return True means data inserted into table.</p></li><li  id=\"5313\"><p class=\"s70\"  id=\"5314\">Forth if not return false. Something happen wrong.</p></li><li  id=\"5315\"><p class=\"s70\"  id=\"5316\">Make sure to put code inside Try and Catch block to prevent yellow and death screen.</p></li></ul><p class=\"s70\"  id=\"5317\">Note: make sure to reference <span  id=\"5318\">using </span>umbraco.DataLayer in order to use ISqlHelper object.</p><p  id=\"5319\"><span  id=\"5320\"> </span></p><p class=\"s38\"  id=\"5321\">Putting all code together.</p><p  id=\"5322\"><br id=\"5323\"></p><p  id=\"5324\"><span class=\"s112\"  id=\"5325\">VcardControl.ascx.cs</span></p><p  id=\"5326\"><span class=\"s112\"  id=\"5327\">For complete code, please visit appendix page and find page title “VcardControl.ascx.cs”.</span></p><p  id=\"5328\"><br id=\"5329\"></p></div>","sub":[]},{"pageId":"117","pageLevel":1,"pageOrder":"117","pageParentId":"86","pageName":"Implement User Control:","endPointPath":"","pageHeading":"<h3 style=\"padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5330\" class=\"heading5330\"><a name=\"bookmark66\" id=\"5331\" style=\"color: green;\">Implement User Control:</a></h3>","pageContent":"<div id=\"contentheading5330\" style=\"border: 5px solid rgb(0, 128, 0);\"><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5332\">Until now we just finish creating usercontrol in Visual studio, its time to publish visual studio project, publishing visual studio project generate different types of files but we only need two types of files. Dot (.) dll file and .ascx file. Dll and .ascx (usercontrol) files should be copied into Umbraco site. <u id=\"5333\">DLL file goes inside bin directory of Umbraco site and .ascx file goes to “Usercontrol” directory of Umbraco sites</u>. Follow the steps</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5334\"><br id=\"5335\"></p><ul id=\"l129\"><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5337\"><p class=\"s93\" style=\"display: inline;\" id=\"5338\">First publish visual project</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5339\"><br id=\"5340\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5341\"><p class=\"s93\" style=\"display: inline;\" id=\"5342\">To publish project go to Build <span class=\"s114\" id=\"5343\"></span><span class=\"s115\" id=\"5344\"> </span>Publish + your visual project name</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5345\"><br id=\"5346\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5347\"><p class=\"s93\" style=\"display: inline;\" id=\"5348\">In my case publish VcardGenerator</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5349\"><br id=\"5350\"></p></li><li style=\"padding-left: 41pt;text-indent: -18pt;text-align: left;\" id=\"5351\"><p class=\"s93\" style=\"display: inline;\" id=\"5352\">See captured screen for references</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"5353\"><br id=\"5354\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5355\"><span id=\"5356\"><img width=\"585\" height=\"266\" alt=\"image\" src=\"Image_109.png\" id=\"5357\"></span></p><p style=\"padding-top: 4pt;padding-left: 282pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5358\">Select “File System” from</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5359\"><br id=\"5360\"></p><p class=\"s10\" style=\"padding-top: 11pt;padding-left: 289pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5361\">Browse desire location to publish web site, in my case VcardPublish <span class=\"p\" id=\"5362\">directory in Desktop.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5363\"><br id=\"5364\"></p><p class=\"s116\" style=\"padding-top: 3pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"5365\">-</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5366\"><br id=\"5367\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5368\"><span id=\"5369\"><img width=\"148\" height=\"66\" alt=\"image\" src=\"Image_110.png\" id=\"5370\"></span></p><p style=\"padding-top: 4pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"5371\">Press</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5372\"><br id=\"5373\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5374\"><br id=\"5375\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5376\">Let‟s open published items director. In my case “VcardPublish” directory it must contain at least one directory “bin” and one user control “VcardControl” see “VcardPublish.jpg” and “VcardPublish.bin.jpg” image bellow</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5377\"><br id=\"5378\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5379\"><span id=\"5380\"><img width=\"560\" height=\"640\" alt=\"image\" src=\"Image_111.png\" id=\"5381\"></span></p><p class=\"s88\" style=\"padding-top: 4pt;padding-left: 12pt;text-indent: 0pt;text-align: left;\" id=\"5382\">VcardPublish.jpg    </p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: right;\" id=\"5383\">directory</p><p class=\"s16\" style=\"padding-left: 8pt;text-indent: -8pt;line-height: 12pt;text-align: right;\" id=\"5384\">I placed cms.dll,</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: right;\" id=\"5385\">directory</p><p class=\"s16\" style=\"padding-left: 8pt;text-indent: -8pt;line-height: 12pt;text-align: right;\" id=\"5386\">I placed cms.dll,</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5387\"></p><p style=\"padding-top: 7pt;padding-left: 204pt;text-indent: 0pt;text-align: left;\" id=\"5388\">VcardPublish.bin.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5389\"><br id=\"5390\"></p><p style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5391\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5392\">VcardPublish.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;text-align: left;\" id=\"5393\">It contains</p><p style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5394\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5395\">VcardPublish.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;text-align: left;\" id=\"5396\">It contains</p><p style=\"padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5397\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5398\"><br id=\"5399\"></p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5400\">called “ref”</p><p class=\"s16\" style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"5401\">umbraco.dll,</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 10pt;text-align: left;\" id=\"5402\">called “ref”</p><p class=\"s16\" style=\"padding-top: 1pt;text-indent: 0pt;text-align: left;\" id=\"5403\">umbraco.dll,</p><p style=\"padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5404\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5405\"><br id=\"5406\"></p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5407\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p style=\"padding-top: 6pt;text-indent: 0pt;text-align: left;\" id=\"5408\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5409\">VcardPublish.bin.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5410\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 112%;text-align: left;\" id=\"5411\">be copied into Umbraco directory.</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5412\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p style=\"padding-top: 6pt;text-indent: 0pt;text-align: left;\" id=\"5413\"><span class=\"s117\" style=\" background-color: #C0C0C0;\" id=\"5414\">VcardPublish.bin.jpg</span></p><p class=\"s16\" style=\"padding-top: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5415\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\" style=\"text-indent: 0pt;line-height: 112%;text-align: left;\" id=\"5416\">be copied into Umbraco directory.</p><p style=\"padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5417\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5418\"><br id=\"5419\"></p><p style=\"padding-top: 4pt;padding-left: 142pt;text-indent: 0pt;text-align: left;\" id=\"5420\"><span class=\"s118\" style=\" background-color: #C0C0C0;\" id=\"5421\">UmbracoWebDirectory.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5422\"><br id=\"5423\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5424\"><br id=\"5425\"></p><p class=\"s93\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5426\">- <b id=\"5427\">Asp.net User Control files should goes inside “usercontrols” directory</b></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5428\"><br id=\"5429\"></p><p class=\"s100\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5430\">- VCardGenerator.DLL file goes inside “Bin” Directory see images “<span class=\"h4\" id=\"5431\">VcardPublish.jpg”,</span></p><h4 style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5432\"><a name=\"a61\" id=\"5433\">“VcardPublish.bin.jpg” and “UmbracoWebDirectory.jpg”.</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5434\"><br id=\"5435\"></p><h3 style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"5436\"><a name=\"bookmark67\" id=\"5437\">Create Macro to use User Control.</a></h3><p class=\"s93\" style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"5438\">Copying Asp.net User Control to “usercontrol” directory and relevant DLL file into “bin” directory is not enough to use User Control, using User Control to Asp.net and using User Control to Umbraco site is different. In Umbraco site we can use User Control creating associated Marco. See image “vcard.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5439\"><br id=\"5440\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5441\"><span id=\"5442\"><img width=\"590\" height=\"384\" alt=\"image\" src=\"Image_112.png\" id=\"5443\"></span></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5444\">Select</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5445\"><br id=\"5446\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5447\">Check “Use in</p><p class=\"s88\" style=\"padding-top: 6pt;padding-left: 217pt;text-indent: 0pt;text-align: center;\" id=\"5448\">Vcard.jpg                 </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5449\"><br id=\"5450\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5451\"><br id=\"5452\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5453\">I created User Control “vcard”, selected User Control “VcardControl.ascx” Umbraco automatically add directory “usercontrol” and I checked “use in Editor”. Checked in “use in editor” will make macro available to use in Content Rich text editor.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5454\"><br id=\"5455\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: justify;\" id=\"5456\">Let‟s create content and insert Vcard macro in content.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5457\"><br id=\"5458\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: justify;\" id=\"5459\">Open Umbraco back end also called Umbraco Back Office. Go to Section “Content” click “Create New. Choose “General Content” Document Type. Click “Description” Tab and navigate Insert Macro near insert image icon</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5460\"><br id=\"5461\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5462\"><span id=\"5463\"><img width=\"604\" height=\"218\" alt=\"image\" src=\"Image_113.png\" id=\"5464\"></span></p><p class=\"s45\" style=\"padding-top: 4pt;padding-left: 143pt;text-indent: 0pt;text-align: left;\" id=\"5465\">Description <span class=\"p\" id=\"5466\">Insert Macro</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5467\"><br id=\"5468\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5469\">Select <b id=\"5470\">Vcard</b></p><p style=\"padding-top: 2pt;text-indent: 0pt;text-align: right;\" id=\"5471\">from Drop down</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5472\"><br id=\"5473\"></p><p style=\"padding-top: 10pt;padding-left: 99pt;text-indent: 0pt;text-align: left;\" id=\"5474\">Press OK</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5475\"><br id=\"5476\"></p><p class=\"s93\" style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"5477\">After pressing OK Button, you must see macro inserted into content; it looks like red dotted boarder line. See image bellow for reference.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5478\"><br id=\"5479\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5480\"><span id=\"5481\"><img width=\"309\" height=\"114\" alt=\"image\" src=\"Image_114.png\" id=\"5482\"></span></p><p class=\"s119\" style=\"padding-top: 1pt;padding-left: 121pt;text-indent: 0pt;text-align: left;\" id=\"5483\">Vcardcontent.jpg       </p><p class=\"s119\" style=\"padding-top: 1pt;padding-left: 121pt;text-indent: 0pt;text-align: left;\" id=\"5484\">Vcardcontent.jpg       </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5485\"></p><p class=\"s93\" style=\"padding-top: 4pt;padding-left: 247pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5486\">A macro area is highlighted. See image “vcardcontent.jpg”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5487\"><br id=\"5488\"></p><p class=\"s100\" style=\"padding-top: 4pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5489\">Lets Preview Vcard Content by clicking Preview Icon:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5490\"><br id=\"5491\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5492\">If you are following me, preview must look like this.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5493\"><br id=\"5494\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5495\"><span id=\"5496\"><img width=\"606\" height=\"704\" alt=\"image\" src=\"Image_115.png\" id=\"5497\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5498\"><span id=\"5499\"><img width=\"277\" height=\"342\" alt=\"image\" src=\"Image_116.png\" id=\"5500\"></span></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"5501\">1</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5502\"><br id=\"5503\"></p><p style=\"padding-top: 11pt;padding-left: 2pt;text-indent: 0pt;text-align: center;\" id=\"5504\">2</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5505\"><br id=\"5506\"></p><p style=\"padding-left: 175pt;text-indent: 0pt;text-align: left;\" id=\"5507\">3 4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5508\"><br id=\"5509\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5510\">5</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5511\"><br id=\"5512\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5513\"><br id=\"5514\"></p><p style=\"text-indent: 0pt;text-align: right;\" id=\"5515\">6</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5516\"><br id=\"5517\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5518\"><br id=\"5519\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5520\"><br id=\"5521\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5522\"><br id=\"5523\"></p><p style=\"text-indent: 0pt;text-align: center;\" id=\"5524\">7</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5525\"><br id=\"5526\"></p><p style=\"text-indent: 0pt;text-align: center;\" id=\"5527\">7</p><p style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5528\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5529\"><br id=\"5530\"></p><ul id=\"l130\"><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5532\"><p class=\"s120\" style=\"display: inline;\" id=\"5533\">- <span class=\"s121\" id=\"5534\">107 - </span>| <span class=\"s122\" id=\"5535\">W r i t t e n B y J i v a</span></p></li></ul><ol id=\"l131\"><li style=\"padding-top: 10pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"5537\"><p style=\"display: inline;\" id=\"5538\">Red strip: preview mode</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5539\"><br id=\"5540\"></p><p class=\"s122\" style=\"text-indent: 0pt;text-align: left;\" id=\"5541\">n T h a p a</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5542\"><br id=\"5543\"></p><p class=\"s122\" style=\"text-indent: 0pt;text-align: left;\" id=\"5544\">n T h a p a</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5545\"></p></li><li style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;line-height: 26pt;text-align: left;\" id=\"5546\"><p style=\"display: inline;\" id=\"5547\">Vcard navigation bar show up 3- Input text box, Image upload,</p></li></ol><p style=\"padding-left: 43pt;text-indent: 0pt;line-height: 13pt;text-align: left;\" id=\"5548\">Create button environments</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5549\"><br id=\"5550\"></p><ol id=\"l132\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5552\"><p style=\"display: inline;\" id=\"5553\">Error Summary. Press “Create” button without typing. It show up required field errors</p></li><li style=\"padding-top: 10pt;padding-left: 25pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"5554\"><p style=\"display: inline;\" id=\"5555\">Name: required error message 6- Email: Required error message</p></li></ol><ol id=\"l133\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5557\"><p style=\"display: inline;\" id=\"5558\">Validation: email validation works. I tried to input “jeevan_2np at yahoo.com” email id, which does not contain</p><p style=\"padding-left: 43pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5559\">@ character, validation is not pass, it show up error message.</p><h2 style=\"padding-top: 3pt; padding-left: 20pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5560\" class=\"heading5560\"><a name=\"bookmark68\" id=\"5561\" style=\"color: lime;\">Extending Xslt Using .NET Class</a></h2><div id=\"contentheading5560\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 20pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5562\">In many cases Xslt may not be enough to fetch data or to process data in that case you can easily extend XSLT using .NET Class. Here I show how to use it, In Vcard website, people may interested to see recent Vcard. Name and address are fetched using .NET Class to extend XSLT.</p><p style=\"padding-top: 10pt;padding-left: 20pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5563\">Let‟s add Class. If you followed me, add new class in Visual studio VCardGenerator solution where we created User Controls. I choose class name “RecentVcard” and press Add. See captured screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5564\"><br id=\"5565\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5566\"><span id=\"5567\"><img width=\"652\" height=\"689\" alt=\"image\" src=\"Image_117.png\" id=\"5568\"></span></p><ol id=\"l134\"><li style=\"padding-top: 4pt;padding-left: 367pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5570\"><p style=\"display: inline;\" id=\"5571\">Recently added Class “RecentVcard.cs”</p></li><li style=\"padding-top: 10pt;padding-left: 367pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5572\"><p style=\"display: inline;\" id=\"5573\">I added two references, umbraco.DataLayer and Umbraco.</p></li><li style=\"padding-top: 10pt;padding-left: 367pt;text-indent: -18pt;text-align: right;\" id=\"5574\"><p style=\"display: inline;\" id=\"5575\">Method Name</p></li></ol></div></li></ol><p class=\"s45\" style=\"text-indent: 0pt;text-align: right;\" id=\"5576\">2 <span class=\"s123\" id=\"5577\">1 </span><span class=\"p\" id=\"5578\">GetVcardData().</span></p><p class=\"s27\" style=\"padding-top: 9pt;text-indent: 0pt;line-height: 12pt;text-align: right;\" id=\"5579\"><a name=\"a62\" id=\"5580\">- </a><span class=\"h4\" id=\"5581\">GetVcardData()</span></p><p class=\"s124\" style=\"padding-left: 202pt;text-indent: 0pt;line-height: 18pt;text-align: left;\" id=\"5582\">3 <b id=\"5583\">method is going to</b></p><h4 style=\"padding-top: 2pt;padding-left: 367pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5584\">use in XSLT so that it must be public access modifier and Static method declaration<span class=\"p\" id=\"5585\">.</span></h4><p class=\"s93\" style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 117%;text-align: left;\" id=\"5586\">Requirements: when you extend .NET Class you should have some basic knowledge which I did not cover here. My assumption is you already know basic things about</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5587\"><br id=\"5588\"></p><ol id=\"l135\"><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5590\"><p class=\"s93\" style=\"display: inline;\" id=\"5591\">Adding References, in my case I am using Umbraco system to fetch data; you need to add Umbraco.DataLayer and Umraco references in your Visual Project.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5592\"><br id=\"5593\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5594\"><p class=\"s93\" style=\"display: inline;\" id=\"5595\">Know how to select data from MsSql and sorting data (ascending or descending)</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5596\"><br id=\"5597\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"5598\"><p class=\"s93\" style=\"display: inline;\" id=\"5599\">In Vcard web Recent Vcard will be selected top 10 lists from database and should be order by latest Vcard should be at top.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5600\"><br id=\"5601\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"5602\"><p class=\"s93\" style=\"display: inline;\" id=\"5603\">Looping. You should know how to loop data using while or foreach.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5604\"><br id=\"5605\"></p></li><li style=\"padding-left: 43pt;text-indent: -18pt;line-height: 115%;text-align: left;\" id=\"5606\"><p class=\"s93\" style=\"display: inline;\" id=\"5607\">Know about static methods and where to use it. If you want to use methods in XSLT it must be declear as static and public access modifier.</p></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"5608\"><br id=\"5609\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5610\">Code inside GetVcardData() method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5611\"><br id=\"5612\"></p><p class=\"s93\" style=\"padding-left: 7pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"5613\">I am going use ISqlHelper class provided by Umbraco to fetch data from Database, but you can fetch using asp.net way if you like. Here I show you to fetch data from Database using Umbraco. See code bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5614\"><br id=\"5615\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5616\"><span id=\"5617\"><img width=\"603\" height=\"521\" alt=\"image\" src=\"Image_118.png\" id=\"5618\"></span></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 13pt;text-indent: 0pt;text-align: left;\" id=\"5619\">public static string <span style=\" color: #000;\" id=\"5620\">GetVcardData()</span></p><p class=\"s70\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5621\">{</p><p class=\"s98\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5622\">ISqlHelper <span style=\" color: #000;\" id=\"5623\">getVcard = </span>DataLayerHelper<span style=\" color: #000;\" id=\"5624\">.CreateSqlHelper(</span>GlobalSettings<span style=\" color: #000;\" id=\"5625\">.DbDSN);</span></p><p class=\"s98\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5626\">IRecordsReader <span style=\" color: #000;\" id=\"5627\">read = getVcard.ExecuteReader(</span><span style=\" color: #A21515;\" id=\"5628\">@\"select top 10 id, name, country</span></p><p class=\"s99\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5629\">from vcardimage where id &gt; @id order by id desc\"<span style=\" color: #000;\" id=\"5630\">, getVcard.CreateParameter(</span>\"@id\"<span style=\" color: #000;\" id=\"5631\">, </span>\"0\"<span style=\" color: #000;\" id=\"5632\">));</span></p><p class=\"s70\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5633\"><span style=\" color: #00F;\" id=\"5634\">string </span>data = <span style=\" color: #A21515;\" id=\"5635\">\"\"</span>; <span style=\" color: #00F;\" id=\"5636\">while </span>(read.Read())</p><p class=\"s70\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5637\">{</p><p class=\"s70\" style=\"padding-left: 85pt;text-indent: 0pt;text-align: left;\" id=\"5638\">data += <span style=\" color: #A21515;\" id=\"5639\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span style=\" color: #A21515;\" id=\"5640\">\"name\"</span>) +</p><p class=\"s99\" style=\"padding-left: 86pt;text-indent: 0pt;text-align: left;\" id=\"5641\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span style=\" color: #000;\" id=\"5642\">+ read.GetString(</span>\"country\"<span style=\" color: #000;\" id=\"5643\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span style=\" color: #000;\" id=\"5644\">;</span></p><p class=\"s70\" style=\"padding-left: 76pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"5645\">}</p><p class=\"s99\" style=\"padding-left: 76pt;text-indent: 0pt;text-align: left;\" id=\"5646\"><span style=\" color: #00F;\" id=\"5647\">return </span>\"&lt;ul&gt;\" <span style=\" color: #000;\" id=\"5648\">+ data + </span>\"&lt;/ul\"<span style=\" color: #000;\" id=\"5649\">;</span></p><p class=\"s70\" style=\"padding-left: 55pt;text-indent: 0pt;text-align: left;\" id=\"5650\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5651\"><br id=\"5652\"></p><p class=\"s40\" style=\"padding-top: 2pt;padding-left: 13pt;text-indent: 0pt;line-height: 14pt;text-align: left;\" id=\"5653\">Description:</p><ul id=\"l136\"><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"5655\"><p class=\"s40\" style=\"display: inline;\" id=\"5656\">ISqlHelper object used to connect to database, GlobalSettings.DbDSN is use to retrieve database connection string from web.config file.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: justify;\" id=\"5657\"><p class=\"s40\" style=\"display: inline;\" id=\"5658\">IRecorderReader object contains method ExecuteReader(). ExecuteReater() has two parameters, first parameters is query string and second is parameters.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"5659\"><p class=\"s40\" style=\"display: inline;\" id=\"5660\">‚Select to 10 id, name, country‛ means select id, name and country from table name vcardimage and order by desc (desending) order.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;line-height: 14pt;text-align: left;\" id=\"5661\"><p class=\"s40\" style=\"display: inline;\" id=\"5662\">I use while loop to loop data.</p></li><li style=\"padding-left: 49pt;text-indent: -18pt;text-align: left;\" id=\"5663\"><p class=\"s40\" style=\"display: inline;\" id=\"5664\">By calling GetString() methods Umbraco retrieve data as</p></li></ul><p style=\"text-indent: 0pt;text-align: left;\" id=\"5665\"><span id=\"5666\"><img width=\"648\" height=\"422\" alt=\"image\" src=\"Image_119.png\" id=\"5667\"></span></p><p class=\"s8\" style=\"padding-top: 3pt;padding-left: 8pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5668\"><span class=\"p\" id=\"5669\">If you are following me, RecentVcard class should looks like bellow, see captured screen. Now you need to publish your website. Go to </span>Build <span class=\"s89\" id=\"5670\"></span><span class=\"s28\" id=\"5671\"> </span>Publish VCardGenerator<span class=\"p\" id=\"5672\">. Select </span>Publish Method <span class=\"s89\" id=\"5673\"></span><span class=\"s28\" id=\"5674\"> </span>file System<span class=\"p\" id=\"5675\">. Select </span>Target Location <span class=\"p\" id=\"5676\">and press “</span>Publish<span class=\"p\" id=\"5677\">” button. It should generate </span>VCardControl.dll <span class=\"p\" id=\"5678\">file inside “Bin” Directory of your published directory. Copy that </span>VCardControl.dll <span class=\"p\" id=\"5679\">file to Umbraco website “</span>Bin<span class=\"p\" id=\"5680\">” Directory. If you are following me, you should already copied </span>VCardControl.dll <span class=\"p\" id=\"5681\">file into Umbraco website “</span>Bin<span class=\"p\" id=\"5682\">” Directory during User Control topics. You should replace old </span>VCardControl.dll <span class=\"p\" id=\"5683\">file with new </span>VCardControl.dll <span class=\"p\" id=\"5684\">file. We can register our </span>RecentVcard <span class=\"p\" id=\"5685\">class into Umbraco website </span>xsltExtensions.config <span class=\"p\" id=\"5686\">file.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5687\"><br id=\"5688\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5689\"><br id=\"5690\"></p><p class=\"s88\" style=\"padding-left: 63pt;text-indent: 0pt;text-align: left;\" id=\"5691\">RecentVcard     </p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5692\"><br id=\"5693\"></p><p class=\"s88\" style=\"padding-left: 63pt;text-indent: 0pt;text-align: left;\" id=\"5694\">RecentVcard     </p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"5695\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5696\"><br id=\"5697\"></p><p style=\"padding-left: 8pt;text-indent: 0pt;text-align: justify;\" id=\"5698\">Overview of <i id=\"5699\">VCardGenerator </i>visual studio solution</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5700\"><br id=\"5701\"></p><ul id=\"l137\"><li style=\"padding-left: 44pt;text-indent: -18pt;text-align: left;\" id=\"5703\"><p style=\"display: inline;\" id=\"5704\">One user Control “VcardControl.ascx” use to generate Vcard</p></li><li style=\"padding-top: 11pt;padding-left: 44pt;text-indent: -18pt;text-align: left;\" id=\"5705\"><p style=\"display: inline;\" id=\"5706\">One Class “RecentVcard.cs” use to fetch data from Database</p></li><li style=\"padding-top: 11pt;padding-left: 44pt;text-indent: -18pt;text-align: left;\" id=\"5707\"><p style=\"display: inline;\" id=\"5708\">Added two references</p></li></ul><ol id=\"l138\"><li style=\"padding-top: 11pt;padding-left: 80pt;text-indent: -18pt;text-align: left;\" id=\"5710\"><p style=\"display: inline;\" id=\"5711\">Umbraco.DataLayer</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5712\"><br id=\"5713\"></p></li><li style=\"padding-left: 80pt;text-indent: -18pt;text-align: left;\" id=\"5714\"><p style=\"display: inline;\" id=\"5715\">Umbraco</p></li></ol><p style=\"text-indent: 0pt;text-align: left;\" id=\"5716\"><br id=\"5717\"></p><p style=\"padding-left: 62pt;text-indent: 0pt;text-align: left;\" id=\"5718\">See code line 5 and 6 in RecentVcard Class.</p><h3 style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5719\"><a name=\"bookmark69\" id=\"5720\">Registering .NET Class on config file</a></h3><p style=\"padding-top: 2pt;padding-left: 7pt;text-indent: 35pt;line-height: 112%;text-align: justify;\" id=\"5721\"><i id=\"5722\">RecentVcard </i>class returns latest ten list of recent vcard from database, before to use <i id=\"5723\">RecentVcard </i>class, Umbraco requires registering first. We can use <i id=\"5724\">RecentVcard </i>class only after registering <i id=\"5725\">RecentVard </i>class into Umbraco <i id=\"5726\">xsltExtensions.config </i>file. <i id=\"5727\">xsltExtesion.config </i>file is xml file which can be found inside “config” directory in Umbraco website. Go To “config” directory and open <i id=\"5728\">xsltExtension.config </i>file. You can either use visual studio or other software program, I am using Notepad ++<span class=\"s3\" id=\"5729\">31 </span>open source software. See captured screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5730\"><span id=\"5731\"><img width=\"644\" height=\"678\" alt=\"image\" src=\"Image_120.png\" id=\"5732\"></span></p><p style=\"padding-top: 2pt;padding-left: 16pt;text-indent: 0pt;text-align: left;\" id=\"5733\"><span class=\"s125\" id=\"5734\">1 </span><span class=\"s126\" style=\" background-color: #FF0;\" id=\"5735\">xsltExtension.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5736\"><br id=\"5737\"></p><p style=\"padding-top: 4pt;padding-left: 48pt;text-indent: 0pt;text-align: left;\" id=\"5738\">2</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5739\"><br id=\"5740\"></p><p class=\"s127\" style=\"padding-top: 4pt;padding-left: 48pt;text-indent: 0pt;text-align: center;\" id=\"5741\">5                                                                     <span class=\"p\" id=\"5742\">3                 4</span></p><ol id=\"l139\"><li style=\"padding-top: 9pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5744\"><p style=\"display: inline;\" id=\"5745\">File location of xsltExtensions.config</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5746\"><p style=\"display: inline;\" id=\"5747\">Assembly name “VcardGenerator”</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5748\"><p style=\"display: inline;\" id=\"5749\">Type = first one before dot is Namespace</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5750\"><p style=\"display: inline;\" id=\"5751\">Type = second after dot is Class name</p></li><li style=\"padding-top: 2pt;padding-left: 174pt;text-indent: -18pt;text-align: left;\" id=\"5752\"><p style=\"display: inline;\" id=\"5753\">Alias : it is use in Xslt to refer assembly</p></li></ol><h4 style=\"padding-top: 2pt;padding-left: 138pt;text-indent: 0pt;text-align: left;\" id=\"5754\"><a name=\"a63\" id=\"5755\">Did you get confuse?</a></h4><h4 style=\"padding-top: 2pt;padding-left: 138pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5756\">See image bellow “VCardGenerator.extension.jpg” and match number.</h4><p style=\"padding-left: 138pt;text-indent: 0pt;line-height: 113%;text-align: left;\" id=\"5757\">Make changed in your xsltExtensions.config file as mine see image xsltExtension.jpg if you want to follow me.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5758\"><br id=\"5759\"></p><p style=\"padding-top: 4pt;text-indent: 0pt;text-align: right;\" id=\"5760\">2</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5761\"><br id=\"5762\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;\" id=\"5763\">3 4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5764\"><br id=\"5765\"></p><p style=\"padding-top: 4pt;padding-left: 40pt;text-indent: 0pt;text-align: left;\" id=\"5766\">4</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5767\"><br id=\"5768\"></p><p style=\"padding-top: 4pt;padding-left: 20pt;text-indent: 0pt;text-align: left;\" id=\"5769\"><a name=\"a64\" id=\"5770\"><span class=\"s128\" style=\" background-color: #FF0;\" id=\"5771\">VCardGenerator.extension.jpg</span></a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5772\"><br id=\"5773\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;line-height: 1pt;text-align: left;\" id=\"5774\"><span id=\"5775\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_121.png\" id=\"5776\"></span></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5777\"><a href=\"http://notepad-plus-plus.org/\" style=\" color: black; font-family:Arial, sans-serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 6.5pt; vertical-align: 5pt;\" target=\"_blank\" id=\"5778\">31 </a><a href=\"http://notepad-plus-plus.org/\" class=\"s11\" target=\"_blank\" id=\"5779\">http://notepad-plus-plus.org/</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5780\"><br id=\"5781\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5782\"><br id=\"5783\"></p><p style=\"padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5784\">After made change on xsltExtensions.config file, make sure to save changed.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5785\"><br id=\"5786\"></p><h4 style=\"padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5787\"><a name=\"a65\" id=\"5788\">Extending XSLT using .net Class Practice</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5789\"><br id=\"5790\"></p><p style=\"padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5791\">We have now VCardGenerator.dll file inside “Bin” directory and we also registered our Class on “xsltExtentions.config” file. Remember alias we specified at “xsltExtensions.config” file. If you are following me, alias is “recentvcard”.</p><h4 style=\"padding-top: 10pt;padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5792\"><a name=\"a66\" id=\"5793\">Create Xslt:</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5794\"><br id=\"5795\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5796\"><span id=\"5797\"><img width=\"332\" height=\"203\" alt=\"image\" src=\"Image_122.jpg\" id=\"5798\"></span></p><p style=\"padding-top: 4pt;padding-left: 263pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5799\">I have created new xslt for Recent Vcard, see captured screen left. Go to backend part of umbraco website, Select <span class=\"s89\" id=\"5800\"></span><span class=\"s28\" id=\"5801\"> </span>Developer <span class=\"s89\" id=\"5802\"></span><span class=\"s28\" id=\"5803\"> </span>XSLT Files <span class=\"s89\" id=\"5804\"></span><span class=\"s28\" id=\"5805\"> </span>Right Click and click on “Create”.</p><p style=\"padding-top: 10pt;padding-left: 263pt;text-indent: 0pt;line-height: 187%;text-align: left;\" id=\"5806\">Filename: “ RecentVcard” Choose a Template: “Clean”</p><p style=\"padding-left: 21pt;text-indent: 242pt;line-height: 114%;text-align: left;\" id=\"5807\">Checked: “Create Macro” by checked in Umbraco will create matching macro for us automatically,</p><p style=\"padding-top: 9pt;padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5808\">Press <span class=\"s89\" id=\"5809\"></span><span class=\"s28\" id=\"5810\"> </span><i id=\"5811\">Create </i>Button.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5812\"><br id=\"5813\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5814\"><span id=\"5815\"><img width=\"419\" height=\"109\" alt=\"image\" src=\"Image_123.png\" id=\"5816\"></span></p><p class=\"s8\" style=\"padding-left: 21pt;text-indent: 0pt;text-align: justify;\" id=\"5817\">Open “RecentVcard.xslt”</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5818\"><br id=\"5819\"></p><p style=\"padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5820\">We can registered .net class inside xsl:stylesheet, using xslns. See the captured screen right. See highlighted area on</p><p style=\"padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5821\">right image, if you already worked with Xslt you may know xmlns. Xmlns is xml namespace for a document. After colon you provide namespace name, I choose “recentVcard”. You can choose different if you want. Use urn colon alias that you specified at xsltExtensions.config” see “xsltExtension.jpg” image, I my case alias is “recentvcard”. URN is Uniform Resource Name.</p><p style=\"padding-top: 9pt;padding-left: 21pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5822\">public static method inside .NET class can be access using xml namespace in XSLT. In RecentVcard Class has one static public methods called <i id=\"5823\">GetVcardData()</i>. To access that public method we can use namespace colon and method name. If there are any parameters, we can easily pass. See example bellow how I accessed GetVcardData() method.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5824\"><br id=\"5825\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5826\"><br id=\"5827\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5828\"><span id=\"5829\"><img width=\"623\" height=\"17\" alt=\"image\" src=\"Image_124.jpg\" id=\"5830\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5831\"><br id=\"5832\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5833\"><span id=\"5834\"><img width=\"638\" height=\"217\" alt=\"image\" src=\"Image_125.png\" id=\"5835\"></span></p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;text-align: left;\" id=\"5836\">Use xml namespace Specify method after</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5837\">Tips: xml namespace and methods are separated by colon</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5838\">Tips: xml namespace and methods are separated by colon</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5839\"></p><p style=\"padding-top: 2pt;padding-left: 165pt;text-indent: 0pt;text-align: left;\" id=\"5840\">colon.</p><p style=\"padding-top: 4pt;padding-left: 23pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5841\">Use disable-out-escaping= “yes”. It means that do not escape special character because method GetVcardData() returns html tags, ul, li, span tags.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5842\"><br id=\"5843\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5844\"><br id=\"5845\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5846\"><span id=\"5847\"><img width=\"610\" height=\"431\" alt=\"image\" src=\"Image_126.jpg\" id=\"5848\"></span></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5849\">Code all in one:</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5850\"><br id=\"5851\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5852\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"5853\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5854\"><br id=\"5855\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5856\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"5857\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"5858\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5859\"><br id=\"5860\"></p><p style=\"padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5861\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5862\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5863\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5864\"><br id=\"5865\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading5330\" class=\"heading5330\"><a name=\"bookmark66\" id=\"5331\" >Implement User Control:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading5330\" ><p class=\"s93\"  id=\"5332\">Until now we just finish creating usercontrol in Visual studio, its time to publish visual studio project, publishing visual studio project generate different types of files but we only need two types of files. Dot (.) dll file and .ascx file. Dll and .ascx (usercontrol) files should be copied into Umbraco site. <u id=\"5333\">DLL file goes inside bin directory of Umbraco site and .ascx file goes to “Usercontrol” directory of Umbraco sites</u>. Follow the steps</p><p  id=\"5334\"><br id=\"5335\"></p><ul id=\"l129\"><li  id=\"5337\"><p class=\"s93\"  id=\"5338\">First publish visual project</p><p  id=\"5339\"><br id=\"5340\"></p></li><li  id=\"5341\"><p class=\"s93\"  id=\"5342\">To publish project go to Build <span class=\"s114\" id=\"5343\"></span><span class=\"s115\" id=\"5344\"> </span>Publish + your visual project name</p><p  id=\"5345\"><br id=\"5346\"></p></li><li  id=\"5347\"><p class=\"s93\"  id=\"5348\">In my case publish VcardGenerator</p><p  id=\"5349\"><br id=\"5350\"></p></li><li  id=\"5351\"><p class=\"s93\"  id=\"5352\">See captured screen for references</p></li></ul><p  id=\"5353\"><br id=\"5354\"></p><p  id=\"5355\"><span id=\"5356\"><img width=\"585\" height=\"266\" alt=\"image\" src=\"Image_109.png\" id=\"5357\"></span></p><p  id=\"5358\">Select “File System” from</p><p  id=\"5359\"><br id=\"5360\"></p><p class=\"s10\"  id=\"5361\">Browse desire location to publish web site, in my case VcardPublish <span class=\"p\" id=\"5362\">directory in Desktop.</span></p><p  id=\"5363\"><br id=\"5364\"></p><p class=\"s116\"  id=\"5365\">-</p><p  id=\"5366\"><br id=\"5367\"></p><p  id=\"5368\"><span id=\"5369\"><img width=\"148\" height=\"66\" alt=\"image\" src=\"Image_110.png\" id=\"5370\"></span></p><p  id=\"5371\">Press</p><p  id=\"5372\"><br id=\"5373\"></p><p  id=\"5374\"><br id=\"5375\"></p><p class=\"s93\"  id=\"5376\">Let‟s open published items director. In my case “VcardPublish” directory it must contain at least one directory “bin” and one user control “VcardControl” see “VcardPublish.jpg” and “VcardPublish.bin.jpg” image bellow</p><p  id=\"5377\"><br id=\"5378\"></p><p  id=\"5379\"><span id=\"5380\"><img width=\"560\" height=\"640\" alt=\"image\" src=\"Image_111.png\" id=\"5381\"></span></p><p class=\"s88\"  id=\"5382\">VcardPublish.jpg    </p><p class=\"s16\"  id=\"5383\">directory</p><p class=\"s16\"  id=\"5384\">I placed cms.dll,</p><p class=\"s16\"  id=\"5385\">directory</p><p class=\"s16\"  id=\"5386\">I placed cms.dll,</p><p  id=\"5387\"></p><p  id=\"5388\">VcardPublish.bin.jpg</p><p  id=\"5389\"><br id=\"5390\"></p><p  id=\"5391\"><span class=\"s117\"  id=\"5392\">VcardPublish.jpg</span></p><p class=\"s16\"  id=\"5393\">It contains</p><p  id=\"5394\"><span class=\"s117\"  id=\"5395\">VcardPublish.jpg</span></p><p class=\"s16\"  id=\"5396\">It contains</p><p  id=\"5397\"></p><p  id=\"5398\"><br id=\"5399\"></p><p class=\"s16\"  id=\"5400\">called “ref”</p><p class=\"s16\"  id=\"5401\">umbraco.dll,</p><p class=\"s16\"  id=\"5402\">called “ref”</p><p class=\"s16\"  id=\"5403\">umbraco.dll,</p><p  id=\"5404\"></p><p  id=\"5405\"><br id=\"5406\"></p><p class=\"s16\"  id=\"5407\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p  id=\"5408\"><span class=\"s117\"  id=\"5409\">VcardPublish.bin.jpg</span></p><p class=\"s16\"  id=\"5410\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\"  id=\"5411\">be copied into Umbraco directory.</p><p class=\"s16\"  id=\"5412\">umbraco.DataLayer.dll file inside “ref” directory. Your case can be difference</p><p  id=\"5413\"><span class=\"s117\"  id=\"5414\">VcardPublish.bin.jpg</span></p><p class=\"s16\"  id=\"5415\">It contains more than one dll file, you may get confuse. It‟s because I added businesslogic.dll, cms.dll, umbraco.DataLayer.dll and umbraco.dll, all relevant dll file should</p><p class=\"s16\"  id=\"5416\">be copied into Umbraco directory.</p><p  id=\"5417\"></p><p  id=\"5418\"><br id=\"5419\"></p><p  id=\"5420\"><span class=\"s118\"  id=\"5421\">UmbracoWebDirectory.jpg</span></p><p  id=\"5422\"><br id=\"5423\"></p><p  id=\"5424\"><br id=\"5425\"></p><p class=\"s93\"  id=\"5426\">- <b id=\"5427\">Asp.net User Control files should goes inside “usercontrols” directory</b></p><p  id=\"5428\"><br id=\"5429\"></p><p class=\"s100\"  id=\"5430\">- VCardGenerator.DLL file goes inside “Bin” Directory see images “<span class=\"h4\" id=\"5431\">VcardPublish.jpg”,</span></p><h4  id=\"5432\"><a name=\"a61\" id=\"5433\">“VcardPublish.bin.jpg” and “UmbracoWebDirectory.jpg”.</a></h4><p  id=\"5434\"><br id=\"5435\"></p><h3  id=\"5436\"><a name=\"bookmark67\" id=\"5437\">Create Macro to use User Control.</a></h3><p class=\"s93\"  id=\"5438\">Copying Asp.net User Control to “usercontrol” directory and relevant DLL file into “bin” directory is not enough to use User Control, using User Control to Asp.net and using User Control to Umbraco site is different. In Umbraco site we can use User Control creating associated Marco. See image “vcard.jpg”</p><p  id=\"5439\"><br id=\"5440\"></p><p  id=\"5441\"><span id=\"5442\"><img width=\"590\" height=\"384\" alt=\"image\" src=\"Image_112.png\" id=\"5443\"></span></p><p  id=\"5444\">Select</p><p  id=\"5445\"><br id=\"5446\"></p><p  id=\"5447\">Check “Use in</p><p class=\"s88\"  id=\"5448\">Vcard.jpg                 </p><p  id=\"5449\"><br id=\"5450\"></p><p  id=\"5451\"><br id=\"5452\"></p><p class=\"s93\"  id=\"5453\">I created User Control “vcard”, selected User Control “VcardControl.ascx” Umbraco automatically add directory “usercontrol” and I checked “use in Editor”. Checked in “use in editor” will make macro available to use in Content Rich text editor.</p><p  id=\"5454\"><br id=\"5455\"></p><p class=\"s93\"  id=\"5456\">Let‟s create content and insert Vcard macro in content.</p><p  id=\"5457\"><br id=\"5458\"></p><p class=\"s93\"  id=\"5459\">Open Umbraco back end also called Umbraco Back Office. Go to Section “Content” click “Create New. Choose “General Content” Document Type. Click “Description” Tab and navigate Insert Macro near insert image icon</p><p  id=\"5460\"><br id=\"5461\"></p><p  id=\"5462\"><span id=\"5463\"><img width=\"604\" height=\"218\" alt=\"image\" src=\"Image_113.png\" id=\"5464\"></span></p><p class=\"s45\"  id=\"5465\">Description <span class=\"p\" id=\"5466\">Insert Macro</span></p><p  id=\"5467\"><br id=\"5468\"></p><p  id=\"5469\">Select <b id=\"5470\">Vcard</b></p><p  id=\"5471\">from Drop down</p><p  id=\"5472\"><br id=\"5473\"></p><p  id=\"5474\">Press OK</p><p  id=\"5475\"><br id=\"5476\"></p><p class=\"s93\"  id=\"5477\">After pressing OK Button, you must see macro inserted into content; it looks like red dotted boarder line. See image bellow for reference.</p><p  id=\"5478\"><br id=\"5479\"></p><p  id=\"5480\"><span id=\"5481\"><img width=\"309\" height=\"114\" alt=\"image\" src=\"Image_114.png\" id=\"5482\"></span></p><p class=\"s119\"  id=\"5483\">Vcardcontent.jpg       </p><p class=\"s119\"  id=\"5484\">Vcardcontent.jpg       </p><p  id=\"5485\"></p><p class=\"s93\"  id=\"5486\">A macro area is highlighted. See image “vcardcontent.jpg”</p><p  id=\"5487\"><br id=\"5488\"></p><p class=\"s100\"  id=\"5489\">Lets Preview Vcard Content by clicking Preview Icon:</p><p  id=\"5490\"><br id=\"5491\"></p><p class=\"s93\"  id=\"5492\">If you are following me, preview must look like this.</p><p  id=\"5493\"><br id=\"5494\"></p><p  id=\"5495\"><span id=\"5496\"><img width=\"606\" height=\"704\" alt=\"image\" src=\"Image_115.png\" id=\"5497\"></span></p><p  id=\"5498\"><span id=\"5499\"><img width=\"277\" height=\"342\" alt=\"image\" src=\"Image_116.png\" id=\"5500\"></span></p><p  id=\"5501\">1</p><p  id=\"5502\"><br id=\"5503\"></p><p  id=\"5504\">2</p><p  id=\"5505\"><br id=\"5506\"></p><p  id=\"5507\">3 4</p><p  id=\"5508\"><br id=\"5509\"></p><p  id=\"5510\">5</p><p  id=\"5511\"><br id=\"5512\"></p><p  id=\"5513\"><br id=\"5514\"></p><p  id=\"5515\">6</p><p  id=\"5516\"><br id=\"5517\"></p><p  id=\"5518\"><br id=\"5519\"></p><p  id=\"5520\"><br id=\"5521\"></p><p  id=\"5522\"><br id=\"5523\"></p><p  id=\"5524\">7</p><p  id=\"5525\"><br id=\"5526\"></p><p  id=\"5527\">7</p><p  id=\"5528\"></p><p  id=\"5529\"><br id=\"5530\"></p><ul id=\"l130\"><li  id=\"5532\"><p class=\"s120\"  id=\"5533\">- <span class=\"s121\" id=\"5534\">107 - </span>| <span class=\"s122\" id=\"5535\">W r i t t e n B y J i v a</span></p></li></ul><ol id=\"l131\"><li  id=\"5537\"><p  id=\"5538\">Red strip: preview mode</p><p  id=\"5539\"><br id=\"5540\"></p><p class=\"s122\"  id=\"5541\">n T h a p a</p><p  id=\"5542\"><br id=\"5543\"></p><p class=\"s122\"  id=\"5544\">n T h a p a</p><p  id=\"5545\"></p></li><li  id=\"5546\"><p  id=\"5547\">Vcard navigation bar show up 3- Input text box, Image upload,</p></li></ol><p  id=\"5548\">Create button environments</p><p  id=\"5549\"><br id=\"5550\"></p><ol id=\"l132\"><li  id=\"5552\"><p  id=\"5553\">Error Summary. Press “Create” button without typing. It show up required field errors</p></li><li  id=\"5554\"><p  id=\"5555\">Name: required error message 6- Email: Required error message</p></li></ol><ol id=\"l133\"><li  id=\"5557\"><p  id=\"5558\">Validation: email validation works. I tried to input “jeevan_2np at yahoo.com” email id, which does not contain</p><p  id=\"5559\">@ character, validation is not pass, it show up error message.</p><h2  id=\"heading5560\" class=\"heading5560\"><a name=\"bookmark68\" id=\"5561\" >Extending Xslt Using .NET Class</a></h2><div id=\"contentheading5560\" ><p  id=\"5562\">In many cases Xslt may not be enough to fetch data or to process data in that case you can easily extend XSLT using .NET Class. Here I show how to use it, In Vcard website, people may interested to see recent Vcard. Name and address are fetched using .NET Class to extend XSLT.</p><p  id=\"5563\">Let‟s add Class. If you followed me, add new class in Visual studio VCardGenerator solution where we created User Controls. I choose class name “RecentVcard” and press Add. See captured screen bellow.</p><p  id=\"5564\"><br id=\"5565\"></p><p  id=\"5566\"><span id=\"5567\"><img width=\"652\" height=\"689\" alt=\"image\" src=\"Image_117.png\" id=\"5568\"></span></p><ol id=\"l134\"><li  id=\"5570\"><p  id=\"5571\">Recently added Class “RecentVcard.cs”</p></li><li  id=\"5572\"><p  id=\"5573\">I added two references, umbraco.DataLayer and Umbraco.</p></li><li  id=\"5574\"><p  id=\"5575\">Method Name</p></li></ol></div></li></ol><p class=\"s45\"  id=\"5576\">2 <span class=\"s123\" id=\"5577\">1 </span><span class=\"p\" id=\"5578\">GetVcardData().</span></p><p class=\"s27\"  id=\"5579\"><a name=\"a62\" id=\"5580\">- </a><span class=\"h4\" id=\"5581\">GetVcardData()</span></p><p class=\"s124\"  id=\"5582\">3 <b id=\"5583\">method is going to</b></p><h4  id=\"5584\">use in XSLT so that it must be public access modifier and Static method declaration<span class=\"p\" id=\"5585\">.</span></h4><p class=\"s93\"  id=\"5586\">Requirements: when you extend .NET Class you should have some basic knowledge which I did not cover here. My assumption is you already know basic things about</p><p  id=\"5587\"><br id=\"5588\"></p><ol id=\"l135\"><li  id=\"5590\"><p class=\"s93\"  id=\"5591\">Adding References, in my case I am using Umbraco system to fetch data; you need to add Umbraco.DataLayer and Umraco references in your Visual Project.</p><p  id=\"5592\"><br id=\"5593\"></p></li><li  id=\"5594\"><p class=\"s93\"  id=\"5595\">Know how to select data from MsSql and sorting data (ascending or descending)</p><p  id=\"5596\"><br id=\"5597\"></p></li><li  id=\"5598\"><p class=\"s93\"  id=\"5599\">In Vcard web Recent Vcard will be selected top 10 lists from database and should be order by latest Vcard should be at top.</p><p  id=\"5600\"><br id=\"5601\"></p></li><li  id=\"5602\"><p class=\"s93\"  id=\"5603\">Looping. You should know how to loop data using while or foreach.</p><p  id=\"5604\"><br id=\"5605\"></p></li><li  id=\"5606\"><p class=\"s93\"  id=\"5607\">Know about static methods and where to use it. If you want to use methods in XSLT it must be declear as static and public access modifier.</p></li></ol><p  id=\"5608\"><br id=\"5609\"></p><p class=\"s93\"  id=\"5610\">Code inside GetVcardData() method.</p><p  id=\"5611\"><br id=\"5612\"></p><p class=\"s93\"  id=\"5613\">I am going use ISqlHelper class provided by Umbraco to fetch data from Database, but you can fetch using asp.net way if you like. Here I show you to fetch data from Database using Umbraco. See code bellow.</p><p  id=\"5614\"><br id=\"5615\"></p><p  id=\"5616\"><span id=\"5617\"><img width=\"603\" height=\"521\" alt=\"image\" src=\"Image_118.png\" id=\"5618\"></span></p><p class=\"s66\"  id=\"5619\">public static string <span  id=\"5620\">GetVcardData()</span></p><p class=\"s70\"  id=\"5621\">{</p><p class=\"s98\"  id=\"5622\">ISqlHelper <span  id=\"5623\">getVcard = </span>DataLayerHelper<span  id=\"5624\">.CreateSqlHelper(</span>GlobalSettings<span  id=\"5625\">.DbDSN);</span></p><p class=\"s98\"  id=\"5626\">IRecordsReader <span  id=\"5627\">read = getVcard.ExecuteReader(</span><span  id=\"5628\">@\"select top 10 id, name, country</span></p><p class=\"s99\"  id=\"5629\">from vcardimage where id &gt; @id order by id desc\"<span  id=\"5630\">, getVcard.CreateParameter(</span>\"@id\"<span  id=\"5631\">, </span>\"0\"<span  id=\"5632\">));</span></p><p class=\"s70\"  id=\"5633\"><span  id=\"5634\">string </span>data = <span  id=\"5635\">\"\"</span>; <span  id=\"5636\">while </span>(read.Read())</p><p class=\"s70\"  id=\"5637\">{</p><p class=\"s70\"  id=\"5638\">data += <span  id=\"5639\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span  id=\"5640\">\"name\"</span>) +</p><p class=\"s99\"  id=\"5641\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span  id=\"5642\">+ read.GetString(</span>\"country\"<span  id=\"5643\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span  id=\"5644\">;</span></p><p class=\"s70\"  id=\"5645\">}</p><p class=\"s99\"  id=\"5646\"><span  id=\"5647\">return </span>\"&lt;ul&gt;\" <span  id=\"5648\">+ data + </span>\"&lt;/ul\"<span  id=\"5649\">;</span></p><p class=\"s70\"  id=\"5650\">}</p><p  id=\"5651\"><br id=\"5652\"></p><p class=\"s40\"  id=\"5653\">Description:</p><ul id=\"l136\"><li  id=\"5655\"><p class=\"s40\"  id=\"5656\">ISqlHelper object used to connect to database, GlobalSettings.DbDSN is use to retrieve database connection string from web.config file.</p></li><li  id=\"5657\"><p class=\"s40\"  id=\"5658\">IRecorderReader object contains method ExecuteReader(). ExecuteReater() has two parameters, first parameters is query string and second is parameters.</p></li><li  id=\"5659\"><p class=\"s40\"  id=\"5660\">‚Select to 10 id, name, country‛ means select id, name and country from table name vcardimage and order by desc (desending) order.</p></li><li  id=\"5661\"><p class=\"s40\"  id=\"5662\">I use while loop to loop data.</p></li><li  id=\"5663\"><p class=\"s40\"  id=\"5664\">By calling GetString() methods Umbraco retrieve data as</p></li></ul><p  id=\"5665\"><span id=\"5666\"><img width=\"648\" height=\"422\" alt=\"image\" src=\"Image_119.png\" id=\"5667\"></span></p><p class=\"s8\"  id=\"5668\"><span class=\"p\" id=\"5669\">If you are following me, RecentVcard class should looks like bellow, see captured screen. Now you need to publish your website. Go to </span>Build <span class=\"s89\" id=\"5670\"></span><span class=\"s28\" id=\"5671\"> </span>Publish VCardGenerator<span class=\"p\" id=\"5672\">. Select </span>Publish Method <span class=\"s89\" id=\"5673\"></span><span class=\"s28\" id=\"5674\"> </span>file System<span class=\"p\" id=\"5675\">. Select </span>Target Location <span class=\"p\" id=\"5676\">and press “</span>Publish<span class=\"p\" id=\"5677\">” button. It should generate </span>VCardControl.dll <span class=\"p\" id=\"5678\">file inside “Bin” Directory of your published directory. Copy that </span>VCardControl.dll <span class=\"p\" id=\"5679\">file to Umbraco website “</span>Bin<span class=\"p\" id=\"5680\">” Directory. If you are following me, you should already copied </span>VCardControl.dll <span class=\"p\" id=\"5681\">file into Umbraco website “</span>Bin<span class=\"p\" id=\"5682\">” Directory during User Control topics. You should replace old </span>VCardControl.dll <span class=\"p\" id=\"5683\">file with new </span>VCardControl.dll <span class=\"p\" id=\"5684\">file. We can register our </span>RecentVcard <span class=\"p\" id=\"5685\">class into Umbraco website </span>xsltExtensions.config <span class=\"p\" id=\"5686\">file.</span></p><p  id=\"5687\"><br id=\"5688\"></p><p  id=\"5689\"><br id=\"5690\"></p><p class=\"s88\"  id=\"5691\">RecentVcard     </p><p  id=\"5692\"><br id=\"5693\"></p><p class=\"s88\"  id=\"5694\">RecentVcard     </p><p  id=\"5695\"></p><p  id=\"5696\"><br id=\"5697\"></p><p  id=\"5698\">Overview of <i id=\"5699\">VCardGenerator </i>visual studio solution</p><p  id=\"5700\"><br id=\"5701\"></p><ul id=\"l137\"><li  id=\"5703\"><p  id=\"5704\">One user Control “VcardControl.ascx” use to generate Vcard</p></li><li  id=\"5705\"><p  id=\"5706\">One Class “RecentVcard.cs” use to fetch data from Database</p></li><li  id=\"5707\"><p  id=\"5708\">Added two references</p></li></ul><ol id=\"l138\"><li  id=\"5710\"><p  id=\"5711\">Umbraco.DataLayer</p><p  id=\"5712\"><br id=\"5713\"></p></li><li  id=\"5714\"><p  id=\"5715\">Umbraco</p></li></ol><p  id=\"5716\"><br id=\"5717\"></p><p  id=\"5718\">See code line 5 and 6 in RecentVcard Class.</p><h3  id=\"5719\"><a name=\"bookmark69\" id=\"5720\">Registering .NET Class on config file</a></h3><p  id=\"5721\"><i id=\"5722\">RecentVcard </i>class returns latest ten list of recent vcard from database, before to use <i id=\"5723\">RecentVcard </i>class, Umbraco requires registering first. We can use <i id=\"5724\">RecentVcard </i>class only after registering <i id=\"5725\">RecentVard </i>class into Umbraco <i id=\"5726\">xsltExtensions.config </i>file. <i id=\"5727\">xsltExtesion.config </i>file is xml file which can be found inside “config” directory in Umbraco website. Go To “config” directory and open <i id=\"5728\">xsltExtension.config </i>file. You can either use visual studio or other software program, I am using Notepad ++<span class=\"s3\" id=\"5729\">31 </span>open source software. See captured screen bellow.</p><p  id=\"5730\"><span id=\"5731\"><img width=\"644\" height=\"678\" alt=\"image\" src=\"Image_120.png\" id=\"5732\"></span></p><p  id=\"5733\"><span class=\"s125\" id=\"5734\">1 </span><span class=\"s126\"  id=\"5735\">xsltExtension.jpg</span></p><p  id=\"5736\"><br id=\"5737\"></p><p  id=\"5738\">2</p><p  id=\"5739\"><br id=\"5740\"></p><p class=\"s127\"  id=\"5741\">5                                                                     <span class=\"p\" id=\"5742\">3                 4</span></p><ol id=\"l139\"><li  id=\"5744\"><p  id=\"5745\">File location of xsltExtensions.config</p></li><li  id=\"5746\"><p  id=\"5747\">Assembly name “VcardGenerator”</p></li><li  id=\"5748\"><p  id=\"5749\">Type = first one before dot is Namespace</p></li><li  id=\"5750\"><p  id=\"5751\">Type = second after dot is Class name</p></li><li  id=\"5752\"><p  id=\"5753\">Alias : it is use in Xslt to refer assembly</p></li></ol><h4  id=\"5754\"><a name=\"a63\" id=\"5755\">Did you get confuse?</a></h4><h4  id=\"5756\">See image bellow “VCardGenerator.extension.jpg” and match number.</h4><p  id=\"5757\">Make changed in your xsltExtensions.config file as mine see image xsltExtension.jpg if you want to follow me.</p><p  id=\"5758\"><br id=\"5759\"></p><p  id=\"5760\">2</p><p  id=\"5761\"><br id=\"5762\"></p><p  id=\"5763\">3 4</p><p  id=\"5764\"><br id=\"5765\"></p><p  id=\"5766\">4</p><p  id=\"5767\"><br id=\"5768\"></p><p  id=\"5769\"><a name=\"a64\" id=\"5770\"><span class=\"s128\"  id=\"5771\">VCardGenerator.extension.jpg</span></a></p><p  id=\"5772\"><br id=\"5773\"></p><p  id=\"5774\"><span id=\"5775\"><img width=\"193\" height=\"1\" alt=\"image\" src=\"Image_121.png\" id=\"5776\"></span></p><p  id=\"5777\"><a href=\"http://notepad-plus-plus.org/\"  target=\"_blank\" id=\"5778\">31 </a><a href=\"http://notepad-plus-plus.org/\" class=\"s11\" target=\"_blank\" id=\"5779\">http://notepad-plus-plus.org/</a></p><p  id=\"5780\"><br id=\"5781\"></p><p  id=\"5782\"><br id=\"5783\"></p><p  id=\"5784\">After made change on xsltExtensions.config file, make sure to save changed.</p><p  id=\"5785\"><br id=\"5786\"></p><h4  id=\"5787\"><a name=\"a65\" id=\"5788\">Extending XSLT using .net Class Practice</a></h4><p  id=\"5789\"><br id=\"5790\"></p><p  id=\"5791\">We have now VCardGenerator.dll file inside “Bin” directory and we also registered our Class on “xsltExtentions.config” file. Remember alias we specified at “xsltExtensions.config” file. If you are following me, alias is “recentvcard”.</p><h4  id=\"5792\"><a name=\"a66\" id=\"5793\">Create Xslt:</a></h4><p  id=\"5794\"><br id=\"5795\"></p><p  id=\"5796\"><span id=\"5797\"><img width=\"332\" height=\"203\" alt=\"image\" src=\"Image_122.jpg\" id=\"5798\"></span></p><p  id=\"5799\">I have created new xslt for Recent Vcard, see captured screen left. Go to backend part of umbraco website, Select <span class=\"s89\" id=\"5800\"></span><span class=\"s28\" id=\"5801\"> </span>Developer <span class=\"s89\" id=\"5802\"></span><span class=\"s28\" id=\"5803\"> </span>XSLT Files <span class=\"s89\" id=\"5804\"></span><span class=\"s28\" id=\"5805\"> </span>Right Click and click on “Create”.</p><p  id=\"5806\">Filename: “ RecentVcard” Choose a Template: “Clean”</p><p  id=\"5807\">Checked: “Create Macro” by checked in Umbraco will create matching macro for us automatically,</p><p  id=\"5808\">Press <span class=\"s89\" id=\"5809\"></span><span class=\"s28\" id=\"5810\"> </span><i id=\"5811\">Create </i>Button.</p><p  id=\"5812\"><br id=\"5813\"></p><p  id=\"5814\"><span id=\"5815\"><img width=\"419\" height=\"109\" alt=\"image\" src=\"Image_123.png\" id=\"5816\"></span></p><p class=\"s8\"  id=\"5817\">Open “RecentVcard.xslt”</p><p  id=\"5818\"><br id=\"5819\"></p><p  id=\"5820\">We can registered .net class inside xsl:stylesheet, using xslns. See the captured screen right. See highlighted area on</p><p  id=\"5821\">right image, if you already worked with Xslt you may know xmlns. Xmlns is xml namespace for a document. After colon you provide namespace name, I choose “recentVcard”. You can choose different if you want. Use urn colon alias that you specified at xsltExtensions.config” see “xsltExtension.jpg” image, I my case alias is “recentvcard”. URN is Uniform Resource Name.</p><p  id=\"5822\">public static method inside .NET class can be access using xml namespace in XSLT. In RecentVcard Class has one static public methods called <i id=\"5823\">GetVcardData()</i>. To access that public method we can use namespace colon and method name. If there are any parameters, we can easily pass. See example bellow how I accessed GetVcardData() method.</p><p  id=\"5824\"><br id=\"5825\"></p><p  id=\"5826\"><br id=\"5827\"></p><p  id=\"5828\"><span id=\"5829\"><img width=\"623\" height=\"17\" alt=\"image\" src=\"Image_124.jpg\" id=\"5830\"></span></p><p  id=\"5831\"><br id=\"5832\"></p><p  id=\"5833\"><span id=\"5834\"><img width=\"638\" height=\"217\" alt=\"image\" src=\"Image_125.png\" id=\"5835\"></span></p><p  id=\"5836\">Use xml namespace Specify method after</p><p  id=\"5837\">Tips: xml namespace and methods are separated by colon</p><p  id=\"5838\">Tips: xml namespace and methods are separated by colon</p><p  id=\"5839\"></p><p  id=\"5840\">colon.</p><p  id=\"5841\">Use disable-out-escaping= “yes”. It means that do not escape special character because method GetVcardData() returns html tags, ul, li, span tags.</p><p  id=\"5842\"><br id=\"5843\"></p><p  id=\"5844\"><br id=\"5845\"></p><p  id=\"5846\"><span id=\"5847\"><img width=\"610\" height=\"431\" alt=\"image\" src=\"Image_126.jpg\" id=\"5848\"></span></p><p  id=\"5849\">Code all in one:</p><p  id=\"5850\"><br id=\"5851\"></p><p  id=\"5852\"><span class=\"s97\"  id=\"5853\">RecentVcard.xslt</span></p><p  id=\"5854\"><br id=\"5855\"></p><p  id=\"5856\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p  id=\"5857\"><span class=\"s97\"  id=\"5858\">RecentVcard.xslt</span></p><p  id=\"5859\"><br id=\"5860\"></p><p  id=\"5861\">Highlighted text are added, rest of code are default provided by Umbraco system when you create Xslt.</p><p  id=\"5862\"><span  id=\"5863\"> </span></p><p  id=\"5864\"><br id=\"5865\"></p></div>","sub":[]}]},{"pageId":"119","pageLevel":0,"pageOrder":"119","pageParentId":"-1","pageName":"Extending Xslt Using .NET Class","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 3pt; padding-left: 20pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5560\" class=\"heading5560\"><a name=\"bookmark68\" id=\"5561\" style=\"color: lime;\">Extending Xslt Using .NET Class</a></h2>","pageContent":"<div id=\"contentheading5560\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 20pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5562\">In many cases Xslt may not be enough to fetch data or to process data in that case you can easily extend XSLT using .NET Class. Here I show how to use it, In Vcard website, people may interested to see recent Vcard. Name and address are fetched using .NET Class to extend XSLT.</p><p style=\"padding-top: 10pt;padding-left: 20pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5563\">Let‟s add Class. If you followed me, add new class in Visual studio VCardGenerator solution where we created User Controls. I choose class name “RecentVcard” and press Add. See captured screen bellow.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5564\"><br id=\"5565\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5566\"><span id=\"5567\"><img width=\"652\" height=\"689\" alt=\"image\" src=\"Image_117.png\" id=\"5568\"></span></p><ol id=\"l134\"><li style=\"padding-top: 4pt;padding-left: 367pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5570\"><p style=\"display: inline;\" id=\"5571\">Recently added Class “RecentVcard.cs”</p></li><li style=\"padding-top: 10pt;padding-left: 367pt;text-indent: -18pt;line-height: 114%;text-align: left;\" id=\"5572\"><p style=\"display: inline;\" id=\"5573\">I added two references, umbraco.DataLayer and Umbraco.</p></li><li style=\"padding-top: 10pt;padding-left: 367pt;text-indent: -18pt;text-align: right;\" id=\"5574\"><p style=\"display: inline;\" id=\"5575\">Method Name</p></li></ol></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading5560\" class=\"heading5560\"><a name=\"bookmark68\" id=\"5561\" >Extending Xslt Using .NET Class</a></h2>","pageStyleReducedContent":"<div id=\"contentheading5560\" ><p  id=\"5562\">In many cases Xslt may not be enough to fetch data or to process data in that case you can easily extend XSLT using .NET Class. Here I show how to use it, In Vcard website, people may interested to see recent Vcard. Name and address are fetched using .NET Class to extend XSLT.</p><p  id=\"5563\">Let‟s add Class. If you followed me, add new class in Visual studio VCardGenerator solution where we created User Controls. I choose class name “RecentVcard” and press Add. See captured screen bellow.</p><p  id=\"5564\"><br id=\"5565\"></p><p  id=\"5566\"><span id=\"5567\"><img width=\"652\" height=\"689\" alt=\"image\" src=\"Image_117.png\" id=\"5568\"></span></p><ol id=\"l134\"><li  id=\"5570\"><p  id=\"5571\">Recently added Class “RecentVcard.cs”</p></li><li  id=\"5572\"><p  id=\"5573\">I added two references, umbraco.DataLayer and Umbraco.</p></li><li  id=\"5574\"><p  id=\"5575\">Method Name</p></li></ol></div>","sub":[{"pageId":"125","pageLevel":1,"pageOrder":"125","pageParentId":"119","pageName":"Modify Macro:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5866\" class=\"heading5866\"><a name=\"bookmark70\" id=\"5867\" style=\"color: green;\">Modify Macro:</a></h3>","pageContent":"<div id=\"contentheading5866\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5868\">Once you have XSLT, you can insert Xslt into templates, in my case I am going to insert into Content. So we need to check “Use in editor” option. Go to <span class=\"s89\" id=\"5869\"></span>Macros <span class=\"s89\" id=\"5870\"></span><span class=\"s28\" id=\"5871\"> </span>Open “Recent Vcard” <span class=\"s89\" id=\"5872\"></span><span class=\"s28\" id=\"5873\"> </span>checked on “Use in Editor” and Remember to “S<i id=\"5874\">ave”</i>. See captured screen bellow for references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5875\"><br id=\"5876\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5877\"><span id=\"5878\"><img width=\"638\" height=\"535\" alt=\"image\" src=\"Image_127.png\" id=\"5879\"></span></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;text-align: justify;\" id=\"5880\">By selecting “Use in editor” makes macro available to use in content section.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5881\"><span id=\"5882\"><img width=\"386\" height=\"271\" alt=\"image\" src=\"Image_128.jpg\" id=\"5883\"></span></p><h4 style=\"padding-top: 4pt;padding-left: 22pt;text-indent: 0pt;text-align: left;\" id=\"5884\"><a name=\"a67\" id=\"5885\">Create Content: “Recent Vcard”</a></h4><p style=\"text-indent: 0pt;text-align: left;\" id=\"5886\"><br id=\"5887\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5888\">Go to Content Section <span class=\"s89\" id=\"5889\"></span><span class=\"s28\" id=\"5890\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5891\"></span><span class=\"s28\" id=\"5892\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5893\">Go to Content Section <span class=\"s89\" id=\"5894\"></span><span class=\"s28\" id=\"5895\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5896\"></span><span class=\"s28\" id=\"5897\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p style=\"padding-left: 243pt;text-indent: 0pt;text-align: left;\" id=\"5898\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"5899\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5900\"><br id=\"5901\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5902\"><span id=\"5903\"><img width=\"634\" height=\"231\" alt=\"image\" src=\"Image_129.png\" id=\"5904\"></span></p><p style=\"padding-left: 34pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5905\">It should create Content “Recent Vcard” and visible at left side menu. Provide following information. “Content Title”: Recent Card and checked in use in Navigation so that “Recent Vcard” will show up in navigation bar</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5906\"><br id=\"5907\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5908\"><span id=\"5909\"><img width=\"648\" height=\"298\" alt=\"image\" src=\"Image_130.png\" id=\"5910\"></span></p><p style=\"padding-top: 4pt;padding-left: 188pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5911\">Click on Tab“Description” and Insert Macro on content area. Select Marco “Recent Vcard”, after inserting Macro “RecentVcard”. Click on Tab “Preoperties” Select Template “General Content” and Press “Save and Publish Icon”. Create few Vcard and check. It should show up on web site.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5912\"><br id=\"5913\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5914\">Preview content by click on preview icon.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5915\"><br id=\"5916\"></p><p style=\"padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5917\">If you are following me, Vcard website should look like bellow captured screen.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5918\"><br id=\"5919\"></p><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"5920\"><span id=\"5921\"><img width=\"638\" height=\"274\" alt=\"image\" src=\"Image_131.png\" id=\"5922\"></span></p><h2 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5923\" class=\"heading5923\"><a name=\"bookmark71\" id=\"5924\" style=\"color: lime;\">Page not Found Error:</a></h2><div id=\"contentheading5923\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5925\">It is nice to replace default Umbraco error HTTP handler, there are many error handler 500, 404 and 403 etc. 404 error are page not found error, due to some reason, accidental file deletion, dead links and user request not existing page causes HTTP 404 errors. Umbraco handles 404 errors by showing its default error message. We can easily override 404 errors with custom page. First let‟s see Umbraco default error 404 page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5926\"><br id=\"5927\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5928\"><span id=\"5929\"><img width=\"638\" height=\"414\" alt=\"image\" src=\"Image_132.png\" id=\"5930\"></span></p><p style=\"padding-top: 11pt;padding-left: 49pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5931\">I requested not existing page /test.aspx page, which was not exist. Umbraco handle 404 error. See highlighted text, it explain well, what to do. Sometimes it may not enough so need to extra work or needs to add extra code in web.config file.</p><h3 style=\"padding-top: 7pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5932\" class=\"heading5932\"><a name=\"bookmark72\" id=\"5933\" style=\"color: green;\">Create Custom 404 error page.</a></h3><div id=\"contentheading5932\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5934\">I am creating simple 404 error page. If you want to follow me go <span class=\"s89\" id=\"5935\"></span>Content <span class=\"s89\" id=\"5936\"></span><span class=\"s28\" id=\"5937\"> </span>Right click and click on “Create”. Name: “Page not Found” and Select “General Content” Document Type. Do not check “Use in Navigation” because I don‟t want to show this page into navigation. This page should be displayed only if 404 errors occur. Go to Tab “Title” provide content title “Page Not Found”, Go to Tab “Description” and type “Requested page not found, temporarily unavailable or an out-of-date bookmark/favorite” Go to Tab “Properties” Template <span class=\"s89\" id=\"5938\"></span><span class=\"s28\" id=\"5939\"> </span>“General Content”. Finally press “Save and Publish Icon”. Hold a second on Properties tab and look id of content because Umbraco needs content id. See “pagenotfound.jpg” image as references. Each content item gets unique id. We need to specify unique id of items into umbracoSettings.config files.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5940\"><br id=\"5941\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5942\"><span id=\"5943\"><img width=\"609\" height=\"373\" alt=\"image\" src=\"Image_133.png\" id=\"5944\"></span></p><p style=\"padding-top: 11pt;padding-left: 292pt;text-indent: 0pt;text-align: left;\" id=\"5945\">pagenotfound.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5946\"><br id=\"5947\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5948\"><br id=\"5949\"></p><p style=\"padding-left: 342pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5950\">In my case node id or unique id for content “Page not found” is 1098. You may have different node or unique id</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5951\"><br id=\"5952\"></p></div><h3 style=\"padding-top: 4pt; padding-left: 11pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5953\" class=\"heading5953\"><a name=\"bookmark73\" id=\"5954\" style=\"color: green;\">Modifying umbracoSettings.config file:</a></h3><div id=\"contentheading5953\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 54pt;line-height: 115%;text-align: left;\" id=\"5955\">umbracoSettings.config file can be found inside “config” directory, open umbracoSettings.config file using notepad or other program. It‟s xml document, find</p><p style=\"padding-left: 11pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5956\">&lt;errors&gt; elements inside umbracoSettings.config. <i id=\"5957\">errors </i>element contain child <i id=\"5958\">error404 </i>element. Set its value to node id of content, in my case 1098 and Save umbracoSettings.config file. See captured screen bellow for references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5959\"><br id=\"5960\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5961\"><br id=\"5962\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5963\"><span id=\"5964\"><img width=\"317\" height=\"147\" alt=\"image\" src=\"Image_134.png\" id=\"5965\"></span></p><p class=\"s10\" style=\"padding-left: 211pt;text-indent: 0pt;text-align: left;\" id=\"5966\">Umbraco <span class=\"p\" id=\"5967\">error404.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5968\"><br id=\"5969\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5970\"><span id=\"5971\"><img width=\"594\" height=\"317\" alt=\"image\" src=\"Image_135.png\" id=\"5972\"></span></p><p class=\"s64\" style=\"padding-top: 4pt;padding-left: 102pt;text-indent: 0pt;text-align: left;\" id=\"5973\"><span style=\" color: #000;\" id=\"5974\">Note: in some cases Umbraco 404 error may override by IIS (internet Information Service) or IIS may not hand over 404 error to Umbraco to handle in such case 404 error page will end up with ugly yellow dead screen page. To prevent from this we can specify by telling IIS not to handle, instead hand over all 404 error to Asp.net web site in our case Umbraco site by adding few lines of code into web.config file. Web.config file can be found in root directory of Umbraco System. Find system.webserver elements and add new element </span>&lt;<span style=\" color: #A21515;\" id=\"5975\">httpErrors </span><span style=\" color: #F00;\" id=\"5976\">existingResponse</span>=<span style=\" color: #000;\" id=\"5977\">\"</span>PassThrough<span style=\" color: #000;\" id=\"5978\">\" </span>/&gt; <span style=\" color: #000;\" id=\"5979\">inside system.webserver elements. Using existingRespone= “passThrough” means IIS does not override custom errors.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5980\"><br id=\"5981\"></p></div></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5982\" class=\"heading5982\"><a name=\"bookmark74\" id=\"5983\" style=\"color: lime;\">Conclusion:</a></h2><div id=\"contentheading5982\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"5984\"><br id=\"5985\"></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5986\">Learning process is not difficult if we start from basic, every complex system begins with basic and simple structure. Here I provided basic concept of Umbraco using examples rather than theory. I use Vcard as a case to demonstrate practical examples of basic concept of Umbraco. Vcard was virtual website it does not exist on live but concept that I used in Vcard was easy to understand how to start building Umbraco website from scratch. I started to show installation of Umbraco cms, most of new developer faces many problems to install. Developing Umbraco site from empty Umbraco installation is great challenge to new developer but it‟s a way to learn Umbraco from inside, I started to build Vcard site from scratch, empty Umbraco installation. Creating DocumentType, Template and Content is core of Umbraco CMS. If you reading books from beginning without skipping chapter you should be able to understand connection between DocumentType, Template and Content. I provided information about fetching data from xml using xslt and extending xslt using</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5987\">.net class provided basic concept of how to extend Umbraco. All these concepts and examples can be used for your own purpose and needs. You are familiar with how to fetch and insert data from database to Umbraco and Umbraco to Database, extending Umbraco using Xslt, user control and .net class. In last chapter I provided how to solve umbraco 404 error default page problem with custom 404 errors page in case you get errors. I also touch about security on website which will provide knowledge to secure Umbraco site even though security is not basic on Umbraco sites.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5988\"><br id=\"5989\"></p></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading5990\" class=\"heading5990\"><a name=\"bookmark75\" id=\"5991\" style=\"color: lime;\">References:</a></h2><div id=\"contentheading5990\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"5992\">Taken date: May-17-2011 Xslt and Xpath</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5993\"><a href=\"http://www.w3schools.com/xsl/\" id=\"5994\">http://www.w3schools.com/xsl/</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5995\"><br id=\"5996\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5997\">Umbraco to Database and Database to Umbraco</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5998\"><br id=\"5999\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"6000\">http://our.umbraco.org/forum/developers/api-questions/12248-Get-value-from-base- into-database</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"6001\">http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205--- comments</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"6002\"><a href=\"http://our.umbraco.org/wiki\" class=\"a\" target=\"_blank\" id=\"6003\">Wiki </a><a href=\"http://our.umbraco.org/wiki\" target=\"_blank\" id=\"6004\">http://our.umbraco.org/wiki</a></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"6005\">http://our.umbraco.org/wiki/recommendations/recommended-reading-for-net- developers</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6006\"><br id=\"6007\"></p></div><h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading6008\" class=\"heading6008\"><a name=\"bookmark76\" id=\"6009\" style=\"color: lime;\">Extra files:</a></h2><div id=\"contentheading6008\" style=\"border: 5px solid rgb(0, 255, 0);\"><h3 style=\"padding-top: 12pt; padding-bottom: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading6010\" class=\"heading6010\"><a name=\"bookmark77\" id=\"6011\" style=\"color: green;\">Web grid.</a></h3><div id=\"contentheading6010\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"6012\"><span id=\"6013\"><img width=\"599\" height=\"371\" alt=\"image\" src=\"Image_136.jpg\" id=\"6014\"></span></p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6015\"><a name=\"bookmark78\" id=\"6016\">File “VcardControl.ascx”</a></h3><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6017\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"6018\">&lt;%</span><span class=\"s66\" id=\"6019\">@ </span><span class=\"s67\" id=\"6020\">Control </span><span class=\"s68\" id=\"6021\">Language</span><span class=\"s66\" id=\"6022\">=\"C#\" </span><span class=\"s68\" id=\"6023\">AutoEventWireup</span><span class=\"s66\" id=\"6024\">=\"true\" </span><span class=\"s68\" id=\"6025\">CodeBehind</span><span class=\"s66\" id=\"6026\">=\"VcardControl.ascx.cs\" </span><span class=\"s68\" id=\"6027\">Inherits</span><span class=\"s66\" id=\"6028\">=\"VCardGenerator.VcardControl\" </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"6029\">%&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6030\"><br id=\"6031\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6032\">&lt;<span style=\" color: #800000;\" id=\"6033\">form </span><span style=\" color: #F00;\" id=\"6034\">id</span>=\"FormVcard\" <span style=\" color: #F00;\" id=\"6035\">runat</span>=\"server\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6036\">&lt;<span style=\" color: #800000;\" id=\"6037\">div </span><span style=\" color: #F00;\" id=\"6038\">class</span>=\"errorMessage\"&gt;</p><p class=\"s66\" style=\"padding-left: 19pt;text-indent: 0pt;text-align: center;\" id=\"6039\">&lt;<span style=\" color: #800000;\" id=\"6040\">asp</span>:<span style=\" color: #800000;\" id=\"6041\">Label </span><span style=\" color: #F00;\" id=\"6042\">ID</span>=\"LabelNotice\" <span style=\" color: #F00;\" id=\"6043\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6044\">Text</span>=\"\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6045\">asp</span>:<span style=\" color: #800000;\" id=\"6046\">Label</span>&gt;</p><p class=\"s66\" style=\"padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"6047\">&lt;<span style=\" color: #800000;\" id=\"6048\">asp</span>:<span style=\" color: #800000;\" id=\"6049\">ValidationSummary </span><span style=\" color: #F00;\" id=\"6050\">ID</span>=\"ValidationSummary\" <span style=\" color: #F00;\" id=\"6051\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6052\">ForeColor</span>=\"#FF6666\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6053\">/&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6054\">&lt;/<span style=\" color: #800000;\" id=\"6055\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6056\">&lt;<span style=\" color: #800000;\" id=\"6057\">table </span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6058\">&lt;<span style=\" color: #800000;\" id=\"6059\">tr </span><span style=\" color: #F00;\" id=\"6060\">class</span>=\"name\"&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6061\">&lt;<span style=\" color: #800000;\" id=\"6062\">td</span>&gt; <span style=\" color: #000;\" id=\"6063\">Name: </span>&lt;/<span style=\" color: #800000;\" id=\"6064\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6065\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6066\">asp</span>:<span style=\" color: #800000;\" id=\"6067\">TextBox </span><span style=\" color: #F00;\" id=\"6068\">ID</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6069\">runat</span>=server&gt;&lt;/<span style=\" color: #800000;\" id=\"6070\">asp</span>:<span style=\" color: #800000;\" id=\"6071\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6072\">&lt;<span style=\" color: #800000;\" id=\"6073\">asp</span>:<span style=\" color: #800000;\" id=\"6074\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"6075\">ID</span>=\"RequiredFieldValidatorName\" <span style=\" color: #F00;\" id=\"6076\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6077\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6078\">ErrorMessage</span>=\"Name Required\" <span style=\" color: #F00;\" id=\"6079\">Font-</span></p><p class=\"s68\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6080\">Size<span style=\" color: #00F;\" id=\"6081\">=\"Small\"</span></p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6082\"><span style=\" color: #F00;\" id=\"6083\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6084\">asp</span>:<span style=\" color: #800000;\" id=\"6085\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6086\">&lt;<span style=\" color: #800000;\" id=\"6087\">asp</span>:<span style=\" color: #800000;\" id=\"6088\">CustomValidator </span><span style=\" color: #F00;\" id=\"6089\">ID</span>=\"CustomValidatorName\" <span style=\" color: #F00;\" id=\"6090\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6091\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6092\">ErrorMessage</span>=\"Name is not Valid\" <span style=\" color: #F00;\" id=\"6093\">ForeColor</span>=\"#CC0000\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6094\"><span style=\" color: #F00;\" id=\"6095\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6096\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6097\">asp</span>:<span style=\" color: #800000;\" id=\"6098\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6099\">&lt;/<span style=\" color: #800000;\" id=\"6100\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6101\">&lt;/<span style=\" color: #800000;\" id=\"6102\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6103\">&lt;<span style=\" color: #800000;\" id=\"6104\">tr </span><span style=\" color: #F00;\" id=\"6105\">class</span>=\"street\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6106\">&lt;<span style=\" color: #800000;\" id=\"6107\">td</span>&gt; <span style=\" color: #000;\" id=\"6108\">Street:</span>&lt;/<span style=\" color: #800000;\" id=\"6109\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6110\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6111\">asp</span>:<span style=\" color: #800000;\" id=\"6112\">TextBox </span><span style=\" color: #F00;\" id=\"6113\">ID</span>=\"TextBoxStreet\" <span style=\" color: #F00;\" id=\"6114\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6115\">asp</span>:<span style=\" color: #800000;\" id=\"6116\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6117\">&lt;/<span style=\" color: #800000;\" id=\"6118\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6119\">&lt;/<span style=\" color: #800000;\" id=\"6120\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6121\">&lt;<span style=\" color: #800000;\" id=\"6122\">tr </span><span style=\" color: #F00;\" id=\"6123\">class</span>=\"postalCode\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6124\">&lt;<span style=\" color: #800000;\" id=\"6125\">td</span>&gt; <span style=\" color: #000;\" id=\"6126\">PostalCode:</span>&lt;/<span style=\" color: #800000;\" id=\"6127\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6128\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6129\">asp</span>:<span style=\" color: #800000;\" id=\"6130\">TextBox </span><span style=\" color: #F00;\" id=\"6131\">ID</span>=\"TextBoxPostalCode\" <span style=\" color: #F00;\" id=\"6132\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6133\">asp</span>:<span style=\" color: #800000;\" id=\"6134\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6135\">&lt;<span style=\" color: #800000;\" id=\"6136\">asp</span>:<span style=\" color: #800000;\" id=\"6137\">CustomValidator </span><span style=\" color: #F00;\" id=\"6138\">ID</span>=\"CustomValidatorPostalCode\" <span style=\" color: #F00;\" id=\"6139\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6140\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6141\">ErrorMessage<span style=\" color: #00F;\" id=\"6142\">=\"Postal Code 4 digit\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6143\">=\"TextBoxPostalCode\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6144\"><br id=\"6145\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6146\"><span style=\" color: #F00;\" id=\"6147\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6148\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6149\">asp</span>:<span style=\" color: #800000;\" id=\"6150\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6151\">&lt;/<span style=\" color: #800000;\" id=\"6152\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6153\">&lt;/<span style=\" color: #800000;\" id=\"6154\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6155\">&lt;<span style=\" color: #800000;\" id=\"6156\">tr </span><span style=\" color: #F00;\" id=\"6157\">class</span>=\"city\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6158\">&lt;<span style=\" color: #800000;\" id=\"6159\">td</span>&gt; <span style=\" color: #000;\" id=\"6160\">City:</span>&lt;/<span style=\" color: #800000;\" id=\"6161\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6162\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6163\">asp</span>:<span style=\" color: #800000;\" id=\"6164\">TextBox </span><span style=\" color: #F00;\" id=\"6165\">ID</span>=\"TextBoxCity\" <span style=\" color: #F00;\" id=\"6166\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6167\">asp</span>:<span style=\" color: #800000;\" id=\"6168\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6169\">&lt;/<span style=\" color: #800000;\" id=\"6170\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6171\">&lt;<span style=\" color: #800000;\" id=\"6172\">tr </span><span style=\" color: #F00;\" id=\"6173\">class</span>=\"country\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6174\">&lt;<span style=\" color: #800000;\" id=\"6175\">td</span>&gt; <span style=\" color: #000;\" id=\"6176\">Country:</span>&lt;/<span style=\" color: #800000;\" id=\"6177\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6178\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6179\">asp</span>:<span style=\" color: #800000;\" id=\"6180\">TextBox </span><span style=\" color: #F00;\" id=\"6181\">ID</span>=\"TextBoxCountry\" <span style=\" color: #F00;\" id=\"6182\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6183\">asp</span>:<span style=\" color: #800000;\" id=\"6184\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6185\">&lt;<span style=\" color: #800000;\" id=\"6186\">asp</span>:<span style=\" color: #800000;\" id=\"6187\">CustomValidator </span><span style=\" color: #F00;\" id=\"6188\">ID</span>=\"CustomValidatorCountry\" <span style=\" color: #F00;\" id=\"6189\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6190\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6191\">ErrorMessage<span style=\" color: #00F;\" id=\"6192\">=\"Country Not Valid\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6193\">=\"TextBoxCountry\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6194\"><br id=\"6195\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6196\"><span style=\" color: #F00;\" id=\"6197\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6198\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6199\">asp</span>:<span style=\" color: #800000;\" id=\"6200\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6201\">&lt;/<span style=\" color: #800000;\" id=\"6202\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6203\">&lt;/<span style=\" color: #800000;\" id=\"6204\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6205\">&lt;<span style=\" color: #800000;\" id=\"6206\">tr </span><span style=\" color: #F00;\" id=\"6207\">class</span>=\"phone\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6208\">&lt;<span style=\" color: #800000;\" id=\"6209\">td</span>&gt; <span style=\" color: #000;\" id=\"6210\">Phone:</span><span style=\" color: #F00;\" id=\"6211\">&amp;nbsp; </span><span style=\" color: #000;\" id=\"6212\">+45</span>&lt;/<span style=\" color: #800000;\" id=\"6213\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6214\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6215\">asp</span>:<span style=\" color: #800000;\" id=\"6216\">TextBox </span><span style=\" color: #F00;\" id=\"6217\">ID</span>=\"TextBoxPhone\" <span style=\" color: #F00;\" id=\"6218\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6219\">asp</span>:<span style=\" color: #800000;\" id=\"6220\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6221\">&lt;<span style=\" color: #800000;\" id=\"6222\">asp</span>:<span style=\" color: #800000;\" id=\"6223\">CustomValidator </span><span style=\" color: #F00;\" id=\"6224\">ID</span>=\"CustomValidatorPhone\" <span style=\" color: #F00;\" id=\"6225\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6226\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6227\">ErrorMessage<span style=\" color: #00F;\" id=\"6228\">=\"Phone must be 8 digit, Without +45 \" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6229\">=\"TextBoxPhone\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6230\"><br id=\"6231\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6232\"><span style=\" color: #F00;\" id=\"6233\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6234\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6235\">asp</span>:<span style=\" color: #800000;\" id=\"6236\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6237\">&lt;/<span style=\" color: #800000;\" id=\"6238\">td</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6239\"><br id=\"6240\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6241\">&lt;/<span style=\" color: #800000;\" id=\"6242\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6243\">&lt;<span style=\" color: #800000;\" id=\"6244\">tr </span><span style=\" color: #F00;\" id=\"6245\">class</span>=\"email\"&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6246\">&lt;<span style=\" color: #800000;\" id=\"6247\">td</span>&gt; <span style=\" color: #000;\" id=\"6248\">Email: </span>&lt;/<span style=\" color: #800000;\" id=\"6249\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6250\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6251\">asp</span>:<span style=\" color: #800000;\" id=\"6252\">TextBox </span><span style=\" color: #F00;\" id=\"6253\">ID</span>=\"TextBoxEmail\" <span style=\" color: #F00;\" id=\"6254\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6255\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6256\">asp</span>:<span style=\" color: #800000;\" id=\"6257\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6258\">&lt;<span style=\" color: #800000;\" id=\"6259\">asp</span>:<span style=\" color: #800000;\" id=\"6260\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"6261\">ID</span>=\"RequiredFieldValidatorEmail\" <span style=\" color: #F00;\" id=\"6262\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6263\">Font-Size</span>=\"Small\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"6264\"><span style=\" color: #F00;\" id=\"6265\">ErrorMessage</span>=\"Email Required\" <span style=\" color: #F00;\" id=\"6266\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span style=\" color: #000;\" id=\"6267\">Email Required</span>&lt;/<span style=\" color: #800000;\" id=\"6268\">asp</span>:<span style=\" color: #800000;\" id=\"6269\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6270\">&lt;<span style=\" color: #800000;\" id=\"6271\">asp</span>:<span style=\" color: #800000;\" id=\"6272\">CustomValidator </span><span style=\" color: #F00;\" id=\"6273\">ID</span>=\"CustomValidatorEmail\" <span style=\" color: #F00;\" id=\"6274\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6275\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6276\">ErrorMessage<span style=\" color: #00F;\" id=\"6277\">=\"Email Not Valid\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6278\">=\"TextBoxEmail\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6279\"><br id=\"6280\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6281\"><span style=\" color: #F00;\" id=\"6282\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6283\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6284\">asp</span>:<span style=\" color: #800000;\" id=\"6285\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6286\">&lt;/<span style=\" color: #800000;\" id=\"6287\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6288\">&lt;/<span style=\" color: #800000;\" id=\"6289\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6290\">&lt;<span style=\" color: #800000;\" id=\"6291\">tr </span><span style=\" color: #F00;\" id=\"6292\">class</span>=\"website\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6293\">&lt;<span style=\" color: #800000;\" id=\"6294\">td</span>&gt; <span style=\" color: #000;\" id=\"6295\">WebSite:</span>&lt;/<span style=\" color: #800000;\" id=\"6296\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6297\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6298\">asp</span>:<span style=\" color: #800000;\" id=\"6299\">TextBox </span><span style=\" color: #F00;\" id=\"6300\">ID</span>=\"TextBoxWebsite\" <span style=\" color: #F00;\" id=\"6301\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6302\">asp</span>:<span style=\" color: #800000;\" id=\"6303\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6304\">&lt;<span style=\" color: #800000;\" id=\"6305\">asp</span>:<span style=\" color: #800000;\" id=\"6306\">CustomValidator </span><span style=\" color: #F00;\" id=\"6307\">ID</span>=\"CustomValidatorWebSite\" <span style=\" color: #F00;\" id=\"6308\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6309\">ErrorMessage</span>=\"Website not valid\" <span style=\" color: #F00;\" id=\"6310\">ControlToValidate</span>=\"TextBoxWebsite\"</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6311\"><br id=\"6312\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6313\"><span style=\" color: #F00;\" id=\"6314\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6315\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6316\">asp</span>:<span style=\" color: #800000;\" id=\"6317\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6318\">&lt;/<span style=\" color: #800000;\" id=\"6319\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"6320\">&lt;/<span style=\" color: #800000;\" id=\"6321\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6322\">&lt;<span style=\" color: #800000;\" id=\"6323\">tr </span><span style=\" color: #F00;\" id=\"6324\">class</span>=\"photo\"&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6325\">&lt;<span style=\" color: #800000;\" id=\"6326\">td</span>&gt; <span style=\" color: #000;\" id=\"6327\">Photo:</span>&lt;/<span style=\" color: #800000;\" id=\"6328\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6329\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6330\">asp</span>:<span style=\" color: #800000;\" id=\"6331\">FileUpload </span><span style=\" color: #F00;\" id=\"6332\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"6333\">runat</span>=\"server\" /&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6334\">&lt;/<span style=\" color: #800000;\" id=\"6335\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6336\">&lt;/<span style=\" color: #800000;\" id=\"6337\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6338\">&lt;<span style=\" color: #800000;\" id=\"6339\">tr </span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6340\">&lt;<span style=\" color: #800000;\" id=\"6341\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"6342\"><span style=\" color: #F00;\" id=\"6343\">&amp;nbsp;</span>&lt;/<span style=\" color: #800000;\" id=\"6344\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6345\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6346\">asp</span>:<span style=\" color: #800000;\" id=\"6347\">Button </span><span style=\" color: #F00;\" id=\"6348\">ID</span>=\"ButtonCreate\" <span style=\" color: #F00;\" id=\"6349\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6350\">Text</span>=\"Create\"</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6351\"><span style=\" color: #F00;\" id=\"6352\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span style=\" color: #800000;\" id=\"6353\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6354\">&lt;/<span style=\" color: #800000;\" id=\"6355\">tr</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6356\"><br id=\"6357\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6358\">&lt;/<span style=\" color: #800000;\" id=\"6359\">table</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6360\">&lt;/<span style=\" color: #800000;\" id=\"6361\">form</span>&gt;</p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6362\"><a name=\"a68\" id=\"6363\"><span class=\"p\" id=\"6364\">File </span></a><span class=\"s128\" style=\" background-color: #FF0;\" id=\"6365\">VcardControl.ascx.cs</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6366\"><br id=\"6367\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6368\">using <span style=\" color: #000;\" id=\"6369\">System;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6370\">using <span style=\" color: #000;\" id=\"6371\">System.Collections.Generic; </span>using <span style=\" color: #000;\" id=\"6372\">System.Linq;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6373\">using <span style=\" color: #000;\" id=\"6374\">System.Web;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6375\">using <span style=\" color: #000;\" id=\"6376\">umbraco.DataLayer.SqlHelpers.SqlServer; </span>using <span style=\" color: #000;\" id=\"6377\">umbraco.DataLayer;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6378\">using <span style=\" color: #000;\" id=\"6379\">umbraco;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6380\">using <span style=\" color: #000;\" id=\"6381\">System.Data.SqlClient;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6382\">using <span style=\" color: #000;\" id=\"6383\">System.Text.RegularExpressions; </span>using <span style=\" color: #000;\" id=\"6384\">System.Web.UI.WebControls; </span>using <span style=\" color: #000;\" id=\"6385\">System.IO;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6386\">using <span style=\" color: #000;\" id=\"6387\">System.Text; </span>using <span style=\" color: #000;\" id=\"6388\">System.Net.Mail; </span>using <span style=\" color: #000;\" id=\"6389\">System.Net;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6390\"><br id=\"6391\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6392\">namespace <span style=\" color: #000;\" id=\"6393\">VCardGenerator</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6394\">{</p><p class=\"s98\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6395\"><span style=\" color: #00F;\" id=\"6396\">public partial class </span>VcardControl <span style=\" color: #000;\" id=\"6397\">: System.Web.UI.</span>UserControl</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6398\">{</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6399\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6400\">/// <span style=\" color: #008000;\" id=\"6401\">Handles the Load event of the Page control.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6402\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6403\">/// &lt;param name=\"sender\"&gt;<span style=\" color: #008000;\" id=\"6404\">The source of the event.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6405\">/// &lt;param name=\"e\"&gt;<span style=\" color: #008000;\" id=\"6406\">The </span>&lt;see cref=\"System.EventArgs\"/&gt; <span style=\" color: #008000;\" id=\"6407\">instance containing the event data.</span>&lt;/param&gt;</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6408\"><span style=\" color: #00F;\" id=\"6409\">protected void </span>Page_Load(<span style=\" color: #00F;\" id=\"6410\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6411\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6412\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6413\"><br id=\"6414\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6415\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6416\"><br id=\"6417\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6418\"><span style=\" color: #00F;\" id=\"6419\">protected void </span>ButtonCreate_Click(<span style=\" color: #00F;\" id=\"6420\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6421\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6422\">{</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6423\">if <span style=\" color: #000;\" id=\"6424\">(Page.IsValid)</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6425\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6426\"><span style=\" color: #2B91AE;\" id=\"6427\">Guid </span>id = <span style=\" color: #2B91AE;\" id=\"6428\">Guid</span>.NewGuid(); <span style=\" color: #00F;\" id=\"6429\">string </span>imgFile = <span style=\" color: #A21515;\" id=\"6430\">\"noimage\"</span>;</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6431\">string <span style=\" color: #000;\" id=\"6432\">name = RemoveSpecialCharacter(TextBoxName.Text);</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6433\">string <span style=\" color: #000;\" id=\"6434\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"6435\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"6436\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"6437\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6438\">string <span style=\" color: #000;\" id=\"6439\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: justify;\" id=\"6440\">string <span style=\" color: #000;\" id=\"6441\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"6442\">phone = RemoveSpecialCharacter(TextBoxPhone.Text); </span>if <span style=\" color: #000;\" id=\"6443\">(FileUploadPhoto.PostedFile != </span>null <span style=\" color: #000;\" id=\"6444\">&amp;&amp;</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6445\">FileUploadPhoto.PostedFile.ContentLength &gt; 0)</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6446\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6447\"><span style=\" color: #00F;\" id=\"6448\">string </span>guid = id.ToString(<span style=\" color: #A21515;\" id=\"6449\">\"N\"</span>);</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6450\"><span style=\" color: #00F;\" id=\"6451\">string </span>imageDirectory = Server.MapPath(<span style=\" color: #A21515;\" id=\"6452\">\"vcardimage\"</span>); <span style=\" color: #00F;\" id=\"6453\">if </span>(<span style=\" color: #2B91AE;\" id=\"6454\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6455\">{</p><p class=\"s70\" style=\"padding-left: 151pt;text-indent: -20pt;text-align: left;\" id=\"6456\">FileUploadPhoto.PostedFile.SaveAs( Server.MapPath(<span style=\" color: #A21515;\" id=\"6457\">\"/vcardimage/\" </span>+ guid +</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6458\">FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6459\">}</p><p class=\"s66\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6460\">else</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6461\">{</p><p class=\"s70\" style=\"padding-left: 130pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6462\"><span style=\" color: #2B91AE;\" id=\"6463\">Directory</span>.CreateDirectory(Server.MapPath(<span style=\" color: #A21515;\" id=\"6464\">\"vcardimage\"</span>));</p><p class=\"s70\" style=\"padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6465\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span style=\" color: #A21515;\" id=\"6466\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6467\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6468\"><br id=\"6469\"></p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6470\">imgFile = imageDirectory + <span style=\" color: #A21515;\" id=\"6471\">\"/\" </span>+ guid + FileUploadPhoto.FileName; SendVcard(<span style=\" color: #A21515;\" id=\"6472\">\"Your Vcard:\"</span>,</p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 156pt;text-align: left;\" id=\"6473\">\"Your vcard is ready. Please open Attachment. \\n Thank you very much \\n Semic Provider\"<span style=\" color: #000;\" id=\"6474\">,</span></p><p class=\"s70\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"6475\">email,</p><p class=\"s70\" style=\"padding-left: 161pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6476\">GenerateVcard(name, streetaddress, zip, city, country,</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6477\">email, phone, web, imgFile));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6478\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6479\">\"VCard has been sent to \" </span>+ email;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6480\">}</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6481\">else</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6482\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6483\">SendVcard(<span style=\" color: #A21515;\" id=\"6484\">\"Vcard:\"</span>, <span style=\" color: #A21515;\" id=\"6485\">\"Your vcard is ready. Please open Attachment.</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6486\">\\n Thank you very much \\n Semic Provider\"<span style=\" color: #000;\" id=\"6487\">,</span></p><p class=\"s70\" style=\"padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"6488\">email,</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 104pt;text-align: left;\" id=\"6489\">GenerateVcard(name, streetaddress, zip, city, country, email, phone, web, imgFile));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6490\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6491\">\"VCard has been sent to \" </span>+ email;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6492\"><br id=\"6493\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6494\">imgFile);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6495\"><br id=\"6496\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6497\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6498\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6499\">InsertTable(name, streetaddress, zip, country, phone, email, web,</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6500\"><br id=\"6501\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6502\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6503\"><br id=\"6504\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6505\"><br id=\"6506\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6507\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6508\">/// <span style=\" color: #008000;\" id=\"6509\">Generates the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6510\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6511\">/// &lt;param name=\"firstName\"&gt;<span style=\" color: #008000;\" id=\"6512\">The first name.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6513\">/// &lt;param name=\"streetAddress\"&gt;<span style=\" color: #008000;\" id=\"6514\">The street address.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6515\">/// &lt;param name=\"zip\"&gt;<span style=\" color: #008000;\" id=\"6516\">The zip.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6517\">/// &lt;param name=\"city\"&gt;<span style=\" color: #008000;\" id=\"6518\">The city.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6519\">/// &lt;param name=\"country\"&gt;<span style=\" color: #008000;\" id=\"6520\">The country.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6521\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6522\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6523\">/// &lt;param name=\"phone\"&gt;<span style=\" color: #008000;\" id=\"6524\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6525\">/// &lt;param name=\"web\"&gt;<span style=\" color: #008000;\" id=\"6526\">The web.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6527\">/// &lt;param name=\"image\"&gt;<span style=\" color: #008000;\" id=\"6528\">The image.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6529\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6530\">vcard string </span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6531\">public string <span style=\" color: #000;\" id=\"6532\">GenerateVcard(</span>string <span style=\" color: #000;\" id=\"6533\">firstName, </span>string <span style=\" color: #000;\" id=\"6534\">streetAddress, </span>string <span style=\" color: #000;\" id=\"6535\">zip, </span>string <span style=\" color: #000;\" id=\"6536\">city, </span>string <span style=\" color: #000;\" id=\"6537\">country, </span>string <span style=\" color: #000;\" id=\"6538\">email, </span>string <span style=\" color: #000;\" id=\"6539\">phone, </span>string <span style=\" color: #000;\" id=\"6540\">web, </span>string <span style=\" color: #000;\" id=\"6541\">image)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6542\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6543\"><span style=\" color: #00F;\" id=\"6544\">string </span>url = <span style=\" color: #A21515;\" id=\"6545\">\"\"</span>; <span style=\" color: #00F;\" id=\"6546\">if </span>(web.Length &gt; 0)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6547\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6548\">url = <span style=\" color: #A21515;\" id=\"6549\">\"http://\" </span>+ web.Replace(<span style=\" color: #A21515;\" id=\"6550\">\"http\"</span>, <span style=\" color: #A21515;\" id=\"6551\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6552\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6553\"><span style=\" color: #00F;\" id=\"6554\">var </span>vcardStringBuilder = <span style=\" color: #00F;\" id=\"6555\">new </span><span style=\" color: #2B91AE;\" id=\"6556\">StringBuilder</span>(); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6557\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6558\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6559\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"6560\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"6561\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"6562\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"6563\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"6564\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6565\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6566\">\"URL;type=pref:\" </span>+ url);</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6567\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6568\">\"EMAIL:\" </span>+ email); <span style=\" color: #00F;\" id=\"6569\">if </span>(image != <span style=\" color: #A21515;\" id=\"6570\">\"noimage\"</span>)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6571\">{</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6572\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6573\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"6574\">\":\"</span>);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6575\"><br id=\"6576\"></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: -83pt;text-align: left;\" id=\"6577\">vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"6578\">Convert</span>.ToBase64String(ReadImage(image))); vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"6579\">string</span>.Empty);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6580\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6581\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6582\">\"END:VCARD\"</span>); <span style=\" color: #00F;\" id=\"6583\">return </span>vcardStringBuilder.ToString();</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6584\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6585\"><br id=\"6586\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6587\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6588\">/// <span style=\" color: #008000;\" id=\"6589\">Reads the image.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6590\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6591\">/// &lt;param name=\"image\"&gt;<span style=\" color: #008000;\" id=\"6592\">The image.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6593\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6594\">image bytes </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6595\">public byte</span><span style=\" color: #000;\" id=\"6596\">[] ReadImage(</span><span style=\" color: #00F;\" id=\"6597\">string </span><span style=\" color: #000;\" id=\"6598\">image)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6599\">{</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"6600\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6601\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6602\"><br id=\"6603\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6604\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6605\"><br id=\"6606\"></p><p class=\"s66\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6607\">return <span style=\" color: #2B91AE;\" id=\"6608\">File</span><span style=\" color: #000;\" id=\"6609\">.ReadAllBytes(image);</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6610\"><span style=\" color: #00F;\" id=\"6611\">catch </span>(<span style=\" color: #2B91AE;\" id=\"6612\">Exception </span>ex)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6613\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6614\"><span style=\" color: #00F;\" id=\"6615\">return </span><span style=\" color: #2B91AE;\" id=\"6616\">File</span>.ReadAllBytes(Server.MapPath(<span style=\" color: #A21515;\" id=\"6617\">\"media/logo-vcard.png\"</span>));</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6618\">}</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6619\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6620\"><br id=\"6621\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6622\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6623\">/// <span style=\" color: #008000;\" id=\"6624\">Sends the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6625\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6626\">/// &lt;param name=\"subject\"&gt;<span style=\" color: #008000;\" id=\"6627\">The subject.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6628\">/// &lt;param name=\"body\"&gt;<span style=\" color: #008000;\" id=\"6629\">The body.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6630\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6631\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6632\">/// &lt;param name=\"file\"&gt;<span style=\" color: #008000;\" id=\"6633\">The file.</span>&lt;/param&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6634\">private void <span style=\" color: #000;\" id=\"6635\">SendVcard(</span>string <span style=\" color: #000;\" id=\"6636\">subject, </span>string <span style=\" color: #000;\" id=\"6637\">body, </span>string <span style=\" color: #000;\" id=\"6638\">email, </span>string <span style=\" color: #000;\" id=\"6639\">file)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6640\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6641\"><span style=\" color: #00F;\" id=\"6642\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"6643\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #00F;\" id=\"6644\">try</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6645\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6646\"><br id=\"6647\"></p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6648\">MemoryStream <span style=\" color: #000;\" id=\"6649\">stream = </span><span style=\" color: #00F;\" id=\"6650\">new </span>MemoryStream<span style=\" color: #000;\" id=\"6651\">(byteArray); </span>MailMessage <span style=\" color: #000;\" id=\"6652\">message = </span><span style=\" color: #00F;\" id=\"6653\">new </span>MailMessage<span style=\" color: #000;\" id=\"6654\">(); message.Subject = subject;</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6655\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6656\">message.From = <span style=\" color: #00F;\" id=\"6657\">new </span><span style=\" color: #2B91AE;\" id=\"6658\">MailAddress</span>(<a href=\"mailto:jeevan_2np@yahoo.com\" class=\"s130\" target=\"_blank\" id=\"6659\">\"sender id example: </a><span style=\" color: #A21515;\" id=\"6660\">jeevan_2np@yahoo.com\"</span>);</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6661\">message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6662\">SmtpClient <span style=\" color: #000;\" id=\"6663\">client = </span><span style=\" color: #00F;\" id=\"6664\">new </span>SmtpClient<span style=\" color: #000;\" id=\"6665\">();</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6666\"><span style=\" color: #2B91AE;\" id=\"6667\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"6668\">new </span><span style=\" color: #2B91AE;\" id=\"6669\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"6670\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6671\">client.Host = <span style=\" color: #A21515;\" id=\"6672\">\"smtp address\"</span>; client.Port = smtp port number;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6673\">client.Credentials = <span style=\" color: #00F;\" id=\"6674\">new </span><span style=\" color: #2B91AE;\" id=\"6675\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"6676\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"6677\">\"password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"6678\">true</span>;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6679\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6680\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6681\">catch</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6682\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6683\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6684\">\"Internal Error\"</span>;</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6685\">DownloadVcard(byteArray);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6686\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6687\"><br id=\"6688\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6689\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6690\"><br id=\"6691\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6692\"><span style=\" color: #00F;\" id=\"6693\">protected void </span>CustomValidatorName_ServerValidate(<span style=\" color: #00F;\" id=\"6694\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6695\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6696\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6697\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6698\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6699\"><br id=\"6700\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6701\"><span style=\" color: #00F;\" id=\"6702\">protected void </span>CustomValidatorPostalCode_ServerValidate(<span style=\" color: #00F;\" id=\"6703\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6704\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6705\">{</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"6706\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6707\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6708\"><br id=\"6709\"></p><p class=\"s66\" style=\"padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6710\">if <span style=\" color: #000;\" id=\"6711\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6712\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6713\">args.IsValid = RemoveSpecialCharacter(args.Value).Length == 4;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6714\">}</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6715\">else</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6716\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6717\">args.IsValid = <span style=\" color: #00F;\" id=\"6718\">true</span>;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6719\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6720\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6721\">catch <span style=\" color: #000;\" id=\"6722\">{ args.IsValid = </span>false<span style=\" color: #000;\" id=\"6723\">; }</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6724\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6725\"><br id=\"6726\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6727\"><span style=\" color: #00F;\" id=\"6728\">protected void </span>CustomValidatorCountry_ServerValidate(<span style=\" color: #00F;\" id=\"6729\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6730\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6731\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6732\"><br id=\"6733\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6734\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6735\"><br id=\"6736\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6737\"><span style=\" color: #00F;\" id=\"6738\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"6739\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6740\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6741\">{</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6742\">if <span style=\" color: #000;\" id=\"6743\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6744\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6745\"><br id=\"6746\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6747\">}</p><p class=\"s66\" style=\"text-indent: 0pt;text-align: right;\" id=\"6748\">else</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6749\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6750\"><br id=\"6751\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6752\">}</p><p class=\"s70\" style=\"padding-left: 10pt;text-indent: 0pt;text-align: center;\" id=\"6753\">}</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"6754\">args.IsValid = ValidatePhone(args.Value);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6755\"><br id=\"6756\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"6757\">args.IsValid = <span style=\" color: #00F;\" id=\"6758\">true</span>;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6759\"><br id=\"6760\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6761\"><span style=\" color: #00F;\" id=\"6762\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"6763\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6764\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6765\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6766\">args.IsValid = ValidateEmail(args.Value.ToString());</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6767\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6768\"><br id=\"6769\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6770\"><span style=\" color: #00F;\" id=\"6771\">protected void </span>CustomValidatorWebSite_ServerValidate(<span style=\" color: #00F;\" id=\"6772\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6773\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6774\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6775\"><br id=\"6776\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6777\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6778\"><br id=\"6779\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6780\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6781\">/// <span style=\" color: #008000;\" id=\"6782\">Validates the phone.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6783\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-top: 2pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6784\">/// &lt;param name=\"input\"&gt;<span style=\" color: #008000;\" id=\"6785\">The input.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6786\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6787\">true if it valid </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6788\">public bool </span><span style=\" color: #000;\" id=\"6789\">ValidatePhone(</span><span style=\" color: #00F;\" id=\"6790\">string </span><span style=\" color: #000;\" id=\"6791\">input)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6792\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6793\"><span style=\" color: #00F;\" id=\"6794\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"6795\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"6796\">Regex </span>num = <span style=\" color: #00F;\" id=\"6797\">new </span><span style=\" color: #2B91AE;\" id=\"6798\">Regex</span>(<span style=\" color: #A21515;\" id=\"6799\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6800\">return <span style=\" color: #000;\" id=\"6801\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6802\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6803\"><br id=\"6804\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6805\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6806\">/// <span style=\" color: #008000;\" id=\"6807\">Validates the email.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6808\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6809\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6810\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6811\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6812\">true on valid email </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6813\">public bool </span><span style=\" color: #000;\" id=\"6814\">ValidateEmail(</span><span style=\" color: #00F;\" id=\"6815\">string </span><span style=\" color: #000;\" id=\"6816\">email)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6817\">{</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"6818\">return <span style=\" color: #2B91AE;\" id=\"6819\">Regex</span><span style=\" color: #000;\" id=\"6820\">.IsMatch(email,</span></p><p class=\"s99\" style=\"padding-left: 72pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6821\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"6822\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span style=\" color: #000;\" id=\"6823\">+</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 67pt;text-align: left;\" id=\"6824\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a- zA-Z]{2,6}))$\"<span style=\" color: #000;\" id=\"6825\">);</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6826\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6827\"><br id=\"6828\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6829\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6830\">/// <span style=\" color: #008000;\" id=\"6831\">Removes the special character.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6832\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6833\">/// &lt;param name=\"input\"&gt;<span style=\" color: #008000;\" id=\"6834\">The input.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6835\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6836\">secure string </span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6837\">public string <span style=\" color: #000;\" id=\"6838\">RemoveSpecialCharacter(</span>string <span style=\" color: #000;\" id=\"6839\">input)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6840\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6841\"><span style=\" color: #00F;\" id=\"6842\">return </span><span style=\" color: #2B91AE;\" id=\"6843\">Regex</span>.Replace(input, <span style=\" color: #A21515;\" id=\"6844\">\"[^0-9a-zA-Z. ]+\"</span>, <span style=\" color: #A21515;\" id=\"6845\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6846\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6847\"><br id=\"6848\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6849\"><span style=\" color: #00F;\" id=\"6850\">protected void </span>TextBoxEmail_TextChanged(<span style=\" color: #00F;\" id=\"6851\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6852\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6853\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6854\"><br id=\"6855\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6856\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6857\"><br id=\"6858\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6859\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6860\">/// <span style=\" color: #008000;\" id=\"6861\">Creates the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6862\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6863\">/// &lt;param name=\"tableName\"&gt;<span style=\" color: #008000;\" id=\"6864\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6865\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6866\">true if table created</span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6867\">private static bool </span><span style=\" color: #000;\" id=\"6868\">CreateTable(</span><span style=\" color: #00F;\" id=\"6869\">string </span><span style=\" color: #000;\" id=\"6870\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6871\">{</p><p class=\"s66\" style=\"text-indent: 0pt;text-align: right;\" id=\"6872\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6873\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6874\"><br id=\"6875\"></p><p class=\"s70\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6876\"><span style=\" color: #2B91AE;\" id=\"6877\">SqlConnection </span>connection = <span style=\" color: #00F;\" id=\"6878\">new </span><span style=\" color: #2B91AE;\" id=\"6879\">SqlConnection</span>(<span style=\" color: #2B91AE;\" id=\"6880\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"6881\">string </span>queryString =</p><p class=\"s99\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6882\">@\" CREATE TABLE [vcardimage](</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6883\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 5pt;text-align: left;\" id=\"6884\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 0pt;text-align: left;\" id=\"6885\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"6886\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6887\"><br id=\"6888\"></p><p class=\"s98\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6889\">SqlCommand <span style=\" color: #000;\" id=\"6890\">command = </span><span style=\" color: #00F;\" id=\"6891\">new </span>SqlCommand<span style=\" color: #000;\" id=\"6892\">(queryString, connection);</span></p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6893\">connection.Open(); command.ExecuteNonQuery(); connection.Close();</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6894\">return true<span style=\" color: #000;\" id=\"6895\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6896\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6897\">catch</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6898\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6899\">return false<span style=\" color: #000;\" id=\"6900\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6901\">}</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6902\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6903\"><br id=\"6904\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6905\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6906\">/// <span style=\" color: #008000;\" id=\"6907\">Checks the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6908\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6909\">/// &lt;param name=\"tableName\"&gt;<span style=\" color: #008000;\" id=\"6910\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6911\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6912\">true if table exist </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6913\">private static bool </span><span style=\" color: #000;\" id=\"6914\">CheckTable(</span><span style=\" color: #00F;\" id=\"6915\">string </span><span style=\" color: #000;\" id=\"6916\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6917\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6918\"><span style=\" color: #2B91AE;\" id=\"6919\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"6920\">new </span><span style=\" color: #2B91AE;\" id=\"6921\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"6922\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"6923\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6924\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6925\"><br id=\"6926\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6927\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6928\">/// <span style=\" color: #008000;\" id=\"6929\">Inserts the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6930\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6931\">/// &lt;param name=\"name\"&gt;<span style=\" color: #008000;\" id=\"6932\">The name.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6933\">/// &lt;param name=\"street\"&gt;<span style=\" color: #008000;\" id=\"6934\">The street.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6935\">/// &lt;param name=\"postalcode\"&gt;<span style=\" color: #008000;\" id=\"6936\">The postalcode.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6937\">/// &lt;param name=\"country\"&gt;<span style=\" color: #008000;\" id=\"6938\">The country.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6939\">/// &lt;param name=\"phone\"&gt;<span style=\" color: #008000;\" id=\"6940\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6941\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6942\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6943\">/// &lt;param name=\"website\"&gt;<span style=\" color: #008000;\" id=\"6944\">The website.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6945\">/// &lt;param name=\"imageguid\"&gt;<span style=\" color: #008000;\" id=\"6946\">The imageguid.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6947\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6948\">true on successul data insert</span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6949\">public static bool <span style=\" color: #000;\" id=\"6950\">InsertTable(</span>string <span style=\" color: #000;\" id=\"6951\">name, </span>string <span style=\" color: #000;\" id=\"6952\">street, </span>string <span style=\" color: #000;\" id=\"6953\">postalcode, </span>string <span style=\" color: #000;\" id=\"6954\">country, </span>string <span style=\" color: #000;\" id=\"6955\">phone, </span>string <span style=\" color: #000;\" id=\"6956\">email, </span>string <span style=\" color: #000;\" id=\"6957\">website, </span>string <span style=\" color: #000;\" id=\"6958\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6959\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6960\"><span style=\" color: #00F;\" id=\"6961\">string </span>tableName = <span style=\" color: #A21515;\" id=\"6962\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"6963\">try</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6964\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6965\">if <span style=\" color: #000;\" id=\"6966\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6967\">{ CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6968\">ISqlHelper <span style=\" color: #000;\" id=\"6969\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"6970\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6971\">@\"insert into \" <span style=\" color: #000;\" id=\"6972\">+ tableName + </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"6973\">+</span></p><p class=\"s99\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6974\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6975\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"6976\">,</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6977\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6978\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6979\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6980\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6981\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6982\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6983\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6984\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6985\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6986\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"6987\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"6988\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6989\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6990\"><span style=\" color: #00F;\" id=\"6991\">catch </span>(<span style=\" color: #2B91AE;\" id=\"6992\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6993\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6994\">return false<span style=\" color: #000;\" id=\"6995\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6996\"><br id=\"6997\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6998\"><br id=\"6999\"></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7000\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7001\"><br id=\"7002\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7003\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7004\"><br id=\"7005\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7006\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7007\">/// <span style=\" color: #008000;\" id=\"7008\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7009\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7010\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"7011\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"7012\">public void </span><span style=\" color: #000;\" id=\"7013\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"7014\">byte </span><span style=\" color: #000;\" id=\"7015\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7016\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7017\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"7018\">true</span>;</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7019\">Response.ContentType = <span style=\" color: #A21515;\" id=\"7020\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"7021\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"7022\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7023\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"7024\">);</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7025\">Response.Charset = <span style=\" color: #A21515;\" id=\"7026\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7027\">HttpContext<span style=\" color: #000;\" id=\"7028\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7029\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7030\">}</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7031\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7032\"><br id=\"7033\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7034\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"7035\">GlobalSetting.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7036\"><br id=\"7037\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7038\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7039\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: -6pt;line-height: 114%;text-align: left;\" id=\"7040\">&lt;xsl:stylesheet version=\"1.0\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7041\"><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7042\">xmlns:xsl=\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml=\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library=\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon=\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes=\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath=\"urn:Exslt.ExsltMath\" xmlns:Exslt.ExsltRegularExpressions=\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings=\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets=\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7043\">exclude-result-prefixes=\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7044\"><br id=\"7045\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7046\">&lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7047\">&lt;xsl:param name=\"currentPage\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7048\">&lt;xsl:template match=\"/\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"7049\">&lt;!-- start writing XSLT --&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7050\">&lt;xsl:variable name=\"items\" select=\"$currentPage/ancestor-or-self::*</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7051\">/WebSiteGlobalSettings \"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7052\">&lt;xsl:variable name=\"logo\" select=\"$items/logo\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7053\">&lt;div class=\"vcard\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7054\">&lt;div class=\"logo\"&gt;&lt;a href=\"/\" title=\"start page\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7055\">&lt;img src=\"{$logo}\" alt=\"semic provider logo; visual identity\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: center;\" id=\"7056\">&lt;/a&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7057\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7058\">&lt;div class=\"fn\" &gt;</p><p style=\"padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"7059\">&lt;xsl:value-of select=\"$items/siteName\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7060\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7061\">&lt;h4&gt; &lt;xsl:value-of select=\"$items/slogan\"/&gt; &lt;/h4&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7062\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7063\">&lt;/xsl:template&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7064\">&lt;/xsl:stylesheet&gt;</p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7065\">Navigation.xslt</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7066\"><br id=\"7067\"></p><p style=\"padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7068\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7069\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7070\">&lt;<span class=\"p\" id=\"7071\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7072\">version<span class=\"s56\" id=\"7073\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7074\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7075\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7076\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7077\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7078\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7079\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7080\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7081\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7082\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7083\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7084\">=</span>\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7085\">exclude-result-prefixes<span class=\"s56\" id=\"7086\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7087\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7088\">&lt;<span class=\"p\" id=\"7089\">xsl:output method</span>=<span class=\"p\" id=\"7090\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7091\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7092\">&lt;<span class=\"p\" id=\"7093\">xsl:param name</span>=<span class=\"p\" id=\"7094\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7095\">&lt;<span class=\"p\" id=\"7096\">xsl:template match</span>=<span class=\"p\" id=\"7097\">\"/\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7098\">&lt;<span class=\"p\" id=\"7099\">xsl:variable name</span>=<span class=\"p\" id=\"7100\">\"items\" select</span>=<span class=\"p\" id=\"7101\">\"$currentPage/ancestor-or-self::*</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7102\">/GeneralContent [string(useInNavigation) = '1'] \"<span class=\"s56\" id=\"7103\">/&gt;</span></p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7104\">&lt;<span class=\"p\" id=\"7105\">xsl:if test</span>=<span class=\"p\" id=\"7106\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7107\">&lt;<span class=\"p\" id=\"7108\">ul</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7109\">&lt;<span class=\"p\" id=\"7110\">xsl:for-each select</span>=<span class=\"p\" id=\"7111\">\"$items\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7112\">&lt;<span class=\"p\" id=\"7113\">xsl:if test</span>=<span class=\"p\" id=\"7114\">\"$currentPage/@id = @id\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7115\">&lt;<span class=\"p\" id=\"7116\">li class</span>=<span class=\"p\" id=\"7117\">\"current\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7118\">&lt;<span class=\"p\" id=\"7119\">xsl:value-of select</span>=<span class=\"p\" id=\"7120\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7121\">&lt;/<span class=\"p\" id=\"7122\">li</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7123\">&lt;/<span class=\"p\" id=\"7124\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"7125\">&lt;<span class=\"p\" id=\"7126\">xsl:if test</span>=<span class=\"p\" id=\"7127\">\"$currentPage/@id != @id\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7128\">&lt;<span class=\"p\" id=\"7129\">li class</span>=<span class=\"p\" id=\"7130\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 35pt;text-indent: 0pt;text-align: left;\" id=\"7131\">&lt;<span class=\"p\" id=\"7132\">a href</span>=<span class=\"p\" id=\"7133\">\"{umbraco.library:NiceUrl(@id)}\" title</span>=<span class=\"p\" id=\"7134\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7135\">&lt;<span class=\"p\" id=\"7136\">xsl:value-of select</span>=<span class=\"p\" id=\"7137\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"7138\">&lt;/<span class=\"p\" id=\"7139\">a</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7140\">&lt;/<span class=\"p\" id=\"7141\">li</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7142\">&lt;/<span class=\"p\" id=\"7143\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7144\">&lt;/<span class=\"p\" id=\"7145\">xsl:for-each</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7146\">&lt;/<span class=\"p\" id=\"7147\">ul</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7148\">&lt;/<span class=\"p\" id=\"7149\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7150\">&lt;/<span class=\"p\" id=\"7151\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7152\">&lt;/<span class=\"p\" id=\"7153\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7154\"><br id=\"7155\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7156\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7157\">NewsList.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7158\"><br id=\"7159\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7160\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7161\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7162\">&lt;<span class=\"p\" id=\"7163\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7164\">version<span class=\"s56\" id=\"7165\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7166\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7167\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7168\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7169\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7170\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7171\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7172\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7173\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7174\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7175\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7176\">=</span>\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7177\">exclude-result-prefixes<span class=\"s56\" id=\"7178\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7179\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7180\">&lt;<span class=\"p\" id=\"7181\">xsl:output method</span>=<span class=\"p\" id=\"7182\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7183\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7184\">&lt;<span class=\"p\" id=\"7185\">xsl:param name</span>=<span class=\"p\" id=\"7186\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7187\">&lt;<span class=\"p\" id=\"7188\">xsl:template match</span>=<span class=\"p\" id=\"7189\">\"/\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7190\">&lt;<span class=\"p\" id=\"7191\">xsl:variable name</span>=<span class=\"p\" id=\"7192\">\"newsItems\" select</span>=<span class=\"p\" id=\"7193\">\"$currentPage/ancestor-or-self::*</span></p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7194\">/NewsContainer/NewsArticle \"<span class=\"s56\" id=\"7195\">/&gt;</span></p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7196\">&lt;<span class=\"p\" id=\"7197\">xsl:variable name</span>=<span class=\"p\" id=\"7198\">\"numberofnewsitems\" select</span>=<span class=\"p\" id=\"7199\">\"/macro/numberofnewsitems\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7200\">&lt;<span class=\"p\" id=\"7201\">xsl:if test</span>=<span class=\"p\" id=\"7202\">\"count($newsItems) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7203\">&lt;<span class=\"p\" id=\"7204\">xsl:for-each select</span>=<span class=\"p\" id=\"7205\">\"$newsItems\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"7206\">&lt;<span class=\"p\" id=\"7207\">xsl:sort select</span>=<span class=\"p\" id=\"7208\">\"@createDate\" order</span>=<span class=\"p\" id=\"7209\">\"ascending\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"7210\">&lt;<span class=\"p\" id=\"7211\">xsl:if test</span>=<span class=\"p\" id=\"7212\">\"position() &amp;lt;=$numberofnewsitems\" </span>&gt; &lt;<span class=\"p\" id=\"7213\">div clas</span>=<span class=\"p\" id=\"7214\">\"newsItem\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 27pt;text-indent: 0pt;text-align: center;\" id=\"7215\">&lt;<span class=\"p\" id=\"7216\">h3</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7217\">&lt;<span class=\"p\" id=\"7218\">a href</span>=<span class=\"p\" id=\"7219\">\"{umbraco.library:NiceUrl(@id)}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 45pt;text-indent: 0pt;text-align: left;\" id=\"7220\">&lt;<span class=\"p\" id=\"7221\">xsl:value-of select</span>=<span class=\"p\" id=\"7222\">\"newsTitle\" </span>/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7223\"><br id=\"7224\"></p><p class=\"s56\" style=\"padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7225\">&lt;/<span class=\"p\" id=\"7226\">a</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: center;\" id=\"7227\">&lt;/<span class=\"p\" id=\"7228\">h3</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7229\">&lt;<span class=\"p\" id=\"7230\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7231\">&lt;<span class=\"p\" id=\"7232\">xsl:value-of select</span>=<span class=\"p\" id=\"7233\">\"newsBody\" disable-output-escaping</span>=<span class=\"p\" id=\"7234\">\"yes\" </span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7235\">&lt;/<span class=\"p\" id=\"7236\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7237\">&lt;<span class=\"p\" id=\"7238\">p</span>&gt;</p><p style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7239\">Last update: <span class=\"s56\" id=\"7240\">&lt;</span>xsl:value-of select<span class=\"s56\" id=\"7241\">=</span>\"@updateDate\" <span class=\"s56\" id=\"7242\">/&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7243\"><br id=\"7244\"></p><p class=\"s56\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"7245\">&lt;/<span class=\"p\" id=\"7246\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: center;\" id=\"7247\">&lt;/<span class=\"p\" id=\"7248\">div</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7249\">&lt;/<span class=\"p\" id=\"7250\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7251\">&lt;/<span class=\"p\" id=\"7252\">xsl:for-each</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7253\">&lt;/<span class=\"p\" id=\"7254\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"7255\">&lt;/<span class=\"p\" id=\"7256\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"7257\">&lt;/<span class=\"p\" id=\"7258\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7259\"><br id=\"7260\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7261\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7262\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7263\"><br id=\"7264\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7265\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7266\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7267\">&lt;<span class=\"p\" id=\"7268\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7269\">version<span class=\"s56\" id=\"7270\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7271\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7272\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7273\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:recentVcard<span class=\"s56\" id=\"7274\">=</span>\"urn:recentvcard\" xmlns:umbraco.library<span class=\"s56\" id=\"7275\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7276\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7277\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7278\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7279\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7280\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7281\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7282\">=</span>\"urn:Exslt.ExsltSets\" xmlns:recentvcard<span class=\"s56\" id=\"7283\">=</span>\"urn:recentvcard\" exclude-result-prefixes<span class=\"s56\" id=\"7284\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets recentvcard \"<span class=\"s56\" id=\"7285\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7286\">&lt;<span class=\"p\" id=\"7287\">xsl:output method</span>=<span class=\"p\" id=\"7288\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7289\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7290\">&lt;<span class=\"p\" id=\"7291\">xsl:param name</span>=<span class=\"p\" id=\"7292\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7293\">&lt;<span class=\"p\" id=\"7294\">xsl:template match</span>=<span class=\"p\" id=\"7295\">\"/\"</span>&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7296\">&lt;!-- start writing XSLT --&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7297\">&lt;<span class=\"p\" id=\"7298\">xsl:value-of select</span>=<span class=\"p\" id=\"7299\">\"recentVcard:GetVcardData()\" disable-output-escaping</span>=<span class=\"p\" id=\"7300\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7301\">&lt;/<span class=\"p\" id=\"7302\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7303\">&lt;/<span class=\"p\" id=\"7304\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7305\"><br id=\"7306\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7307\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7308\">RecentVcard.cs</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7309\"><br id=\"7310\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7311\">using <span style=\" color: #000;\" id=\"7312\">System;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7313\">using <span style=\" color: #000;\" id=\"7314\">System.Collections.Generic; </span>using <span style=\" color: #000;\" id=\"7315\">System.Linq;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7316\">using <span style=\" color: #000;\" id=\"7317\">System.Web;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7318\">using <span style=\" color: #000;\" id=\"7319\">umbraco.DataLayer; </span>using <span style=\" color: #000;\" id=\"7320\">umbraco;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7321\">namespace <span style=\" color: #000;\" id=\"7322\">VCardGenerator</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7323\">{</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7324\">public class <span style=\" color: #2B91AE;\" id=\"7325\">RecentVcard</span></p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7326\">{</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7327\">public static string <span style=\" color: #000;\" id=\"7328\">GetVcardData()</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7329\">{</p><p class=\"s98\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"7330\">ISqlHelper <span style=\" color: #000;\" id=\"7331\">getVcard = </span>DataLayerHelper<span style=\" color: #000;\" id=\"7332\">.CreateSqlHelper(</span>GlobalSettings<span style=\" color: #000;\" id=\"7333\">.DbDSN);</span></p><p class=\"s98\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7334\">IRecordsReader <span style=\" color: #000;\" id=\"7335\">read = getVcard.ExecuteReader(</span><span style=\" color: #A21515;\" id=\"7336\">@\"select top 10 id, name,</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7337\">country</p><p class=\"s99\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7338\">from vcardimage where id &gt; @id order by id desc\"<span style=\" color: #000;\" id=\"7339\">,</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7340\">getVcard.CreateParameter(<span style=\" color: #A21515;\" id=\"7341\">\"@id\"</span>, <span style=\" color: #A21515;\" id=\"7342\">\"0\"</span>));</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7343\"><span style=\" color: #00F;\" id=\"7344\">string </span>data = <span style=\" color: #A21515;\" id=\"7345\">\"\"</span>; <span style=\" color: #00F;\" id=\"7346\">while </span>(read.Read())</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7347\">{</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"7348\">data += <span style=\" color: #A21515;\" id=\"7349\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span style=\" color: #A21515;\" id=\"7350\">\"name\"</span>) +</p><p class=\"s99\" style=\"padding-left: 104pt;text-indent: 0pt;text-align: left;\" id=\"7351\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span style=\" color: #000;\" id=\"7352\">+ read.GetString(</span>\"country\"<span style=\" color: #000;\" id=\"7353\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span style=\" color: #000;\" id=\"7354\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7355\">}</p><p class=\"s99\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7356\"><span style=\" color: #00F;\" id=\"7357\">return </span>\"&lt;ul&gt;\" <span style=\" color: #000;\" id=\"7358\">+ data + </span>\"&lt;/ul\"<span style=\" color: #000;\" id=\"7359\">;</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7360\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7361\">}</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7362\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7363\"><span id=\"7364\"><img width=\"602\" height=\"851\" alt=\"image\" src=\"Image_137.png\" id=\"7365\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7366\"><br id=\"7367\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7368\"><br id=\"7369\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7370\"><br id=\"7371\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7372\">About Writer</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7373\">Name: Jivan Thapa</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7374\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p style=\"padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;line-height: 159%;text-align: left;\" id=\"7375\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7376\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7377\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7378\">jeevan_2np@yahoo.com</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7379\"><br id=\"7380\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7381\">About Writer</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7382\">Name: Jivan Thapa</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7383\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p style=\"padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;line-height: 159%;text-align: left;\" id=\"7384\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7385\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7386\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7387\">jeevan_2np@yahoo.com</a></p><p style=\"padding-left: 30pt;text-indent: 0pt;text-align: left;\" id=\"7388\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"7389\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7390\"><br id=\"7391\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7392\"><br id=\"7393\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7394\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7395\">Here I covered:</p><ul id=\"l140\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7397\"><p style=\"display: inline;\" id=\"7398\">Document Type</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7399\"><p style=\"display: inline;\" id=\"7400\">Template</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7401\"><p style=\"display: inline;\" id=\"7402\">Content</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7403\"><p style=\"display: inline;\" id=\"7404\">Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7405\"><p style=\"display: inline;\" id=\"7406\">Extending Umbraco using .net class and User Control</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7407\"><p style=\"display: inline;\" id=\"7408\">And more ….</p></li></ul><p style=\"padding-top: 11pt;text-indent: 0pt;text-align: right;\" id=\"7409\">Jivan Thapa</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7410\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7411\">Here I covered:</p><ul id=\"l141\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7413\"><p style=\"display: inline;\" id=\"7414\">Document Type</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7415\"><p style=\"display: inline;\" id=\"7416\">Template</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7417\"><p style=\"display: inline;\" id=\"7418\">Content</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7419\"><p style=\"display: inline;\" id=\"7420\">Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7421\"><p style=\"display: inline;\" id=\"7422\">Extending Umbraco using .net class and User Control</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7423\"><p style=\"display: inline;\" id=\"7424\">And more ….</p></li></ul><p style=\"padding-top: 11pt;text-indent: 0pt;text-align: right;\" id=\"7425\">Jivan Thapa</p><p style=\"padding-left: 30pt;text-indent: 0pt;text-align: left;\" id=\"7426\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"7427\"> </span></p></div></div><p id=\"endOfDocument\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading5866\" class=\"heading5866\"><a name=\"bookmark70\" id=\"5867\" >Modify Macro:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading5866\" ><p  id=\"5868\">Once you have XSLT, you can insert Xslt into templates, in my case I am going to insert into Content. So we need to check “Use in editor” option. Go to <span class=\"s89\" id=\"5869\"></span>Macros <span class=\"s89\" id=\"5870\"></span><span class=\"s28\" id=\"5871\"> </span>Open “Recent Vcard” <span class=\"s89\" id=\"5872\"></span><span class=\"s28\" id=\"5873\"> </span>checked on “Use in Editor” and Remember to “S<i id=\"5874\">ave”</i>. See captured screen bellow for references.</p><p  id=\"5875\"><br id=\"5876\"></p><p  id=\"5877\"><span id=\"5878\"><img width=\"638\" height=\"535\" alt=\"image\" src=\"Image_127.png\" id=\"5879\"></span></p><p  id=\"5880\">By selecting “Use in editor” makes macro available to use in content section.</p><p  id=\"5881\"><span id=\"5882\"><img width=\"386\" height=\"271\" alt=\"image\" src=\"Image_128.jpg\" id=\"5883\"></span></p><h4  id=\"5884\"><a name=\"a67\" id=\"5885\">Create Content: “Recent Vcard”</a></h4><p  id=\"5886\"><br id=\"5887\"></p><p  id=\"5888\">Go to Content Section <span class=\"s89\" id=\"5889\"></span><span class=\"s28\" id=\"5890\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5891\"></span><span class=\"s28\" id=\"5892\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p  id=\"5893\">Go to Content Section <span class=\"s89\" id=\"5894\"></span><span class=\"s28\" id=\"5895\"> </span>Right Click on Content, Click “Create” <span class=\"s89\" id=\"5896\"></span><span class=\"s28\" id=\"5897\"> </span>Name “Recent Vcard” , Select “General Content” document type . Press button “Create”. See captured screen for references.</p><p  id=\"5898\"><span  id=\"5899\"> </span></p><p  id=\"5900\"><br id=\"5901\"></p><p  id=\"5902\"><span id=\"5903\"><img width=\"634\" height=\"231\" alt=\"image\" src=\"Image_129.png\" id=\"5904\"></span></p><p  id=\"5905\">It should create Content “Recent Vcard” and visible at left side menu. Provide following information. “Content Title”: Recent Card and checked in use in Navigation so that “Recent Vcard” will show up in navigation bar</p><p  id=\"5906\"><br id=\"5907\"></p><p  id=\"5908\"><span id=\"5909\"><img width=\"648\" height=\"298\" alt=\"image\" src=\"Image_130.png\" id=\"5910\"></span></p><p  id=\"5911\">Click on Tab“Description” and Insert Macro on content area. Select Marco “Recent Vcard”, after inserting Macro “RecentVcard”. Click on Tab “Preoperties” Select Template “General Content” and Press “Save and Publish Icon”. Create few Vcard and check. It should show up on web site.</p><p  id=\"5912\"><br id=\"5913\"></p><p  id=\"5914\">Preview content by click on preview icon.</p><p  id=\"5915\"><br id=\"5916\"></p><p  id=\"5917\">If you are following me, Vcard website should look like bellow captured screen.</p><p  id=\"5918\"><br id=\"5919\"></p><p  id=\"5920\"><span id=\"5921\"><img width=\"638\" height=\"274\" alt=\"image\" src=\"Image_131.png\" id=\"5922\"></span></p><h2  id=\"heading5923\" class=\"heading5923\"><a name=\"bookmark71\" id=\"5924\" >Page not Found Error:</a></h2><div id=\"contentheading5923\" ><p  id=\"5925\">It is nice to replace default Umbraco error HTTP handler, there are many error handler 500, 404 and 403 etc. 404 error are page not found error, due to some reason, accidental file deletion, dead links and user request not existing page causes HTTP 404 errors. Umbraco handles 404 errors by showing its default error message. We can easily override 404 errors with custom page. First let‟s see Umbraco default error 404 page.</p><p  id=\"5926\"><br id=\"5927\"></p><p  id=\"5928\"><span id=\"5929\"><img width=\"638\" height=\"414\" alt=\"image\" src=\"Image_132.png\" id=\"5930\"></span></p><p  id=\"5931\">I requested not existing page /test.aspx page, which was not exist. Umbraco handle 404 error. See highlighted text, it explain well, what to do. Sometimes it may not enough so need to extra work or needs to add extra code in web.config file.</p><h3  id=\"heading5932\" class=\"heading5932\"><a name=\"bookmark72\" id=\"5933\" >Create Custom 404 error page.</a></h3><div id=\"contentheading5932\" ><p  id=\"5934\">I am creating simple 404 error page. If you want to follow me go <span class=\"s89\" id=\"5935\"></span>Content <span class=\"s89\" id=\"5936\"></span><span class=\"s28\" id=\"5937\"> </span>Right click and click on “Create”. Name: “Page not Found” and Select “General Content” Document Type. Do not check “Use in Navigation” because I don‟t want to show this page into navigation. This page should be displayed only if 404 errors occur. Go to Tab “Title” provide content title “Page Not Found”, Go to Tab “Description” and type “Requested page not found, temporarily unavailable or an out-of-date bookmark/favorite” Go to Tab “Properties” Template <span class=\"s89\" id=\"5938\"></span><span class=\"s28\" id=\"5939\"> </span>“General Content”. Finally press “Save and Publish Icon”. Hold a second on Properties tab and look id of content because Umbraco needs content id. See “pagenotfound.jpg” image as references. Each content item gets unique id. We need to specify unique id of items into umbracoSettings.config files.</p><p  id=\"5940\"><br id=\"5941\"></p><p  id=\"5942\"><span id=\"5943\"><img width=\"609\" height=\"373\" alt=\"image\" src=\"Image_133.png\" id=\"5944\"></span></p><p  id=\"5945\">pagenotfound.jpg</p><p  id=\"5946\"><br id=\"5947\"></p><p  id=\"5948\"><br id=\"5949\"></p><p  id=\"5950\">In my case node id or unique id for content “Page not found” is 1098. You may have different node or unique id</p><p  id=\"5951\"><br id=\"5952\"></p></div><h3  id=\"heading5953\" class=\"heading5953\"><a name=\"bookmark73\" id=\"5954\" >Modifying umbracoSettings.config file:</a></h3><div id=\"contentheading5953\" ><p  id=\"5955\">umbracoSettings.config file can be found inside “config” directory, open umbracoSettings.config file using notepad or other program. It‟s xml document, find</p><p  id=\"5956\">&lt;errors&gt; elements inside umbracoSettings.config. <i id=\"5957\">errors </i>element contain child <i id=\"5958\">error404 </i>element. Set its value to node id of content, in my case 1098 and Save umbracoSettings.config file. See captured screen bellow for references.</p><p  id=\"5959\"><br id=\"5960\"></p><p  id=\"5961\"><br id=\"5962\"></p><p  id=\"5963\"><span id=\"5964\"><img width=\"317\" height=\"147\" alt=\"image\" src=\"Image_134.png\" id=\"5965\"></span></p><p class=\"s10\"  id=\"5966\">Umbraco <span class=\"p\" id=\"5967\">error404.jpg</span></p><p  id=\"5968\"><br id=\"5969\"></p><p  id=\"5970\"><span id=\"5971\"><img width=\"594\" height=\"317\" alt=\"image\" src=\"Image_135.png\" id=\"5972\"></span></p><p class=\"s64\"  id=\"5973\"><span  id=\"5974\">Note: in some cases Umbraco 404 error may override by IIS (internet Information Service) or IIS may not hand over 404 error to Umbraco to handle in such case 404 error page will end up with ugly yellow dead screen page. To prevent from this we can specify by telling IIS not to handle, instead hand over all 404 error to Asp.net web site in our case Umbraco site by adding few lines of code into web.config file. Web.config file can be found in root directory of Umbraco System. Find system.webserver elements and add new element </span>&lt;<span  id=\"5975\">httpErrors </span><span  id=\"5976\">existingResponse</span>=<span  id=\"5977\">\"</span>PassThrough<span  id=\"5978\">\" </span>/&gt; <span  id=\"5979\">inside system.webserver elements. Using existingRespone= “passThrough” means IIS does not override custom errors.</span></p><p  id=\"5980\"><br id=\"5981\"></p></div></div><h2  id=\"heading5982\" class=\"heading5982\"><a name=\"bookmark74\" id=\"5983\" >Conclusion:</a></h2><div id=\"contentheading5982\" ><p  id=\"5984\"><br id=\"5985\"></p><p  id=\"5986\">Learning process is not difficult if we start from basic, every complex system begins with basic and simple structure. Here I provided basic concept of Umbraco using examples rather than theory. I use Vcard as a case to demonstrate practical examples of basic concept of Umbraco. Vcard was virtual website it does not exist on live but concept that I used in Vcard was easy to understand how to start building Umbraco website from scratch. I started to show installation of Umbraco cms, most of new developer faces many problems to install. Developing Umbraco site from empty Umbraco installation is great challenge to new developer but it‟s a way to learn Umbraco from inside, I started to build Vcard site from scratch, empty Umbraco installation. Creating DocumentType, Template and Content is core of Umbraco CMS. If you reading books from beginning without skipping chapter you should be able to understand connection between DocumentType, Template and Content. I provided information about fetching data from xml using xslt and extending xslt using</p><p  id=\"5987\">.net class provided basic concept of how to extend Umbraco. All these concepts and examples can be used for your own purpose and needs. You are familiar with how to fetch and insert data from database to Umbraco and Umbraco to Database, extending Umbraco using Xslt, user control and .net class. In last chapter I provided how to solve umbraco 404 error default page problem with custom 404 errors page in case you get errors. I also touch about security on website which will provide knowledge to secure Umbraco site even though security is not basic on Umbraco sites.</p><p  id=\"5988\"><br id=\"5989\"></p></div><h2  id=\"heading5990\" class=\"heading5990\"><a name=\"bookmark75\" id=\"5991\" >References:</a></h2><div id=\"contentheading5990\" ><p  id=\"5992\">Taken date: May-17-2011 Xslt and Xpath</p><p  id=\"5993\"><a href=\"http://www.w3schools.com/xsl/\" id=\"5994\">http://www.w3schools.com/xsl/</a></p><p  id=\"5995\"><br id=\"5996\"></p><p  id=\"5997\">Umbraco to Database and Database to Umbraco</p><p  id=\"5998\"><br id=\"5999\"></p><p  id=\"6000\">http://our.umbraco.org/forum/developers/api-questions/12248-Get-value-from-base- into-database</p><p  id=\"6001\">http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205--- comments</p><p  id=\"6002\"><a href=\"http://our.umbraco.org/wiki\" class=\"a\" target=\"_blank\" id=\"6003\">Wiki </a><a href=\"http://our.umbraco.org/wiki\" target=\"_blank\" id=\"6004\">http://our.umbraco.org/wiki</a></p><p  id=\"6005\">http://our.umbraco.org/wiki/recommendations/recommended-reading-for-net- developers</p><p  id=\"6006\"><br id=\"6007\"></p></div><h2  id=\"heading6008\" class=\"heading6008\"><a name=\"bookmark76\" id=\"6009\" >Extra files:</a></h2><div id=\"contentheading6008\" ><h3  id=\"heading6010\" class=\"heading6010\"><a name=\"bookmark77\" id=\"6011\" >Web grid.</a></h3><div id=\"contentheading6010\" ><p  id=\"6012\"><span id=\"6013\"><img width=\"599\" height=\"371\" alt=\"image\" src=\"Image_136.jpg\" id=\"6014\"></span></p><h3  id=\"6015\"><a name=\"bookmark78\" id=\"6016\">File “VcardControl.ascx”</a></h3><p  id=\"6017\"><span class=\"s65\"  id=\"6018\">&lt;%</span><span class=\"s66\" id=\"6019\">@ </span><span class=\"s67\" id=\"6020\">Control </span><span class=\"s68\" id=\"6021\">Language</span><span class=\"s66\" id=\"6022\">=\"C#\" </span><span class=\"s68\" id=\"6023\">AutoEventWireup</span><span class=\"s66\" id=\"6024\">=\"true\" </span><span class=\"s68\" id=\"6025\">CodeBehind</span><span class=\"s66\" id=\"6026\">=\"VcardControl.ascx.cs\" </span><span class=\"s68\" id=\"6027\">Inherits</span><span class=\"s66\" id=\"6028\">=\"VCardGenerator.VcardControl\" </span><span class=\"s65\"  id=\"6029\">%&gt;</span></p><p  id=\"6030\"><br id=\"6031\"></p><p class=\"s66\"  id=\"6032\">&lt;<span  id=\"6033\">form </span><span  id=\"6034\">id</span>=\"FormVcard\" <span  id=\"6035\">runat</span>=\"server\"&gt;</p><p class=\"s66\"  id=\"6036\">&lt;<span  id=\"6037\">div </span><span  id=\"6038\">class</span>=\"errorMessage\"&gt;</p><p class=\"s66\"  id=\"6039\">&lt;<span  id=\"6040\">asp</span>:<span  id=\"6041\">Label </span><span  id=\"6042\">ID</span>=\"LabelNotice\" <span  id=\"6043\">runat</span>=\"server\" <span  id=\"6044\">Text</span>=\"\"&gt;&lt;/<span  id=\"6045\">asp</span>:<span  id=\"6046\">Label</span>&gt;</p><p class=\"s66\"  id=\"6047\">&lt;<span  id=\"6048\">asp</span>:<span  id=\"6049\">ValidationSummary </span><span  id=\"6050\">ID</span>=\"ValidationSummary\" <span  id=\"6051\">runat</span>=\"server\" <span  id=\"6052\">ForeColor</span>=\"#FF6666\"</p><p class=\"s66\"  id=\"6053\">/&gt;</p><p class=\"s66\"  id=\"6054\">&lt;/<span  id=\"6055\">div</span>&gt;</p><p class=\"s66\"  id=\"6056\">&lt;<span  id=\"6057\">table </span>&gt;</p><p class=\"s66\"  id=\"6058\">&lt;<span  id=\"6059\">tr </span><span  id=\"6060\">class</span>=\"name\"&gt;</p><p class=\"s66\"  id=\"6061\">&lt;<span  id=\"6062\">td</span>&gt; <span  id=\"6063\">Name: </span>&lt;/<span  id=\"6064\">td</span>&gt;&lt;<span  id=\"6065\">td</span>&gt;&lt;<span  id=\"6066\">asp</span>:<span  id=\"6067\">TextBox </span><span  id=\"6068\">ID</span>=\"TextBoxName\" <span  id=\"6069\">runat</span>=server&gt;&lt;/<span  id=\"6070\">asp</span>:<span  id=\"6071\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6072\">&lt;<span  id=\"6073\">asp</span>:<span  id=\"6074\">RequiredFieldValidator </span><span  id=\"6075\">ID</span>=\"RequiredFieldValidatorName\" <span  id=\"6076\">runat</span>=\"server\" <span  id=\"6077\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"6078\">ErrorMessage</span>=\"Name Required\" <span  id=\"6079\">Font-</span></p><p class=\"s68\"  id=\"6080\">Size<span  id=\"6081\">=\"Small\"</span></p><p class=\"s66\"  id=\"6082\"><span  id=\"6083\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span  id=\"6084\">asp</span>:<span  id=\"6085\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\"  id=\"6086\">&lt;<span  id=\"6087\">asp</span>:<span  id=\"6088\">CustomValidator </span><span  id=\"6089\">ID</span>=\"CustomValidatorName\" <span  id=\"6090\">runat</span>=\"server\" <span  id=\"6091\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"6092\">ErrorMessage</span>=\"Name is not Valid\" <span  id=\"6093\">ForeColor</span>=\"#CC0000\"</p><p class=\"s66\"  id=\"6094\"><span  id=\"6095\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span  id=\"6096\">*</span>&lt;/<span  id=\"6097\">asp</span>:<span  id=\"6098\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6099\">&lt;/<span  id=\"6100\">td</span>&gt;</p><p class=\"s66\"  id=\"6101\">&lt;/<span  id=\"6102\">tr</span>&gt;</p><p class=\"s66\"  id=\"6103\">&lt;<span  id=\"6104\">tr </span><span  id=\"6105\">class</span>=\"street\"&gt;</p><p class=\"s66\"  id=\"6106\">&lt;<span  id=\"6107\">td</span>&gt; <span  id=\"6108\">Street:</span>&lt;/<span  id=\"6109\">td</span>&gt;&lt;<span  id=\"6110\">td</span>&gt; &lt;<span  id=\"6111\">asp</span>:<span  id=\"6112\">TextBox </span><span  id=\"6113\">ID</span>=\"TextBoxStreet\" <span  id=\"6114\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6115\">asp</span>:<span  id=\"6116\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6117\">&lt;/<span  id=\"6118\">td</span>&gt;</p><p class=\"s66\"  id=\"6119\">&lt;/<span  id=\"6120\">tr</span>&gt;</p><p class=\"s66\"  id=\"6121\">&lt;<span  id=\"6122\">tr </span><span  id=\"6123\">class</span>=\"postalCode\"&gt;</p><p class=\"s66\"  id=\"6124\">&lt;<span  id=\"6125\">td</span>&gt; <span  id=\"6126\">PostalCode:</span>&lt;/<span  id=\"6127\">td</span>&gt;&lt;<span  id=\"6128\">td</span>&gt; &lt;<span  id=\"6129\">asp</span>:<span  id=\"6130\">TextBox </span><span  id=\"6131\">ID</span>=\"TextBoxPostalCode\" <span  id=\"6132\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6133\">asp</span>:<span  id=\"6134\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6135\">&lt;<span  id=\"6136\">asp</span>:<span  id=\"6137\">CustomValidator </span><span  id=\"6138\">ID</span>=\"CustomValidatorPostalCode\" <span  id=\"6139\">runat</span>=\"server\" <span  id=\"6140\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6141\">ErrorMessage<span  id=\"6142\">=\"Postal Code 4 digit\" </span>ControlToValidate<span  id=\"6143\">=\"TextBoxPostalCode\"</span></p><p  id=\"6144\"><br id=\"6145\"></p><p class=\"s66\"  id=\"6146\"><span  id=\"6147\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span  id=\"6148\">*</span>&lt;/<span  id=\"6149\">asp</span>:<span  id=\"6150\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6151\">&lt;/<span  id=\"6152\">td</span>&gt;</p><p class=\"s66\"  id=\"6153\">&lt;/<span  id=\"6154\">tr</span>&gt;</p><p class=\"s66\"  id=\"6155\">&lt;<span  id=\"6156\">tr </span><span  id=\"6157\">class</span>=\"city\"&gt;</p><p class=\"s66\"  id=\"6158\">&lt;<span  id=\"6159\">td</span>&gt; <span  id=\"6160\">City:</span>&lt;/<span  id=\"6161\">td</span>&gt;&lt;<span  id=\"6162\">td</span>&gt; &lt;<span  id=\"6163\">asp</span>:<span  id=\"6164\">TextBox </span><span  id=\"6165\">ID</span>=\"TextBoxCity\" <span  id=\"6166\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6167\">asp</span>:<span  id=\"6168\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6169\">&lt;/<span  id=\"6170\">tr</span>&gt;</p><p class=\"s66\"  id=\"6171\">&lt;<span  id=\"6172\">tr </span><span  id=\"6173\">class</span>=\"country\"&gt;</p><p class=\"s66\"  id=\"6174\">&lt;<span  id=\"6175\">td</span>&gt; <span  id=\"6176\">Country:</span>&lt;/<span  id=\"6177\">td</span>&gt;&lt;<span  id=\"6178\">td</span>&gt; &lt;<span  id=\"6179\">asp</span>:<span  id=\"6180\">TextBox </span><span  id=\"6181\">ID</span>=\"TextBoxCountry\" <span  id=\"6182\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6183\">asp</span>:<span  id=\"6184\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6185\">&lt;<span  id=\"6186\">asp</span>:<span  id=\"6187\">CustomValidator </span><span  id=\"6188\">ID</span>=\"CustomValidatorCountry\" <span  id=\"6189\">runat</span>=\"server\" <span  id=\"6190\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6191\">ErrorMessage<span  id=\"6192\">=\"Country Not Valid\" </span>ControlToValidate<span  id=\"6193\">=\"TextBoxCountry\"</span></p><p  id=\"6194\"><br id=\"6195\"></p><p class=\"s66\"  id=\"6196\"><span  id=\"6197\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span  id=\"6198\">*</span>&lt;/<span  id=\"6199\">asp</span>:<span  id=\"6200\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6201\">&lt;/<span  id=\"6202\">td</span>&gt;</p><p class=\"s66\"  id=\"6203\">&lt;/<span  id=\"6204\">tr</span>&gt;</p><p class=\"s66\"  id=\"6205\">&lt;<span  id=\"6206\">tr </span><span  id=\"6207\">class</span>=\"phone\"&gt;</p><p class=\"s66\"  id=\"6208\">&lt;<span  id=\"6209\">td</span>&gt; <span  id=\"6210\">Phone:</span><span  id=\"6211\">&amp;nbsp; </span><span  id=\"6212\">+45</span>&lt;/<span  id=\"6213\">td</span>&gt;&lt;<span  id=\"6214\">td</span>&gt;&lt;<span  id=\"6215\">asp</span>:<span  id=\"6216\">TextBox </span><span  id=\"6217\">ID</span>=\"TextBoxPhone\" <span  id=\"6218\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6219\">asp</span>:<span  id=\"6220\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6221\">&lt;<span  id=\"6222\">asp</span>:<span  id=\"6223\">CustomValidator </span><span  id=\"6224\">ID</span>=\"CustomValidatorPhone\" <span  id=\"6225\">runat</span>=\"server\" <span  id=\"6226\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6227\">ErrorMessage<span  id=\"6228\">=\"Phone must be 8 digit, Without +45 \" </span>ControlToValidate<span  id=\"6229\">=\"TextBoxPhone\"</span></p><p  id=\"6230\"><br id=\"6231\"></p><p class=\"s66\"  id=\"6232\"><span  id=\"6233\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span  id=\"6234\">*</span>&lt;/<span  id=\"6235\">asp</span>:<span  id=\"6236\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6237\">&lt;/<span  id=\"6238\">td</span>&gt;</p><p  id=\"6239\"><br id=\"6240\"></p><p class=\"s66\"  id=\"6241\">&lt;/<span  id=\"6242\">tr</span>&gt;</p><p class=\"s66\"  id=\"6243\">&lt;<span  id=\"6244\">tr </span><span  id=\"6245\">class</span>=\"email\"&gt;</p><p class=\"s66\"  id=\"6246\">&lt;<span  id=\"6247\">td</span>&gt; <span  id=\"6248\">Email: </span>&lt;/<span  id=\"6249\">td</span>&gt;&lt;<span  id=\"6250\">td</span>&gt;&lt;<span  id=\"6251\">asp</span>:<span  id=\"6252\">TextBox </span><span  id=\"6253\">ID</span>=\"TextBoxEmail\" <span  id=\"6254\">runat</span>=\"server\" <span  id=\"6255\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span  id=\"6256\">asp</span>:<span  id=\"6257\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6258\">&lt;<span  id=\"6259\">asp</span>:<span  id=\"6260\">RequiredFieldValidator </span><span  id=\"6261\">ID</span>=\"RequiredFieldValidatorEmail\" <span  id=\"6262\">runat</span>=\"server\" <span  id=\"6263\">Font-Size</span>=\"Small\"</p><p class=\"s66\"  id=\"6264\"><span  id=\"6265\">ErrorMessage</span>=\"Email Required\" <span  id=\"6266\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span  id=\"6267\">Email Required</span>&lt;/<span  id=\"6268\">asp</span>:<span  id=\"6269\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\"  id=\"6270\">&lt;<span  id=\"6271\">asp</span>:<span  id=\"6272\">CustomValidator </span><span  id=\"6273\">ID</span>=\"CustomValidatorEmail\" <span  id=\"6274\">runat</span>=\"server\" <span  id=\"6275\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6276\">ErrorMessage<span  id=\"6277\">=\"Email Not Valid\" </span>ControlToValidate<span  id=\"6278\">=\"TextBoxEmail\"</span></p><p  id=\"6279\"><br id=\"6280\"></p><p class=\"s66\"  id=\"6281\"><span  id=\"6282\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span  id=\"6283\">*</span>&lt;/<span  id=\"6284\">asp</span>:<span  id=\"6285\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6286\">&lt;/<span  id=\"6287\">td</span>&gt;</p><p class=\"s66\"  id=\"6288\">&lt;/<span  id=\"6289\">tr</span>&gt;</p><p class=\"s66\"  id=\"6290\">&lt;<span  id=\"6291\">tr </span><span  id=\"6292\">class</span>=\"website\"&gt;</p><p class=\"s66\"  id=\"6293\">&lt;<span  id=\"6294\">td</span>&gt; <span  id=\"6295\">WebSite:</span>&lt;/<span  id=\"6296\">td</span>&gt;&lt;<span  id=\"6297\">td</span>&gt; &lt;<span  id=\"6298\">asp</span>:<span  id=\"6299\">TextBox </span><span  id=\"6300\">ID</span>=\"TextBoxWebsite\" <span  id=\"6301\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6302\">asp</span>:<span  id=\"6303\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6304\">&lt;<span  id=\"6305\">asp</span>:<span  id=\"6306\">CustomValidator </span><span  id=\"6307\">ID</span>=\"CustomValidatorWebSite\" <span  id=\"6308\">runat</span>=\"server\" <span  id=\"6309\">ErrorMessage</span>=\"Website not valid\" <span  id=\"6310\">ControlToValidate</span>=\"TextBoxWebsite\"</p><p  id=\"6311\"><br id=\"6312\"></p><p class=\"s66\"  id=\"6313\"><span  id=\"6314\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span  id=\"6315\">*</span>&lt;/<span  id=\"6316\">asp</span>:<span  id=\"6317\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6318\">&lt;/<span  id=\"6319\">td</span>&gt;</p><p class=\"s66\"  id=\"6320\">&lt;/<span  id=\"6321\">tr</span>&gt;</p><p class=\"s66\"  id=\"6322\">&lt;<span  id=\"6323\">tr </span><span  id=\"6324\">class</span>=\"photo\"&gt;</p><p class=\"s66\"  id=\"6325\">&lt;<span  id=\"6326\">td</span>&gt; <span  id=\"6327\">Photo:</span>&lt;/<span  id=\"6328\">td</span>&gt;&lt;<span  id=\"6329\">td</span>&gt; &lt;<span  id=\"6330\">asp</span>:<span  id=\"6331\">FileUpload </span><span  id=\"6332\">ID</span>=\"FileUploadPhoto\" <span  id=\"6333\">runat</span>=\"server\" /&gt;</p><p class=\"s66\"  id=\"6334\">&lt;/<span  id=\"6335\">td</span>&gt;</p><p class=\"s66\"  id=\"6336\">&lt;/<span  id=\"6337\">tr</span>&gt;</p><p class=\"s66\"  id=\"6338\">&lt;<span  id=\"6339\">tr </span>&gt;</p><p class=\"s66\"  id=\"6340\">&lt;<span  id=\"6341\">td</span>&gt;</p><p class=\"s66\"  id=\"6342\"><span  id=\"6343\">&amp;nbsp;</span>&lt;/<span  id=\"6344\">td</span>&gt; &lt;<span  id=\"6345\">td</span>&gt; &lt;<span  id=\"6346\">asp</span>:<span  id=\"6347\">Button </span><span  id=\"6348\">ID</span>=\"ButtonCreate\" <span  id=\"6349\">runat</span>=\"server\" <span  id=\"6350\">Text</span>=\"Create\"</p><p class=\"s66\"  id=\"6351\"><span  id=\"6352\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span  id=\"6353\">td</span>&gt;</p><p class=\"s66\"  id=\"6354\">&lt;/<span  id=\"6355\">tr</span>&gt;</p><p  id=\"6356\"><br id=\"6357\"></p><p class=\"s66\"  id=\"6358\">&lt;/<span  id=\"6359\">table</span>&gt;</p><p class=\"s66\"  id=\"6360\">&lt;/<span  id=\"6361\">form</span>&gt;</p><p  id=\"6362\"><a name=\"a68\" id=\"6363\"><span class=\"p\" id=\"6364\">File </span></a><span class=\"s128\"  id=\"6365\">VcardControl.ascx.cs</span></p><p  id=\"6366\"><br id=\"6367\"></p><p class=\"s66\"  id=\"6368\">using <span  id=\"6369\">System;</span></p><p class=\"s66\"  id=\"6370\">using <span  id=\"6371\">System.Collections.Generic; </span>using <span  id=\"6372\">System.Linq;</span></p><p class=\"s66\"  id=\"6373\">using <span  id=\"6374\">System.Web;</span></p><p class=\"s66\"  id=\"6375\">using <span  id=\"6376\">umbraco.DataLayer.SqlHelpers.SqlServer; </span>using <span  id=\"6377\">umbraco.DataLayer;</span></p><p class=\"s66\"  id=\"6378\">using <span  id=\"6379\">umbraco;</span></p><p class=\"s66\"  id=\"6380\">using <span  id=\"6381\">System.Data.SqlClient;</span></p><p class=\"s66\"  id=\"6382\">using <span  id=\"6383\">System.Text.RegularExpressions; </span>using <span  id=\"6384\">System.Web.UI.WebControls; </span>using <span  id=\"6385\">System.IO;</span></p><p class=\"s66\"  id=\"6386\">using <span  id=\"6387\">System.Text; </span>using <span  id=\"6388\">System.Net.Mail; </span>using <span  id=\"6389\">System.Net;</span></p><p  id=\"6390\"><br id=\"6391\"></p><p class=\"s66\"  id=\"6392\">namespace <span  id=\"6393\">VCardGenerator</span></p><p class=\"s70\"  id=\"6394\">{</p><p class=\"s98\"  id=\"6395\"><span  id=\"6396\">public partial class </span>VcardControl <span  id=\"6397\">: System.Web.UI.</span>UserControl</p><p class=\"s70\"  id=\"6398\">{</p><p class=\"s103\"  id=\"6399\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6400\">/// <span  id=\"6401\">Handles the Load event of the Page control.</span></p><p class=\"s103\"  id=\"6402\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6403\">/// &lt;param name=\"sender\"&gt;<span  id=\"6404\">The source of the event.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6405\">/// &lt;param name=\"e\"&gt;<span  id=\"6406\">The </span>&lt;see cref=\"System.EventArgs\"/&gt; <span  id=\"6407\">instance containing the event data.</span>&lt;/param&gt;</p><p class=\"s70\"  id=\"6408\"><span  id=\"6409\">protected void </span>Page_Load(<span  id=\"6410\">object </span>sender, <span  id=\"6411\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6412\">{</p><p  id=\"6413\"><br id=\"6414\"></p><p class=\"s70\"  id=\"6415\">}</p><p  id=\"6416\"><br id=\"6417\"></p><p class=\"s70\"  id=\"6418\"><span  id=\"6419\">protected void </span>ButtonCreate_Click(<span  id=\"6420\">object </span>sender, <span  id=\"6421\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6422\">{</p><p class=\"s66\"  id=\"6423\">if <span  id=\"6424\">(Page.IsValid)</span></p><p class=\"s70\"  id=\"6425\">{</p><p class=\"s70\"  id=\"6426\"><span  id=\"6427\">Guid </span>id = <span  id=\"6428\">Guid</span>.NewGuid(); <span  id=\"6429\">string </span>imgFile = <span  id=\"6430\">\"noimage\"</span>;</p><p class=\"s66\"  id=\"6431\">string <span  id=\"6432\">name = RemoveSpecialCharacter(TextBoxName.Text);</span></p><p class=\"s66\"  id=\"6433\">string <span  id=\"6434\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"6435\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"6436\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"6437\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"6438\">string <span  id=\"6439\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"6440\">string <span  id=\"6441\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"6442\">phone = RemoveSpecialCharacter(TextBoxPhone.Text); </span>if <span  id=\"6443\">(FileUploadPhoto.PostedFile != </span>null <span  id=\"6444\">&amp;&amp;</span></p><p class=\"s70\"  id=\"6445\">FileUploadPhoto.PostedFile.ContentLength &gt; 0)</p><p class=\"s70\"  id=\"6446\">{</p><p class=\"s70\"  id=\"6447\"><span  id=\"6448\">string </span>guid = id.ToString(<span  id=\"6449\">\"N\"</span>);</p><p class=\"s70\"  id=\"6450\"><span  id=\"6451\">string </span>imageDirectory = Server.MapPath(<span  id=\"6452\">\"vcardimage\"</span>); <span  id=\"6453\">if </span>(<span  id=\"6454\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\"  id=\"6455\">{</p><p class=\"s70\"  id=\"6456\">FileUploadPhoto.PostedFile.SaveAs( Server.MapPath(<span  id=\"6457\">\"/vcardimage/\" </span>+ guid +</p><p class=\"s70\"  id=\"6458\">FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"6459\">}</p><p class=\"s66\"  id=\"6460\">else</p><p class=\"s70\"  id=\"6461\">{</p><p class=\"s70\"  id=\"6462\"><span  id=\"6463\">Directory</span>.CreateDirectory(Server.MapPath(<span  id=\"6464\">\"vcardimage\"</span>));</p><p class=\"s70\"  id=\"6465\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span  id=\"6466\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"6467\">}</p><p  id=\"6468\"><br id=\"6469\"></p><p class=\"s70\"  id=\"6470\">imgFile = imageDirectory + <span  id=\"6471\">\"/\" </span>+ guid + FileUploadPhoto.FileName; SendVcard(<span  id=\"6472\">\"Your Vcard:\"</span>,</p><p class=\"s99\"  id=\"6473\">\"Your vcard is ready. Please open Attachment. \\n Thank you very much \\n Semic Provider\"<span  id=\"6474\">,</span></p><p class=\"s70\"  id=\"6475\">email,</p><p class=\"s70\"  id=\"6476\">GenerateVcard(name, streetaddress, zip, city, country,</p><p class=\"s70\"  id=\"6477\">email, phone, web, imgFile));</p><p class=\"s70\"  id=\"6478\">LabelNotice.Text = <span  id=\"6479\">\"VCard has been sent to \" </span>+ email;</p><p class=\"s70\"  id=\"6480\">}</p><p class=\"s66\"  id=\"6481\">else</p><p class=\"s70\"  id=\"6482\">{</p><p class=\"s70\"  id=\"6483\">SendVcard(<span  id=\"6484\">\"Vcard:\"</span>, <span  id=\"6485\">\"Your vcard is ready. Please open Attachment.</span></p><p class=\"s99\"  id=\"6486\">\\n Thank you very much \\n Semic Provider\"<span  id=\"6487\">,</span></p><p class=\"s70\"  id=\"6488\">email,</p><p class=\"s70\"  id=\"6489\">GenerateVcard(name, streetaddress, zip, city, country, email, phone, web, imgFile));</p><p class=\"s70\"  id=\"6490\">LabelNotice.Text = <span  id=\"6491\">\"VCard has been sent to \" </span>+ email;</p><p  id=\"6492\"><br id=\"6493\"></p><p class=\"s70\"  id=\"6494\">imgFile);</p><p  id=\"6495\"><br id=\"6496\"></p><p class=\"s70\"  id=\"6497\">}</p><p class=\"s70\"  id=\"6498\">}</p><p class=\"s70\"  id=\"6499\">InsertTable(name, streetaddress, zip, country, phone, email, web,</p><p  id=\"6500\"><br id=\"6501\"></p><p class=\"s70\"  id=\"6502\">}</p><p  id=\"6503\"><br id=\"6504\"></p><p  id=\"6505\"><br id=\"6506\"></p><p class=\"s103\"  id=\"6507\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6508\">/// <span  id=\"6509\">Generates the vcard.</span></p><p class=\"s103\"  id=\"6510\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6511\">/// &lt;param name=\"firstName\"&gt;<span  id=\"6512\">The first name.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6513\">/// &lt;param name=\"streetAddress\"&gt;<span  id=\"6514\">The street address.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6515\">/// &lt;param name=\"zip\"&gt;<span  id=\"6516\">The zip.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6517\">/// &lt;param name=\"city\"&gt;<span  id=\"6518\">The city.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6519\">/// &lt;param name=\"country\"&gt;<span  id=\"6520\">The country.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6521\">/// &lt;param name=\"email\"&gt;<span  id=\"6522\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6523\">/// &lt;param name=\"phone\"&gt;<span  id=\"6524\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6525\">/// &lt;param name=\"web\"&gt;<span  id=\"6526\">The web.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6527\">/// &lt;param name=\"image\"&gt;<span  id=\"6528\">The image.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6529\">/// &lt;returns&gt; <span  id=\"6530\">vcard string </span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6531\">public string <span  id=\"6532\">GenerateVcard(</span>string <span  id=\"6533\">firstName, </span>string <span  id=\"6534\">streetAddress, </span>string <span  id=\"6535\">zip, </span>string <span  id=\"6536\">city, </span>string <span  id=\"6537\">country, </span>string <span  id=\"6538\">email, </span>string <span  id=\"6539\">phone, </span>string <span  id=\"6540\">web, </span>string <span  id=\"6541\">image)</span></p><p class=\"s70\"  id=\"6542\">{</p><p class=\"s70\"  id=\"6543\"><span  id=\"6544\">string </span>url = <span  id=\"6545\">\"\"</span>; <span  id=\"6546\">if </span>(web.Length &gt; 0)</p><p class=\"s70\"  id=\"6547\">{</p><p class=\"s70\"  id=\"6548\">url = <span  id=\"6549\">\"http://\" </span>+ web.Replace(<span  id=\"6550\">\"http\"</span>, <span  id=\"6551\">\"\"</span>);</p><p class=\"s70\"  id=\"6552\">}</p><p class=\"s70\"  id=\"6553\"><span  id=\"6554\">var </span>vcardStringBuilder = <span  id=\"6555\">new </span><span  id=\"6556\">StringBuilder</span>(); vcardStringBuilder.AppendLine(<span  id=\"6557\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"6558\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"6559\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"6560\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"6561\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"6562\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"6563\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"6564\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"6565\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"6566\">\"URL;type=pref:\" </span>+ url);</p><p class=\"s70\"  id=\"6567\">vcardStringBuilder.AppendLine(<span  id=\"6568\">\"EMAIL:\" </span>+ email); <span  id=\"6569\">if </span>(image != <span  id=\"6570\">\"noimage\"</span>)</p><p class=\"s70\"  id=\"6571\">{</p><p class=\"s70\"  id=\"6572\">vcardStringBuilder.AppendLine(<span  id=\"6573\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"6574\">\":\"</span>);</p><p  id=\"6575\"><br id=\"6576\"></p><p class=\"s70\"  id=\"6577\">vcardStringBuilder.AppendLine(<span  id=\"6578\">Convert</span>.ToBase64String(ReadImage(image))); vcardStringBuilder.AppendLine(<span  id=\"6579\">string</span>.Empty);</p><p class=\"s70\"  id=\"6580\">}</p><p class=\"s70\"  id=\"6581\">vcardStringBuilder.AppendLine(<span  id=\"6582\">\"END:VCARD\"</span>); <span  id=\"6583\">return </span>vcardStringBuilder.ToString();</p><p class=\"s70\"  id=\"6584\">}</p><p  id=\"6585\"><br id=\"6586\"></p><p class=\"s103\"  id=\"6587\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6588\">/// <span  id=\"6589\">Reads the image.</span></p><p class=\"s103\"  id=\"6590\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6591\">/// &lt;param name=\"image\"&gt;<span  id=\"6592\">The image.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6593\">/// &lt;returns&gt; <span  id=\"6594\">image bytes </span>&lt;/returns&gt; <span  id=\"6595\">public byte</span><span  id=\"6596\">[] ReadImage(</span><span  id=\"6597\">string </span><span  id=\"6598\">image)</span></p><p class=\"s70\"  id=\"6599\">{</p><p class=\"s66\"  id=\"6600\">try</p><p class=\"s70\"  id=\"6601\">{</p><p  id=\"6602\"><br id=\"6603\"></p><p class=\"s70\"  id=\"6604\">}</p><p  id=\"6605\"><br id=\"6606\"></p><p class=\"s66\"  id=\"6607\">return <span  id=\"6608\">File</span><span  id=\"6609\">.ReadAllBytes(image);</span></p><p class=\"s70\"  id=\"6610\"><span  id=\"6611\">catch </span>(<span  id=\"6612\">Exception </span>ex)</p><p class=\"s70\"  id=\"6613\">{</p><p class=\"s70\"  id=\"6614\"><span  id=\"6615\">return </span><span  id=\"6616\">File</span>.ReadAllBytes(Server.MapPath(<span  id=\"6617\">\"media/logo-vcard.png\"</span>));</p><p class=\"s70\"  id=\"6618\">}</p><p class=\"s70\"  id=\"6619\">}</p><p  id=\"6620\"><br id=\"6621\"></p><p class=\"s103\"  id=\"6622\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6623\">/// <span  id=\"6624\">Sends the vcard.</span></p><p class=\"s103\"  id=\"6625\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6626\">/// &lt;param name=\"subject\"&gt;<span  id=\"6627\">The subject.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6628\">/// &lt;param name=\"body\"&gt;<span  id=\"6629\">The body.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6630\">/// &lt;param name=\"email\"&gt;<span  id=\"6631\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6632\">/// &lt;param name=\"file\"&gt;<span  id=\"6633\">The file.</span>&lt;/param&gt;</p><p class=\"s66\"  id=\"6634\">private void <span  id=\"6635\">SendVcard(</span>string <span  id=\"6636\">subject, </span>string <span  id=\"6637\">body, </span>string <span  id=\"6638\">email, </span>string <span  id=\"6639\">file)</span></p><p class=\"s70\"  id=\"6640\">{</p><p class=\"s70\"  id=\"6641\"><span  id=\"6642\">byte</span>[] byteArray = <span  id=\"6643\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"6644\">try</span></p><p class=\"s70\"  id=\"6645\">{</p><p  id=\"6646\"><br id=\"6647\"></p><p class=\"s98\"  id=\"6648\">MemoryStream <span  id=\"6649\">stream = </span><span  id=\"6650\">new </span>MemoryStream<span  id=\"6651\">(byteArray); </span>MailMessage <span  id=\"6652\">message = </span><span  id=\"6653\">new </span>MailMessage<span  id=\"6654\">(); message.Subject = subject;</span></p><p class=\"s70\"  id=\"6655\">message.Body = body;</p><p class=\"s70\"  id=\"6656\">message.From = <span  id=\"6657\">new </span><span  id=\"6658\">MailAddress</span>(<a href=\"mailto:jeevan_2np@yahoo.com\" class=\"s130\" target=\"_blank\" id=\"6659\">\"sender id example: </a><span  id=\"6660\">jeevan_2np@yahoo.com\"</span>);</p><p class=\"s70\"  id=\"6661\">message.To.Add(email);</p><p class=\"s98\"  id=\"6662\">SmtpClient <span  id=\"6663\">client = </span><span  id=\"6664\">new </span>SmtpClient<span  id=\"6665\">();</span></p><p class=\"s70\"  id=\"6666\"><span  id=\"6667\">Attachment </span>vcard = <span  id=\"6668\">new </span><span  id=\"6669\">Attachment</span>(stream, <span  id=\"6670\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"6671\">client.Host = <span  id=\"6672\">\"smtp address\"</span>; client.Port = smtp port number;</p><p class=\"s70\"  id=\"6673\">client.Credentials = <span  id=\"6674\">new </span><span  id=\"6675\">NetworkCredential</span>(<span  id=\"6676\">\"user id \"</span>, <span  id=\"6677\">\"password\"</span>); client.EnableSsl = <span  id=\"6678\">true</span>;</p><p class=\"s70\"  id=\"6679\">client.Send(message);</p><p class=\"s70\"  id=\"6680\">}</p><p class=\"s66\"  id=\"6681\">catch</p><p class=\"s70\"  id=\"6682\">{</p><p class=\"s70\"  id=\"6683\">LabelNotice.Text = <span  id=\"6684\">\"Internal Error\"</span>;</p><p class=\"s70\"  id=\"6685\">DownloadVcard(byteArray);</p><p class=\"s70\"  id=\"6686\">}</p><p  id=\"6687\"><br id=\"6688\"></p><p class=\"s70\"  id=\"6689\">}</p><p  id=\"6690\"><br id=\"6691\"></p><p class=\"s70\"  id=\"6692\"><span  id=\"6693\">protected void </span>CustomValidatorName_ServerValidate(<span  id=\"6694\">object </span>source, <span  id=\"6695\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6696\">{</p><p class=\"s70\"  id=\"6697\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s70\"  id=\"6698\">}</p><p  id=\"6699\"><br id=\"6700\"></p><p class=\"s70\"  id=\"6701\"><span  id=\"6702\">protected void </span>CustomValidatorPostalCode_ServerValidate(<span  id=\"6703\">object </span>source, <span  id=\"6704\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6705\">{</p><p class=\"s66\"  id=\"6706\">try</p><p class=\"s70\"  id=\"6707\">{</p><p  id=\"6708\"><br id=\"6709\"></p><p class=\"s66\"  id=\"6710\">if <span  id=\"6711\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"6712\">{</p><p class=\"s70\"  id=\"6713\">args.IsValid = RemoveSpecialCharacter(args.Value).Length == 4;</p><p class=\"s70\"  id=\"6714\">}</p><p class=\"s66\"  id=\"6715\">else</p><p class=\"s70\"  id=\"6716\">{</p><p class=\"s70\"  id=\"6717\">args.IsValid = <span  id=\"6718\">true</span>;</p><p class=\"s70\"  id=\"6719\">}</p><p class=\"s70\"  id=\"6720\">}</p><p class=\"s66\"  id=\"6721\">catch <span  id=\"6722\">{ args.IsValid = </span>false<span  id=\"6723\">; }</span></p><p class=\"s70\"  id=\"6724\">}</p><p  id=\"6725\"><br id=\"6726\"></p><p class=\"s70\"  id=\"6727\"><span  id=\"6728\">protected void </span>CustomValidatorCountry_ServerValidate(<span  id=\"6729\">object </span>source, <span  id=\"6730\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6731\">{</p><p  id=\"6732\"><br id=\"6733\"></p><p class=\"s70\"  id=\"6734\">}</p><p  id=\"6735\"><br id=\"6736\"></p><p class=\"s70\"  id=\"6737\"><span  id=\"6738\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"6739\">object </span>source, <span  id=\"6740\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6741\">{</p><p class=\"s66\"  id=\"6742\">if <span  id=\"6743\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"6744\">{</p><p  id=\"6745\"><br id=\"6746\"></p><p class=\"s70\"  id=\"6747\">}</p><p class=\"s66\"  id=\"6748\">else</p><p class=\"s70\"  id=\"6749\">{</p><p  id=\"6750\"><br id=\"6751\"></p><p class=\"s70\"  id=\"6752\">}</p><p class=\"s70\"  id=\"6753\">}</p><p class=\"s70\"  id=\"6754\">args.IsValid = ValidatePhone(args.Value);</p><p  id=\"6755\"><br id=\"6756\"></p><p class=\"s70\"  id=\"6757\">args.IsValid = <span  id=\"6758\">true</span>;</p><p  id=\"6759\"><br id=\"6760\"></p><p class=\"s70\"  id=\"6761\"><span  id=\"6762\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"6763\">object </span>source, <span  id=\"6764\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6765\">{</p><p class=\"s70\"  id=\"6766\">args.IsValid = ValidateEmail(args.Value.ToString());</p><p class=\"s70\"  id=\"6767\">}</p><p  id=\"6768\"><br id=\"6769\"></p><p class=\"s70\"  id=\"6770\"><span  id=\"6771\">protected void </span>CustomValidatorWebSite_ServerValidate(<span  id=\"6772\">object </span>source, <span  id=\"6773\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6774\">{</p><p  id=\"6775\"><br id=\"6776\"></p><p class=\"s70\"  id=\"6777\">}</p><p  id=\"6778\"><br id=\"6779\"></p><p class=\"s103\"  id=\"6780\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6781\">/// <span  id=\"6782\">Validates the phone.</span></p><p class=\"s103\"  id=\"6783\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6784\">/// &lt;param name=\"input\"&gt;<span  id=\"6785\">The input.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6786\">/// &lt;returns&gt; <span  id=\"6787\">true if it valid </span>&lt;/returns&gt; <span  id=\"6788\">public bool </span><span  id=\"6789\">ValidatePhone(</span><span  id=\"6790\">string </span><span  id=\"6791\">input)</span></p><p class=\"s70\"  id=\"6792\">{</p><p class=\"s70\"  id=\"6793\"><span  id=\"6794\">if </span>(input.Length != 8) { <span  id=\"6795\">return false</span>; } <span  id=\"6796\">Regex </span>num = <span  id=\"6797\">new </span><span  id=\"6798\">Regex</span>(<span  id=\"6799\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"6800\">return <span  id=\"6801\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"6802\">}</p><p  id=\"6803\"><br id=\"6804\"></p><p class=\"s103\"  id=\"6805\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6806\">/// <span  id=\"6807\">Validates the email.</span></p><p class=\"s103\"  id=\"6808\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6809\">/// &lt;param name=\"email\"&gt;<span  id=\"6810\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6811\">/// &lt;returns&gt; <span  id=\"6812\">true on valid email </span>&lt;/returns&gt; <span  id=\"6813\">public bool </span><span  id=\"6814\">ValidateEmail(</span><span  id=\"6815\">string </span><span  id=\"6816\">email)</span></p><p class=\"s70\"  id=\"6817\">{</p><p class=\"s66\"  id=\"6818\">return <span  id=\"6819\">Regex</span><span  id=\"6820\">.IsMatch(email,</span></p><p class=\"s99\"  id=\"6821\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\"  id=\"6822\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span  id=\"6823\">+</span></p><p class=\"s99\"  id=\"6824\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a- zA-Z]{2,6}))$\"<span  id=\"6825\">);</span></p><p class=\"s70\"  id=\"6826\">}</p><p  id=\"6827\"><br id=\"6828\"></p><p class=\"s103\"  id=\"6829\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6830\">/// <span  id=\"6831\">Removes the special character.</span></p><p class=\"s103\"  id=\"6832\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6833\">/// &lt;param name=\"input\"&gt;<span  id=\"6834\">The input.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6835\">/// &lt;returns&gt; <span  id=\"6836\">secure string </span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6837\">public string <span  id=\"6838\">RemoveSpecialCharacter(</span>string <span  id=\"6839\">input)</span></p><p class=\"s70\"  id=\"6840\">{</p><p class=\"s70\"  id=\"6841\"><span  id=\"6842\">return </span><span  id=\"6843\">Regex</span>.Replace(input, <span  id=\"6844\">\"[^0-9a-zA-Z. ]+\"</span>, <span  id=\"6845\">\"\"</span>);</p><p class=\"s70\"  id=\"6846\">}</p><p  id=\"6847\"><br id=\"6848\"></p><p class=\"s70\"  id=\"6849\"><span  id=\"6850\">protected void </span>TextBoxEmail_TextChanged(<span  id=\"6851\">object </span>sender, <span  id=\"6852\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6853\">{</p><p  id=\"6854\"><br id=\"6855\"></p><p class=\"s70\"  id=\"6856\">}</p><p  id=\"6857\"><br id=\"6858\"></p><p class=\"s103\"  id=\"6859\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6860\">/// <span  id=\"6861\">Creates the table.</span></p><p class=\"s103\"  id=\"6862\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6863\">/// &lt;param name=\"tableName\"&gt;<span  id=\"6864\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6865\">/// &lt;returns&gt; <span  id=\"6866\">true if table created</span>&lt;/returns&gt; <span  id=\"6867\">private static bool </span><span  id=\"6868\">CreateTable(</span><span  id=\"6869\">string </span><span  id=\"6870\">tableName)</span></p><p class=\"s70\"  id=\"6871\">{</p><p class=\"s66\"  id=\"6872\">try</p><p class=\"s70\"  id=\"6873\">{</p><p  id=\"6874\"><br id=\"6875\"></p><p class=\"s70\"  id=\"6876\"><span  id=\"6877\">SqlConnection </span>connection = <span  id=\"6878\">new </span><span  id=\"6879\">SqlConnection</span>(<span  id=\"6880\">GlobalSettings</span>.DbDSN); <span  id=\"6881\">string </span>queryString =</p><p class=\"s99\"  id=\"6882\">@\" CREATE TABLE [vcardimage](</p><p class=\"s99\"  id=\"6883\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s99\"  id=\"6884\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s99\"  id=\"6885\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"6886\">;</span></p><p  id=\"6887\"><br id=\"6888\"></p><p class=\"s98\"  id=\"6889\">SqlCommand <span  id=\"6890\">command = </span><span  id=\"6891\">new </span>SqlCommand<span  id=\"6892\">(queryString, connection);</span></p><p class=\"s70\"  id=\"6893\">connection.Open(); command.ExecuteNonQuery(); connection.Close();</p><p class=\"s66\"  id=\"6894\">return true<span  id=\"6895\">;</span></p><p class=\"s70\"  id=\"6896\">}</p><p class=\"s66\"  id=\"6897\">catch</p><p class=\"s70\"  id=\"6898\">{</p><p class=\"s66\"  id=\"6899\">return false<span  id=\"6900\">;</span></p><p class=\"s70\"  id=\"6901\">}</p><p class=\"s70\"  id=\"6902\">}</p><p  id=\"6903\"><br id=\"6904\"></p><p class=\"s103\"  id=\"6905\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6906\">/// <span  id=\"6907\">Checks the table.</span></p><p class=\"s103\"  id=\"6908\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6909\">/// &lt;param name=\"tableName\"&gt;<span  id=\"6910\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6911\">/// &lt;returns&gt; <span  id=\"6912\">true if table exist </span>&lt;/returns&gt; <span  id=\"6913\">private static bool </span><span  id=\"6914\">CheckTable(</span><span  id=\"6915\">string </span><span  id=\"6916\">tableName)</span></p><p class=\"s70\"  id=\"6917\">{</p><p class=\"s70\"  id=\"6918\"><span  id=\"6919\">SqlServerHelper </span>sqlHeplper = <span  id=\"6920\">new </span><span  id=\"6921\">SqlServerHelper</span>(<span  id=\"6922\">GlobalSettings</span>.DbDSN); <span  id=\"6923\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"6924\">}</p><p  id=\"6925\"><br id=\"6926\"></p><p class=\"s103\"  id=\"6927\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6928\">/// <span  id=\"6929\">Inserts the table.</span></p><p class=\"s103\"  id=\"6930\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6931\">/// &lt;param name=\"name\"&gt;<span  id=\"6932\">The name.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6933\">/// &lt;param name=\"street\"&gt;<span  id=\"6934\">The street.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6935\">/// &lt;param name=\"postalcode\"&gt;<span  id=\"6936\">The postalcode.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6937\">/// &lt;param name=\"country\"&gt;<span  id=\"6938\">The country.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6939\">/// &lt;param name=\"phone\"&gt;<span  id=\"6940\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6941\">/// &lt;param name=\"email\"&gt;<span  id=\"6942\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6943\">/// &lt;param name=\"website\"&gt;<span  id=\"6944\">The website.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6945\">/// &lt;param name=\"imageguid\"&gt;<span  id=\"6946\">The imageguid.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6947\">/// &lt;returns&gt; <span  id=\"6948\">true on successul data insert</span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6949\">public static bool <span  id=\"6950\">InsertTable(</span>string <span  id=\"6951\">name, </span>string <span  id=\"6952\">street, </span>string <span  id=\"6953\">postalcode, </span>string <span  id=\"6954\">country, </span>string <span  id=\"6955\">phone, </span>string <span  id=\"6956\">email, </span>string <span  id=\"6957\">website, </span>string <span  id=\"6958\">imageguid)</span></p><p class=\"s70\"  id=\"6959\">{</p><p class=\"s70\"  id=\"6960\"><span  id=\"6961\">string </span>tableName = <span  id=\"6962\">\"vcardimage\"</span>; <span  id=\"6963\">try</span></p><p class=\"s70\"  id=\"6964\">{</p><p class=\"s66\"  id=\"6965\">if <span  id=\"6966\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"6967\">{ CreateTable(tableName); }</p><p class=\"s98\"  id=\"6968\">ISqlHelper <span  id=\"6969\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"6970\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"6971\">@\"insert into \" <span  id=\"6972\">+ tableName + </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"6973\">+</span></p><p class=\"s99\"  id=\"6974\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"6975\">@website, @imageguid, @date);\"<span  id=\"6976\">,</span></p><p class=\"s70\"  id=\"6977\">sqlHelper.CreateParameter(<span  id=\"6978\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"6979\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"6980\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"6981\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"6982\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"6983\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"6984\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"6985\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"6986\">\"@date\"</span>, <span  id=\"6987\">DateTime</span>.Now)); <span  id=\"6988\">return true</span>;</p><p class=\"s70\"  id=\"6989\">}</p><p class=\"s70\"  id=\"6990\"><span  id=\"6991\">catch </span>(<span  id=\"6992\">Exception</span>)</p><p class=\"s70\"  id=\"6993\">{</p><p class=\"s66\"  id=\"6994\">return false<span  id=\"6995\">;</span></p><p  id=\"6996\"><br id=\"6997\"></p><p  id=\"6998\"><br id=\"6999\"></p><p class=\"s70\"  id=\"7000\">}</p><p  id=\"7001\"><br id=\"7002\"></p><p class=\"s70\"  id=\"7003\">}</p><p  id=\"7004\"><br id=\"7005\"></p><p class=\"s103\"  id=\"7006\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"7007\">/// <span  id=\"7008\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"7009\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"7010\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"7011\">The vcard file.</span>&lt;/param&gt; <span  id=\"7012\">public void </span><span  id=\"7013\">DownloadVcard(</span><span  id=\"7014\">byte </span><span  id=\"7015\">[] vcardFile)</span></p><p class=\"s70\"  id=\"7016\">{</p><p class=\"s70\"  id=\"7017\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"7018\">true</span>;</p><p class=\"s70\"  id=\"7019\">Response.ContentType = <span  id=\"7020\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"7021\">\"content-disposition\"</span>, <span  id=\"7022\">\"attach;filename =</span></p><p class=\"s99\"  id=\"7023\">YourVcard.vcf\"<span  id=\"7024\">);</span></p><p class=\"s70\"  id=\"7025\">Response.Charset = <span  id=\"7026\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"7027\">HttpContext<span  id=\"7028\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"7029\">}</p><p class=\"s70\"  id=\"7030\">}</p><p class=\"s70\"  id=\"7031\">}</p><p  id=\"7032\"><br id=\"7033\"></p><p  id=\"7034\"><span class=\"s97\"  id=\"7035\">GlobalSetting.xslt</span></p><p  id=\"7036\"><br id=\"7037\"></p><p  id=\"7038\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7039\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p  id=\"7040\">&lt;xsl:stylesheet version=\"1.0\"</p><p  id=\"7041\"><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7042\">xmlns:xsl=\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml=\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library=\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon=\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes=\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath=\"urn:Exslt.ExsltMath\" xmlns:Exslt.ExsltRegularExpressions=\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings=\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets=\"urn:Exslt.ExsltSets\"</p><p  id=\"7043\">exclude-result-prefixes=\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"&gt;</p><p  id=\"7044\"><br id=\"7045\"></p><p  id=\"7046\">&lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;</p><p  id=\"7047\">&lt;xsl:param name=\"currentPage\"/&gt;</p><p  id=\"7048\">&lt;xsl:template match=\"/\"&gt;</p><p  id=\"7049\">&lt;!-- start writing XSLT --&gt;</p><p  id=\"7050\">&lt;xsl:variable name=\"items\" select=\"$currentPage/ancestor-or-self::*</p><p  id=\"7051\">/WebSiteGlobalSettings \"/&gt;</p><p  id=\"7052\">&lt;xsl:variable name=\"logo\" select=\"$items/logo\"/&gt;</p><p  id=\"7053\">&lt;div class=\"vcard\"&gt;</p><p  id=\"7054\">&lt;div class=\"logo\"&gt;&lt;a href=\"/\" title=\"start page\"&gt;</p><p  id=\"7055\">&lt;img src=\"{$logo}\" alt=\"semic provider logo; visual identity\"/&gt;</p><p  id=\"7056\">&lt;/a&gt;</p><p  id=\"7057\">&lt;/div&gt;</p><p  id=\"7058\">&lt;div class=\"fn\" &gt;</p><p  id=\"7059\">&lt;xsl:value-of select=\"$items/siteName\"/&gt;</p><p  id=\"7060\">&lt;/div&gt;</p><p  id=\"7061\">&lt;h4&gt; &lt;xsl:value-of select=\"$items/slogan\"/&gt; &lt;/h4&gt;</p><p  id=\"7062\">&lt;/div&gt;</p><p  id=\"7063\">&lt;/xsl:template&gt;</p><p  id=\"7064\">&lt;/xsl:stylesheet&gt;</p><p  id=\"7065\">Navigation.xslt</p><p  id=\"7066\"><br id=\"7067\"></p><p  id=\"7068\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7069\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7070\">&lt;<span class=\"p\" id=\"7071\">xsl:stylesheet</span></p><p  id=\"7072\">version<span class=\"s56\" id=\"7073\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7074\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7075\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7076\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7077\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7078\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7079\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7080\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7081\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7082\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7083\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7084\">=</span>\"urn:Exslt.ExsltSets\"</p><p  id=\"7085\">exclude-result-prefixes<span class=\"s56\" id=\"7086\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7087\">&gt;</span></p><p class=\"s56\"  id=\"7088\">&lt;<span class=\"p\" id=\"7089\">xsl:output method</span>=<span class=\"p\" id=\"7090\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7091\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7092\">&lt;<span class=\"p\" id=\"7093\">xsl:param name</span>=<span class=\"p\" id=\"7094\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7095\">&lt;<span class=\"p\" id=\"7096\">xsl:template match</span>=<span class=\"p\" id=\"7097\">\"/\"</span>&gt;</p><p class=\"s56\"  id=\"7098\">&lt;<span class=\"p\" id=\"7099\">xsl:variable name</span>=<span class=\"p\" id=\"7100\">\"items\" select</span>=<span class=\"p\" id=\"7101\">\"$currentPage/ancestor-or-self::*</span></p><p  id=\"7102\">/GeneralContent [string(useInNavigation) = '1'] \"<span class=\"s56\" id=\"7103\">/&gt;</span></p><p class=\"s56\"  id=\"7104\">&lt;<span class=\"p\" id=\"7105\">xsl:if test</span>=<span class=\"p\" id=\"7106\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\"  id=\"7107\">&lt;<span class=\"p\" id=\"7108\">ul</span>&gt;</p><p class=\"s56\"  id=\"7109\">&lt;<span class=\"p\" id=\"7110\">xsl:for-each select</span>=<span class=\"p\" id=\"7111\">\"$items\"</span>&gt;</p><p class=\"s56\"  id=\"7112\">&lt;<span class=\"p\" id=\"7113\">xsl:if test</span>=<span class=\"p\" id=\"7114\">\"$currentPage/@id = @id\"</span>&gt;</p><p class=\"s56\"  id=\"7115\">&lt;<span class=\"p\" id=\"7116\">li class</span>=<span class=\"p\" id=\"7117\">\"current\" </span>&gt;</p><p class=\"s56\"  id=\"7118\">&lt;<span class=\"p\" id=\"7119\">xsl:value-of select</span>=<span class=\"p\" id=\"7120\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\"  id=\"7121\">&lt;/<span class=\"p\" id=\"7122\">li</span>&gt;</p><p class=\"s56\"  id=\"7123\">&lt;/<span class=\"p\" id=\"7124\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7125\">&lt;<span class=\"p\" id=\"7126\">xsl:if test</span>=<span class=\"p\" id=\"7127\">\"$currentPage/@id != @id\"</span>&gt;</p><p class=\"s56\"  id=\"7128\">&lt;<span class=\"p\" id=\"7129\">li class</span>=<span class=\"p\" id=\"7130\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\"  id=\"7131\">&lt;<span class=\"p\" id=\"7132\">a href</span>=<span class=\"p\" id=\"7133\">\"{umbraco.library:NiceUrl(@id)}\" title</span>=<span class=\"p\" id=\"7134\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\"  id=\"7135\">&lt;<span class=\"p\" id=\"7136\">xsl:value-of select</span>=<span class=\"p\" id=\"7137\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\"  id=\"7138\">&lt;/<span class=\"p\" id=\"7139\">a</span>&gt;</p><p class=\"s56\"  id=\"7140\">&lt;/<span class=\"p\" id=\"7141\">li</span>&gt;</p><p class=\"s56\"  id=\"7142\">&lt;/<span class=\"p\" id=\"7143\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7144\">&lt;/<span class=\"p\" id=\"7145\">xsl:for-each</span>&gt;</p><p class=\"s56\"  id=\"7146\">&lt;/<span class=\"p\" id=\"7147\">ul</span>&gt;</p><p class=\"s56\"  id=\"7148\">&lt;/<span class=\"p\" id=\"7149\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7150\">&lt;/<span class=\"p\" id=\"7151\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7152\">&lt;/<span class=\"p\" id=\"7153\">xsl:stylesheet</span>&gt;</p><p  id=\"7154\"><br id=\"7155\"></p><p  id=\"7156\"><span class=\"s131\"  id=\"7157\">NewsList.xslt</span></p><p  id=\"7158\"><br id=\"7159\"></p><p  id=\"7160\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7161\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7162\">&lt;<span class=\"p\" id=\"7163\">xsl:stylesheet</span></p><p  id=\"7164\">version<span class=\"s56\" id=\"7165\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7166\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7167\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7168\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7169\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7170\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7171\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7172\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7173\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7174\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7175\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7176\">=</span>\"urn:Exslt.ExsltSets\"</p><p  id=\"7177\">exclude-result-prefixes<span class=\"s56\" id=\"7178\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7179\">&gt;</span></p><p class=\"s56\"  id=\"7180\">&lt;<span class=\"p\" id=\"7181\">xsl:output method</span>=<span class=\"p\" id=\"7182\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7183\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7184\">&lt;<span class=\"p\" id=\"7185\">xsl:param name</span>=<span class=\"p\" id=\"7186\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7187\">&lt;<span class=\"p\" id=\"7188\">xsl:template match</span>=<span class=\"p\" id=\"7189\">\"/\"</span>&gt;</p><p class=\"s56\"  id=\"7190\">&lt;<span class=\"p\" id=\"7191\">xsl:variable name</span>=<span class=\"p\" id=\"7192\">\"newsItems\" select</span>=<span class=\"p\" id=\"7193\">\"$currentPage/ancestor-or-self::*</span></p><p  id=\"7194\">/NewsContainer/NewsArticle \"<span class=\"s56\" id=\"7195\">/&gt;</span></p><p class=\"s56\"  id=\"7196\">&lt;<span class=\"p\" id=\"7197\">xsl:variable name</span>=<span class=\"p\" id=\"7198\">\"numberofnewsitems\" select</span>=<span class=\"p\" id=\"7199\">\"/macro/numberofnewsitems\"</span>/&gt;</p><p class=\"s56\"  id=\"7200\">&lt;<span class=\"p\" id=\"7201\">xsl:if test</span>=<span class=\"p\" id=\"7202\">\"count($newsItems) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\"  id=\"7203\">&lt;<span class=\"p\" id=\"7204\">xsl:for-each select</span>=<span class=\"p\" id=\"7205\">\"$newsItems\" </span>&gt;</p><p class=\"s56\"  id=\"7206\">&lt;<span class=\"p\" id=\"7207\">xsl:sort select</span>=<span class=\"p\" id=\"7208\">\"@createDate\" order</span>=<span class=\"p\" id=\"7209\">\"ascending\"</span>/&gt;</p><p class=\"s56\"  id=\"7210\">&lt;<span class=\"p\" id=\"7211\">xsl:if test</span>=<span class=\"p\" id=\"7212\">\"position() &amp;lt;=$numberofnewsitems\" </span>&gt; &lt;<span class=\"p\" id=\"7213\">div clas</span>=<span class=\"p\" id=\"7214\">\"newsItem\"</span>&gt;</p><p class=\"s56\"  id=\"7215\">&lt;<span class=\"p\" id=\"7216\">h3</span>&gt;</p><p class=\"s56\"  id=\"7217\">&lt;<span class=\"p\" id=\"7218\">a href</span>=<span class=\"p\" id=\"7219\">\"{umbraco.library:NiceUrl(@id)}\" </span>&gt;</p><p class=\"s56\"  id=\"7220\">&lt;<span class=\"p\" id=\"7221\">xsl:value-of select</span>=<span class=\"p\" id=\"7222\">\"newsTitle\" </span>/&gt;</p><p  id=\"7223\"><br id=\"7224\"></p><p class=\"s56\"  id=\"7225\">&lt;/<span class=\"p\" id=\"7226\">a</span>&gt;</p><p class=\"s56\"  id=\"7227\">&lt;/<span class=\"p\" id=\"7228\">h3</span>&gt;</p><p class=\"s56\"  id=\"7229\">&lt;<span class=\"p\" id=\"7230\">p</span>&gt;</p><p class=\"s56\"  id=\"7231\">&lt;<span class=\"p\" id=\"7232\">xsl:value-of select</span>=<span class=\"p\" id=\"7233\">\"newsBody\" disable-output-escaping</span>=<span class=\"p\" id=\"7234\">\"yes\" </span>/&gt;</p><p class=\"s56\"  id=\"7235\">&lt;/<span class=\"p\" id=\"7236\">p</span>&gt;</p><p class=\"s56\"  id=\"7237\">&lt;<span class=\"p\" id=\"7238\">p</span>&gt;</p><p  id=\"7239\">Last update: <span class=\"s56\" id=\"7240\">&lt;</span>xsl:value-of select<span class=\"s56\" id=\"7241\">=</span>\"@updateDate\" <span class=\"s56\" id=\"7242\">/&gt;</span></p><p  id=\"7243\"><br id=\"7244\"></p><p class=\"s56\"  id=\"7245\">&lt;/<span class=\"p\" id=\"7246\">p</span>&gt;</p><p class=\"s56\"  id=\"7247\">&lt;/<span class=\"p\" id=\"7248\">div</span>&gt;</p><p class=\"s56\"  id=\"7249\">&lt;/<span class=\"p\" id=\"7250\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7251\">&lt;/<span class=\"p\" id=\"7252\">xsl:for-each</span>&gt;</p><p class=\"s56\"  id=\"7253\">&lt;/<span class=\"p\" id=\"7254\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7255\">&lt;/<span class=\"p\" id=\"7256\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7257\">&lt;/<span class=\"p\" id=\"7258\">xsl:stylesheet</span>&gt;</p><p  id=\"7259\"><br id=\"7260\"></p><p  id=\"7261\"><span class=\"s131\"  id=\"7262\">RecentVcard.xslt</span></p><p  id=\"7263\"><br id=\"7264\"></p><p  id=\"7265\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7266\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7267\">&lt;<span class=\"p\" id=\"7268\">xsl:stylesheet</span></p><p  id=\"7269\">version<span class=\"s56\" id=\"7270\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7271\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7272\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7273\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:recentVcard<span class=\"s56\" id=\"7274\">=</span>\"urn:recentvcard\" xmlns:umbraco.library<span class=\"s56\" id=\"7275\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7276\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7277\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7278\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7279\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7280\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7281\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7282\">=</span>\"urn:Exslt.ExsltSets\" xmlns:recentvcard<span class=\"s56\" id=\"7283\">=</span>\"urn:recentvcard\" exclude-result-prefixes<span class=\"s56\" id=\"7284\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets recentvcard \"<span class=\"s56\" id=\"7285\">&gt;</span></p><p class=\"s56\"  id=\"7286\">&lt;<span class=\"p\" id=\"7287\">xsl:output method</span>=<span class=\"p\" id=\"7288\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7289\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7290\">&lt;<span class=\"p\" id=\"7291\">xsl:param name</span>=<span class=\"p\" id=\"7292\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7293\">&lt;<span class=\"p\" id=\"7294\">xsl:template match</span>=<span class=\"p\" id=\"7295\">\"/\"</span>&gt;</p><p  id=\"7296\">&lt;!-- start writing XSLT --&gt;</p><p class=\"s56\"  id=\"7297\">&lt;<span class=\"p\" id=\"7298\">xsl:value-of select</span>=<span class=\"p\" id=\"7299\">\"recentVcard:GetVcardData()\" disable-output-escaping</span>=<span class=\"p\" id=\"7300\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7301\">&lt;/<span class=\"p\" id=\"7302\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7303\">&lt;/<span class=\"p\" id=\"7304\">xsl:stylesheet</span>&gt;</p><p  id=\"7305\"><br id=\"7306\"></p><p  id=\"7307\"><span class=\"s131\"  id=\"7308\">RecentVcard.cs</span></p><p  id=\"7309\"><br id=\"7310\"></p><p class=\"s66\"  id=\"7311\">using <span  id=\"7312\">System;</span></p><p class=\"s66\"  id=\"7313\">using <span  id=\"7314\">System.Collections.Generic; </span>using <span  id=\"7315\">System.Linq;</span></p><p class=\"s66\"  id=\"7316\">using <span  id=\"7317\">System.Web;</span></p><p class=\"s66\"  id=\"7318\">using <span  id=\"7319\">umbraco.DataLayer; </span>using <span  id=\"7320\">umbraco;</span></p><p class=\"s66\"  id=\"7321\">namespace <span  id=\"7322\">VCardGenerator</span></p><p class=\"s70\"  id=\"7323\">{</p><p class=\"s66\"  id=\"7324\">public class <span  id=\"7325\">RecentVcard</span></p><p class=\"s70\"  id=\"7326\">{</p><p class=\"s66\"  id=\"7327\">public static string <span  id=\"7328\">GetVcardData()</span></p><p class=\"s70\"  id=\"7329\">{</p><p class=\"s98\"  id=\"7330\">ISqlHelper <span  id=\"7331\">getVcard = </span>DataLayerHelper<span  id=\"7332\">.CreateSqlHelper(</span>GlobalSettings<span  id=\"7333\">.DbDSN);</span></p><p class=\"s98\"  id=\"7334\">IRecordsReader <span  id=\"7335\">read = getVcard.ExecuteReader(</span><span  id=\"7336\">@\"select top 10 id, name,</span></p><p class=\"s99\"  id=\"7337\">country</p><p class=\"s99\"  id=\"7338\">from vcardimage where id &gt; @id order by id desc\"<span  id=\"7339\">,</span></p><p class=\"s70\"  id=\"7340\">getVcard.CreateParameter(<span  id=\"7341\">\"@id\"</span>, <span  id=\"7342\">\"0\"</span>));</p><p class=\"s70\"  id=\"7343\"><span  id=\"7344\">string </span>data = <span  id=\"7345\">\"\"</span>; <span  id=\"7346\">while </span>(read.Read())</p><p class=\"s70\"  id=\"7347\">{</p><p class=\"s70\"  id=\"7348\">data += <span  id=\"7349\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span  id=\"7350\">\"name\"</span>) +</p><p class=\"s99\"  id=\"7351\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span  id=\"7352\">+ read.GetString(</span>\"country\"<span  id=\"7353\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span  id=\"7354\">;</span></p><p class=\"s70\"  id=\"7355\">}</p><p class=\"s99\"  id=\"7356\"><span  id=\"7357\">return </span>\"&lt;ul&gt;\" <span  id=\"7358\">+ data + </span>\"&lt;/ul\"<span  id=\"7359\">;</span></p><p class=\"s70\"  id=\"7360\">}</p><p class=\"s70\"  id=\"7361\">}</p><p class=\"s70\"  id=\"7362\">}</p><p  id=\"7363\"><span id=\"7364\"><img width=\"602\" height=\"851\" alt=\"image\" src=\"Image_137.png\" id=\"7365\"></span></p><p  id=\"7366\"><br id=\"7367\"></p><p  id=\"7368\"><br id=\"7369\"></p><p  id=\"7370\"><br id=\"7371\"></p><p class=\"s8\"  id=\"7372\">About Writer</p><p  id=\"7373\">Name: Jivan Thapa</p><p  id=\"7374\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p  id=\"7375\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7376\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7377\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7378\">jeevan_2np@yahoo.com</a></p><p  id=\"7379\"><br id=\"7380\"></p><p class=\"s8\"  id=\"7381\">About Writer</p><p  id=\"7382\">Name: Jivan Thapa</p><p  id=\"7383\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p  id=\"7384\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7385\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7386\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7387\">jeevan_2np@yahoo.com</a></p><p  id=\"7388\"><span  id=\"7389\"> </span></p><p  id=\"7390\"><br id=\"7391\"></p><p  id=\"7392\"><br id=\"7393\"></p><p  id=\"7394\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p  id=\"7395\">Here I covered:</p><ul id=\"l140\"><li  id=\"7397\"><p  id=\"7398\">Document Type</p></li><li  id=\"7399\"><p  id=\"7400\">Template</p></li><li  id=\"7401\"><p  id=\"7402\">Content</p></li><li  id=\"7403\"><p  id=\"7404\">Xslt</p></li><li  id=\"7405\"><p  id=\"7406\">Extending Umbraco using .net class and User Control</p></li><li  id=\"7407\"><p  id=\"7408\">And more ….</p></li></ul><p  id=\"7409\">Jivan Thapa</p><p  id=\"7410\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p  id=\"7411\">Here I covered:</p><ul id=\"l141\"><li  id=\"7413\"><p  id=\"7414\">Document Type</p></li><li  id=\"7415\"><p  id=\"7416\">Template</p></li><li  id=\"7417\"><p  id=\"7418\">Content</p></li><li  id=\"7419\"><p  id=\"7420\">Xslt</p></li><li  id=\"7421\"><p  id=\"7422\">Extending Umbraco using .net class and User Control</p></li><li  id=\"7423\"><p  id=\"7424\">And more ….</p></li></ul><p  id=\"7425\">Jivan Thapa</p><p  id=\"7426\"><span  id=\"7427\"> </span></p></div></div><p id=\"endOfDocument\"></p></div>","sub":[]}]},{"pageId":"127","pageLevel":0,"pageOrder":"127","pageParentId":"-1","pageName":"Page not Found Error:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 3pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5923\" class=\"heading5923\"><a name=\"bookmark71\" id=\"5924\" style=\"color: lime;\">Page not Found Error:</a></h2>","pageContent":"<div id=\"contentheading5923\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5925\">It is nice to replace default Umbraco error HTTP handler, there are many error handler 500, 404 and 403 etc. 404 error are page not found error, due to some reason, accidental file deletion, dead links and user request not existing page causes HTTP 404 errors. Umbraco handles 404 errors by showing its default error message. We can easily override 404 errors with custom page. First let‟s see Umbraco default error 404 page.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5926\"><br id=\"5927\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5928\"><span id=\"5929\"><img width=\"638\" height=\"414\" alt=\"image\" src=\"Image_132.png\" id=\"5930\"></span></p><p style=\"padding-top: 11pt;padding-left: 49pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5931\">I requested not existing page /test.aspx page, which was not exist. Umbraco handle 404 error. See highlighted text, it explain well, what to do. Sometimes it may not enough so need to extra work or needs to add extra code in web.config file.</p><h3 style=\"padding-top: 7pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5932\" class=\"heading5932\"><a name=\"bookmark72\" id=\"5933\" style=\"color: green;\">Create Custom 404 error page.</a></h3><div id=\"contentheading5932\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5934\">I am creating simple 404 error page. If you want to follow me go <span class=\"s89\" id=\"5935\"></span>Content <span class=\"s89\" id=\"5936\"></span><span class=\"s28\" id=\"5937\"> </span>Right click and click on “Create”. Name: “Page not Found” and Select “General Content” Document Type. Do not check “Use in Navigation” because I don‟t want to show this page into navigation. This page should be displayed only if 404 errors occur. Go to Tab “Title” provide content title “Page Not Found”, Go to Tab “Description” and type “Requested page not found, temporarily unavailable or an out-of-date bookmark/favorite” Go to Tab “Properties” Template <span class=\"s89\" id=\"5938\"></span><span class=\"s28\" id=\"5939\"> </span>“General Content”. Finally press “Save and Publish Icon”. Hold a second on Properties tab and look id of content because Umbraco needs content id. See “pagenotfound.jpg” image as references. Each content item gets unique id. We need to specify unique id of items into umbracoSettings.config files.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5940\"><br id=\"5941\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5942\"><span id=\"5943\"><img width=\"609\" height=\"373\" alt=\"image\" src=\"Image_133.png\" id=\"5944\"></span></p><p style=\"padding-top: 11pt;padding-left: 292pt;text-indent: 0pt;text-align: left;\" id=\"5945\">pagenotfound.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5946\"><br id=\"5947\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5948\"><br id=\"5949\"></p><p style=\"padding-left: 342pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5950\">In my case node id or unique id for content “Page not found” is 1098. You may have different node or unique id</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5951\"><br id=\"5952\"></p></div><h3 style=\"padding-top: 4pt; padding-left: 11pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5953\" class=\"heading5953\"><a name=\"bookmark73\" id=\"5954\" style=\"color: green;\">Modifying umbracoSettings.config file:</a></h3><div id=\"contentheading5953\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 54pt;line-height: 115%;text-align: left;\" id=\"5955\">umbracoSettings.config file can be found inside “config” directory, open umbracoSettings.config file using notepad or other program. It‟s xml document, find</p><p style=\"padding-left: 11pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5956\">&lt;errors&gt; elements inside umbracoSettings.config. <i id=\"5957\">errors </i>element contain child <i id=\"5958\">error404 </i>element. Set its value to node id of content, in my case 1098 and Save umbracoSettings.config file. See captured screen bellow for references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5959\"><br id=\"5960\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5961\"><br id=\"5962\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5963\"><span id=\"5964\"><img width=\"317\" height=\"147\" alt=\"image\" src=\"Image_134.png\" id=\"5965\"></span></p><p class=\"s10\" style=\"padding-left: 211pt;text-indent: 0pt;text-align: left;\" id=\"5966\">Umbraco <span class=\"p\" id=\"5967\">error404.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5968\"><br id=\"5969\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5970\"><span id=\"5971\"><img width=\"594\" height=\"317\" alt=\"image\" src=\"Image_135.png\" id=\"5972\"></span></p><p class=\"s64\" style=\"padding-top: 4pt;padding-left: 102pt;text-indent: 0pt;text-align: left;\" id=\"5973\"><span style=\" color: #000;\" id=\"5974\">Note: in some cases Umbraco 404 error may override by IIS (internet Information Service) or IIS may not hand over 404 error to Umbraco to handle in such case 404 error page will end up with ugly yellow dead screen page. To prevent from this we can specify by telling IIS not to handle, instead hand over all 404 error to Asp.net web site in our case Umbraco site by adding few lines of code into web.config file. Web.config file can be found in root directory of Umbraco System. Find system.webserver elements and add new element </span>&lt;<span style=\" color: #A21515;\" id=\"5975\">httpErrors </span><span style=\" color: #F00;\" id=\"5976\">existingResponse</span>=<span style=\" color: #000;\" id=\"5977\">\"</span>PassThrough<span style=\" color: #000;\" id=\"5978\">\" </span>/&gt; <span style=\" color: #000;\" id=\"5979\">inside system.webserver elements. Using existingRespone= “passThrough” means IIS does not override custom errors.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5980\"><br id=\"5981\"></p></div></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading5923\" class=\"heading5923\"><a name=\"bookmark71\" id=\"5924\" >Page not Found Error:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading5923\" ><p  id=\"5925\">It is nice to replace default Umbraco error HTTP handler, there are many error handler 500, 404 and 403 etc. 404 error are page not found error, due to some reason, accidental file deletion, dead links and user request not existing page causes HTTP 404 errors. Umbraco handles 404 errors by showing its default error message. We can easily override 404 errors with custom page. First let‟s see Umbraco default error 404 page.</p><p  id=\"5926\"><br id=\"5927\"></p><p  id=\"5928\"><span id=\"5929\"><img width=\"638\" height=\"414\" alt=\"image\" src=\"Image_132.png\" id=\"5930\"></span></p><p  id=\"5931\">I requested not existing page /test.aspx page, which was not exist. Umbraco handle 404 error. See highlighted text, it explain well, what to do. Sometimes it may not enough so need to extra work or needs to add extra code in web.config file.</p><h3  id=\"heading5932\" class=\"heading5932\"><a name=\"bookmark72\" id=\"5933\" >Create Custom 404 error page.</a></h3><div id=\"contentheading5932\" ><p  id=\"5934\">I am creating simple 404 error page. If you want to follow me go <span class=\"s89\" id=\"5935\"></span>Content <span class=\"s89\" id=\"5936\"></span><span class=\"s28\" id=\"5937\"> </span>Right click and click on “Create”. Name: “Page not Found” and Select “General Content” Document Type. Do not check “Use in Navigation” because I don‟t want to show this page into navigation. This page should be displayed only if 404 errors occur. Go to Tab “Title” provide content title “Page Not Found”, Go to Tab “Description” and type “Requested page not found, temporarily unavailable or an out-of-date bookmark/favorite” Go to Tab “Properties” Template <span class=\"s89\" id=\"5938\"></span><span class=\"s28\" id=\"5939\"> </span>“General Content”. Finally press “Save and Publish Icon”. Hold a second on Properties tab and look id of content because Umbraco needs content id. See “pagenotfound.jpg” image as references. Each content item gets unique id. We need to specify unique id of items into umbracoSettings.config files.</p><p  id=\"5940\"><br id=\"5941\"></p><p  id=\"5942\"><span id=\"5943\"><img width=\"609\" height=\"373\" alt=\"image\" src=\"Image_133.png\" id=\"5944\"></span></p><p  id=\"5945\">pagenotfound.jpg</p><p  id=\"5946\"><br id=\"5947\"></p><p  id=\"5948\"><br id=\"5949\"></p><p  id=\"5950\">In my case node id or unique id for content “Page not found” is 1098. You may have different node or unique id</p><p  id=\"5951\"><br id=\"5952\"></p></div><h3  id=\"heading5953\" class=\"heading5953\"><a name=\"bookmark73\" id=\"5954\" >Modifying umbracoSettings.config file:</a></h3><div id=\"contentheading5953\" ><p  id=\"5955\">umbracoSettings.config file can be found inside “config” directory, open umbracoSettings.config file using notepad or other program. It‟s xml document, find</p><p  id=\"5956\">&lt;errors&gt; elements inside umbracoSettings.config. <i id=\"5957\">errors </i>element contain child <i id=\"5958\">error404 </i>element. Set its value to node id of content, in my case 1098 and Save umbracoSettings.config file. See captured screen bellow for references.</p><p  id=\"5959\"><br id=\"5960\"></p><p  id=\"5961\"><br id=\"5962\"></p><p  id=\"5963\"><span id=\"5964\"><img width=\"317\" height=\"147\" alt=\"image\" src=\"Image_134.png\" id=\"5965\"></span></p><p class=\"s10\"  id=\"5966\">Umbraco <span class=\"p\" id=\"5967\">error404.jpg</span></p><p  id=\"5968\"><br id=\"5969\"></p><p  id=\"5970\"><span id=\"5971\"><img width=\"594\" height=\"317\" alt=\"image\" src=\"Image_135.png\" id=\"5972\"></span></p><p class=\"s64\"  id=\"5973\"><span  id=\"5974\">Note: in some cases Umbraco 404 error may override by IIS (internet Information Service) or IIS may not hand over 404 error to Umbraco to handle in such case 404 error page will end up with ugly yellow dead screen page. To prevent from this we can specify by telling IIS not to handle, instead hand over all 404 error to Asp.net web site in our case Umbraco site by adding few lines of code into web.config file. Web.config file can be found in root directory of Umbraco System. Find system.webserver elements and add new element </span>&lt;<span  id=\"5975\">httpErrors </span><span  id=\"5976\">existingResponse</span>=<span  id=\"5977\">\"</span>PassThrough<span  id=\"5978\">\" </span>/&gt; <span  id=\"5979\">inside system.webserver elements. Using existingRespone= “passThrough” means IIS does not override custom errors.</span></p><p  id=\"5980\"><br id=\"5981\"></p></div></div>","sub":[{"pageId":"128","pageLevel":1,"pageOrder":"128","pageParentId":"127","pageName":"Create Custom 404 error page.","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 7pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5932\" class=\"heading5932\"><a name=\"bookmark72\" id=\"5933\" style=\"color: green;\">Create Custom 404 error page.</a></h3>","pageContent":"<div id=\"contentheading5932\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5934\">I am creating simple 404 error page. If you want to follow me go <span class=\"s89\" id=\"5935\"></span>Content <span class=\"s89\" id=\"5936\"></span><span class=\"s28\" id=\"5937\"> </span>Right click and click on “Create”. Name: “Page not Found” and Select “General Content” Document Type. Do not check “Use in Navigation” because I don‟t want to show this page into navigation. This page should be displayed only if 404 errors occur. Go to Tab “Title” provide content title “Page Not Found”, Go to Tab “Description” and type “Requested page not found, temporarily unavailable or an out-of-date bookmark/favorite” Go to Tab “Properties” Template <span class=\"s89\" id=\"5938\"></span><span class=\"s28\" id=\"5939\"> </span>“General Content”. Finally press “Save and Publish Icon”. Hold a second on Properties tab and look id of content because Umbraco needs content id. See “pagenotfound.jpg” image as references. Each content item gets unique id. We need to specify unique id of items into umbracoSettings.config files.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5940\"><br id=\"5941\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5942\"><span id=\"5943\"><img width=\"609\" height=\"373\" alt=\"image\" src=\"Image_133.png\" id=\"5944\"></span></p><p style=\"padding-top: 11pt;padding-left: 292pt;text-indent: 0pt;text-align: left;\" id=\"5945\">pagenotfound.jpg</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5946\"><br id=\"5947\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5948\"><br id=\"5949\"></p><p style=\"padding-left: 342pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"5950\">In my case node id or unique id for content “Page not found” is 1098. You may have different node or unique id</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5951\"><br id=\"5952\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading5932\" class=\"heading5932\"><a name=\"bookmark72\" id=\"5933\" >Create Custom 404 error page.</a></h3>","pageStyleReducedContent":"<div id=\"contentheading5932\" ><p  id=\"5934\">I am creating simple 404 error page. If you want to follow me go <span class=\"s89\" id=\"5935\"></span>Content <span class=\"s89\" id=\"5936\"></span><span class=\"s28\" id=\"5937\"> </span>Right click and click on “Create”. Name: “Page not Found” and Select “General Content” Document Type. Do not check “Use in Navigation” because I don‟t want to show this page into navigation. This page should be displayed only if 404 errors occur. Go to Tab “Title” provide content title “Page Not Found”, Go to Tab “Description” and type “Requested page not found, temporarily unavailable or an out-of-date bookmark/favorite” Go to Tab “Properties” Template <span class=\"s89\" id=\"5938\"></span><span class=\"s28\" id=\"5939\"> </span>“General Content”. Finally press “Save and Publish Icon”. Hold a second on Properties tab and look id of content because Umbraco needs content id. See “pagenotfound.jpg” image as references. Each content item gets unique id. We need to specify unique id of items into umbracoSettings.config files.</p><p  id=\"5940\"><br id=\"5941\"></p><p  id=\"5942\"><span id=\"5943\"><img width=\"609\" height=\"373\" alt=\"image\" src=\"Image_133.png\" id=\"5944\"></span></p><p  id=\"5945\">pagenotfound.jpg</p><p  id=\"5946\"><br id=\"5947\"></p><p  id=\"5948\"><br id=\"5949\"></p><p  id=\"5950\">In my case node id or unique id for content “Page not found” is 1098. You may have different node or unique id</p><p  id=\"5951\"><br id=\"5952\"></p></div>","sub":[]},{"pageId":"129","pageLevel":1,"pageOrder":"129","pageParentId":"127","pageName":"Modifying umbracoSettings.config file:","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 4pt; padding-left: 11pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5953\" class=\"heading5953\"><a name=\"bookmark73\" id=\"5954\" style=\"color: green;\">Modifying umbracoSettings.config file:</a></h3>","pageContent":"<div id=\"contentheading5953\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 54pt;line-height: 115%;text-align: left;\" id=\"5955\">umbracoSettings.config file can be found inside “config” directory, open umbracoSettings.config file using notepad or other program. It‟s xml document, find</p><p style=\"padding-left: 11pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5956\">&lt;errors&gt; elements inside umbracoSettings.config. <i id=\"5957\">errors </i>element contain child <i id=\"5958\">error404 </i>element. Set its value to node id of content, in my case 1098 and Save umbracoSettings.config file. See captured screen bellow for references.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5959\"><br id=\"5960\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5961\"><br id=\"5962\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5963\"><span id=\"5964\"><img width=\"317\" height=\"147\" alt=\"image\" src=\"Image_134.png\" id=\"5965\"></span></p><p class=\"s10\" style=\"padding-left: 211pt;text-indent: 0pt;text-align: left;\" id=\"5966\">Umbraco <span class=\"p\" id=\"5967\">error404.jpg</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5968\"><br id=\"5969\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5970\"><span id=\"5971\"><img width=\"594\" height=\"317\" alt=\"image\" src=\"Image_135.png\" id=\"5972\"></span></p><p class=\"s64\" style=\"padding-top: 4pt;padding-left: 102pt;text-indent: 0pt;text-align: left;\" id=\"5973\"><span style=\" color: #000;\" id=\"5974\">Note: in some cases Umbraco 404 error may override by IIS (internet Information Service) or IIS may not hand over 404 error to Umbraco to handle in such case 404 error page will end up with ugly yellow dead screen page. To prevent from this we can specify by telling IIS not to handle, instead hand over all 404 error to Asp.net web site in our case Umbraco site by adding few lines of code into web.config file. Web.config file can be found in root directory of Umbraco System. Find system.webserver elements and add new element </span>&lt;<span style=\" color: #A21515;\" id=\"5975\">httpErrors </span><span style=\" color: #F00;\" id=\"5976\">existingResponse</span>=<span style=\" color: #000;\" id=\"5977\">\"</span>PassThrough<span style=\" color: #000;\" id=\"5978\">\" </span>/&gt; <span style=\" color: #000;\" id=\"5979\">inside system.webserver elements. Using existingRespone= “passThrough” means IIS does not override custom errors.</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5980\"><br id=\"5981\"></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading5953\" class=\"heading5953\"><a name=\"bookmark73\" id=\"5954\" >Modifying umbracoSettings.config file:</a></h3>","pageStyleReducedContent":"<div id=\"contentheading5953\" ><p  id=\"5955\">umbracoSettings.config file can be found inside “config” directory, open umbracoSettings.config file using notepad or other program. It‟s xml document, find</p><p  id=\"5956\">&lt;errors&gt; elements inside umbracoSettings.config. <i id=\"5957\">errors </i>element contain child <i id=\"5958\">error404 </i>element. Set its value to node id of content, in my case 1098 and Save umbracoSettings.config file. See captured screen bellow for references.</p><p  id=\"5959\"><br id=\"5960\"></p><p  id=\"5961\"><br id=\"5962\"></p><p  id=\"5963\"><span id=\"5964\"><img width=\"317\" height=\"147\" alt=\"image\" src=\"Image_134.png\" id=\"5965\"></span></p><p class=\"s10\"  id=\"5966\">Umbraco <span class=\"p\" id=\"5967\">error404.jpg</span></p><p  id=\"5968\"><br id=\"5969\"></p><p  id=\"5970\"><span id=\"5971\"><img width=\"594\" height=\"317\" alt=\"image\" src=\"Image_135.png\" id=\"5972\"></span></p><p class=\"s64\"  id=\"5973\"><span  id=\"5974\">Note: in some cases Umbraco 404 error may override by IIS (internet Information Service) or IIS may not hand over 404 error to Umbraco to handle in such case 404 error page will end up with ugly yellow dead screen page. To prevent from this we can specify by telling IIS not to handle, instead hand over all 404 error to Asp.net web site in our case Umbraco site by adding few lines of code into web.config file. Web.config file can be found in root directory of Umbraco System. Find system.webserver elements and add new element </span>&lt;<span  id=\"5975\">httpErrors </span><span  id=\"5976\">existingResponse</span>=<span  id=\"5977\">\"</span>PassThrough<span  id=\"5978\">\" </span>/&gt; <span  id=\"5979\">inside system.webserver elements. Using existingRespone= “passThrough” means IIS does not override custom errors.</span></p><p  id=\"5980\"><br id=\"5981\"></p></div>","sub":[]}]},{"pageId":"130","pageLevel":0,"pageOrder":"130","pageParentId":"-1","pageName":"Conclusion:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: justify; background-color: rgb(215, 215, 215);\" id=\"heading5982\" class=\"heading5982\"><a name=\"bookmark74\" id=\"5983\" style=\"color: lime;\">Conclusion:</a></h2>","pageContent":"<div id=\"contentheading5982\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"text-indent: 0pt;text-align: left;\" id=\"5984\"><br id=\"5985\"></p><p style=\"padding-top: 11pt;padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5986\">Learning process is not difficult if we start from basic, every complex system begins with basic and simple structure. Here I provided basic concept of Umbraco using examples rather than theory. I use Vcard as a case to demonstrate practical examples of basic concept of Umbraco. Vcard was virtual website it does not exist on live but concept that I used in Vcard was easy to understand how to start building Umbraco website from scratch. I started to show installation of Umbraco cms, most of new developer faces many problems to install. Developing Umbraco site from empty Umbraco installation is great challenge to new developer but it‟s a way to learn Umbraco from inside, I started to build Vcard site from scratch, empty Umbraco installation. Creating DocumentType, Template and Content is core of Umbraco CMS. If you reading books from beginning without skipping chapter you should be able to understand connection between DocumentType, Template and Content. I provided information about fetching data from xml using xslt and extending xslt using</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: justify;\" id=\"5987\">.net class provided basic concept of how to extend Umbraco. All these concepts and examples can be used for your own purpose and needs. You are familiar with how to fetch and insert data from database to Umbraco and Umbraco to Database, extending Umbraco using Xslt, user control and .net class. In last chapter I provided how to solve umbraco 404 error default page problem with custom 404 errors page in case you get errors. I also touch about security on website which will provide knowledge to secure Umbraco site even though security is not basic on Umbraco sites.</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5988\"><br id=\"5989\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading5982\" class=\"heading5982\"><a name=\"bookmark74\" id=\"5983\" >Conclusion:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading5982\" ><p  id=\"5984\"><br id=\"5985\"></p><p  id=\"5986\">Learning process is not difficult if we start from basic, every complex system begins with basic and simple structure. Here I provided basic concept of Umbraco using examples rather than theory. I use Vcard as a case to demonstrate practical examples of basic concept of Umbraco. Vcard was virtual website it does not exist on live but concept that I used in Vcard was easy to understand how to start building Umbraco website from scratch. I started to show installation of Umbraco cms, most of new developer faces many problems to install. Developing Umbraco site from empty Umbraco installation is great challenge to new developer but it‟s a way to learn Umbraco from inside, I started to build Vcard site from scratch, empty Umbraco installation. Creating DocumentType, Template and Content is core of Umbraco CMS. If you reading books from beginning without skipping chapter you should be able to understand connection between DocumentType, Template and Content. I provided information about fetching data from xml using xslt and extending xslt using</p><p  id=\"5987\">.net class provided basic concept of how to extend Umbraco. All these concepts and examples can be used for your own purpose and needs. You are familiar with how to fetch and insert data from database to Umbraco and Umbraco to Database, extending Umbraco using Xslt, user control and .net class. In last chapter I provided how to solve umbraco 404 error default page problem with custom 404 errors page in case you get errors. I also touch about security on website which will provide knowledge to secure Umbraco site even though security is not basic on Umbraco sites.</p><p  id=\"5988\"><br id=\"5989\"></p></div>","sub":[]},{"pageId":"131","pageLevel":0,"pageOrder":"131","pageParentId":"-1","pageName":"References:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading5990\" class=\"heading5990\"><a name=\"bookmark75\" id=\"5991\" style=\"color: lime;\">References:</a></h2>","pageContent":"<div id=\"contentheading5990\" style=\"border: 5px solid rgb(0, 255, 0);\"><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"5992\">Taken date: May-17-2011 Xslt and Xpath</p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5993\"><a href=\"http://www.w3schools.com/xsl/\" id=\"5994\">http://www.w3schools.com/xsl/</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5995\"><br id=\"5996\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"5997\">Umbraco to Database and Database to Umbraco</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"5998\"><br id=\"5999\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"6000\">http://our.umbraco.org/forum/developers/api-questions/12248-Get-value-from-base- into-database</p><p style=\"padding-top: 10pt;padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"6001\">http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205--- comments</p><p style=\"padding-top: 9pt;padding-left: 5pt;text-indent: 0pt;line-height: 188%;text-align: left;\" id=\"6002\"><a href=\"http://our.umbraco.org/wiki\" class=\"a\" target=\"_blank\" id=\"6003\">Wiki </a><a href=\"http://our.umbraco.org/wiki\" target=\"_blank\" id=\"6004\">http://our.umbraco.org/wiki</a></p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 115%;text-align: left;\" id=\"6005\">http://our.umbraco.org/wiki/recommendations/recommended-reading-for-net- developers</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6006\"><br id=\"6007\"></p></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading5990\" class=\"heading5990\"><a name=\"bookmark75\" id=\"5991\" >References:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading5990\" ><p  id=\"5992\">Taken date: May-17-2011 Xslt and Xpath</p><p  id=\"5993\"><a href=\"http://www.w3schools.com/xsl/\" id=\"5994\">http://www.w3schools.com/xsl/</a></p><p  id=\"5995\"><br id=\"5996\"></p><p  id=\"5997\">Umbraco to Database and Database to Umbraco</p><p  id=\"5998\"><br id=\"5999\"></p><p  id=\"6000\">http://our.umbraco.org/forum/developers/api-questions/12248-Get-value-from-base- into-database</p><p  id=\"6001\">http://umbraco.com/follow-us/blog-archive/2009/12/7/blog-4-umbraco-205--- comments</p><p  id=\"6002\"><a href=\"http://our.umbraco.org/wiki\" class=\"a\" target=\"_blank\" id=\"6003\">Wiki </a><a href=\"http://our.umbraco.org/wiki\" target=\"_blank\" id=\"6004\">http://our.umbraco.org/wiki</a></p><p  id=\"6005\">http://our.umbraco.org/wiki/recommendations/recommended-reading-for-net- developers</p><p  id=\"6006\"><br id=\"6007\"></p></div>","sub":[]},{"pageId":"132","pageLevel":0,"pageOrder":"132","pageParentId":"-1","pageName":"Extra files:","endPointPath":"","pageHeading":"<h2 style=\"padding-top: 4pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading6008\" class=\"heading6008\"><a name=\"bookmark76\" id=\"6009\" style=\"color: lime;\">Extra files:</a></h2>","pageContent":"<div id=\"contentheading6008\" style=\"border: 5px solid rgb(0, 255, 0);\"><h3 style=\"padding-top: 12pt; padding-bottom: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading6010\" class=\"heading6010\"><a name=\"bookmark77\" id=\"6011\" style=\"color: green;\">Web grid.</a></h3><div id=\"contentheading6010\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"6012\"><span id=\"6013\"><img width=\"599\" height=\"371\" alt=\"image\" src=\"Image_136.jpg\" id=\"6014\"></span></p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6015\"><a name=\"bookmark78\" id=\"6016\">File “VcardControl.ascx”</a></h3><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6017\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"6018\">&lt;%</span><span class=\"s66\" id=\"6019\">@ </span><span class=\"s67\" id=\"6020\">Control </span><span class=\"s68\" id=\"6021\">Language</span><span class=\"s66\" id=\"6022\">=\"C#\" </span><span class=\"s68\" id=\"6023\">AutoEventWireup</span><span class=\"s66\" id=\"6024\">=\"true\" </span><span class=\"s68\" id=\"6025\">CodeBehind</span><span class=\"s66\" id=\"6026\">=\"VcardControl.ascx.cs\" </span><span class=\"s68\" id=\"6027\">Inherits</span><span class=\"s66\" id=\"6028\">=\"VCardGenerator.VcardControl\" </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"6029\">%&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6030\"><br id=\"6031\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6032\">&lt;<span style=\" color: #800000;\" id=\"6033\">form </span><span style=\" color: #F00;\" id=\"6034\">id</span>=\"FormVcard\" <span style=\" color: #F00;\" id=\"6035\">runat</span>=\"server\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6036\">&lt;<span style=\" color: #800000;\" id=\"6037\">div </span><span style=\" color: #F00;\" id=\"6038\">class</span>=\"errorMessage\"&gt;</p><p class=\"s66\" style=\"padding-left: 19pt;text-indent: 0pt;text-align: center;\" id=\"6039\">&lt;<span style=\" color: #800000;\" id=\"6040\">asp</span>:<span style=\" color: #800000;\" id=\"6041\">Label </span><span style=\" color: #F00;\" id=\"6042\">ID</span>=\"LabelNotice\" <span style=\" color: #F00;\" id=\"6043\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6044\">Text</span>=\"\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6045\">asp</span>:<span style=\" color: #800000;\" id=\"6046\">Label</span>&gt;</p><p class=\"s66\" style=\"padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"6047\">&lt;<span style=\" color: #800000;\" id=\"6048\">asp</span>:<span style=\" color: #800000;\" id=\"6049\">ValidationSummary </span><span style=\" color: #F00;\" id=\"6050\">ID</span>=\"ValidationSummary\" <span style=\" color: #F00;\" id=\"6051\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6052\">ForeColor</span>=\"#FF6666\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6053\">/&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6054\">&lt;/<span style=\" color: #800000;\" id=\"6055\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6056\">&lt;<span style=\" color: #800000;\" id=\"6057\">table </span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6058\">&lt;<span style=\" color: #800000;\" id=\"6059\">tr </span><span style=\" color: #F00;\" id=\"6060\">class</span>=\"name\"&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6061\">&lt;<span style=\" color: #800000;\" id=\"6062\">td</span>&gt; <span style=\" color: #000;\" id=\"6063\">Name: </span>&lt;/<span style=\" color: #800000;\" id=\"6064\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6065\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6066\">asp</span>:<span style=\" color: #800000;\" id=\"6067\">TextBox </span><span style=\" color: #F00;\" id=\"6068\">ID</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6069\">runat</span>=server&gt;&lt;/<span style=\" color: #800000;\" id=\"6070\">asp</span>:<span style=\" color: #800000;\" id=\"6071\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6072\">&lt;<span style=\" color: #800000;\" id=\"6073\">asp</span>:<span style=\" color: #800000;\" id=\"6074\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"6075\">ID</span>=\"RequiredFieldValidatorName\" <span style=\" color: #F00;\" id=\"6076\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6077\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6078\">ErrorMessage</span>=\"Name Required\" <span style=\" color: #F00;\" id=\"6079\">Font-</span></p><p class=\"s68\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6080\">Size<span style=\" color: #00F;\" id=\"6081\">=\"Small\"</span></p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6082\"><span style=\" color: #F00;\" id=\"6083\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6084\">asp</span>:<span style=\" color: #800000;\" id=\"6085\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6086\">&lt;<span style=\" color: #800000;\" id=\"6087\">asp</span>:<span style=\" color: #800000;\" id=\"6088\">CustomValidator </span><span style=\" color: #F00;\" id=\"6089\">ID</span>=\"CustomValidatorName\" <span style=\" color: #F00;\" id=\"6090\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6091\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6092\">ErrorMessage</span>=\"Name is not Valid\" <span style=\" color: #F00;\" id=\"6093\">ForeColor</span>=\"#CC0000\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6094\"><span style=\" color: #F00;\" id=\"6095\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6096\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6097\">asp</span>:<span style=\" color: #800000;\" id=\"6098\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6099\">&lt;/<span style=\" color: #800000;\" id=\"6100\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6101\">&lt;/<span style=\" color: #800000;\" id=\"6102\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6103\">&lt;<span style=\" color: #800000;\" id=\"6104\">tr </span><span style=\" color: #F00;\" id=\"6105\">class</span>=\"street\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6106\">&lt;<span style=\" color: #800000;\" id=\"6107\">td</span>&gt; <span style=\" color: #000;\" id=\"6108\">Street:</span>&lt;/<span style=\" color: #800000;\" id=\"6109\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6110\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6111\">asp</span>:<span style=\" color: #800000;\" id=\"6112\">TextBox </span><span style=\" color: #F00;\" id=\"6113\">ID</span>=\"TextBoxStreet\" <span style=\" color: #F00;\" id=\"6114\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6115\">asp</span>:<span style=\" color: #800000;\" id=\"6116\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6117\">&lt;/<span style=\" color: #800000;\" id=\"6118\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6119\">&lt;/<span style=\" color: #800000;\" id=\"6120\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6121\">&lt;<span style=\" color: #800000;\" id=\"6122\">tr </span><span style=\" color: #F00;\" id=\"6123\">class</span>=\"postalCode\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6124\">&lt;<span style=\" color: #800000;\" id=\"6125\">td</span>&gt; <span style=\" color: #000;\" id=\"6126\">PostalCode:</span>&lt;/<span style=\" color: #800000;\" id=\"6127\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6128\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6129\">asp</span>:<span style=\" color: #800000;\" id=\"6130\">TextBox </span><span style=\" color: #F00;\" id=\"6131\">ID</span>=\"TextBoxPostalCode\" <span style=\" color: #F00;\" id=\"6132\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6133\">asp</span>:<span style=\" color: #800000;\" id=\"6134\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6135\">&lt;<span style=\" color: #800000;\" id=\"6136\">asp</span>:<span style=\" color: #800000;\" id=\"6137\">CustomValidator </span><span style=\" color: #F00;\" id=\"6138\">ID</span>=\"CustomValidatorPostalCode\" <span style=\" color: #F00;\" id=\"6139\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6140\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6141\">ErrorMessage<span style=\" color: #00F;\" id=\"6142\">=\"Postal Code 4 digit\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6143\">=\"TextBoxPostalCode\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6144\"><br id=\"6145\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6146\"><span style=\" color: #F00;\" id=\"6147\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6148\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6149\">asp</span>:<span style=\" color: #800000;\" id=\"6150\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6151\">&lt;/<span style=\" color: #800000;\" id=\"6152\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6153\">&lt;/<span style=\" color: #800000;\" id=\"6154\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6155\">&lt;<span style=\" color: #800000;\" id=\"6156\">tr </span><span style=\" color: #F00;\" id=\"6157\">class</span>=\"city\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6158\">&lt;<span style=\" color: #800000;\" id=\"6159\">td</span>&gt; <span style=\" color: #000;\" id=\"6160\">City:</span>&lt;/<span style=\" color: #800000;\" id=\"6161\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6162\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6163\">asp</span>:<span style=\" color: #800000;\" id=\"6164\">TextBox </span><span style=\" color: #F00;\" id=\"6165\">ID</span>=\"TextBoxCity\" <span style=\" color: #F00;\" id=\"6166\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6167\">asp</span>:<span style=\" color: #800000;\" id=\"6168\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6169\">&lt;/<span style=\" color: #800000;\" id=\"6170\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6171\">&lt;<span style=\" color: #800000;\" id=\"6172\">tr </span><span style=\" color: #F00;\" id=\"6173\">class</span>=\"country\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6174\">&lt;<span style=\" color: #800000;\" id=\"6175\">td</span>&gt; <span style=\" color: #000;\" id=\"6176\">Country:</span>&lt;/<span style=\" color: #800000;\" id=\"6177\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6178\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6179\">asp</span>:<span style=\" color: #800000;\" id=\"6180\">TextBox </span><span style=\" color: #F00;\" id=\"6181\">ID</span>=\"TextBoxCountry\" <span style=\" color: #F00;\" id=\"6182\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6183\">asp</span>:<span style=\" color: #800000;\" id=\"6184\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6185\">&lt;<span style=\" color: #800000;\" id=\"6186\">asp</span>:<span style=\" color: #800000;\" id=\"6187\">CustomValidator </span><span style=\" color: #F00;\" id=\"6188\">ID</span>=\"CustomValidatorCountry\" <span style=\" color: #F00;\" id=\"6189\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6190\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6191\">ErrorMessage<span style=\" color: #00F;\" id=\"6192\">=\"Country Not Valid\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6193\">=\"TextBoxCountry\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6194\"><br id=\"6195\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6196\"><span style=\" color: #F00;\" id=\"6197\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6198\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6199\">asp</span>:<span style=\" color: #800000;\" id=\"6200\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6201\">&lt;/<span style=\" color: #800000;\" id=\"6202\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6203\">&lt;/<span style=\" color: #800000;\" id=\"6204\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6205\">&lt;<span style=\" color: #800000;\" id=\"6206\">tr </span><span style=\" color: #F00;\" id=\"6207\">class</span>=\"phone\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6208\">&lt;<span style=\" color: #800000;\" id=\"6209\">td</span>&gt; <span style=\" color: #000;\" id=\"6210\">Phone:</span><span style=\" color: #F00;\" id=\"6211\">&amp;nbsp; </span><span style=\" color: #000;\" id=\"6212\">+45</span>&lt;/<span style=\" color: #800000;\" id=\"6213\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6214\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6215\">asp</span>:<span style=\" color: #800000;\" id=\"6216\">TextBox </span><span style=\" color: #F00;\" id=\"6217\">ID</span>=\"TextBoxPhone\" <span style=\" color: #F00;\" id=\"6218\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6219\">asp</span>:<span style=\" color: #800000;\" id=\"6220\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6221\">&lt;<span style=\" color: #800000;\" id=\"6222\">asp</span>:<span style=\" color: #800000;\" id=\"6223\">CustomValidator </span><span style=\" color: #F00;\" id=\"6224\">ID</span>=\"CustomValidatorPhone\" <span style=\" color: #F00;\" id=\"6225\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6226\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6227\">ErrorMessage<span style=\" color: #00F;\" id=\"6228\">=\"Phone must be 8 digit, Without +45 \" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6229\">=\"TextBoxPhone\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6230\"><br id=\"6231\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6232\"><span style=\" color: #F00;\" id=\"6233\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6234\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6235\">asp</span>:<span style=\" color: #800000;\" id=\"6236\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6237\">&lt;/<span style=\" color: #800000;\" id=\"6238\">td</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6239\"><br id=\"6240\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6241\">&lt;/<span style=\" color: #800000;\" id=\"6242\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6243\">&lt;<span style=\" color: #800000;\" id=\"6244\">tr </span><span style=\" color: #F00;\" id=\"6245\">class</span>=\"email\"&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6246\">&lt;<span style=\" color: #800000;\" id=\"6247\">td</span>&gt; <span style=\" color: #000;\" id=\"6248\">Email: </span>&lt;/<span style=\" color: #800000;\" id=\"6249\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6250\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6251\">asp</span>:<span style=\" color: #800000;\" id=\"6252\">TextBox </span><span style=\" color: #F00;\" id=\"6253\">ID</span>=\"TextBoxEmail\" <span style=\" color: #F00;\" id=\"6254\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6255\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6256\">asp</span>:<span style=\" color: #800000;\" id=\"6257\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6258\">&lt;<span style=\" color: #800000;\" id=\"6259\">asp</span>:<span style=\" color: #800000;\" id=\"6260\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"6261\">ID</span>=\"RequiredFieldValidatorEmail\" <span style=\" color: #F00;\" id=\"6262\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6263\">Font-Size</span>=\"Small\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"6264\"><span style=\" color: #F00;\" id=\"6265\">ErrorMessage</span>=\"Email Required\" <span style=\" color: #F00;\" id=\"6266\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span style=\" color: #000;\" id=\"6267\">Email Required</span>&lt;/<span style=\" color: #800000;\" id=\"6268\">asp</span>:<span style=\" color: #800000;\" id=\"6269\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6270\">&lt;<span style=\" color: #800000;\" id=\"6271\">asp</span>:<span style=\" color: #800000;\" id=\"6272\">CustomValidator </span><span style=\" color: #F00;\" id=\"6273\">ID</span>=\"CustomValidatorEmail\" <span style=\" color: #F00;\" id=\"6274\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6275\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6276\">ErrorMessage<span style=\" color: #00F;\" id=\"6277\">=\"Email Not Valid\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6278\">=\"TextBoxEmail\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6279\"><br id=\"6280\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6281\"><span style=\" color: #F00;\" id=\"6282\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6283\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6284\">asp</span>:<span style=\" color: #800000;\" id=\"6285\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6286\">&lt;/<span style=\" color: #800000;\" id=\"6287\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6288\">&lt;/<span style=\" color: #800000;\" id=\"6289\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6290\">&lt;<span style=\" color: #800000;\" id=\"6291\">tr </span><span style=\" color: #F00;\" id=\"6292\">class</span>=\"website\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6293\">&lt;<span style=\" color: #800000;\" id=\"6294\">td</span>&gt; <span style=\" color: #000;\" id=\"6295\">WebSite:</span>&lt;/<span style=\" color: #800000;\" id=\"6296\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6297\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6298\">asp</span>:<span style=\" color: #800000;\" id=\"6299\">TextBox </span><span style=\" color: #F00;\" id=\"6300\">ID</span>=\"TextBoxWebsite\" <span style=\" color: #F00;\" id=\"6301\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6302\">asp</span>:<span style=\" color: #800000;\" id=\"6303\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6304\">&lt;<span style=\" color: #800000;\" id=\"6305\">asp</span>:<span style=\" color: #800000;\" id=\"6306\">CustomValidator </span><span style=\" color: #F00;\" id=\"6307\">ID</span>=\"CustomValidatorWebSite\" <span style=\" color: #F00;\" id=\"6308\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6309\">ErrorMessage</span>=\"Website not valid\" <span style=\" color: #F00;\" id=\"6310\">ControlToValidate</span>=\"TextBoxWebsite\"</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6311\"><br id=\"6312\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6313\"><span style=\" color: #F00;\" id=\"6314\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6315\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6316\">asp</span>:<span style=\" color: #800000;\" id=\"6317\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6318\">&lt;/<span style=\" color: #800000;\" id=\"6319\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"6320\">&lt;/<span style=\" color: #800000;\" id=\"6321\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6322\">&lt;<span style=\" color: #800000;\" id=\"6323\">tr </span><span style=\" color: #F00;\" id=\"6324\">class</span>=\"photo\"&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6325\">&lt;<span style=\" color: #800000;\" id=\"6326\">td</span>&gt; <span style=\" color: #000;\" id=\"6327\">Photo:</span>&lt;/<span style=\" color: #800000;\" id=\"6328\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6329\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6330\">asp</span>:<span style=\" color: #800000;\" id=\"6331\">FileUpload </span><span style=\" color: #F00;\" id=\"6332\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"6333\">runat</span>=\"server\" /&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6334\">&lt;/<span style=\" color: #800000;\" id=\"6335\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6336\">&lt;/<span style=\" color: #800000;\" id=\"6337\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6338\">&lt;<span style=\" color: #800000;\" id=\"6339\">tr </span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6340\">&lt;<span style=\" color: #800000;\" id=\"6341\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"6342\"><span style=\" color: #F00;\" id=\"6343\">&amp;nbsp;</span>&lt;/<span style=\" color: #800000;\" id=\"6344\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6345\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6346\">asp</span>:<span style=\" color: #800000;\" id=\"6347\">Button </span><span style=\" color: #F00;\" id=\"6348\">ID</span>=\"ButtonCreate\" <span style=\" color: #F00;\" id=\"6349\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6350\">Text</span>=\"Create\"</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6351\"><span style=\" color: #F00;\" id=\"6352\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span style=\" color: #800000;\" id=\"6353\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6354\">&lt;/<span style=\" color: #800000;\" id=\"6355\">tr</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6356\"><br id=\"6357\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6358\">&lt;/<span style=\" color: #800000;\" id=\"6359\">table</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6360\">&lt;/<span style=\" color: #800000;\" id=\"6361\">form</span>&gt;</p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6362\"><a name=\"a68\" id=\"6363\"><span class=\"p\" id=\"6364\">File </span></a><span class=\"s128\" style=\" background-color: #FF0;\" id=\"6365\">VcardControl.ascx.cs</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6366\"><br id=\"6367\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6368\">using <span style=\" color: #000;\" id=\"6369\">System;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6370\">using <span style=\" color: #000;\" id=\"6371\">System.Collections.Generic; </span>using <span style=\" color: #000;\" id=\"6372\">System.Linq;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6373\">using <span style=\" color: #000;\" id=\"6374\">System.Web;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6375\">using <span style=\" color: #000;\" id=\"6376\">umbraco.DataLayer.SqlHelpers.SqlServer; </span>using <span style=\" color: #000;\" id=\"6377\">umbraco.DataLayer;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6378\">using <span style=\" color: #000;\" id=\"6379\">umbraco;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6380\">using <span style=\" color: #000;\" id=\"6381\">System.Data.SqlClient;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6382\">using <span style=\" color: #000;\" id=\"6383\">System.Text.RegularExpressions; </span>using <span style=\" color: #000;\" id=\"6384\">System.Web.UI.WebControls; </span>using <span style=\" color: #000;\" id=\"6385\">System.IO;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6386\">using <span style=\" color: #000;\" id=\"6387\">System.Text; </span>using <span style=\" color: #000;\" id=\"6388\">System.Net.Mail; </span>using <span style=\" color: #000;\" id=\"6389\">System.Net;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6390\"><br id=\"6391\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6392\">namespace <span style=\" color: #000;\" id=\"6393\">VCardGenerator</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6394\">{</p><p class=\"s98\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6395\"><span style=\" color: #00F;\" id=\"6396\">public partial class </span>VcardControl <span style=\" color: #000;\" id=\"6397\">: System.Web.UI.</span>UserControl</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6398\">{</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6399\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6400\">/// <span style=\" color: #008000;\" id=\"6401\">Handles the Load event of the Page control.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6402\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6403\">/// &lt;param name=\"sender\"&gt;<span style=\" color: #008000;\" id=\"6404\">The source of the event.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6405\">/// &lt;param name=\"e\"&gt;<span style=\" color: #008000;\" id=\"6406\">The </span>&lt;see cref=\"System.EventArgs\"/&gt; <span style=\" color: #008000;\" id=\"6407\">instance containing the event data.</span>&lt;/param&gt;</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6408\"><span style=\" color: #00F;\" id=\"6409\">protected void </span>Page_Load(<span style=\" color: #00F;\" id=\"6410\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6411\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6412\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6413\"><br id=\"6414\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6415\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6416\"><br id=\"6417\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6418\"><span style=\" color: #00F;\" id=\"6419\">protected void </span>ButtonCreate_Click(<span style=\" color: #00F;\" id=\"6420\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6421\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6422\">{</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6423\">if <span style=\" color: #000;\" id=\"6424\">(Page.IsValid)</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6425\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6426\"><span style=\" color: #2B91AE;\" id=\"6427\">Guid </span>id = <span style=\" color: #2B91AE;\" id=\"6428\">Guid</span>.NewGuid(); <span style=\" color: #00F;\" id=\"6429\">string </span>imgFile = <span style=\" color: #A21515;\" id=\"6430\">\"noimage\"</span>;</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6431\">string <span style=\" color: #000;\" id=\"6432\">name = RemoveSpecialCharacter(TextBoxName.Text);</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6433\">string <span style=\" color: #000;\" id=\"6434\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"6435\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"6436\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"6437\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6438\">string <span style=\" color: #000;\" id=\"6439\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: justify;\" id=\"6440\">string <span style=\" color: #000;\" id=\"6441\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"6442\">phone = RemoveSpecialCharacter(TextBoxPhone.Text); </span>if <span style=\" color: #000;\" id=\"6443\">(FileUploadPhoto.PostedFile != </span>null <span style=\" color: #000;\" id=\"6444\">&amp;&amp;</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6445\">FileUploadPhoto.PostedFile.ContentLength &gt; 0)</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6446\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6447\"><span style=\" color: #00F;\" id=\"6448\">string </span>guid = id.ToString(<span style=\" color: #A21515;\" id=\"6449\">\"N\"</span>);</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6450\"><span style=\" color: #00F;\" id=\"6451\">string </span>imageDirectory = Server.MapPath(<span style=\" color: #A21515;\" id=\"6452\">\"vcardimage\"</span>); <span style=\" color: #00F;\" id=\"6453\">if </span>(<span style=\" color: #2B91AE;\" id=\"6454\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6455\">{</p><p class=\"s70\" style=\"padding-left: 151pt;text-indent: -20pt;text-align: left;\" id=\"6456\">FileUploadPhoto.PostedFile.SaveAs( Server.MapPath(<span style=\" color: #A21515;\" id=\"6457\">\"/vcardimage/\" </span>+ guid +</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6458\">FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6459\">}</p><p class=\"s66\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6460\">else</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6461\">{</p><p class=\"s70\" style=\"padding-left: 130pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6462\"><span style=\" color: #2B91AE;\" id=\"6463\">Directory</span>.CreateDirectory(Server.MapPath(<span style=\" color: #A21515;\" id=\"6464\">\"vcardimage\"</span>));</p><p class=\"s70\" style=\"padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6465\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span style=\" color: #A21515;\" id=\"6466\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6467\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6468\"><br id=\"6469\"></p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6470\">imgFile = imageDirectory + <span style=\" color: #A21515;\" id=\"6471\">\"/\" </span>+ guid + FileUploadPhoto.FileName; SendVcard(<span style=\" color: #A21515;\" id=\"6472\">\"Your Vcard:\"</span>,</p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 156pt;text-align: left;\" id=\"6473\">\"Your vcard is ready. Please open Attachment. \\n Thank you very much \\n Semic Provider\"<span style=\" color: #000;\" id=\"6474\">,</span></p><p class=\"s70\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"6475\">email,</p><p class=\"s70\" style=\"padding-left: 161pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6476\">GenerateVcard(name, streetaddress, zip, city, country,</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6477\">email, phone, web, imgFile));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6478\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6479\">\"VCard has been sent to \" </span>+ email;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6480\">}</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6481\">else</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6482\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6483\">SendVcard(<span style=\" color: #A21515;\" id=\"6484\">\"Vcard:\"</span>, <span style=\" color: #A21515;\" id=\"6485\">\"Your vcard is ready. Please open Attachment.</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6486\">\\n Thank you very much \\n Semic Provider\"<span style=\" color: #000;\" id=\"6487\">,</span></p><p class=\"s70\" style=\"padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"6488\">email,</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 104pt;text-align: left;\" id=\"6489\">GenerateVcard(name, streetaddress, zip, city, country, email, phone, web, imgFile));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6490\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6491\">\"VCard has been sent to \" </span>+ email;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6492\"><br id=\"6493\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6494\">imgFile);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6495\"><br id=\"6496\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6497\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6498\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6499\">InsertTable(name, streetaddress, zip, country, phone, email, web,</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6500\"><br id=\"6501\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6502\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6503\"><br id=\"6504\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6505\"><br id=\"6506\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6507\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6508\">/// <span style=\" color: #008000;\" id=\"6509\">Generates the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6510\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6511\">/// &lt;param name=\"firstName\"&gt;<span style=\" color: #008000;\" id=\"6512\">The first name.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6513\">/// &lt;param name=\"streetAddress\"&gt;<span style=\" color: #008000;\" id=\"6514\">The street address.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6515\">/// &lt;param name=\"zip\"&gt;<span style=\" color: #008000;\" id=\"6516\">The zip.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6517\">/// &lt;param name=\"city\"&gt;<span style=\" color: #008000;\" id=\"6518\">The city.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6519\">/// &lt;param name=\"country\"&gt;<span style=\" color: #008000;\" id=\"6520\">The country.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6521\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6522\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6523\">/// &lt;param name=\"phone\"&gt;<span style=\" color: #008000;\" id=\"6524\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6525\">/// &lt;param name=\"web\"&gt;<span style=\" color: #008000;\" id=\"6526\">The web.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6527\">/// &lt;param name=\"image\"&gt;<span style=\" color: #008000;\" id=\"6528\">The image.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6529\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6530\">vcard string </span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6531\">public string <span style=\" color: #000;\" id=\"6532\">GenerateVcard(</span>string <span style=\" color: #000;\" id=\"6533\">firstName, </span>string <span style=\" color: #000;\" id=\"6534\">streetAddress, </span>string <span style=\" color: #000;\" id=\"6535\">zip, </span>string <span style=\" color: #000;\" id=\"6536\">city, </span>string <span style=\" color: #000;\" id=\"6537\">country, </span>string <span style=\" color: #000;\" id=\"6538\">email, </span>string <span style=\" color: #000;\" id=\"6539\">phone, </span>string <span style=\" color: #000;\" id=\"6540\">web, </span>string <span style=\" color: #000;\" id=\"6541\">image)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6542\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6543\"><span style=\" color: #00F;\" id=\"6544\">string </span>url = <span style=\" color: #A21515;\" id=\"6545\">\"\"</span>; <span style=\" color: #00F;\" id=\"6546\">if </span>(web.Length &gt; 0)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6547\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6548\">url = <span style=\" color: #A21515;\" id=\"6549\">\"http://\" </span>+ web.Replace(<span style=\" color: #A21515;\" id=\"6550\">\"http\"</span>, <span style=\" color: #A21515;\" id=\"6551\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6552\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6553\"><span style=\" color: #00F;\" id=\"6554\">var </span>vcardStringBuilder = <span style=\" color: #00F;\" id=\"6555\">new </span><span style=\" color: #2B91AE;\" id=\"6556\">StringBuilder</span>(); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6557\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6558\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6559\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"6560\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"6561\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"6562\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"6563\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"6564\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6565\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6566\">\"URL;type=pref:\" </span>+ url);</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6567\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6568\">\"EMAIL:\" </span>+ email); <span style=\" color: #00F;\" id=\"6569\">if </span>(image != <span style=\" color: #A21515;\" id=\"6570\">\"noimage\"</span>)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6571\">{</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6572\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6573\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"6574\">\":\"</span>);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6575\"><br id=\"6576\"></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: -83pt;text-align: left;\" id=\"6577\">vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"6578\">Convert</span>.ToBase64String(ReadImage(image))); vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"6579\">string</span>.Empty);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6580\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6581\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6582\">\"END:VCARD\"</span>); <span style=\" color: #00F;\" id=\"6583\">return </span>vcardStringBuilder.ToString();</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6584\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6585\"><br id=\"6586\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6587\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6588\">/// <span style=\" color: #008000;\" id=\"6589\">Reads the image.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6590\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6591\">/// &lt;param name=\"image\"&gt;<span style=\" color: #008000;\" id=\"6592\">The image.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6593\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6594\">image bytes </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6595\">public byte</span><span style=\" color: #000;\" id=\"6596\">[] ReadImage(</span><span style=\" color: #00F;\" id=\"6597\">string </span><span style=\" color: #000;\" id=\"6598\">image)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6599\">{</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"6600\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6601\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6602\"><br id=\"6603\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6604\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6605\"><br id=\"6606\"></p><p class=\"s66\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6607\">return <span style=\" color: #2B91AE;\" id=\"6608\">File</span><span style=\" color: #000;\" id=\"6609\">.ReadAllBytes(image);</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6610\"><span style=\" color: #00F;\" id=\"6611\">catch </span>(<span style=\" color: #2B91AE;\" id=\"6612\">Exception </span>ex)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6613\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6614\"><span style=\" color: #00F;\" id=\"6615\">return </span><span style=\" color: #2B91AE;\" id=\"6616\">File</span>.ReadAllBytes(Server.MapPath(<span style=\" color: #A21515;\" id=\"6617\">\"media/logo-vcard.png\"</span>));</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6618\">}</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6619\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6620\"><br id=\"6621\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6622\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6623\">/// <span style=\" color: #008000;\" id=\"6624\">Sends the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6625\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6626\">/// &lt;param name=\"subject\"&gt;<span style=\" color: #008000;\" id=\"6627\">The subject.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6628\">/// &lt;param name=\"body\"&gt;<span style=\" color: #008000;\" id=\"6629\">The body.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6630\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6631\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6632\">/// &lt;param name=\"file\"&gt;<span style=\" color: #008000;\" id=\"6633\">The file.</span>&lt;/param&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6634\">private void <span style=\" color: #000;\" id=\"6635\">SendVcard(</span>string <span style=\" color: #000;\" id=\"6636\">subject, </span>string <span style=\" color: #000;\" id=\"6637\">body, </span>string <span style=\" color: #000;\" id=\"6638\">email, </span>string <span style=\" color: #000;\" id=\"6639\">file)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6640\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6641\"><span style=\" color: #00F;\" id=\"6642\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"6643\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #00F;\" id=\"6644\">try</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6645\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6646\"><br id=\"6647\"></p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6648\">MemoryStream <span style=\" color: #000;\" id=\"6649\">stream = </span><span style=\" color: #00F;\" id=\"6650\">new </span>MemoryStream<span style=\" color: #000;\" id=\"6651\">(byteArray); </span>MailMessage <span style=\" color: #000;\" id=\"6652\">message = </span><span style=\" color: #00F;\" id=\"6653\">new </span>MailMessage<span style=\" color: #000;\" id=\"6654\">(); message.Subject = subject;</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6655\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6656\">message.From = <span style=\" color: #00F;\" id=\"6657\">new </span><span style=\" color: #2B91AE;\" id=\"6658\">MailAddress</span>(<a href=\"mailto:jeevan_2np@yahoo.com\" class=\"s130\" target=\"_blank\" id=\"6659\">\"sender id example: </a><span style=\" color: #A21515;\" id=\"6660\">jeevan_2np@yahoo.com\"</span>);</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6661\">message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6662\">SmtpClient <span style=\" color: #000;\" id=\"6663\">client = </span><span style=\" color: #00F;\" id=\"6664\">new </span>SmtpClient<span style=\" color: #000;\" id=\"6665\">();</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6666\"><span style=\" color: #2B91AE;\" id=\"6667\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"6668\">new </span><span style=\" color: #2B91AE;\" id=\"6669\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"6670\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6671\">client.Host = <span style=\" color: #A21515;\" id=\"6672\">\"smtp address\"</span>; client.Port = smtp port number;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6673\">client.Credentials = <span style=\" color: #00F;\" id=\"6674\">new </span><span style=\" color: #2B91AE;\" id=\"6675\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"6676\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"6677\">\"password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"6678\">true</span>;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6679\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6680\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6681\">catch</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6682\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6683\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6684\">\"Internal Error\"</span>;</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6685\">DownloadVcard(byteArray);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6686\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6687\"><br id=\"6688\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6689\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6690\"><br id=\"6691\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6692\"><span style=\" color: #00F;\" id=\"6693\">protected void </span>CustomValidatorName_ServerValidate(<span style=\" color: #00F;\" id=\"6694\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6695\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6696\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6697\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6698\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6699\"><br id=\"6700\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6701\"><span style=\" color: #00F;\" id=\"6702\">protected void </span>CustomValidatorPostalCode_ServerValidate(<span style=\" color: #00F;\" id=\"6703\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6704\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6705\">{</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"6706\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6707\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6708\"><br id=\"6709\"></p><p class=\"s66\" style=\"padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6710\">if <span style=\" color: #000;\" id=\"6711\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6712\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6713\">args.IsValid = RemoveSpecialCharacter(args.Value).Length == 4;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6714\">}</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6715\">else</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6716\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6717\">args.IsValid = <span style=\" color: #00F;\" id=\"6718\">true</span>;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6719\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6720\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6721\">catch <span style=\" color: #000;\" id=\"6722\">{ args.IsValid = </span>false<span style=\" color: #000;\" id=\"6723\">; }</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6724\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6725\"><br id=\"6726\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6727\"><span style=\" color: #00F;\" id=\"6728\">protected void </span>CustomValidatorCountry_ServerValidate(<span style=\" color: #00F;\" id=\"6729\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6730\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6731\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6732\"><br id=\"6733\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6734\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6735\"><br id=\"6736\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6737\"><span style=\" color: #00F;\" id=\"6738\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"6739\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6740\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6741\">{</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6742\">if <span style=\" color: #000;\" id=\"6743\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6744\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6745\"><br id=\"6746\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6747\">}</p><p class=\"s66\" style=\"text-indent: 0pt;text-align: right;\" id=\"6748\">else</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6749\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6750\"><br id=\"6751\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6752\">}</p><p class=\"s70\" style=\"padding-left: 10pt;text-indent: 0pt;text-align: center;\" id=\"6753\">}</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"6754\">args.IsValid = ValidatePhone(args.Value);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6755\"><br id=\"6756\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"6757\">args.IsValid = <span style=\" color: #00F;\" id=\"6758\">true</span>;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6759\"><br id=\"6760\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6761\"><span style=\" color: #00F;\" id=\"6762\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"6763\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6764\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6765\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6766\">args.IsValid = ValidateEmail(args.Value.ToString());</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6767\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6768\"><br id=\"6769\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6770\"><span style=\" color: #00F;\" id=\"6771\">protected void </span>CustomValidatorWebSite_ServerValidate(<span style=\" color: #00F;\" id=\"6772\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6773\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6774\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6775\"><br id=\"6776\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6777\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6778\"><br id=\"6779\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6780\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6781\">/// <span style=\" color: #008000;\" id=\"6782\">Validates the phone.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6783\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-top: 2pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6784\">/// &lt;param name=\"input\"&gt;<span style=\" color: #008000;\" id=\"6785\">The input.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6786\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6787\">true if it valid </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6788\">public bool </span><span style=\" color: #000;\" id=\"6789\">ValidatePhone(</span><span style=\" color: #00F;\" id=\"6790\">string </span><span style=\" color: #000;\" id=\"6791\">input)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6792\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6793\"><span style=\" color: #00F;\" id=\"6794\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"6795\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"6796\">Regex </span>num = <span style=\" color: #00F;\" id=\"6797\">new </span><span style=\" color: #2B91AE;\" id=\"6798\">Regex</span>(<span style=\" color: #A21515;\" id=\"6799\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6800\">return <span style=\" color: #000;\" id=\"6801\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6802\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6803\"><br id=\"6804\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6805\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6806\">/// <span style=\" color: #008000;\" id=\"6807\">Validates the email.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6808\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6809\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6810\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6811\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6812\">true on valid email </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6813\">public bool </span><span style=\" color: #000;\" id=\"6814\">ValidateEmail(</span><span style=\" color: #00F;\" id=\"6815\">string </span><span style=\" color: #000;\" id=\"6816\">email)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6817\">{</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"6818\">return <span style=\" color: #2B91AE;\" id=\"6819\">Regex</span><span style=\" color: #000;\" id=\"6820\">.IsMatch(email,</span></p><p class=\"s99\" style=\"padding-left: 72pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6821\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"6822\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span style=\" color: #000;\" id=\"6823\">+</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 67pt;text-align: left;\" id=\"6824\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a- zA-Z]{2,6}))$\"<span style=\" color: #000;\" id=\"6825\">);</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6826\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6827\"><br id=\"6828\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6829\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6830\">/// <span style=\" color: #008000;\" id=\"6831\">Removes the special character.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6832\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6833\">/// &lt;param name=\"input\"&gt;<span style=\" color: #008000;\" id=\"6834\">The input.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6835\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6836\">secure string </span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6837\">public string <span style=\" color: #000;\" id=\"6838\">RemoveSpecialCharacter(</span>string <span style=\" color: #000;\" id=\"6839\">input)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6840\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6841\"><span style=\" color: #00F;\" id=\"6842\">return </span><span style=\" color: #2B91AE;\" id=\"6843\">Regex</span>.Replace(input, <span style=\" color: #A21515;\" id=\"6844\">\"[^0-9a-zA-Z. ]+\"</span>, <span style=\" color: #A21515;\" id=\"6845\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6846\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6847\"><br id=\"6848\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6849\"><span style=\" color: #00F;\" id=\"6850\">protected void </span>TextBoxEmail_TextChanged(<span style=\" color: #00F;\" id=\"6851\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6852\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6853\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6854\"><br id=\"6855\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6856\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6857\"><br id=\"6858\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6859\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6860\">/// <span style=\" color: #008000;\" id=\"6861\">Creates the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6862\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6863\">/// &lt;param name=\"tableName\"&gt;<span style=\" color: #008000;\" id=\"6864\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6865\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6866\">true if table created</span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6867\">private static bool </span><span style=\" color: #000;\" id=\"6868\">CreateTable(</span><span style=\" color: #00F;\" id=\"6869\">string </span><span style=\" color: #000;\" id=\"6870\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6871\">{</p><p class=\"s66\" style=\"text-indent: 0pt;text-align: right;\" id=\"6872\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6873\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6874\"><br id=\"6875\"></p><p class=\"s70\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6876\"><span style=\" color: #2B91AE;\" id=\"6877\">SqlConnection </span>connection = <span style=\" color: #00F;\" id=\"6878\">new </span><span style=\" color: #2B91AE;\" id=\"6879\">SqlConnection</span>(<span style=\" color: #2B91AE;\" id=\"6880\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"6881\">string </span>queryString =</p><p class=\"s99\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6882\">@\" CREATE TABLE [vcardimage](</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6883\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 5pt;text-align: left;\" id=\"6884\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 0pt;text-align: left;\" id=\"6885\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"6886\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6887\"><br id=\"6888\"></p><p class=\"s98\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6889\">SqlCommand <span style=\" color: #000;\" id=\"6890\">command = </span><span style=\" color: #00F;\" id=\"6891\">new </span>SqlCommand<span style=\" color: #000;\" id=\"6892\">(queryString, connection);</span></p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6893\">connection.Open(); command.ExecuteNonQuery(); connection.Close();</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6894\">return true<span style=\" color: #000;\" id=\"6895\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6896\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6897\">catch</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6898\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6899\">return false<span style=\" color: #000;\" id=\"6900\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6901\">}</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6902\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6903\"><br id=\"6904\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6905\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6906\">/// <span style=\" color: #008000;\" id=\"6907\">Checks the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6908\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6909\">/// &lt;param name=\"tableName\"&gt;<span style=\" color: #008000;\" id=\"6910\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6911\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6912\">true if table exist </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6913\">private static bool </span><span style=\" color: #000;\" id=\"6914\">CheckTable(</span><span style=\" color: #00F;\" id=\"6915\">string </span><span style=\" color: #000;\" id=\"6916\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6917\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6918\"><span style=\" color: #2B91AE;\" id=\"6919\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"6920\">new </span><span style=\" color: #2B91AE;\" id=\"6921\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"6922\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"6923\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6924\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6925\"><br id=\"6926\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6927\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6928\">/// <span style=\" color: #008000;\" id=\"6929\">Inserts the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6930\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6931\">/// &lt;param name=\"name\"&gt;<span style=\" color: #008000;\" id=\"6932\">The name.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6933\">/// &lt;param name=\"street\"&gt;<span style=\" color: #008000;\" id=\"6934\">The street.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6935\">/// &lt;param name=\"postalcode\"&gt;<span style=\" color: #008000;\" id=\"6936\">The postalcode.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6937\">/// &lt;param name=\"country\"&gt;<span style=\" color: #008000;\" id=\"6938\">The country.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6939\">/// &lt;param name=\"phone\"&gt;<span style=\" color: #008000;\" id=\"6940\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6941\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6942\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6943\">/// &lt;param name=\"website\"&gt;<span style=\" color: #008000;\" id=\"6944\">The website.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6945\">/// &lt;param name=\"imageguid\"&gt;<span style=\" color: #008000;\" id=\"6946\">The imageguid.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6947\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6948\">true on successul data insert</span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6949\">public static bool <span style=\" color: #000;\" id=\"6950\">InsertTable(</span>string <span style=\" color: #000;\" id=\"6951\">name, </span>string <span style=\" color: #000;\" id=\"6952\">street, </span>string <span style=\" color: #000;\" id=\"6953\">postalcode, </span>string <span style=\" color: #000;\" id=\"6954\">country, </span>string <span style=\" color: #000;\" id=\"6955\">phone, </span>string <span style=\" color: #000;\" id=\"6956\">email, </span>string <span style=\" color: #000;\" id=\"6957\">website, </span>string <span style=\" color: #000;\" id=\"6958\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6959\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6960\"><span style=\" color: #00F;\" id=\"6961\">string </span>tableName = <span style=\" color: #A21515;\" id=\"6962\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"6963\">try</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6964\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6965\">if <span style=\" color: #000;\" id=\"6966\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6967\">{ CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6968\">ISqlHelper <span style=\" color: #000;\" id=\"6969\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"6970\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6971\">@\"insert into \" <span style=\" color: #000;\" id=\"6972\">+ tableName + </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"6973\">+</span></p><p class=\"s99\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6974\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6975\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"6976\">,</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6977\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6978\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6979\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6980\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6981\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6982\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6983\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6984\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6985\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6986\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"6987\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"6988\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6989\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6990\"><span style=\" color: #00F;\" id=\"6991\">catch </span>(<span style=\" color: #2B91AE;\" id=\"6992\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6993\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6994\">return false<span style=\" color: #000;\" id=\"6995\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6996\"><br id=\"6997\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6998\"><br id=\"6999\"></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7000\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7001\"><br id=\"7002\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7003\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7004\"><br id=\"7005\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7006\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7007\">/// <span style=\" color: #008000;\" id=\"7008\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7009\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7010\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"7011\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"7012\">public void </span><span style=\" color: #000;\" id=\"7013\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"7014\">byte </span><span style=\" color: #000;\" id=\"7015\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7016\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7017\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"7018\">true</span>;</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7019\">Response.ContentType = <span style=\" color: #A21515;\" id=\"7020\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"7021\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"7022\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7023\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"7024\">);</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7025\">Response.Charset = <span style=\" color: #A21515;\" id=\"7026\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7027\">HttpContext<span style=\" color: #000;\" id=\"7028\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7029\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7030\">}</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7031\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7032\"><br id=\"7033\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7034\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"7035\">GlobalSetting.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7036\"><br id=\"7037\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7038\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7039\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: -6pt;line-height: 114%;text-align: left;\" id=\"7040\">&lt;xsl:stylesheet version=\"1.0\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7041\"><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7042\">xmlns:xsl=\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml=\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library=\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon=\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes=\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath=\"urn:Exslt.ExsltMath\" xmlns:Exslt.ExsltRegularExpressions=\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings=\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets=\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7043\">exclude-result-prefixes=\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7044\"><br id=\"7045\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7046\">&lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7047\">&lt;xsl:param name=\"currentPage\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7048\">&lt;xsl:template match=\"/\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"7049\">&lt;!-- start writing XSLT --&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7050\">&lt;xsl:variable name=\"items\" select=\"$currentPage/ancestor-or-self::*</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7051\">/WebSiteGlobalSettings \"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7052\">&lt;xsl:variable name=\"logo\" select=\"$items/logo\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7053\">&lt;div class=\"vcard\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7054\">&lt;div class=\"logo\"&gt;&lt;a href=\"/\" title=\"start page\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7055\">&lt;img src=\"{$logo}\" alt=\"semic provider logo; visual identity\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: center;\" id=\"7056\">&lt;/a&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7057\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7058\">&lt;div class=\"fn\" &gt;</p><p style=\"padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"7059\">&lt;xsl:value-of select=\"$items/siteName\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7060\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7061\">&lt;h4&gt; &lt;xsl:value-of select=\"$items/slogan\"/&gt; &lt;/h4&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7062\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7063\">&lt;/xsl:template&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7064\">&lt;/xsl:stylesheet&gt;</p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7065\">Navigation.xslt</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7066\"><br id=\"7067\"></p><p style=\"padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7068\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7069\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7070\">&lt;<span class=\"p\" id=\"7071\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7072\">version<span class=\"s56\" id=\"7073\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7074\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7075\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7076\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7077\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7078\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7079\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7080\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7081\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7082\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7083\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7084\">=</span>\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7085\">exclude-result-prefixes<span class=\"s56\" id=\"7086\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7087\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7088\">&lt;<span class=\"p\" id=\"7089\">xsl:output method</span>=<span class=\"p\" id=\"7090\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7091\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7092\">&lt;<span class=\"p\" id=\"7093\">xsl:param name</span>=<span class=\"p\" id=\"7094\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7095\">&lt;<span class=\"p\" id=\"7096\">xsl:template match</span>=<span class=\"p\" id=\"7097\">\"/\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7098\">&lt;<span class=\"p\" id=\"7099\">xsl:variable name</span>=<span class=\"p\" id=\"7100\">\"items\" select</span>=<span class=\"p\" id=\"7101\">\"$currentPage/ancestor-or-self::*</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7102\">/GeneralContent [string(useInNavigation) = '1'] \"<span class=\"s56\" id=\"7103\">/&gt;</span></p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7104\">&lt;<span class=\"p\" id=\"7105\">xsl:if test</span>=<span class=\"p\" id=\"7106\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7107\">&lt;<span class=\"p\" id=\"7108\">ul</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7109\">&lt;<span class=\"p\" id=\"7110\">xsl:for-each select</span>=<span class=\"p\" id=\"7111\">\"$items\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7112\">&lt;<span class=\"p\" id=\"7113\">xsl:if test</span>=<span class=\"p\" id=\"7114\">\"$currentPage/@id = @id\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7115\">&lt;<span class=\"p\" id=\"7116\">li class</span>=<span class=\"p\" id=\"7117\">\"current\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7118\">&lt;<span class=\"p\" id=\"7119\">xsl:value-of select</span>=<span class=\"p\" id=\"7120\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7121\">&lt;/<span class=\"p\" id=\"7122\">li</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7123\">&lt;/<span class=\"p\" id=\"7124\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"7125\">&lt;<span class=\"p\" id=\"7126\">xsl:if test</span>=<span class=\"p\" id=\"7127\">\"$currentPage/@id != @id\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7128\">&lt;<span class=\"p\" id=\"7129\">li class</span>=<span class=\"p\" id=\"7130\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 35pt;text-indent: 0pt;text-align: left;\" id=\"7131\">&lt;<span class=\"p\" id=\"7132\">a href</span>=<span class=\"p\" id=\"7133\">\"{umbraco.library:NiceUrl(@id)}\" title</span>=<span class=\"p\" id=\"7134\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7135\">&lt;<span class=\"p\" id=\"7136\">xsl:value-of select</span>=<span class=\"p\" id=\"7137\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"7138\">&lt;/<span class=\"p\" id=\"7139\">a</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7140\">&lt;/<span class=\"p\" id=\"7141\">li</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7142\">&lt;/<span class=\"p\" id=\"7143\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7144\">&lt;/<span class=\"p\" id=\"7145\">xsl:for-each</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7146\">&lt;/<span class=\"p\" id=\"7147\">ul</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7148\">&lt;/<span class=\"p\" id=\"7149\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7150\">&lt;/<span class=\"p\" id=\"7151\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7152\">&lt;/<span class=\"p\" id=\"7153\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7154\"><br id=\"7155\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7156\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7157\">NewsList.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7158\"><br id=\"7159\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7160\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7161\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7162\">&lt;<span class=\"p\" id=\"7163\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7164\">version<span class=\"s56\" id=\"7165\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7166\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7167\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7168\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7169\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7170\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7171\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7172\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7173\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7174\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7175\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7176\">=</span>\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7177\">exclude-result-prefixes<span class=\"s56\" id=\"7178\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7179\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7180\">&lt;<span class=\"p\" id=\"7181\">xsl:output method</span>=<span class=\"p\" id=\"7182\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7183\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7184\">&lt;<span class=\"p\" id=\"7185\">xsl:param name</span>=<span class=\"p\" id=\"7186\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7187\">&lt;<span class=\"p\" id=\"7188\">xsl:template match</span>=<span class=\"p\" id=\"7189\">\"/\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7190\">&lt;<span class=\"p\" id=\"7191\">xsl:variable name</span>=<span class=\"p\" id=\"7192\">\"newsItems\" select</span>=<span class=\"p\" id=\"7193\">\"$currentPage/ancestor-or-self::*</span></p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7194\">/NewsContainer/NewsArticle \"<span class=\"s56\" id=\"7195\">/&gt;</span></p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7196\">&lt;<span class=\"p\" id=\"7197\">xsl:variable name</span>=<span class=\"p\" id=\"7198\">\"numberofnewsitems\" select</span>=<span class=\"p\" id=\"7199\">\"/macro/numberofnewsitems\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7200\">&lt;<span class=\"p\" id=\"7201\">xsl:if test</span>=<span class=\"p\" id=\"7202\">\"count($newsItems) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7203\">&lt;<span class=\"p\" id=\"7204\">xsl:for-each select</span>=<span class=\"p\" id=\"7205\">\"$newsItems\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"7206\">&lt;<span class=\"p\" id=\"7207\">xsl:sort select</span>=<span class=\"p\" id=\"7208\">\"@createDate\" order</span>=<span class=\"p\" id=\"7209\">\"ascending\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"7210\">&lt;<span class=\"p\" id=\"7211\">xsl:if test</span>=<span class=\"p\" id=\"7212\">\"position() &amp;lt;=$numberofnewsitems\" </span>&gt; &lt;<span class=\"p\" id=\"7213\">div clas</span>=<span class=\"p\" id=\"7214\">\"newsItem\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 27pt;text-indent: 0pt;text-align: center;\" id=\"7215\">&lt;<span class=\"p\" id=\"7216\">h3</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7217\">&lt;<span class=\"p\" id=\"7218\">a href</span>=<span class=\"p\" id=\"7219\">\"{umbraco.library:NiceUrl(@id)}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 45pt;text-indent: 0pt;text-align: left;\" id=\"7220\">&lt;<span class=\"p\" id=\"7221\">xsl:value-of select</span>=<span class=\"p\" id=\"7222\">\"newsTitle\" </span>/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7223\"><br id=\"7224\"></p><p class=\"s56\" style=\"padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7225\">&lt;/<span class=\"p\" id=\"7226\">a</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: center;\" id=\"7227\">&lt;/<span class=\"p\" id=\"7228\">h3</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7229\">&lt;<span class=\"p\" id=\"7230\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7231\">&lt;<span class=\"p\" id=\"7232\">xsl:value-of select</span>=<span class=\"p\" id=\"7233\">\"newsBody\" disable-output-escaping</span>=<span class=\"p\" id=\"7234\">\"yes\" </span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7235\">&lt;/<span class=\"p\" id=\"7236\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7237\">&lt;<span class=\"p\" id=\"7238\">p</span>&gt;</p><p style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7239\">Last update: <span class=\"s56\" id=\"7240\">&lt;</span>xsl:value-of select<span class=\"s56\" id=\"7241\">=</span>\"@updateDate\" <span class=\"s56\" id=\"7242\">/&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7243\"><br id=\"7244\"></p><p class=\"s56\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"7245\">&lt;/<span class=\"p\" id=\"7246\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: center;\" id=\"7247\">&lt;/<span class=\"p\" id=\"7248\">div</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7249\">&lt;/<span class=\"p\" id=\"7250\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7251\">&lt;/<span class=\"p\" id=\"7252\">xsl:for-each</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7253\">&lt;/<span class=\"p\" id=\"7254\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"7255\">&lt;/<span class=\"p\" id=\"7256\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"7257\">&lt;/<span class=\"p\" id=\"7258\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7259\"><br id=\"7260\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7261\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7262\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7263\"><br id=\"7264\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7265\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7266\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7267\">&lt;<span class=\"p\" id=\"7268\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7269\">version<span class=\"s56\" id=\"7270\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7271\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7272\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7273\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:recentVcard<span class=\"s56\" id=\"7274\">=</span>\"urn:recentvcard\" xmlns:umbraco.library<span class=\"s56\" id=\"7275\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7276\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7277\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7278\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7279\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7280\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7281\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7282\">=</span>\"urn:Exslt.ExsltSets\" xmlns:recentvcard<span class=\"s56\" id=\"7283\">=</span>\"urn:recentvcard\" exclude-result-prefixes<span class=\"s56\" id=\"7284\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets recentvcard \"<span class=\"s56\" id=\"7285\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7286\">&lt;<span class=\"p\" id=\"7287\">xsl:output method</span>=<span class=\"p\" id=\"7288\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7289\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7290\">&lt;<span class=\"p\" id=\"7291\">xsl:param name</span>=<span class=\"p\" id=\"7292\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7293\">&lt;<span class=\"p\" id=\"7294\">xsl:template match</span>=<span class=\"p\" id=\"7295\">\"/\"</span>&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7296\">&lt;!-- start writing XSLT --&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7297\">&lt;<span class=\"p\" id=\"7298\">xsl:value-of select</span>=<span class=\"p\" id=\"7299\">\"recentVcard:GetVcardData()\" disable-output-escaping</span>=<span class=\"p\" id=\"7300\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7301\">&lt;/<span class=\"p\" id=\"7302\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7303\">&lt;/<span class=\"p\" id=\"7304\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7305\"><br id=\"7306\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7307\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7308\">RecentVcard.cs</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7309\"><br id=\"7310\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7311\">using <span style=\" color: #000;\" id=\"7312\">System;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7313\">using <span style=\" color: #000;\" id=\"7314\">System.Collections.Generic; </span>using <span style=\" color: #000;\" id=\"7315\">System.Linq;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7316\">using <span style=\" color: #000;\" id=\"7317\">System.Web;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7318\">using <span style=\" color: #000;\" id=\"7319\">umbraco.DataLayer; </span>using <span style=\" color: #000;\" id=\"7320\">umbraco;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7321\">namespace <span style=\" color: #000;\" id=\"7322\">VCardGenerator</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7323\">{</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7324\">public class <span style=\" color: #2B91AE;\" id=\"7325\">RecentVcard</span></p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7326\">{</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7327\">public static string <span style=\" color: #000;\" id=\"7328\">GetVcardData()</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7329\">{</p><p class=\"s98\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"7330\">ISqlHelper <span style=\" color: #000;\" id=\"7331\">getVcard = </span>DataLayerHelper<span style=\" color: #000;\" id=\"7332\">.CreateSqlHelper(</span>GlobalSettings<span style=\" color: #000;\" id=\"7333\">.DbDSN);</span></p><p class=\"s98\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7334\">IRecordsReader <span style=\" color: #000;\" id=\"7335\">read = getVcard.ExecuteReader(</span><span style=\" color: #A21515;\" id=\"7336\">@\"select top 10 id, name,</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7337\">country</p><p class=\"s99\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7338\">from vcardimage where id &gt; @id order by id desc\"<span style=\" color: #000;\" id=\"7339\">,</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7340\">getVcard.CreateParameter(<span style=\" color: #A21515;\" id=\"7341\">\"@id\"</span>, <span style=\" color: #A21515;\" id=\"7342\">\"0\"</span>));</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7343\"><span style=\" color: #00F;\" id=\"7344\">string </span>data = <span style=\" color: #A21515;\" id=\"7345\">\"\"</span>; <span style=\" color: #00F;\" id=\"7346\">while </span>(read.Read())</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7347\">{</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"7348\">data += <span style=\" color: #A21515;\" id=\"7349\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span style=\" color: #A21515;\" id=\"7350\">\"name\"</span>) +</p><p class=\"s99\" style=\"padding-left: 104pt;text-indent: 0pt;text-align: left;\" id=\"7351\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span style=\" color: #000;\" id=\"7352\">+ read.GetString(</span>\"country\"<span style=\" color: #000;\" id=\"7353\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span style=\" color: #000;\" id=\"7354\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7355\">}</p><p class=\"s99\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7356\"><span style=\" color: #00F;\" id=\"7357\">return </span>\"&lt;ul&gt;\" <span style=\" color: #000;\" id=\"7358\">+ data + </span>\"&lt;/ul\"<span style=\" color: #000;\" id=\"7359\">;</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7360\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7361\">}</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7362\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7363\"><span id=\"7364\"><img width=\"602\" height=\"851\" alt=\"image\" src=\"Image_137.png\" id=\"7365\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7366\"><br id=\"7367\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7368\"><br id=\"7369\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7370\"><br id=\"7371\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7372\">About Writer</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7373\">Name: Jivan Thapa</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7374\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p style=\"padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;line-height: 159%;text-align: left;\" id=\"7375\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7376\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7377\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7378\">jeevan_2np@yahoo.com</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7379\"><br id=\"7380\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7381\">About Writer</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7382\">Name: Jivan Thapa</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7383\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p style=\"padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;line-height: 159%;text-align: left;\" id=\"7384\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7385\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7386\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7387\">jeevan_2np@yahoo.com</a></p><p style=\"padding-left: 30pt;text-indent: 0pt;text-align: left;\" id=\"7388\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"7389\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7390\"><br id=\"7391\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7392\"><br id=\"7393\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7394\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7395\">Here I covered:</p><ul id=\"l140\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7397\"><p style=\"display: inline;\" id=\"7398\">Document Type</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7399\"><p style=\"display: inline;\" id=\"7400\">Template</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7401\"><p style=\"display: inline;\" id=\"7402\">Content</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7403\"><p style=\"display: inline;\" id=\"7404\">Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7405\"><p style=\"display: inline;\" id=\"7406\">Extending Umbraco using .net class and User Control</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7407\"><p style=\"display: inline;\" id=\"7408\">And more ….</p></li></ul><p style=\"padding-top: 11pt;text-indent: 0pt;text-align: right;\" id=\"7409\">Jivan Thapa</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7410\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7411\">Here I covered:</p><ul id=\"l141\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7413\"><p style=\"display: inline;\" id=\"7414\">Document Type</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7415\"><p style=\"display: inline;\" id=\"7416\">Template</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7417\"><p style=\"display: inline;\" id=\"7418\">Content</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7419\"><p style=\"display: inline;\" id=\"7420\">Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7421\"><p style=\"display: inline;\" id=\"7422\">Extending Umbraco using .net class and User Control</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7423\"><p style=\"display: inline;\" id=\"7424\">And more ….</p></li></ul><p style=\"padding-top: 11pt;text-indent: 0pt;text-align: right;\" id=\"7425\">Jivan Thapa</p><p style=\"padding-left: 30pt;text-indent: 0pt;text-align: left;\" id=\"7426\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"7427\"> </span></p></div></div>","templateType":"article:topic-guide","pageStyleReducedHeading":"<h2  id=\"heading6008\" class=\"heading6008\"><a name=\"bookmark76\" id=\"6009\" >Extra files:</a></h2>","pageStyleReducedContent":"<div id=\"contentheading6008\" ><h3  id=\"heading6010\" class=\"heading6010\"><a name=\"bookmark77\" id=\"6011\" >Web grid.</a></h3><div id=\"contentheading6010\" ><p  id=\"6012\"><span id=\"6013\"><img width=\"599\" height=\"371\" alt=\"image\" src=\"Image_136.jpg\" id=\"6014\"></span></p><h3  id=\"6015\"><a name=\"bookmark78\" id=\"6016\">File “VcardControl.ascx”</a></h3><p  id=\"6017\"><span class=\"s65\"  id=\"6018\">&lt;%</span><span class=\"s66\" id=\"6019\">@ </span><span class=\"s67\" id=\"6020\">Control </span><span class=\"s68\" id=\"6021\">Language</span><span class=\"s66\" id=\"6022\">=\"C#\" </span><span class=\"s68\" id=\"6023\">AutoEventWireup</span><span class=\"s66\" id=\"6024\">=\"true\" </span><span class=\"s68\" id=\"6025\">CodeBehind</span><span class=\"s66\" id=\"6026\">=\"VcardControl.ascx.cs\" </span><span class=\"s68\" id=\"6027\">Inherits</span><span class=\"s66\" id=\"6028\">=\"VCardGenerator.VcardControl\" </span><span class=\"s65\"  id=\"6029\">%&gt;</span></p><p  id=\"6030\"><br id=\"6031\"></p><p class=\"s66\"  id=\"6032\">&lt;<span  id=\"6033\">form </span><span  id=\"6034\">id</span>=\"FormVcard\" <span  id=\"6035\">runat</span>=\"server\"&gt;</p><p class=\"s66\"  id=\"6036\">&lt;<span  id=\"6037\">div </span><span  id=\"6038\">class</span>=\"errorMessage\"&gt;</p><p class=\"s66\"  id=\"6039\">&lt;<span  id=\"6040\">asp</span>:<span  id=\"6041\">Label </span><span  id=\"6042\">ID</span>=\"LabelNotice\" <span  id=\"6043\">runat</span>=\"server\" <span  id=\"6044\">Text</span>=\"\"&gt;&lt;/<span  id=\"6045\">asp</span>:<span  id=\"6046\">Label</span>&gt;</p><p class=\"s66\"  id=\"6047\">&lt;<span  id=\"6048\">asp</span>:<span  id=\"6049\">ValidationSummary </span><span  id=\"6050\">ID</span>=\"ValidationSummary\" <span  id=\"6051\">runat</span>=\"server\" <span  id=\"6052\">ForeColor</span>=\"#FF6666\"</p><p class=\"s66\"  id=\"6053\">/&gt;</p><p class=\"s66\"  id=\"6054\">&lt;/<span  id=\"6055\">div</span>&gt;</p><p class=\"s66\"  id=\"6056\">&lt;<span  id=\"6057\">table </span>&gt;</p><p class=\"s66\"  id=\"6058\">&lt;<span  id=\"6059\">tr </span><span  id=\"6060\">class</span>=\"name\"&gt;</p><p class=\"s66\"  id=\"6061\">&lt;<span  id=\"6062\">td</span>&gt; <span  id=\"6063\">Name: </span>&lt;/<span  id=\"6064\">td</span>&gt;&lt;<span  id=\"6065\">td</span>&gt;&lt;<span  id=\"6066\">asp</span>:<span  id=\"6067\">TextBox </span><span  id=\"6068\">ID</span>=\"TextBoxName\" <span  id=\"6069\">runat</span>=server&gt;&lt;/<span  id=\"6070\">asp</span>:<span  id=\"6071\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6072\">&lt;<span  id=\"6073\">asp</span>:<span  id=\"6074\">RequiredFieldValidator </span><span  id=\"6075\">ID</span>=\"RequiredFieldValidatorName\" <span  id=\"6076\">runat</span>=\"server\" <span  id=\"6077\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"6078\">ErrorMessage</span>=\"Name Required\" <span  id=\"6079\">Font-</span></p><p class=\"s68\"  id=\"6080\">Size<span  id=\"6081\">=\"Small\"</span></p><p class=\"s66\"  id=\"6082\"><span  id=\"6083\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span  id=\"6084\">asp</span>:<span  id=\"6085\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\"  id=\"6086\">&lt;<span  id=\"6087\">asp</span>:<span  id=\"6088\">CustomValidator </span><span  id=\"6089\">ID</span>=\"CustomValidatorName\" <span  id=\"6090\">runat</span>=\"server\" <span  id=\"6091\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"6092\">ErrorMessage</span>=\"Name is not Valid\" <span  id=\"6093\">ForeColor</span>=\"#CC0000\"</p><p class=\"s66\"  id=\"6094\"><span  id=\"6095\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span  id=\"6096\">*</span>&lt;/<span  id=\"6097\">asp</span>:<span  id=\"6098\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6099\">&lt;/<span  id=\"6100\">td</span>&gt;</p><p class=\"s66\"  id=\"6101\">&lt;/<span  id=\"6102\">tr</span>&gt;</p><p class=\"s66\"  id=\"6103\">&lt;<span  id=\"6104\">tr </span><span  id=\"6105\">class</span>=\"street\"&gt;</p><p class=\"s66\"  id=\"6106\">&lt;<span  id=\"6107\">td</span>&gt; <span  id=\"6108\">Street:</span>&lt;/<span  id=\"6109\">td</span>&gt;&lt;<span  id=\"6110\">td</span>&gt; &lt;<span  id=\"6111\">asp</span>:<span  id=\"6112\">TextBox </span><span  id=\"6113\">ID</span>=\"TextBoxStreet\" <span  id=\"6114\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6115\">asp</span>:<span  id=\"6116\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6117\">&lt;/<span  id=\"6118\">td</span>&gt;</p><p class=\"s66\"  id=\"6119\">&lt;/<span  id=\"6120\">tr</span>&gt;</p><p class=\"s66\"  id=\"6121\">&lt;<span  id=\"6122\">tr </span><span  id=\"6123\">class</span>=\"postalCode\"&gt;</p><p class=\"s66\"  id=\"6124\">&lt;<span  id=\"6125\">td</span>&gt; <span  id=\"6126\">PostalCode:</span>&lt;/<span  id=\"6127\">td</span>&gt;&lt;<span  id=\"6128\">td</span>&gt; &lt;<span  id=\"6129\">asp</span>:<span  id=\"6130\">TextBox </span><span  id=\"6131\">ID</span>=\"TextBoxPostalCode\" <span  id=\"6132\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6133\">asp</span>:<span  id=\"6134\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6135\">&lt;<span  id=\"6136\">asp</span>:<span  id=\"6137\">CustomValidator </span><span  id=\"6138\">ID</span>=\"CustomValidatorPostalCode\" <span  id=\"6139\">runat</span>=\"server\" <span  id=\"6140\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6141\">ErrorMessage<span  id=\"6142\">=\"Postal Code 4 digit\" </span>ControlToValidate<span  id=\"6143\">=\"TextBoxPostalCode\"</span></p><p  id=\"6144\"><br id=\"6145\"></p><p class=\"s66\"  id=\"6146\"><span  id=\"6147\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span  id=\"6148\">*</span>&lt;/<span  id=\"6149\">asp</span>:<span  id=\"6150\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6151\">&lt;/<span  id=\"6152\">td</span>&gt;</p><p class=\"s66\"  id=\"6153\">&lt;/<span  id=\"6154\">tr</span>&gt;</p><p class=\"s66\"  id=\"6155\">&lt;<span  id=\"6156\">tr </span><span  id=\"6157\">class</span>=\"city\"&gt;</p><p class=\"s66\"  id=\"6158\">&lt;<span  id=\"6159\">td</span>&gt; <span  id=\"6160\">City:</span>&lt;/<span  id=\"6161\">td</span>&gt;&lt;<span  id=\"6162\">td</span>&gt; &lt;<span  id=\"6163\">asp</span>:<span  id=\"6164\">TextBox </span><span  id=\"6165\">ID</span>=\"TextBoxCity\" <span  id=\"6166\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6167\">asp</span>:<span  id=\"6168\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6169\">&lt;/<span  id=\"6170\">tr</span>&gt;</p><p class=\"s66\"  id=\"6171\">&lt;<span  id=\"6172\">tr </span><span  id=\"6173\">class</span>=\"country\"&gt;</p><p class=\"s66\"  id=\"6174\">&lt;<span  id=\"6175\">td</span>&gt; <span  id=\"6176\">Country:</span>&lt;/<span  id=\"6177\">td</span>&gt;&lt;<span  id=\"6178\">td</span>&gt; &lt;<span  id=\"6179\">asp</span>:<span  id=\"6180\">TextBox </span><span  id=\"6181\">ID</span>=\"TextBoxCountry\" <span  id=\"6182\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6183\">asp</span>:<span  id=\"6184\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6185\">&lt;<span  id=\"6186\">asp</span>:<span  id=\"6187\">CustomValidator </span><span  id=\"6188\">ID</span>=\"CustomValidatorCountry\" <span  id=\"6189\">runat</span>=\"server\" <span  id=\"6190\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6191\">ErrorMessage<span  id=\"6192\">=\"Country Not Valid\" </span>ControlToValidate<span  id=\"6193\">=\"TextBoxCountry\"</span></p><p  id=\"6194\"><br id=\"6195\"></p><p class=\"s66\"  id=\"6196\"><span  id=\"6197\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span  id=\"6198\">*</span>&lt;/<span  id=\"6199\">asp</span>:<span  id=\"6200\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6201\">&lt;/<span  id=\"6202\">td</span>&gt;</p><p class=\"s66\"  id=\"6203\">&lt;/<span  id=\"6204\">tr</span>&gt;</p><p class=\"s66\"  id=\"6205\">&lt;<span  id=\"6206\">tr </span><span  id=\"6207\">class</span>=\"phone\"&gt;</p><p class=\"s66\"  id=\"6208\">&lt;<span  id=\"6209\">td</span>&gt; <span  id=\"6210\">Phone:</span><span  id=\"6211\">&amp;nbsp; </span><span  id=\"6212\">+45</span>&lt;/<span  id=\"6213\">td</span>&gt;&lt;<span  id=\"6214\">td</span>&gt;&lt;<span  id=\"6215\">asp</span>:<span  id=\"6216\">TextBox </span><span  id=\"6217\">ID</span>=\"TextBoxPhone\" <span  id=\"6218\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6219\">asp</span>:<span  id=\"6220\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6221\">&lt;<span  id=\"6222\">asp</span>:<span  id=\"6223\">CustomValidator </span><span  id=\"6224\">ID</span>=\"CustomValidatorPhone\" <span  id=\"6225\">runat</span>=\"server\" <span  id=\"6226\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6227\">ErrorMessage<span  id=\"6228\">=\"Phone must be 8 digit, Without +45 \" </span>ControlToValidate<span  id=\"6229\">=\"TextBoxPhone\"</span></p><p  id=\"6230\"><br id=\"6231\"></p><p class=\"s66\"  id=\"6232\"><span  id=\"6233\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span  id=\"6234\">*</span>&lt;/<span  id=\"6235\">asp</span>:<span  id=\"6236\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6237\">&lt;/<span  id=\"6238\">td</span>&gt;</p><p  id=\"6239\"><br id=\"6240\"></p><p class=\"s66\"  id=\"6241\">&lt;/<span  id=\"6242\">tr</span>&gt;</p><p class=\"s66\"  id=\"6243\">&lt;<span  id=\"6244\">tr </span><span  id=\"6245\">class</span>=\"email\"&gt;</p><p class=\"s66\"  id=\"6246\">&lt;<span  id=\"6247\">td</span>&gt; <span  id=\"6248\">Email: </span>&lt;/<span  id=\"6249\">td</span>&gt;&lt;<span  id=\"6250\">td</span>&gt;&lt;<span  id=\"6251\">asp</span>:<span  id=\"6252\">TextBox </span><span  id=\"6253\">ID</span>=\"TextBoxEmail\" <span  id=\"6254\">runat</span>=\"server\" <span  id=\"6255\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span  id=\"6256\">asp</span>:<span  id=\"6257\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6258\">&lt;<span  id=\"6259\">asp</span>:<span  id=\"6260\">RequiredFieldValidator </span><span  id=\"6261\">ID</span>=\"RequiredFieldValidatorEmail\" <span  id=\"6262\">runat</span>=\"server\" <span  id=\"6263\">Font-Size</span>=\"Small\"</p><p class=\"s66\"  id=\"6264\"><span  id=\"6265\">ErrorMessage</span>=\"Email Required\" <span  id=\"6266\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span  id=\"6267\">Email Required</span>&lt;/<span  id=\"6268\">asp</span>:<span  id=\"6269\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\"  id=\"6270\">&lt;<span  id=\"6271\">asp</span>:<span  id=\"6272\">CustomValidator </span><span  id=\"6273\">ID</span>=\"CustomValidatorEmail\" <span  id=\"6274\">runat</span>=\"server\" <span  id=\"6275\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6276\">ErrorMessage<span  id=\"6277\">=\"Email Not Valid\" </span>ControlToValidate<span  id=\"6278\">=\"TextBoxEmail\"</span></p><p  id=\"6279\"><br id=\"6280\"></p><p class=\"s66\"  id=\"6281\"><span  id=\"6282\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span  id=\"6283\">*</span>&lt;/<span  id=\"6284\">asp</span>:<span  id=\"6285\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6286\">&lt;/<span  id=\"6287\">td</span>&gt;</p><p class=\"s66\"  id=\"6288\">&lt;/<span  id=\"6289\">tr</span>&gt;</p><p class=\"s66\"  id=\"6290\">&lt;<span  id=\"6291\">tr </span><span  id=\"6292\">class</span>=\"website\"&gt;</p><p class=\"s66\"  id=\"6293\">&lt;<span  id=\"6294\">td</span>&gt; <span  id=\"6295\">WebSite:</span>&lt;/<span  id=\"6296\">td</span>&gt;&lt;<span  id=\"6297\">td</span>&gt; &lt;<span  id=\"6298\">asp</span>:<span  id=\"6299\">TextBox </span><span  id=\"6300\">ID</span>=\"TextBoxWebsite\" <span  id=\"6301\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6302\">asp</span>:<span  id=\"6303\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6304\">&lt;<span  id=\"6305\">asp</span>:<span  id=\"6306\">CustomValidator </span><span  id=\"6307\">ID</span>=\"CustomValidatorWebSite\" <span  id=\"6308\">runat</span>=\"server\" <span  id=\"6309\">ErrorMessage</span>=\"Website not valid\" <span  id=\"6310\">ControlToValidate</span>=\"TextBoxWebsite\"</p><p  id=\"6311\"><br id=\"6312\"></p><p class=\"s66\"  id=\"6313\"><span  id=\"6314\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span  id=\"6315\">*</span>&lt;/<span  id=\"6316\">asp</span>:<span  id=\"6317\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6318\">&lt;/<span  id=\"6319\">td</span>&gt;</p><p class=\"s66\"  id=\"6320\">&lt;/<span  id=\"6321\">tr</span>&gt;</p><p class=\"s66\"  id=\"6322\">&lt;<span  id=\"6323\">tr </span><span  id=\"6324\">class</span>=\"photo\"&gt;</p><p class=\"s66\"  id=\"6325\">&lt;<span  id=\"6326\">td</span>&gt; <span  id=\"6327\">Photo:</span>&lt;/<span  id=\"6328\">td</span>&gt;&lt;<span  id=\"6329\">td</span>&gt; &lt;<span  id=\"6330\">asp</span>:<span  id=\"6331\">FileUpload </span><span  id=\"6332\">ID</span>=\"FileUploadPhoto\" <span  id=\"6333\">runat</span>=\"server\" /&gt;</p><p class=\"s66\"  id=\"6334\">&lt;/<span  id=\"6335\">td</span>&gt;</p><p class=\"s66\"  id=\"6336\">&lt;/<span  id=\"6337\">tr</span>&gt;</p><p class=\"s66\"  id=\"6338\">&lt;<span  id=\"6339\">tr </span>&gt;</p><p class=\"s66\"  id=\"6340\">&lt;<span  id=\"6341\">td</span>&gt;</p><p class=\"s66\"  id=\"6342\"><span  id=\"6343\">&amp;nbsp;</span>&lt;/<span  id=\"6344\">td</span>&gt; &lt;<span  id=\"6345\">td</span>&gt; &lt;<span  id=\"6346\">asp</span>:<span  id=\"6347\">Button </span><span  id=\"6348\">ID</span>=\"ButtonCreate\" <span  id=\"6349\">runat</span>=\"server\" <span  id=\"6350\">Text</span>=\"Create\"</p><p class=\"s66\"  id=\"6351\"><span  id=\"6352\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span  id=\"6353\">td</span>&gt;</p><p class=\"s66\"  id=\"6354\">&lt;/<span  id=\"6355\">tr</span>&gt;</p><p  id=\"6356\"><br id=\"6357\"></p><p class=\"s66\"  id=\"6358\">&lt;/<span  id=\"6359\">table</span>&gt;</p><p class=\"s66\"  id=\"6360\">&lt;/<span  id=\"6361\">form</span>&gt;</p><p  id=\"6362\"><a name=\"a68\" id=\"6363\"><span class=\"p\" id=\"6364\">File </span></a><span class=\"s128\"  id=\"6365\">VcardControl.ascx.cs</span></p><p  id=\"6366\"><br id=\"6367\"></p><p class=\"s66\"  id=\"6368\">using <span  id=\"6369\">System;</span></p><p class=\"s66\"  id=\"6370\">using <span  id=\"6371\">System.Collections.Generic; </span>using <span  id=\"6372\">System.Linq;</span></p><p class=\"s66\"  id=\"6373\">using <span  id=\"6374\">System.Web;</span></p><p class=\"s66\"  id=\"6375\">using <span  id=\"6376\">umbraco.DataLayer.SqlHelpers.SqlServer; </span>using <span  id=\"6377\">umbraco.DataLayer;</span></p><p class=\"s66\"  id=\"6378\">using <span  id=\"6379\">umbraco;</span></p><p class=\"s66\"  id=\"6380\">using <span  id=\"6381\">System.Data.SqlClient;</span></p><p class=\"s66\"  id=\"6382\">using <span  id=\"6383\">System.Text.RegularExpressions; </span>using <span  id=\"6384\">System.Web.UI.WebControls; </span>using <span  id=\"6385\">System.IO;</span></p><p class=\"s66\"  id=\"6386\">using <span  id=\"6387\">System.Text; </span>using <span  id=\"6388\">System.Net.Mail; </span>using <span  id=\"6389\">System.Net;</span></p><p  id=\"6390\"><br id=\"6391\"></p><p class=\"s66\"  id=\"6392\">namespace <span  id=\"6393\">VCardGenerator</span></p><p class=\"s70\"  id=\"6394\">{</p><p class=\"s98\"  id=\"6395\"><span  id=\"6396\">public partial class </span>VcardControl <span  id=\"6397\">: System.Web.UI.</span>UserControl</p><p class=\"s70\"  id=\"6398\">{</p><p class=\"s103\"  id=\"6399\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6400\">/// <span  id=\"6401\">Handles the Load event of the Page control.</span></p><p class=\"s103\"  id=\"6402\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6403\">/// &lt;param name=\"sender\"&gt;<span  id=\"6404\">The source of the event.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6405\">/// &lt;param name=\"e\"&gt;<span  id=\"6406\">The </span>&lt;see cref=\"System.EventArgs\"/&gt; <span  id=\"6407\">instance containing the event data.</span>&lt;/param&gt;</p><p class=\"s70\"  id=\"6408\"><span  id=\"6409\">protected void </span>Page_Load(<span  id=\"6410\">object </span>sender, <span  id=\"6411\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6412\">{</p><p  id=\"6413\"><br id=\"6414\"></p><p class=\"s70\"  id=\"6415\">}</p><p  id=\"6416\"><br id=\"6417\"></p><p class=\"s70\"  id=\"6418\"><span  id=\"6419\">protected void </span>ButtonCreate_Click(<span  id=\"6420\">object </span>sender, <span  id=\"6421\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6422\">{</p><p class=\"s66\"  id=\"6423\">if <span  id=\"6424\">(Page.IsValid)</span></p><p class=\"s70\"  id=\"6425\">{</p><p class=\"s70\"  id=\"6426\"><span  id=\"6427\">Guid </span>id = <span  id=\"6428\">Guid</span>.NewGuid(); <span  id=\"6429\">string </span>imgFile = <span  id=\"6430\">\"noimage\"</span>;</p><p class=\"s66\"  id=\"6431\">string <span  id=\"6432\">name = RemoveSpecialCharacter(TextBoxName.Text);</span></p><p class=\"s66\"  id=\"6433\">string <span  id=\"6434\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"6435\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"6436\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"6437\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"6438\">string <span  id=\"6439\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"6440\">string <span  id=\"6441\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"6442\">phone = RemoveSpecialCharacter(TextBoxPhone.Text); </span>if <span  id=\"6443\">(FileUploadPhoto.PostedFile != </span>null <span  id=\"6444\">&amp;&amp;</span></p><p class=\"s70\"  id=\"6445\">FileUploadPhoto.PostedFile.ContentLength &gt; 0)</p><p class=\"s70\"  id=\"6446\">{</p><p class=\"s70\"  id=\"6447\"><span  id=\"6448\">string </span>guid = id.ToString(<span  id=\"6449\">\"N\"</span>);</p><p class=\"s70\"  id=\"6450\"><span  id=\"6451\">string </span>imageDirectory = Server.MapPath(<span  id=\"6452\">\"vcardimage\"</span>); <span  id=\"6453\">if </span>(<span  id=\"6454\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\"  id=\"6455\">{</p><p class=\"s70\"  id=\"6456\">FileUploadPhoto.PostedFile.SaveAs( Server.MapPath(<span  id=\"6457\">\"/vcardimage/\" </span>+ guid +</p><p class=\"s70\"  id=\"6458\">FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"6459\">}</p><p class=\"s66\"  id=\"6460\">else</p><p class=\"s70\"  id=\"6461\">{</p><p class=\"s70\"  id=\"6462\"><span  id=\"6463\">Directory</span>.CreateDirectory(Server.MapPath(<span  id=\"6464\">\"vcardimage\"</span>));</p><p class=\"s70\"  id=\"6465\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span  id=\"6466\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"6467\">}</p><p  id=\"6468\"><br id=\"6469\"></p><p class=\"s70\"  id=\"6470\">imgFile = imageDirectory + <span  id=\"6471\">\"/\" </span>+ guid + FileUploadPhoto.FileName; SendVcard(<span  id=\"6472\">\"Your Vcard:\"</span>,</p><p class=\"s99\"  id=\"6473\">\"Your vcard is ready. Please open Attachment. \\n Thank you very much \\n Semic Provider\"<span  id=\"6474\">,</span></p><p class=\"s70\"  id=\"6475\">email,</p><p class=\"s70\"  id=\"6476\">GenerateVcard(name, streetaddress, zip, city, country,</p><p class=\"s70\"  id=\"6477\">email, phone, web, imgFile));</p><p class=\"s70\"  id=\"6478\">LabelNotice.Text = <span  id=\"6479\">\"VCard has been sent to \" </span>+ email;</p><p class=\"s70\"  id=\"6480\">}</p><p class=\"s66\"  id=\"6481\">else</p><p class=\"s70\"  id=\"6482\">{</p><p class=\"s70\"  id=\"6483\">SendVcard(<span  id=\"6484\">\"Vcard:\"</span>, <span  id=\"6485\">\"Your vcard is ready. Please open Attachment.</span></p><p class=\"s99\"  id=\"6486\">\\n Thank you very much \\n Semic Provider\"<span  id=\"6487\">,</span></p><p class=\"s70\"  id=\"6488\">email,</p><p class=\"s70\"  id=\"6489\">GenerateVcard(name, streetaddress, zip, city, country, email, phone, web, imgFile));</p><p class=\"s70\"  id=\"6490\">LabelNotice.Text = <span  id=\"6491\">\"VCard has been sent to \" </span>+ email;</p><p  id=\"6492\"><br id=\"6493\"></p><p class=\"s70\"  id=\"6494\">imgFile);</p><p  id=\"6495\"><br id=\"6496\"></p><p class=\"s70\"  id=\"6497\">}</p><p class=\"s70\"  id=\"6498\">}</p><p class=\"s70\"  id=\"6499\">InsertTable(name, streetaddress, zip, country, phone, email, web,</p><p  id=\"6500\"><br id=\"6501\"></p><p class=\"s70\"  id=\"6502\">}</p><p  id=\"6503\"><br id=\"6504\"></p><p  id=\"6505\"><br id=\"6506\"></p><p class=\"s103\"  id=\"6507\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6508\">/// <span  id=\"6509\">Generates the vcard.</span></p><p class=\"s103\"  id=\"6510\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6511\">/// &lt;param name=\"firstName\"&gt;<span  id=\"6512\">The first name.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6513\">/// &lt;param name=\"streetAddress\"&gt;<span  id=\"6514\">The street address.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6515\">/// &lt;param name=\"zip\"&gt;<span  id=\"6516\">The zip.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6517\">/// &lt;param name=\"city\"&gt;<span  id=\"6518\">The city.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6519\">/// &lt;param name=\"country\"&gt;<span  id=\"6520\">The country.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6521\">/// &lt;param name=\"email\"&gt;<span  id=\"6522\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6523\">/// &lt;param name=\"phone\"&gt;<span  id=\"6524\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6525\">/// &lt;param name=\"web\"&gt;<span  id=\"6526\">The web.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6527\">/// &lt;param name=\"image\"&gt;<span  id=\"6528\">The image.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6529\">/// &lt;returns&gt; <span  id=\"6530\">vcard string </span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6531\">public string <span  id=\"6532\">GenerateVcard(</span>string <span  id=\"6533\">firstName, </span>string <span  id=\"6534\">streetAddress, </span>string <span  id=\"6535\">zip, </span>string <span  id=\"6536\">city, </span>string <span  id=\"6537\">country, </span>string <span  id=\"6538\">email, </span>string <span  id=\"6539\">phone, </span>string <span  id=\"6540\">web, </span>string <span  id=\"6541\">image)</span></p><p class=\"s70\"  id=\"6542\">{</p><p class=\"s70\"  id=\"6543\"><span  id=\"6544\">string </span>url = <span  id=\"6545\">\"\"</span>; <span  id=\"6546\">if </span>(web.Length &gt; 0)</p><p class=\"s70\"  id=\"6547\">{</p><p class=\"s70\"  id=\"6548\">url = <span  id=\"6549\">\"http://\" </span>+ web.Replace(<span  id=\"6550\">\"http\"</span>, <span  id=\"6551\">\"\"</span>);</p><p class=\"s70\"  id=\"6552\">}</p><p class=\"s70\"  id=\"6553\"><span  id=\"6554\">var </span>vcardStringBuilder = <span  id=\"6555\">new </span><span  id=\"6556\">StringBuilder</span>(); vcardStringBuilder.AppendLine(<span  id=\"6557\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"6558\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"6559\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"6560\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"6561\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"6562\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"6563\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"6564\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"6565\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"6566\">\"URL;type=pref:\" </span>+ url);</p><p class=\"s70\"  id=\"6567\">vcardStringBuilder.AppendLine(<span  id=\"6568\">\"EMAIL:\" </span>+ email); <span  id=\"6569\">if </span>(image != <span  id=\"6570\">\"noimage\"</span>)</p><p class=\"s70\"  id=\"6571\">{</p><p class=\"s70\"  id=\"6572\">vcardStringBuilder.AppendLine(<span  id=\"6573\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"6574\">\":\"</span>);</p><p  id=\"6575\"><br id=\"6576\"></p><p class=\"s70\"  id=\"6577\">vcardStringBuilder.AppendLine(<span  id=\"6578\">Convert</span>.ToBase64String(ReadImage(image))); vcardStringBuilder.AppendLine(<span  id=\"6579\">string</span>.Empty);</p><p class=\"s70\"  id=\"6580\">}</p><p class=\"s70\"  id=\"6581\">vcardStringBuilder.AppendLine(<span  id=\"6582\">\"END:VCARD\"</span>); <span  id=\"6583\">return </span>vcardStringBuilder.ToString();</p><p class=\"s70\"  id=\"6584\">}</p><p  id=\"6585\"><br id=\"6586\"></p><p class=\"s103\"  id=\"6587\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6588\">/// <span  id=\"6589\">Reads the image.</span></p><p class=\"s103\"  id=\"6590\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6591\">/// &lt;param name=\"image\"&gt;<span  id=\"6592\">The image.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6593\">/// &lt;returns&gt; <span  id=\"6594\">image bytes </span>&lt;/returns&gt; <span  id=\"6595\">public byte</span><span  id=\"6596\">[] ReadImage(</span><span  id=\"6597\">string </span><span  id=\"6598\">image)</span></p><p class=\"s70\"  id=\"6599\">{</p><p class=\"s66\"  id=\"6600\">try</p><p class=\"s70\"  id=\"6601\">{</p><p  id=\"6602\"><br id=\"6603\"></p><p class=\"s70\"  id=\"6604\">}</p><p  id=\"6605\"><br id=\"6606\"></p><p class=\"s66\"  id=\"6607\">return <span  id=\"6608\">File</span><span  id=\"6609\">.ReadAllBytes(image);</span></p><p class=\"s70\"  id=\"6610\"><span  id=\"6611\">catch </span>(<span  id=\"6612\">Exception </span>ex)</p><p class=\"s70\"  id=\"6613\">{</p><p class=\"s70\"  id=\"6614\"><span  id=\"6615\">return </span><span  id=\"6616\">File</span>.ReadAllBytes(Server.MapPath(<span  id=\"6617\">\"media/logo-vcard.png\"</span>));</p><p class=\"s70\"  id=\"6618\">}</p><p class=\"s70\"  id=\"6619\">}</p><p  id=\"6620\"><br id=\"6621\"></p><p class=\"s103\"  id=\"6622\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6623\">/// <span  id=\"6624\">Sends the vcard.</span></p><p class=\"s103\"  id=\"6625\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6626\">/// &lt;param name=\"subject\"&gt;<span  id=\"6627\">The subject.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6628\">/// &lt;param name=\"body\"&gt;<span  id=\"6629\">The body.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6630\">/// &lt;param name=\"email\"&gt;<span  id=\"6631\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6632\">/// &lt;param name=\"file\"&gt;<span  id=\"6633\">The file.</span>&lt;/param&gt;</p><p class=\"s66\"  id=\"6634\">private void <span  id=\"6635\">SendVcard(</span>string <span  id=\"6636\">subject, </span>string <span  id=\"6637\">body, </span>string <span  id=\"6638\">email, </span>string <span  id=\"6639\">file)</span></p><p class=\"s70\"  id=\"6640\">{</p><p class=\"s70\"  id=\"6641\"><span  id=\"6642\">byte</span>[] byteArray = <span  id=\"6643\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"6644\">try</span></p><p class=\"s70\"  id=\"6645\">{</p><p  id=\"6646\"><br id=\"6647\"></p><p class=\"s98\"  id=\"6648\">MemoryStream <span  id=\"6649\">stream = </span><span  id=\"6650\">new </span>MemoryStream<span  id=\"6651\">(byteArray); </span>MailMessage <span  id=\"6652\">message = </span><span  id=\"6653\">new </span>MailMessage<span  id=\"6654\">(); message.Subject = subject;</span></p><p class=\"s70\"  id=\"6655\">message.Body = body;</p><p class=\"s70\"  id=\"6656\">message.From = <span  id=\"6657\">new </span><span  id=\"6658\">MailAddress</span>(<a href=\"mailto:jeevan_2np@yahoo.com\" class=\"s130\" target=\"_blank\" id=\"6659\">\"sender id example: </a><span  id=\"6660\">jeevan_2np@yahoo.com\"</span>);</p><p class=\"s70\"  id=\"6661\">message.To.Add(email);</p><p class=\"s98\"  id=\"6662\">SmtpClient <span  id=\"6663\">client = </span><span  id=\"6664\">new </span>SmtpClient<span  id=\"6665\">();</span></p><p class=\"s70\"  id=\"6666\"><span  id=\"6667\">Attachment </span>vcard = <span  id=\"6668\">new </span><span  id=\"6669\">Attachment</span>(stream, <span  id=\"6670\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"6671\">client.Host = <span  id=\"6672\">\"smtp address\"</span>; client.Port = smtp port number;</p><p class=\"s70\"  id=\"6673\">client.Credentials = <span  id=\"6674\">new </span><span  id=\"6675\">NetworkCredential</span>(<span  id=\"6676\">\"user id \"</span>, <span  id=\"6677\">\"password\"</span>); client.EnableSsl = <span  id=\"6678\">true</span>;</p><p class=\"s70\"  id=\"6679\">client.Send(message);</p><p class=\"s70\"  id=\"6680\">}</p><p class=\"s66\"  id=\"6681\">catch</p><p class=\"s70\"  id=\"6682\">{</p><p class=\"s70\"  id=\"6683\">LabelNotice.Text = <span  id=\"6684\">\"Internal Error\"</span>;</p><p class=\"s70\"  id=\"6685\">DownloadVcard(byteArray);</p><p class=\"s70\"  id=\"6686\">}</p><p  id=\"6687\"><br id=\"6688\"></p><p class=\"s70\"  id=\"6689\">}</p><p  id=\"6690\"><br id=\"6691\"></p><p class=\"s70\"  id=\"6692\"><span  id=\"6693\">protected void </span>CustomValidatorName_ServerValidate(<span  id=\"6694\">object </span>source, <span  id=\"6695\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6696\">{</p><p class=\"s70\"  id=\"6697\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s70\"  id=\"6698\">}</p><p  id=\"6699\"><br id=\"6700\"></p><p class=\"s70\"  id=\"6701\"><span  id=\"6702\">protected void </span>CustomValidatorPostalCode_ServerValidate(<span  id=\"6703\">object </span>source, <span  id=\"6704\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6705\">{</p><p class=\"s66\"  id=\"6706\">try</p><p class=\"s70\"  id=\"6707\">{</p><p  id=\"6708\"><br id=\"6709\"></p><p class=\"s66\"  id=\"6710\">if <span  id=\"6711\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"6712\">{</p><p class=\"s70\"  id=\"6713\">args.IsValid = RemoveSpecialCharacter(args.Value).Length == 4;</p><p class=\"s70\"  id=\"6714\">}</p><p class=\"s66\"  id=\"6715\">else</p><p class=\"s70\"  id=\"6716\">{</p><p class=\"s70\"  id=\"6717\">args.IsValid = <span  id=\"6718\">true</span>;</p><p class=\"s70\"  id=\"6719\">}</p><p class=\"s70\"  id=\"6720\">}</p><p class=\"s66\"  id=\"6721\">catch <span  id=\"6722\">{ args.IsValid = </span>false<span  id=\"6723\">; }</span></p><p class=\"s70\"  id=\"6724\">}</p><p  id=\"6725\"><br id=\"6726\"></p><p class=\"s70\"  id=\"6727\"><span  id=\"6728\">protected void </span>CustomValidatorCountry_ServerValidate(<span  id=\"6729\">object </span>source, <span  id=\"6730\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6731\">{</p><p  id=\"6732\"><br id=\"6733\"></p><p class=\"s70\"  id=\"6734\">}</p><p  id=\"6735\"><br id=\"6736\"></p><p class=\"s70\"  id=\"6737\"><span  id=\"6738\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"6739\">object </span>source, <span  id=\"6740\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6741\">{</p><p class=\"s66\"  id=\"6742\">if <span  id=\"6743\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"6744\">{</p><p  id=\"6745\"><br id=\"6746\"></p><p class=\"s70\"  id=\"6747\">}</p><p class=\"s66\"  id=\"6748\">else</p><p class=\"s70\"  id=\"6749\">{</p><p  id=\"6750\"><br id=\"6751\"></p><p class=\"s70\"  id=\"6752\">}</p><p class=\"s70\"  id=\"6753\">}</p><p class=\"s70\"  id=\"6754\">args.IsValid = ValidatePhone(args.Value);</p><p  id=\"6755\"><br id=\"6756\"></p><p class=\"s70\"  id=\"6757\">args.IsValid = <span  id=\"6758\">true</span>;</p><p  id=\"6759\"><br id=\"6760\"></p><p class=\"s70\"  id=\"6761\"><span  id=\"6762\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"6763\">object </span>source, <span  id=\"6764\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6765\">{</p><p class=\"s70\"  id=\"6766\">args.IsValid = ValidateEmail(args.Value.ToString());</p><p class=\"s70\"  id=\"6767\">}</p><p  id=\"6768\"><br id=\"6769\"></p><p class=\"s70\"  id=\"6770\"><span  id=\"6771\">protected void </span>CustomValidatorWebSite_ServerValidate(<span  id=\"6772\">object </span>source, <span  id=\"6773\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6774\">{</p><p  id=\"6775\"><br id=\"6776\"></p><p class=\"s70\"  id=\"6777\">}</p><p  id=\"6778\"><br id=\"6779\"></p><p class=\"s103\"  id=\"6780\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6781\">/// <span  id=\"6782\">Validates the phone.</span></p><p class=\"s103\"  id=\"6783\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6784\">/// &lt;param name=\"input\"&gt;<span  id=\"6785\">The input.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6786\">/// &lt;returns&gt; <span  id=\"6787\">true if it valid </span>&lt;/returns&gt; <span  id=\"6788\">public bool </span><span  id=\"6789\">ValidatePhone(</span><span  id=\"6790\">string </span><span  id=\"6791\">input)</span></p><p class=\"s70\"  id=\"6792\">{</p><p class=\"s70\"  id=\"6793\"><span  id=\"6794\">if </span>(input.Length != 8) { <span  id=\"6795\">return false</span>; } <span  id=\"6796\">Regex </span>num = <span  id=\"6797\">new </span><span  id=\"6798\">Regex</span>(<span  id=\"6799\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"6800\">return <span  id=\"6801\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"6802\">}</p><p  id=\"6803\"><br id=\"6804\"></p><p class=\"s103\"  id=\"6805\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6806\">/// <span  id=\"6807\">Validates the email.</span></p><p class=\"s103\"  id=\"6808\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6809\">/// &lt;param name=\"email\"&gt;<span  id=\"6810\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6811\">/// &lt;returns&gt; <span  id=\"6812\">true on valid email </span>&lt;/returns&gt; <span  id=\"6813\">public bool </span><span  id=\"6814\">ValidateEmail(</span><span  id=\"6815\">string </span><span  id=\"6816\">email)</span></p><p class=\"s70\"  id=\"6817\">{</p><p class=\"s66\"  id=\"6818\">return <span  id=\"6819\">Regex</span><span  id=\"6820\">.IsMatch(email,</span></p><p class=\"s99\"  id=\"6821\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\"  id=\"6822\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span  id=\"6823\">+</span></p><p class=\"s99\"  id=\"6824\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a- zA-Z]{2,6}))$\"<span  id=\"6825\">);</span></p><p class=\"s70\"  id=\"6826\">}</p><p  id=\"6827\"><br id=\"6828\"></p><p class=\"s103\"  id=\"6829\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6830\">/// <span  id=\"6831\">Removes the special character.</span></p><p class=\"s103\"  id=\"6832\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6833\">/// &lt;param name=\"input\"&gt;<span  id=\"6834\">The input.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6835\">/// &lt;returns&gt; <span  id=\"6836\">secure string </span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6837\">public string <span  id=\"6838\">RemoveSpecialCharacter(</span>string <span  id=\"6839\">input)</span></p><p class=\"s70\"  id=\"6840\">{</p><p class=\"s70\"  id=\"6841\"><span  id=\"6842\">return </span><span  id=\"6843\">Regex</span>.Replace(input, <span  id=\"6844\">\"[^0-9a-zA-Z. ]+\"</span>, <span  id=\"6845\">\"\"</span>);</p><p class=\"s70\"  id=\"6846\">}</p><p  id=\"6847\"><br id=\"6848\"></p><p class=\"s70\"  id=\"6849\"><span  id=\"6850\">protected void </span>TextBoxEmail_TextChanged(<span  id=\"6851\">object </span>sender, <span  id=\"6852\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6853\">{</p><p  id=\"6854\"><br id=\"6855\"></p><p class=\"s70\"  id=\"6856\">}</p><p  id=\"6857\"><br id=\"6858\"></p><p class=\"s103\"  id=\"6859\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6860\">/// <span  id=\"6861\">Creates the table.</span></p><p class=\"s103\"  id=\"6862\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6863\">/// &lt;param name=\"tableName\"&gt;<span  id=\"6864\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6865\">/// &lt;returns&gt; <span  id=\"6866\">true if table created</span>&lt;/returns&gt; <span  id=\"6867\">private static bool </span><span  id=\"6868\">CreateTable(</span><span  id=\"6869\">string </span><span  id=\"6870\">tableName)</span></p><p class=\"s70\"  id=\"6871\">{</p><p class=\"s66\"  id=\"6872\">try</p><p class=\"s70\"  id=\"6873\">{</p><p  id=\"6874\"><br id=\"6875\"></p><p class=\"s70\"  id=\"6876\"><span  id=\"6877\">SqlConnection </span>connection = <span  id=\"6878\">new </span><span  id=\"6879\">SqlConnection</span>(<span  id=\"6880\">GlobalSettings</span>.DbDSN); <span  id=\"6881\">string </span>queryString =</p><p class=\"s99\"  id=\"6882\">@\" CREATE TABLE [vcardimage](</p><p class=\"s99\"  id=\"6883\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s99\"  id=\"6884\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s99\"  id=\"6885\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"6886\">;</span></p><p  id=\"6887\"><br id=\"6888\"></p><p class=\"s98\"  id=\"6889\">SqlCommand <span  id=\"6890\">command = </span><span  id=\"6891\">new </span>SqlCommand<span  id=\"6892\">(queryString, connection);</span></p><p class=\"s70\"  id=\"6893\">connection.Open(); command.ExecuteNonQuery(); connection.Close();</p><p class=\"s66\"  id=\"6894\">return true<span  id=\"6895\">;</span></p><p class=\"s70\"  id=\"6896\">}</p><p class=\"s66\"  id=\"6897\">catch</p><p class=\"s70\"  id=\"6898\">{</p><p class=\"s66\"  id=\"6899\">return false<span  id=\"6900\">;</span></p><p class=\"s70\"  id=\"6901\">}</p><p class=\"s70\"  id=\"6902\">}</p><p  id=\"6903\"><br id=\"6904\"></p><p class=\"s103\"  id=\"6905\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6906\">/// <span  id=\"6907\">Checks the table.</span></p><p class=\"s103\"  id=\"6908\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6909\">/// &lt;param name=\"tableName\"&gt;<span  id=\"6910\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6911\">/// &lt;returns&gt; <span  id=\"6912\">true if table exist </span>&lt;/returns&gt; <span  id=\"6913\">private static bool </span><span  id=\"6914\">CheckTable(</span><span  id=\"6915\">string </span><span  id=\"6916\">tableName)</span></p><p class=\"s70\"  id=\"6917\">{</p><p class=\"s70\"  id=\"6918\"><span  id=\"6919\">SqlServerHelper </span>sqlHeplper = <span  id=\"6920\">new </span><span  id=\"6921\">SqlServerHelper</span>(<span  id=\"6922\">GlobalSettings</span>.DbDSN); <span  id=\"6923\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"6924\">}</p><p  id=\"6925\"><br id=\"6926\"></p><p class=\"s103\"  id=\"6927\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6928\">/// <span  id=\"6929\">Inserts the table.</span></p><p class=\"s103\"  id=\"6930\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6931\">/// &lt;param name=\"name\"&gt;<span  id=\"6932\">The name.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6933\">/// &lt;param name=\"street\"&gt;<span  id=\"6934\">The street.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6935\">/// &lt;param name=\"postalcode\"&gt;<span  id=\"6936\">The postalcode.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6937\">/// &lt;param name=\"country\"&gt;<span  id=\"6938\">The country.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6939\">/// &lt;param name=\"phone\"&gt;<span  id=\"6940\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6941\">/// &lt;param name=\"email\"&gt;<span  id=\"6942\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6943\">/// &lt;param name=\"website\"&gt;<span  id=\"6944\">The website.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6945\">/// &lt;param name=\"imageguid\"&gt;<span  id=\"6946\">The imageguid.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6947\">/// &lt;returns&gt; <span  id=\"6948\">true on successul data insert</span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6949\">public static bool <span  id=\"6950\">InsertTable(</span>string <span  id=\"6951\">name, </span>string <span  id=\"6952\">street, </span>string <span  id=\"6953\">postalcode, </span>string <span  id=\"6954\">country, </span>string <span  id=\"6955\">phone, </span>string <span  id=\"6956\">email, </span>string <span  id=\"6957\">website, </span>string <span  id=\"6958\">imageguid)</span></p><p class=\"s70\"  id=\"6959\">{</p><p class=\"s70\"  id=\"6960\"><span  id=\"6961\">string </span>tableName = <span  id=\"6962\">\"vcardimage\"</span>; <span  id=\"6963\">try</span></p><p class=\"s70\"  id=\"6964\">{</p><p class=\"s66\"  id=\"6965\">if <span  id=\"6966\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"6967\">{ CreateTable(tableName); }</p><p class=\"s98\"  id=\"6968\">ISqlHelper <span  id=\"6969\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"6970\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"6971\">@\"insert into \" <span  id=\"6972\">+ tableName + </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"6973\">+</span></p><p class=\"s99\"  id=\"6974\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"6975\">@website, @imageguid, @date);\"<span  id=\"6976\">,</span></p><p class=\"s70\"  id=\"6977\">sqlHelper.CreateParameter(<span  id=\"6978\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"6979\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"6980\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"6981\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"6982\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"6983\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"6984\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"6985\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"6986\">\"@date\"</span>, <span  id=\"6987\">DateTime</span>.Now)); <span  id=\"6988\">return true</span>;</p><p class=\"s70\"  id=\"6989\">}</p><p class=\"s70\"  id=\"6990\"><span  id=\"6991\">catch </span>(<span  id=\"6992\">Exception</span>)</p><p class=\"s70\"  id=\"6993\">{</p><p class=\"s66\"  id=\"6994\">return false<span  id=\"6995\">;</span></p><p  id=\"6996\"><br id=\"6997\"></p><p  id=\"6998\"><br id=\"6999\"></p><p class=\"s70\"  id=\"7000\">}</p><p  id=\"7001\"><br id=\"7002\"></p><p class=\"s70\"  id=\"7003\">}</p><p  id=\"7004\"><br id=\"7005\"></p><p class=\"s103\"  id=\"7006\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"7007\">/// <span  id=\"7008\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"7009\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"7010\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"7011\">The vcard file.</span>&lt;/param&gt; <span  id=\"7012\">public void </span><span  id=\"7013\">DownloadVcard(</span><span  id=\"7014\">byte </span><span  id=\"7015\">[] vcardFile)</span></p><p class=\"s70\"  id=\"7016\">{</p><p class=\"s70\"  id=\"7017\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"7018\">true</span>;</p><p class=\"s70\"  id=\"7019\">Response.ContentType = <span  id=\"7020\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"7021\">\"content-disposition\"</span>, <span  id=\"7022\">\"attach;filename =</span></p><p class=\"s99\"  id=\"7023\">YourVcard.vcf\"<span  id=\"7024\">);</span></p><p class=\"s70\"  id=\"7025\">Response.Charset = <span  id=\"7026\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"7027\">HttpContext<span  id=\"7028\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"7029\">}</p><p class=\"s70\"  id=\"7030\">}</p><p class=\"s70\"  id=\"7031\">}</p><p  id=\"7032\"><br id=\"7033\"></p><p  id=\"7034\"><span class=\"s97\"  id=\"7035\">GlobalSetting.xslt</span></p><p  id=\"7036\"><br id=\"7037\"></p><p  id=\"7038\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7039\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p  id=\"7040\">&lt;xsl:stylesheet version=\"1.0\"</p><p  id=\"7041\"><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7042\">xmlns:xsl=\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml=\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library=\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon=\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes=\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath=\"urn:Exslt.ExsltMath\" xmlns:Exslt.ExsltRegularExpressions=\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings=\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets=\"urn:Exslt.ExsltSets\"</p><p  id=\"7043\">exclude-result-prefixes=\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"&gt;</p><p  id=\"7044\"><br id=\"7045\"></p><p  id=\"7046\">&lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;</p><p  id=\"7047\">&lt;xsl:param name=\"currentPage\"/&gt;</p><p  id=\"7048\">&lt;xsl:template match=\"/\"&gt;</p><p  id=\"7049\">&lt;!-- start writing XSLT --&gt;</p><p  id=\"7050\">&lt;xsl:variable name=\"items\" select=\"$currentPage/ancestor-or-self::*</p><p  id=\"7051\">/WebSiteGlobalSettings \"/&gt;</p><p  id=\"7052\">&lt;xsl:variable name=\"logo\" select=\"$items/logo\"/&gt;</p><p  id=\"7053\">&lt;div class=\"vcard\"&gt;</p><p  id=\"7054\">&lt;div class=\"logo\"&gt;&lt;a href=\"/\" title=\"start page\"&gt;</p><p  id=\"7055\">&lt;img src=\"{$logo}\" alt=\"semic provider logo; visual identity\"/&gt;</p><p  id=\"7056\">&lt;/a&gt;</p><p  id=\"7057\">&lt;/div&gt;</p><p  id=\"7058\">&lt;div class=\"fn\" &gt;</p><p  id=\"7059\">&lt;xsl:value-of select=\"$items/siteName\"/&gt;</p><p  id=\"7060\">&lt;/div&gt;</p><p  id=\"7061\">&lt;h4&gt; &lt;xsl:value-of select=\"$items/slogan\"/&gt; &lt;/h4&gt;</p><p  id=\"7062\">&lt;/div&gt;</p><p  id=\"7063\">&lt;/xsl:template&gt;</p><p  id=\"7064\">&lt;/xsl:stylesheet&gt;</p><p  id=\"7065\">Navigation.xslt</p><p  id=\"7066\"><br id=\"7067\"></p><p  id=\"7068\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7069\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7070\">&lt;<span class=\"p\" id=\"7071\">xsl:stylesheet</span></p><p  id=\"7072\">version<span class=\"s56\" id=\"7073\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7074\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7075\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7076\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7077\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7078\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7079\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7080\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7081\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7082\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7083\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7084\">=</span>\"urn:Exslt.ExsltSets\"</p><p  id=\"7085\">exclude-result-prefixes<span class=\"s56\" id=\"7086\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7087\">&gt;</span></p><p class=\"s56\"  id=\"7088\">&lt;<span class=\"p\" id=\"7089\">xsl:output method</span>=<span class=\"p\" id=\"7090\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7091\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7092\">&lt;<span class=\"p\" id=\"7093\">xsl:param name</span>=<span class=\"p\" id=\"7094\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7095\">&lt;<span class=\"p\" id=\"7096\">xsl:template match</span>=<span class=\"p\" id=\"7097\">\"/\"</span>&gt;</p><p class=\"s56\"  id=\"7098\">&lt;<span class=\"p\" id=\"7099\">xsl:variable name</span>=<span class=\"p\" id=\"7100\">\"items\" select</span>=<span class=\"p\" id=\"7101\">\"$currentPage/ancestor-or-self::*</span></p><p  id=\"7102\">/GeneralContent [string(useInNavigation) = '1'] \"<span class=\"s56\" id=\"7103\">/&gt;</span></p><p class=\"s56\"  id=\"7104\">&lt;<span class=\"p\" id=\"7105\">xsl:if test</span>=<span class=\"p\" id=\"7106\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\"  id=\"7107\">&lt;<span class=\"p\" id=\"7108\">ul</span>&gt;</p><p class=\"s56\"  id=\"7109\">&lt;<span class=\"p\" id=\"7110\">xsl:for-each select</span>=<span class=\"p\" id=\"7111\">\"$items\"</span>&gt;</p><p class=\"s56\"  id=\"7112\">&lt;<span class=\"p\" id=\"7113\">xsl:if test</span>=<span class=\"p\" id=\"7114\">\"$currentPage/@id = @id\"</span>&gt;</p><p class=\"s56\"  id=\"7115\">&lt;<span class=\"p\" id=\"7116\">li class</span>=<span class=\"p\" id=\"7117\">\"current\" </span>&gt;</p><p class=\"s56\"  id=\"7118\">&lt;<span class=\"p\" id=\"7119\">xsl:value-of select</span>=<span class=\"p\" id=\"7120\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\"  id=\"7121\">&lt;/<span class=\"p\" id=\"7122\">li</span>&gt;</p><p class=\"s56\"  id=\"7123\">&lt;/<span class=\"p\" id=\"7124\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7125\">&lt;<span class=\"p\" id=\"7126\">xsl:if test</span>=<span class=\"p\" id=\"7127\">\"$currentPage/@id != @id\"</span>&gt;</p><p class=\"s56\"  id=\"7128\">&lt;<span class=\"p\" id=\"7129\">li class</span>=<span class=\"p\" id=\"7130\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\"  id=\"7131\">&lt;<span class=\"p\" id=\"7132\">a href</span>=<span class=\"p\" id=\"7133\">\"{umbraco.library:NiceUrl(@id)}\" title</span>=<span class=\"p\" id=\"7134\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\"  id=\"7135\">&lt;<span class=\"p\" id=\"7136\">xsl:value-of select</span>=<span class=\"p\" id=\"7137\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\"  id=\"7138\">&lt;/<span class=\"p\" id=\"7139\">a</span>&gt;</p><p class=\"s56\"  id=\"7140\">&lt;/<span class=\"p\" id=\"7141\">li</span>&gt;</p><p class=\"s56\"  id=\"7142\">&lt;/<span class=\"p\" id=\"7143\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7144\">&lt;/<span class=\"p\" id=\"7145\">xsl:for-each</span>&gt;</p><p class=\"s56\"  id=\"7146\">&lt;/<span class=\"p\" id=\"7147\">ul</span>&gt;</p><p class=\"s56\"  id=\"7148\">&lt;/<span class=\"p\" id=\"7149\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7150\">&lt;/<span class=\"p\" id=\"7151\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7152\">&lt;/<span class=\"p\" id=\"7153\">xsl:stylesheet</span>&gt;</p><p  id=\"7154\"><br id=\"7155\"></p><p  id=\"7156\"><span class=\"s131\"  id=\"7157\">NewsList.xslt</span></p><p  id=\"7158\"><br id=\"7159\"></p><p  id=\"7160\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7161\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7162\">&lt;<span class=\"p\" id=\"7163\">xsl:stylesheet</span></p><p  id=\"7164\">version<span class=\"s56\" id=\"7165\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7166\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7167\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7168\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7169\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7170\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7171\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7172\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7173\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7174\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7175\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7176\">=</span>\"urn:Exslt.ExsltSets\"</p><p  id=\"7177\">exclude-result-prefixes<span class=\"s56\" id=\"7178\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7179\">&gt;</span></p><p class=\"s56\"  id=\"7180\">&lt;<span class=\"p\" id=\"7181\">xsl:output method</span>=<span class=\"p\" id=\"7182\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7183\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7184\">&lt;<span class=\"p\" id=\"7185\">xsl:param name</span>=<span class=\"p\" id=\"7186\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7187\">&lt;<span class=\"p\" id=\"7188\">xsl:template match</span>=<span class=\"p\" id=\"7189\">\"/\"</span>&gt;</p><p class=\"s56\"  id=\"7190\">&lt;<span class=\"p\" id=\"7191\">xsl:variable name</span>=<span class=\"p\" id=\"7192\">\"newsItems\" select</span>=<span class=\"p\" id=\"7193\">\"$currentPage/ancestor-or-self::*</span></p><p  id=\"7194\">/NewsContainer/NewsArticle \"<span class=\"s56\" id=\"7195\">/&gt;</span></p><p class=\"s56\"  id=\"7196\">&lt;<span class=\"p\" id=\"7197\">xsl:variable name</span>=<span class=\"p\" id=\"7198\">\"numberofnewsitems\" select</span>=<span class=\"p\" id=\"7199\">\"/macro/numberofnewsitems\"</span>/&gt;</p><p class=\"s56\"  id=\"7200\">&lt;<span class=\"p\" id=\"7201\">xsl:if test</span>=<span class=\"p\" id=\"7202\">\"count($newsItems) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\"  id=\"7203\">&lt;<span class=\"p\" id=\"7204\">xsl:for-each select</span>=<span class=\"p\" id=\"7205\">\"$newsItems\" </span>&gt;</p><p class=\"s56\"  id=\"7206\">&lt;<span class=\"p\" id=\"7207\">xsl:sort select</span>=<span class=\"p\" id=\"7208\">\"@createDate\" order</span>=<span class=\"p\" id=\"7209\">\"ascending\"</span>/&gt;</p><p class=\"s56\"  id=\"7210\">&lt;<span class=\"p\" id=\"7211\">xsl:if test</span>=<span class=\"p\" id=\"7212\">\"position() &amp;lt;=$numberofnewsitems\" </span>&gt; &lt;<span class=\"p\" id=\"7213\">div clas</span>=<span class=\"p\" id=\"7214\">\"newsItem\"</span>&gt;</p><p class=\"s56\"  id=\"7215\">&lt;<span class=\"p\" id=\"7216\">h3</span>&gt;</p><p class=\"s56\"  id=\"7217\">&lt;<span class=\"p\" id=\"7218\">a href</span>=<span class=\"p\" id=\"7219\">\"{umbraco.library:NiceUrl(@id)}\" </span>&gt;</p><p class=\"s56\"  id=\"7220\">&lt;<span class=\"p\" id=\"7221\">xsl:value-of select</span>=<span class=\"p\" id=\"7222\">\"newsTitle\" </span>/&gt;</p><p  id=\"7223\"><br id=\"7224\"></p><p class=\"s56\"  id=\"7225\">&lt;/<span class=\"p\" id=\"7226\">a</span>&gt;</p><p class=\"s56\"  id=\"7227\">&lt;/<span class=\"p\" id=\"7228\">h3</span>&gt;</p><p class=\"s56\"  id=\"7229\">&lt;<span class=\"p\" id=\"7230\">p</span>&gt;</p><p class=\"s56\"  id=\"7231\">&lt;<span class=\"p\" id=\"7232\">xsl:value-of select</span>=<span class=\"p\" id=\"7233\">\"newsBody\" disable-output-escaping</span>=<span class=\"p\" id=\"7234\">\"yes\" </span>/&gt;</p><p class=\"s56\"  id=\"7235\">&lt;/<span class=\"p\" id=\"7236\">p</span>&gt;</p><p class=\"s56\"  id=\"7237\">&lt;<span class=\"p\" id=\"7238\">p</span>&gt;</p><p  id=\"7239\">Last update: <span class=\"s56\" id=\"7240\">&lt;</span>xsl:value-of select<span class=\"s56\" id=\"7241\">=</span>\"@updateDate\" <span class=\"s56\" id=\"7242\">/&gt;</span></p><p  id=\"7243\"><br id=\"7244\"></p><p class=\"s56\"  id=\"7245\">&lt;/<span class=\"p\" id=\"7246\">p</span>&gt;</p><p class=\"s56\"  id=\"7247\">&lt;/<span class=\"p\" id=\"7248\">div</span>&gt;</p><p class=\"s56\"  id=\"7249\">&lt;/<span class=\"p\" id=\"7250\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7251\">&lt;/<span class=\"p\" id=\"7252\">xsl:for-each</span>&gt;</p><p class=\"s56\"  id=\"7253\">&lt;/<span class=\"p\" id=\"7254\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7255\">&lt;/<span class=\"p\" id=\"7256\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7257\">&lt;/<span class=\"p\" id=\"7258\">xsl:stylesheet</span>&gt;</p><p  id=\"7259\"><br id=\"7260\"></p><p  id=\"7261\"><span class=\"s131\"  id=\"7262\">RecentVcard.xslt</span></p><p  id=\"7263\"><br id=\"7264\"></p><p  id=\"7265\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7266\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7267\">&lt;<span class=\"p\" id=\"7268\">xsl:stylesheet</span></p><p  id=\"7269\">version<span class=\"s56\" id=\"7270\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7271\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7272\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7273\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:recentVcard<span class=\"s56\" id=\"7274\">=</span>\"urn:recentvcard\" xmlns:umbraco.library<span class=\"s56\" id=\"7275\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7276\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7277\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7278\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7279\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7280\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7281\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7282\">=</span>\"urn:Exslt.ExsltSets\" xmlns:recentvcard<span class=\"s56\" id=\"7283\">=</span>\"urn:recentvcard\" exclude-result-prefixes<span class=\"s56\" id=\"7284\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets recentvcard \"<span class=\"s56\" id=\"7285\">&gt;</span></p><p class=\"s56\"  id=\"7286\">&lt;<span class=\"p\" id=\"7287\">xsl:output method</span>=<span class=\"p\" id=\"7288\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7289\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7290\">&lt;<span class=\"p\" id=\"7291\">xsl:param name</span>=<span class=\"p\" id=\"7292\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7293\">&lt;<span class=\"p\" id=\"7294\">xsl:template match</span>=<span class=\"p\" id=\"7295\">\"/\"</span>&gt;</p><p  id=\"7296\">&lt;!-- start writing XSLT --&gt;</p><p class=\"s56\"  id=\"7297\">&lt;<span class=\"p\" id=\"7298\">xsl:value-of select</span>=<span class=\"p\" id=\"7299\">\"recentVcard:GetVcardData()\" disable-output-escaping</span>=<span class=\"p\" id=\"7300\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7301\">&lt;/<span class=\"p\" id=\"7302\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7303\">&lt;/<span class=\"p\" id=\"7304\">xsl:stylesheet</span>&gt;</p><p  id=\"7305\"><br id=\"7306\"></p><p  id=\"7307\"><span class=\"s131\"  id=\"7308\">RecentVcard.cs</span></p><p  id=\"7309\"><br id=\"7310\"></p><p class=\"s66\"  id=\"7311\">using <span  id=\"7312\">System;</span></p><p class=\"s66\"  id=\"7313\">using <span  id=\"7314\">System.Collections.Generic; </span>using <span  id=\"7315\">System.Linq;</span></p><p class=\"s66\"  id=\"7316\">using <span  id=\"7317\">System.Web;</span></p><p class=\"s66\"  id=\"7318\">using <span  id=\"7319\">umbraco.DataLayer; </span>using <span  id=\"7320\">umbraco;</span></p><p class=\"s66\"  id=\"7321\">namespace <span  id=\"7322\">VCardGenerator</span></p><p class=\"s70\"  id=\"7323\">{</p><p class=\"s66\"  id=\"7324\">public class <span  id=\"7325\">RecentVcard</span></p><p class=\"s70\"  id=\"7326\">{</p><p class=\"s66\"  id=\"7327\">public static string <span  id=\"7328\">GetVcardData()</span></p><p class=\"s70\"  id=\"7329\">{</p><p class=\"s98\"  id=\"7330\">ISqlHelper <span  id=\"7331\">getVcard = </span>DataLayerHelper<span  id=\"7332\">.CreateSqlHelper(</span>GlobalSettings<span  id=\"7333\">.DbDSN);</span></p><p class=\"s98\"  id=\"7334\">IRecordsReader <span  id=\"7335\">read = getVcard.ExecuteReader(</span><span  id=\"7336\">@\"select top 10 id, name,</span></p><p class=\"s99\"  id=\"7337\">country</p><p class=\"s99\"  id=\"7338\">from vcardimage where id &gt; @id order by id desc\"<span  id=\"7339\">,</span></p><p class=\"s70\"  id=\"7340\">getVcard.CreateParameter(<span  id=\"7341\">\"@id\"</span>, <span  id=\"7342\">\"0\"</span>));</p><p class=\"s70\"  id=\"7343\"><span  id=\"7344\">string </span>data = <span  id=\"7345\">\"\"</span>; <span  id=\"7346\">while </span>(read.Read())</p><p class=\"s70\"  id=\"7347\">{</p><p class=\"s70\"  id=\"7348\">data += <span  id=\"7349\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span  id=\"7350\">\"name\"</span>) +</p><p class=\"s99\"  id=\"7351\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span  id=\"7352\">+ read.GetString(</span>\"country\"<span  id=\"7353\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span  id=\"7354\">;</span></p><p class=\"s70\"  id=\"7355\">}</p><p class=\"s99\"  id=\"7356\"><span  id=\"7357\">return </span>\"&lt;ul&gt;\" <span  id=\"7358\">+ data + </span>\"&lt;/ul\"<span  id=\"7359\">;</span></p><p class=\"s70\"  id=\"7360\">}</p><p class=\"s70\"  id=\"7361\">}</p><p class=\"s70\"  id=\"7362\">}</p><p  id=\"7363\"><span id=\"7364\"><img width=\"602\" height=\"851\" alt=\"image\" src=\"Image_137.png\" id=\"7365\"></span></p><p  id=\"7366\"><br id=\"7367\"></p><p  id=\"7368\"><br id=\"7369\"></p><p  id=\"7370\"><br id=\"7371\"></p><p class=\"s8\"  id=\"7372\">About Writer</p><p  id=\"7373\">Name: Jivan Thapa</p><p  id=\"7374\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p  id=\"7375\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7376\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7377\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7378\">jeevan_2np@yahoo.com</a></p><p  id=\"7379\"><br id=\"7380\"></p><p class=\"s8\"  id=\"7381\">About Writer</p><p  id=\"7382\">Name: Jivan Thapa</p><p  id=\"7383\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p  id=\"7384\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7385\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7386\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7387\">jeevan_2np@yahoo.com</a></p><p  id=\"7388\"><span  id=\"7389\"> </span></p><p  id=\"7390\"><br id=\"7391\"></p><p  id=\"7392\"><br id=\"7393\"></p><p  id=\"7394\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p  id=\"7395\">Here I covered:</p><ul id=\"l140\"><li  id=\"7397\"><p  id=\"7398\">Document Type</p></li><li  id=\"7399\"><p  id=\"7400\">Template</p></li><li  id=\"7401\"><p  id=\"7402\">Content</p></li><li  id=\"7403\"><p  id=\"7404\">Xslt</p></li><li  id=\"7405\"><p  id=\"7406\">Extending Umbraco using .net class and User Control</p></li><li  id=\"7407\"><p  id=\"7408\">And more ….</p></li></ul><p  id=\"7409\">Jivan Thapa</p><p  id=\"7410\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p  id=\"7411\">Here I covered:</p><ul id=\"l141\"><li  id=\"7413\"><p  id=\"7414\">Document Type</p></li><li  id=\"7415\"><p  id=\"7416\">Template</p></li><li  id=\"7417\"><p  id=\"7418\">Content</p></li><li  id=\"7419\"><p  id=\"7420\">Xslt</p></li><li  id=\"7421\"><p  id=\"7422\">Extending Umbraco using .net class and User Control</p></li><li  id=\"7423\"><p  id=\"7424\">And more ….</p></li></ul><p  id=\"7425\">Jivan Thapa</p><p  id=\"7426\"><span  id=\"7427\"> </span></p></div></div>","sub":[{"pageId":"133","pageLevel":1,"pageOrder":"133","pageParentId":"132","pageName":"Web grid.","endPointPath":"","pageHeading":"<h3 style=\"padding-top: 12pt; padding-bottom: 2pt; padding-left: 5pt; text-indent: 0pt; text-align: left; background-color: rgb(215, 215, 215);\" id=\"heading6010\" class=\"heading6010\"><a name=\"bookmark77\" id=\"6011\" style=\"color: green;\">Web grid.</a></h3>","pageContent":"<div id=\"contentheading6010\" style=\"border: 5px solid rgb(0, 128, 0);\"><p style=\"padding-left: 6pt;text-indent: 0pt;text-align: left;\" id=\"6012\"><span id=\"6013\"><img width=\"599\" height=\"371\" alt=\"image\" src=\"Image_136.jpg\" id=\"6014\"></span></p><h3 style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6015\"><a name=\"bookmark78\" id=\"6016\">File “VcardControl.ascx”</a></h3><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6017\"><span class=\"s65\" style=\" background-color: #FF0;\" id=\"6018\">&lt;%</span><span class=\"s66\" id=\"6019\">@ </span><span class=\"s67\" id=\"6020\">Control </span><span class=\"s68\" id=\"6021\">Language</span><span class=\"s66\" id=\"6022\">=\"C#\" </span><span class=\"s68\" id=\"6023\">AutoEventWireup</span><span class=\"s66\" id=\"6024\">=\"true\" </span><span class=\"s68\" id=\"6025\">CodeBehind</span><span class=\"s66\" id=\"6026\">=\"VcardControl.ascx.cs\" </span><span class=\"s68\" id=\"6027\">Inherits</span><span class=\"s66\" id=\"6028\">=\"VCardGenerator.VcardControl\" </span><span class=\"s65\" style=\" background-color: #FF0;\" id=\"6029\">%&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6030\"><br id=\"6031\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6032\">&lt;<span style=\" color: #800000;\" id=\"6033\">form </span><span style=\" color: #F00;\" id=\"6034\">id</span>=\"FormVcard\" <span style=\" color: #F00;\" id=\"6035\">runat</span>=\"server\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6036\">&lt;<span style=\" color: #800000;\" id=\"6037\">div </span><span style=\" color: #F00;\" id=\"6038\">class</span>=\"errorMessage\"&gt;</p><p class=\"s66\" style=\"padding-left: 19pt;text-indent: 0pt;text-align: center;\" id=\"6039\">&lt;<span style=\" color: #800000;\" id=\"6040\">asp</span>:<span style=\" color: #800000;\" id=\"6041\">Label </span><span style=\" color: #F00;\" id=\"6042\">ID</span>=\"LabelNotice\" <span style=\" color: #F00;\" id=\"6043\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6044\">Text</span>=\"\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6045\">asp</span>:<span style=\" color: #800000;\" id=\"6046\">Label</span>&gt;</p><p class=\"s66\" style=\"padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"6047\">&lt;<span style=\" color: #800000;\" id=\"6048\">asp</span>:<span style=\" color: #800000;\" id=\"6049\">ValidationSummary </span><span style=\" color: #F00;\" id=\"6050\">ID</span>=\"ValidationSummary\" <span style=\" color: #F00;\" id=\"6051\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6052\">ForeColor</span>=\"#FF6666\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6053\">/&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6054\">&lt;/<span style=\" color: #800000;\" id=\"6055\">div</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6056\">&lt;<span style=\" color: #800000;\" id=\"6057\">table </span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6058\">&lt;<span style=\" color: #800000;\" id=\"6059\">tr </span><span style=\" color: #F00;\" id=\"6060\">class</span>=\"name\"&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6061\">&lt;<span style=\" color: #800000;\" id=\"6062\">td</span>&gt; <span style=\" color: #000;\" id=\"6063\">Name: </span>&lt;/<span style=\" color: #800000;\" id=\"6064\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6065\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6066\">asp</span>:<span style=\" color: #800000;\" id=\"6067\">TextBox </span><span style=\" color: #F00;\" id=\"6068\">ID</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6069\">runat</span>=server&gt;&lt;/<span style=\" color: #800000;\" id=\"6070\">asp</span>:<span style=\" color: #800000;\" id=\"6071\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6072\">&lt;<span style=\" color: #800000;\" id=\"6073\">asp</span>:<span style=\" color: #800000;\" id=\"6074\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"6075\">ID</span>=\"RequiredFieldValidatorName\" <span style=\" color: #F00;\" id=\"6076\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6077\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6078\">ErrorMessage</span>=\"Name Required\" <span style=\" color: #F00;\" id=\"6079\">Font-</span></p><p class=\"s68\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6080\">Size<span style=\" color: #00F;\" id=\"6081\">=\"Small\"</span></p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6082\"><span style=\" color: #F00;\" id=\"6083\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6084\">asp</span>:<span style=\" color: #800000;\" id=\"6085\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6086\">&lt;<span style=\" color: #800000;\" id=\"6087\">asp</span>:<span style=\" color: #800000;\" id=\"6088\">CustomValidator </span><span style=\" color: #F00;\" id=\"6089\">ID</span>=\"CustomValidatorName\" <span style=\" color: #F00;\" id=\"6090\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6091\">ControlToValidate</span>=\"TextBoxName\" <span style=\" color: #F00;\" id=\"6092\">ErrorMessage</span>=\"Name is not Valid\" <span style=\" color: #F00;\" id=\"6093\">ForeColor</span>=\"#CC0000\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6094\"><span style=\" color: #F00;\" id=\"6095\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6096\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6097\">asp</span>:<span style=\" color: #800000;\" id=\"6098\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6099\">&lt;/<span style=\" color: #800000;\" id=\"6100\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6101\">&lt;/<span style=\" color: #800000;\" id=\"6102\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6103\">&lt;<span style=\" color: #800000;\" id=\"6104\">tr </span><span style=\" color: #F00;\" id=\"6105\">class</span>=\"street\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6106\">&lt;<span style=\" color: #800000;\" id=\"6107\">td</span>&gt; <span style=\" color: #000;\" id=\"6108\">Street:</span>&lt;/<span style=\" color: #800000;\" id=\"6109\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6110\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6111\">asp</span>:<span style=\" color: #800000;\" id=\"6112\">TextBox </span><span style=\" color: #F00;\" id=\"6113\">ID</span>=\"TextBoxStreet\" <span style=\" color: #F00;\" id=\"6114\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6115\">asp</span>:<span style=\" color: #800000;\" id=\"6116\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6117\">&lt;/<span style=\" color: #800000;\" id=\"6118\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6119\">&lt;/<span style=\" color: #800000;\" id=\"6120\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6121\">&lt;<span style=\" color: #800000;\" id=\"6122\">tr </span><span style=\" color: #F00;\" id=\"6123\">class</span>=\"postalCode\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6124\">&lt;<span style=\" color: #800000;\" id=\"6125\">td</span>&gt; <span style=\" color: #000;\" id=\"6126\">PostalCode:</span>&lt;/<span style=\" color: #800000;\" id=\"6127\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6128\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6129\">asp</span>:<span style=\" color: #800000;\" id=\"6130\">TextBox </span><span style=\" color: #F00;\" id=\"6131\">ID</span>=\"TextBoxPostalCode\" <span style=\" color: #F00;\" id=\"6132\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6133\">asp</span>:<span style=\" color: #800000;\" id=\"6134\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6135\">&lt;<span style=\" color: #800000;\" id=\"6136\">asp</span>:<span style=\" color: #800000;\" id=\"6137\">CustomValidator </span><span style=\" color: #F00;\" id=\"6138\">ID</span>=\"CustomValidatorPostalCode\" <span style=\" color: #F00;\" id=\"6139\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6140\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6141\">ErrorMessage<span style=\" color: #00F;\" id=\"6142\">=\"Postal Code 4 digit\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6143\">=\"TextBoxPostalCode\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6144\"><br id=\"6145\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6146\"><span style=\" color: #F00;\" id=\"6147\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6148\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6149\">asp</span>:<span style=\" color: #800000;\" id=\"6150\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6151\">&lt;/<span style=\" color: #800000;\" id=\"6152\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6153\">&lt;/<span style=\" color: #800000;\" id=\"6154\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6155\">&lt;<span style=\" color: #800000;\" id=\"6156\">tr </span><span style=\" color: #F00;\" id=\"6157\">class</span>=\"city\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6158\">&lt;<span style=\" color: #800000;\" id=\"6159\">td</span>&gt; <span style=\" color: #000;\" id=\"6160\">City:</span>&lt;/<span style=\" color: #800000;\" id=\"6161\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6162\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6163\">asp</span>:<span style=\" color: #800000;\" id=\"6164\">TextBox </span><span style=\" color: #F00;\" id=\"6165\">ID</span>=\"TextBoxCity\" <span style=\" color: #F00;\" id=\"6166\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6167\">asp</span>:<span style=\" color: #800000;\" id=\"6168\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6169\">&lt;/<span style=\" color: #800000;\" id=\"6170\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6171\">&lt;<span style=\" color: #800000;\" id=\"6172\">tr </span><span style=\" color: #F00;\" id=\"6173\">class</span>=\"country\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6174\">&lt;<span style=\" color: #800000;\" id=\"6175\">td</span>&gt; <span style=\" color: #000;\" id=\"6176\">Country:</span>&lt;/<span style=\" color: #800000;\" id=\"6177\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6178\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6179\">asp</span>:<span style=\" color: #800000;\" id=\"6180\">TextBox </span><span style=\" color: #F00;\" id=\"6181\">ID</span>=\"TextBoxCountry\" <span style=\" color: #F00;\" id=\"6182\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6183\">asp</span>:<span style=\" color: #800000;\" id=\"6184\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6185\">&lt;<span style=\" color: #800000;\" id=\"6186\">asp</span>:<span style=\" color: #800000;\" id=\"6187\">CustomValidator </span><span style=\" color: #F00;\" id=\"6188\">ID</span>=\"CustomValidatorCountry\" <span style=\" color: #F00;\" id=\"6189\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6190\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6191\">ErrorMessage<span style=\" color: #00F;\" id=\"6192\">=\"Country Not Valid\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6193\">=\"TextBoxCountry\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6194\"><br id=\"6195\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6196\"><span style=\" color: #F00;\" id=\"6197\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6198\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6199\">asp</span>:<span style=\" color: #800000;\" id=\"6200\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6201\">&lt;/<span style=\" color: #800000;\" id=\"6202\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6203\">&lt;/<span style=\" color: #800000;\" id=\"6204\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6205\">&lt;<span style=\" color: #800000;\" id=\"6206\">tr </span><span style=\" color: #F00;\" id=\"6207\">class</span>=\"phone\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6208\">&lt;<span style=\" color: #800000;\" id=\"6209\">td</span>&gt; <span style=\" color: #000;\" id=\"6210\">Phone:</span><span style=\" color: #F00;\" id=\"6211\">&amp;nbsp; </span><span style=\" color: #000;\" id=\"6212\">+45</span>&lt;/<span style=\" color: #800000;\" id=\"6213\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6214\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6215\">asp</span>:<span style=\" color: #800000;\" id=\"6216\">TextBox </span><span style=\" color: #F00;\" id=\"6217\">ID</span>=\"TextBoxPhone\" <span style=\" color: #F00;\" id=\"6218\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6219\">asp</span>:<span style=\" color: #800000;\" id=\"6220\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6221\">&lt;<span style=\" color: #800000;\" id=\"6222\">asp</span>:<span style=\" color: #800000;\" id=\"6223\">CustomValidator </span><span style=\" color: #F00;\" id=\"6224\">ID</span>=\"CustomValidatorPhone\" <span style=\" color: #F00;\" id=\"6225\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6226\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6227\">ErrorMessage<span style=\" color: #00F;\" id=\"6228\">=\"Phone must be 8 digit, Without +45 \" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6229\">=\"TextBoxPhone\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6230\"><br id=\"6231\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6232\"><span style=\" color: #F00;\" id=\"6233\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6234\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6235\">asp</span>:<span style=\" color: #800000;\" id=\"6236\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6237\">&lt;/<span style=\" color: #800000;\" id=\"6238\">td</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6239\"><br id=\"6240\"></p><p class=\"s66\" style=\"padding-top: 3pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6241\">&lt;/<span style=\" color: #800000;\" id=\"6242\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6243\">&lt;<span style=\" color: #800000;\" id=\"6244\">tr </span><span style=\" color: #F00;\" id=\"6245\">class</span>=\"email\"&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6246\">&lt;<span style=\" color: #800000;\" id=\"6247\">td</span>&gt; <span style=\" color: #000;\" id=\"6248\">Email: </span>&lt;/<span style=\" color: #800000;\" id=\"6249\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6250\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6251\">asp</span>:<span style=\" color: #800000;\" id=\"6252\">TextBox </span><span style=\" color: #F00;\" id=\"6253\">ID</span>=\"TextBoxEmail\" <span style=\" color: #F00;\" id=\"6254\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6255\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6256\">asp</span>:<span style=\" color: #800000;\" id=\"6257\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6258\">&lt;<span style=\" color: #800000;\" id=\"6259\">asp</span>:<span style=\" color: #800000;\" id=\"6260\">RequiredFieldValidator </span><span style=\" color: #F00;\" id=\"6261\">ID</span>=\"RequiredFieldValidatorEmail\" <span style=\" color: #F00;\" id=\"6262\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6263\">Font-Size</span>=\"Small\"</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"6264\"><span style=\" color: #F00;\" id=\"6265\">ErrorMessage</span>=\"Email Required\" <span style=\" color: #F00;\" id=\"6266\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span style=\" color: #000;\" id=\"6267\">Email Required</span>&lt;/<span style=\" color: #800000;\" id=\"6268\">asp</span>:<span style=\" color: #800000;\" id=\"6269\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6270\">&lt;<span style=\" color: #800000;\" id=\"6271\">asp</span>:<span style=\" color: #800000;\" id=\"6272\">CustomValidator </span><span style=\" color: #F00;\" id=\"6273\">ID</span>=\"CustomValidatorEmail\" <span style=\" color: #F00;\" id=\"6274\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6275\">Font- Size</span>=\"Small\"</p><p class=\"s68\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6276\">ErrorMessage<span style=\" color: #00F;\" id=\"6277\">=\"Email Not Valid\" </span>ControlToValidate<span style=\" color: #00F;\" id=\"6278\">=\"TextBoxEmail\"</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6279\"><br id=\"6280\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6281\"><span style=\" color: #F00;\" id=\"6282\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6283\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6284\">asp</span>:<span style=\" color: #800000;\" id=\"6285\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6286\">&lt;/<span style=\" color: #800000;\" id=\"6287\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6288\">&lt;/<span style=\" color: #800000;\" id=\"6289\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6290\">&lt;<span style=\" color: #800000;\" id=\"6291\">tr </span><span style=\" color: #F00;\" id=\"6292\">class</span>=\"website\"&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6293\">&lt;<span style=\" color: #800000;\" id=\"6294\">td</span>&gt; <span style=\" color: #000;\" id=\"6295\">WebSite:</span>&lt;/<span style=\" color: #800000;\" id=\"6296\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6297\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6298\">asp</span>:<span style=\" color: #800000;\" id=\"6299\">TextBox </span><span style=\" color: #F00;\" id=\"6300\">ID</span>=\"TextBoxWebsite\" <span style=\" color: #F00;\" id=\"6301\">runat</span>=\"server\"&gt;&lt;/<span style=\" color: #800000;\" id=\"6302\">asp</span>:<span style=\" color: #800000;\" id=\"6303\">TextBox</span>&gt;</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: -20pt;text-align: left;\" id=\"6304\">&lt;<span style=\" color: #800000;\" id=\"6305\">asp</span>:<span style=\" color: #800000;\" id=\"6306\">CustomValidator </span><span style=\" color: #F00;\" id=\"6307\">ID</span>=\"CustomValidatorWebSite\" <span style=\" color: #F00;\" id=\"6308\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6309\">ErrorMessage</span>=\"Website not valid\" <span style=\" color: #F00;\" id=\"6310\">ControlToValidate</span>=\"TextBoxWebsite\"</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6311\"><br id=\"6312\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6313\"><span style=\" color: #F00;\" id=\"6314\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span style=\" color: #000;\" id=\"6315\">*</span>&lt;/<span style=\" color: #800000;\" id=\"6316\">asp</span>:<span style=\" color: #800000;\" id=\"6317\">CustomValidator</span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6318\">&lt;/<span style=\" color: #800000;\" id=\"6319\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"6320\">&lt;/<span style=\" color: #800000;\" id=\"6321\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6322\">&lt;<span style=\" color: #800000;\" id=\"6323\">tr </span><span style=\" color: #F00;\" id=\"6324\">class</span>=\"photo\"&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6325\">&lt;<span style=\" color: #800000;\" id=\"6326\">td</span>&gt; <span style=\" color: #000;\" id=\"6327\">Photo:</span>&lt;/<span style=\" color: #800000;\" id=\"6328\">td</span>&gt;&lt;<span style=\" color: #800000;\" id=\"6329\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6330\">asp</span>:<span style=\" color: #800000;\" id=\"6331\">FileUpload </span><span style=\" color: #F00;\" id=\"6332\">ID</span>=\"FileUploadPhoto\" <span style=\" color: #F00;\" id=\"6333\">runat</span>=\"server\" /&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6334\">&lt;/<span style=\" color: #800000;\" id=\"6335\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6336\">&lt;/<span style=\" color: #800000;\" id=\"6337\">tr</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6338\">&lt;<span style=\" color: #800000;\" id=\"6339\">tr </span>&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6340\">&lt;<span style=\" color: #800000;\" id=\"6341\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"6342\"><span style=\" color: #F00;\" id=\"6343\">&amp;nbsp;</span>&lt;/<span style=\" color: #800000;\" id=\"6344\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6345\">td</span>&gt; &lt;<span style=\" color: #800000;\" id=\"6346\">asp</span>:<span style=\" color: #800000;\" id=\"6347\">Button </span><span style=\" color: #F00;\" id=\"6348\">ID</span>=\"ButtonCreate\" <span style=\" color: #F00;\" id=\"6349\">runat</span>=\"server\" <span style=\" color: #F00;\" id=\"6350\">Text</span>=\"Create\"</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6351\"><span style=\" color: #F00;\" id=\"6352\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span style=\" color: #800000;\" id=\"6353\">td</span>&gt;</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6354\">&lt;/<span style=\" color: #800000;\" id=\"6355\">tr</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6356\"><br id=\"6357\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6358\">&lt;/<span style=\" color: #800000;\" id=\"6359\">table</span>&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6360\">&lt;/<span style=\" color: #800000;\" id=\"6361\">form</span>&gt;</p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6362\"><a name=\"a68\" id=\"6363\"><span class=\"p\" id=\"6364\">File </span></a><span class=\"s128\" style=\" background-color: #FF0;\" id=\"6365\">VcardControl.ascx.cs</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6366\"><br id=\"6367\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6368\">using <span style=\" color: #000;\" id=\"6369\">System;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6370\">using <span style=\" color: #000;\" id=\"6371\">System.Collections.Generic; </span>using <span style=\" color: #000;\" id=\"6372\">System.Linq;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6373\">using <span style=\" color: #000;\" id=\"6374\">System.Web;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6375\">using <span style=\" color: #000;\" id=\"6376\">umbraco.DataLayer.SqlHelpers.SqlServer; </span>using <span style=\" color: #000;\" id=\"6377\">umbraco.DataLayer;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6378\">using <span style=\" color: #000;\" id=\"6379\">umbraco;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6380\">using <span style=\" color: #000;\" id=\"6381\">System.Data.SqlClient;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6382\">using <span style=\" color: #000;\" id=\"6383\">System.Text.RegularExpressions; </span>using <span style=\" color: #000;\" id=\"6384\">System.Web.UI.WebControls; </span>using <span style=\" color: #000;\" id=\"6385\">System.IO;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6386\">using <span style=\" color: #000;\" id=\"6387\">System.Text; </span>using <span style=\" color: #000;\" id=\"6388\">System.Net.Mail; </span>using <span style=\" color: #000;\" id=\"6389\">System.Net;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6390\"><br id=\"6391\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6392\">namespace <span style=\" color: #000;\" id=\"6393\">VCardGenerator</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6394\">{</p><p class=\"s98\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6395\"><span style=\" color: #00F;\" id=\"6396\">public partial class </span>VcardControl <span style=\" color: #000;\" id=\"6397\">: System.Web.UI.</span>UserControl</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6398\">{</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6399\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6400\">/// <span style=\" color: #008000;\" id=\"6401\">Handles the Load event of the Page control.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6402\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6403\">/// &lt;param name=\"sender\"&gt;<span style=\" color: #008000;\" id=\"6404\">The source of the event.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6405\">/// &lt;param name=\"e\"&gt;<span style=\" color: #008000;\" id=\"6406\">The </span>&lt;see cref=\"System.EventArgs\"/&gt; <span style=\" color: #008000;\" id=\"6407\">instance containing the event data.</span>&lt;/param&gt;</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6408\"><span style=\" color: #00F;\" id=\"6409\">protected void </span>Page_Load(<span style=\" color: #00F;\" id=\"6410\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6411\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6412\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6413\"><br id=\"6414\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6415\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6416\"><br id=\"6417\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6418\"><span style=\" color: #00F;\" id=\"6419\">protected void </span>ButtonCreate_Click(<span style=\" color: #00F;\" id=\"6420\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6421\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6422\">{</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6423\">if <span style=\" color: #000;\" id=\"6424\">(Page.IsValid)</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6425\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6426\"><span style=\" color: #2B91AE;\" id=\"6427\">Guid </span>id = <span style=\" color: #2B91AE;\" id=\"6428\">Guid</span>.NewGuid(); <span style=\" color: #00F;\" id=\"6429\">string </span>imgFile = <span style=\" color: #A21515;\" id=\"6430\">\"noimage\"</span>;</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6431\">string <span style=\" color: #000;\" id=\"6432\">name = RemoveSpecialCharacter(TextBoxName.Text);</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6433\">string <span style=\" color: #000;\" id=\"6434\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span style=\" color: #000;\" id=\"6435\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span style=\" color: #000;\" id=\"6436\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span style=\" color: #000;\" id=\"6437\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6438\">string <span style=\" color: #000;\" id=\"6439\">email = TextBoxEmail.Text;</span></p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: justify;\" id=\"6440\">string <span style=\" color: #000;\" id=\"6441\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span style=\" color: #000;\" id=\"6442\">phone = RemoveSpecialCharacter(TextBoxPhone.Text); </span>if <span style=\" color: #000;\" id=\"6443\">(FileUploadPhoto.PostedFile != </span>null <span style=\" color: #000;\" id=\"6444\">&amp;&amp;</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6445\">FileUploadPhoto.PostedFile.ContentLength &gt; 0)</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6446\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6447\"><span style=\" color: #00F;\" id=\"6448\">string </span>guid = id.ToString(<span style=\" color: #A21515;\" id=\"6449\">\"N\"</span>);</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6450\"><span style=\" color: #00F;\" id=\"6451\">string </span>imageDirectory = Server.MapPath(<span style=\" color: #A21515;\" id=\"6452\">\"vcardimage\"</span>); <span style=\" color: #00F;\" id=\"6453\">if </span>(<span style=\" color: #2B91AE;\" id=\"6454\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6455\">{</p><p class=\"s70\" style=\"padding-left: 151pt;text-indent: -20pt;text-align: left;\" id=\"6456\">FileUploadPhoto.PostedFile.SaveAs( Server.MapPath(<span style=\" color: #A21515;\" id=\"6457\">\"/vcardimage/\" </span>+ guid +</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6458\">FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6459\">}</p><p class=\"s66\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6460\">else</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6461\">{</p><p class=\"s70\" style=\"padding-left: 130pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6462\"><span style=\" color: #2B91AE;\" id=\"6463\">Directory</span>.CreateDirectory(Server.MapPath(<span style=\" color: #A21515;\" id=\"6464\">\"vcardimage\"</span>));</p><p class=\"s70\" style=\"padding-top: 7pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6465\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span style=\" color: #A21515;\" id=\"6466\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6467\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6468\"><br id=\"6469\"></p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6470\">imgFile = imageDirectory + <span style=\" color: #A21515;\" id=\"6471\">\"/\" </span>+ guid + FileUploadPhoto.FileName; SendVcard(<span style=\" color: #A21515;\" id=\"6472\">\"Your Vcard:\"</span>,</p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 156pt;text-align: left;\" id=\"6473\">\"Your vcard is ready. Please open Attachment. \\n Thank you very much \\n Semic Provider\"<span style=\" color: #000;\" id=\"6474\">,</span></p><p class=\"s70\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"6475\">email,</p><p class=\"s70\" style=\"padding-left: 161pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6476\">GenerateVcard(name, streetaddress, zip, city, country,</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6477\">email, phone, web, imgFile));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6478\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6479\">\"VCard has been sent to \" </span>+ email;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6480\">}</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6481\">else</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6482\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6483\">SendVcard(<span style=\" color: #A21515;\" id=\"6484\">\"Vcard:\"</span>, <span style=\" color: #A21515;\" id=\"6485\">\"Your vcard is ready. Please open Attachment.</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6486\">\\n Thank you very much \\n Semic Provider\"<span style=\" color: #000;\" id=\"6487\">,</span></p><p class=\"s70\" style=\"padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"6488\">email,</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 104pt;text-align: left;\" id=\"6489\">GenerateVcard(name, streetaddress, zip, city, country, email, phone, web, imgFile));</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6490\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6491\">\"VCard has been sent to \" </span>+ email;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6492\"><br id=\"6493\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6494\">imgFile);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6495\"><br id=\"6496\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6497\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6498\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"6499\">InsertTable(name, streetaddress, zip, country, phone, email, web,</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6500\"><br id=\"6501\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"6502\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6503\"><br id=\"6504\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6505\"><br id=\"6506\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6507\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6508\">/// <span style=\" color: #008000;\" id=\"6509\">Generates the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6510\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6511\">/// &lt;param name=\"firstName\"&gt;<span style=\" color: #008000;\" id=\"6512\">The first name.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6513\">/// &lt;param name=\"streetAddress\"&gt;<span style=\" color: #008000;\" id=\"6514\">The street address.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6515\">/// &lt;param name=\"zip\"&gt;<span style=\" color: #008000;\" id=\"6516\">The zip.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6517\">/// &lt;param name=\"city\"&gt;<span style=\" color: #008000;\" id=\"6518\">The city.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6519\">/// &lt;param name=\"country\"&gt;<span style=\" color: #008000;\" id=\"6520\">The country.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6521\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6522\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6523\">/// &lt;param name=\"phone\"&gt;<span style=\" color: #008000;\" id=\"6524\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6525\">/// &lt;param name=\"web\"&gt;<span style=\" color: #008000;\" id=\"6526\">The web.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6527\">/// &lt;param name=\"image\"&gt;<span style=\" color: #008000;\" id=\"6528\">The image.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6529\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6530\">vcard string </span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6531\">public string <span style=\" color: #000;\" id=\"6532\">GenerateVcard(</span>string <span style=\" color: #000;\" id=\"6533\">firstName, </span>string <span style=\" color: #000;\" id=\"6534\">streetAddress, </span>string <span style=\" color: #000;\" id=\"6535\">zip, </span>string <span style=\" color: #000;\" id=\"6536\">city, </span>string <span style=\" color: #000;\" id=\"6537\">country, </span>string <span style=\" color: #000;\" id=\"6538\">email, </span>string <span style=\" color: #000;\" id=\"6539\">phone, </span>string <span style=\" color: #000;\" id=\"6540\">web, </span>string <span style=\" color: #000;\" id=\"6541\">image)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6542\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6543\"><span style=\" color: #00F;\" id=\"6544\">string </span>url = <span style=\" color: #A21515;\" id=\"6545\">\"\"</span>; <span style=\" color: #00F;\" id=\"6546\">if </span>(web.Length &gt; 0)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6547\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6548\">url = <span style=\" color: #A21515;\" id=\"6549\">\"http://\" </span>+ web.Replace(<span style=\" color: #A21515;\" id=\"6550\">\"http\"</span>, <span style=\" color: #A21515;\" id=\"6551\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6552\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6553\"><span style=\" color: #00F;\" id=\"6554\">var </span>vcardStringBuilder = <span style=\" color: #00F;\" id=\"6555\">new </span><span style=\" color: #2B91AE;\" id=\"6556\">StringBuilder</span>(); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6557\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6558\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6559\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span style=\" color: #A21515;\" id=\"6560\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span style=\" color: #A21515;\" id=\"6561\">\";\"</span>); vcardStringBuilder.Append(zip + <span style=\" color: #A21515;\" id=\"6562\">\";\"</span>); vcardStringBuilder.Append(city + <span style=\" color: #A21515;\" id=\"6563\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span style=\" color: #A21515;\" id=\"6564\">\" \"</span>); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6565\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6566\">\"URL;type=pref:\" </span>+ url);</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6567\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6568\">\"EMAIL:\" </span>+ email); <span style=\" color: #00F;\" id=\"6569\">if </span>(image != <span style=\" color: #A21515;\" id=\"6570\">\"noimage\"</span>)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6571\">{</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6572\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6573\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span style=\" color: #A21515;\" id=\"6574\">\":\"</span>);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6575\"><br id=\"6576\"></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: -83pt;text-align: left;\" id=\"6577\">vcardStringBuilder.AppendLine(<span style=\" color: #2B91AE;\" id=\"6578\">Convert</span>.ToBase64String(ReadImage(image))); vcardStringBuilder.AppendLine(<span style=\" color: #00F;\" id=\"6579\">string</span>.Empty);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6580\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6581\">vcardStringBuilder.AppendLine(<span style=\" color: #A21515;\" id=\"6582\">\"END:VCARD\"</span>); <span style=\" color: #00F;\" id=\"6583\">return </span>vcardStringBuilder.ToString();</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6584\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6585\"><br id=\"6586\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6587\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6588\">/// <span style=\" color: #008000;\" id=\"6589\">Reads the image.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6590\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6591\">/// &lt;param name=\"image\"&gt;<span style=\" color: #008000;\" id=\"6592\">The image.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6593\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6594\">image bytes </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6595\">public byte</span><span style=\" color: #000;\" id=\"6596\">[] ReadImage(</span><span style=\" color: #00F;\" id=\"6597\">string </span><span style=\" color: #000;\" id=\"6598\">image)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6599\">{</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"6600\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6601\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6602\"><br id=\"6603\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6604\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6605\"><br id=\"6606\"></p><p class=\"s66\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6607\">return <span style=\" color: #2B91AE;\" id=\"6608\">File</span><span style=\" color: #000;\" id=\"6609\">.ReadAllBytes(image);</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6610\"><span style=\" color: #00F;\" id=\"6611\">catch </span>(<span style=\" color: #2B91AE;\" id=\"6612\">Exception </span>ex)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6613\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6614\"><span style=\" color: #00F;\" id=\"6615\">return </span><span style=\" color: #2B91AE;\" id=\"6616\">File</span>.ReadAllBytes(Server.MapPath(<span style=\" color: #A21515;\" id=\"6617\">\"media/logo-vcard.png\"</span>));</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6618\">}</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6619\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6620\"><br id=\"6621\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6622\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6623\">/// <span style=\" color: #008000;\" id=\"6624\">Sends the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6625\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6626\">/// &lt;param name=\"subject\"&gt;<span style=\" color: #008000;\" id=\"6627\">The subject.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6628\">/// &lt;param name=\"body\"&gt;<span style=\" color: #008000;\" id=\"6629\">The body.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6630\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6631\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6632\">/// &lt;param name=\"file\"&gt;<span style=\" color: #008000;\" id=\"6633\">The file.</span>&lt;/param&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6634\">private void <span style=\" color: #000;\" id=\"6635\">SendVcard(</span>string <span style=\" color: #000;\" id=\"6636\">subject, </span>string <span style=\" color: #000;\" id=\"6637\">body, </span>string <span style=\" color: #000;\" id=\"6638\">email, </span>string <span style=\" color: #000;\" id=\"6639\">file)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6640\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6641\"><span style=\" color: #00F;\" id=\"6642\">byte</span>[] byteArray = <span style=\" color: #2B91AE;\" id=\"6643\">Encoding</span>.ASCII.GetBytes(file); <span style=\" color: #00F;\" id=\"6644\">try</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6645\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6646\"><br id=\"6647\"></p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6648\">MemoryStream <span style=\" color: #000;\" id=\"6649\">stream = </span><span style=\" color: #00F;\" id=\"6650\">new </span>MemoryStream<span style=\" color: #000;\" id=\"6651\">(byteArray); </span>MailMessage <span style=\" color: #000;\" id=\"6652\">message = </span><span style=\" color: #00F;\" id=\"6653\">new </span>MailMessage<span style=\" color: #000;\" id=\"6654\">(); message.Subject = subject;</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6655\">message.Body = body;</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6656\">message.From = <span style=\" color: #00F;\" id=\"6657\">new </span><span style=\" color: #2B91AE;\" id=\"6658\">MailAddress</span>(<a href=\"mailto:jeevan_2np@yahoo.com\" class=\"s130\" target=\"_blank\" id=\"6659\">\"sender id example: </a><span style=\" color: #A21515;\" id=\"6660\">jeevan_2np@yahoo.com\"</span>);</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6661\">message.To.Add(email);</p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6662\">SmtpClient <span style=\" color: #000;\" id=\"6663\">client = </span><span style=\" color: #00F;\" id=\"6664\">new </span>SmtpClient<span style=\" color: #000;\" id=\"6665\">();</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6666\"><span style=\" color: #2B91AE;\" id=\"6667\">Attachment </span>vcard = <span style=\" color: #00F;\" id=\"6668\">new </span><span style=\" color: #2B91AE;\" id=\"6669\">Attachment</span>(stream, <span style=\" color: #A21515;\" id=\"6670\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6671\">client.Host = <span style=\" color: #A21515;\" id=\"6672\">\"smtp address\"</span>; client.Port = smtp port number;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6673\">client.Credentials = <span style=\" color: #00F;\" id=\"6674\">new </span><span style=\" color: #2B91AE;\" id=\"6675\">NetworkCredential</span>(<span style=\" color: #A21515;\" id=\"6676\">\"user id \"</span>, <span style=\" color: #A21515;\" id=\"6677\">\"password\"</span>); client.EnableSsl = <span style=\" color: #00F;\" id=\"6678\">true</span>;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6679\">client.Send(message);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6680\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6681\">catch</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6682\">{</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6683\">LabelNotice.Text = <span style=\" color: #A21515;\" id=\"6684\">\"Internal Error\"</span>;</p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6685\">DownloadVcard(byteArray);</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6686\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6687\"><br id=\"6688\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6689\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6690\"><br id=\"6691\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6692\"><span style=\" color: #00F;\" id=\"6693\">protected void </span>CustomValidatorName_ServerValidate(<span style=\" color: #00F;\" id=\"6694\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6695\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6696\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6697\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6698\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6699\"><br id=\"6700\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6701\"><span style=\" color: #00F;\" id=\"6702\">protected void </span>CustomValidatorPostalCode_ServerValidate(<span style=\" color: #00F;\" id=\"6703\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6704\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6705\">{</p><p class=\"s66\" style=\"text-indent: 0pt;line-height: 11pt;text-align: right;\" id=\"6706\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6707\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6708\"><br id=\"6709\"></p><p class=\"s66\" style=\"padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6710\">if <span style=\" color: #000;\" id=\"6711\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 3pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6712\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6713\">args.IsValid = RemoveSpecialCharacter(args.Value).Length == 4;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6714\">}</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6715\">else</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6716\">{</p><p class=\"s70\" style=\"padding-left: 109pt;text-indent: 0pt;text-align: left;\" id=\"6717\">args.IsValid = <span style=\" color: #00F;\" id=\"6718\">true</span>;</p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6719\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6720\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6721\">catch <span style=\" color: #000;\" id=\"6722\">{ args.IsValid = </span>false<span style=\" color: #000;\" id=\"6723\">; }</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6724\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6725\"><br id=\"6726\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6727\"><span style=\" color: #00F;\" id=\"6728\">protected void </span>CustomValidatorCountry_ServerValidate(<span style=\" color: #00F;\" id=\"6729\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6730\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6731\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6732\"><br id=\"6733\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6734\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6735\"><br id=\"6736\"></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6737\"><span style=\" color: #00F;\" id=\"6738\">protected void </span>CustomValidatorPhone_ServerValidate(<span style=\" color: #00F;\" id=\"6739\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6740\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6741\">{</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6742\">if <span style=\" color: #000;\" id=\"6743\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6744\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6745\"><br id=\"6746\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6747\">}</p><p class=\"s66\" style=\"text-indent: 0pt;text-align: right;\" id=\"6748\">else</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6749\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6750\"><br id=\"6751\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6752\">}</p><p class=\"s70\" style=\"padding-left: 10pt;text-indent: 0pt;text-align: center;\" id=\"6753\">}</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"6754\">args.IsValid = ValidatePhone(args.Value);</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6755\"><br id=\"6756\"></p><p class=\"s70\" style=\"text-indent: 0pt;text-align: left;\" id=\"6757\">args.IsValid = <span style=\" color: #00F;\" id=\"6758\">true</span>;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6759\"><br id=\"6760\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6761\"><span style=\" color: #00F;\" id=\"6762\">protected void </span>CustomValidatorEmail_ServerValidate(<span style=\" color: #00F;\" id=\"6763\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6764\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6765\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6766\">args.IsValid = ValidateEmail(args.Value.ToString());</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6767\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6768\"><br id=\"6769\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6770\"><span style=\" color: #00F;\" id=\"6771\">protected void </span>CustomValidatorWebSite_ServerValidate(<span style=\" color: #00F;\" id=\"6772\">object </span>source, <span style=\" color: #2B91AE;\" id=\"6773\">ServerValidateEventArgs </span>args)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6774\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6775\"><br id=\"6776\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6777\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6778\"><br id=\"6779\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6780\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6781\">/// <span style=\" color: #008000;\" id=\"6782\">Validates the phone.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6783\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-top: 2pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6784\">/// &lt;param name=\"input\"&gt;<span style=\" color: #008000;\" id=\"6785\">The input.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6786\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6787\">true if it valid </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6788\">public bool </span><span style=\" color: #000;\" id=\"6789\">ValidatePhone(</span><span style=\" color: #00F;\" id=\"6790\">string </span><span style=\" color: #000;\" id=\"6791\">input)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6792\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6793\"><span style=\" color: #00F;\" id=\"6794\">if </span>(input.Length != 8) { <span style=\" color: #00F;\" id=\"6795\">return false</span>; } <span style=\" color: #2B91AE;\" id=\"6796\">Regex </span>num = <span style=\" color: #00F;\" id=\"6797\">new </span><span style=\" color: #2B91AE;\" id=\"6798\">Regex</span>(<span style=\" color: #A21515;\" id=\"6799\">\"[^0-9]\"</span>);</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6800\">return <span style=\" color: #000;\" id=\"6801\">!num.IsMatch(input);</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6802\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6803\"><br id=\"6804\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6805\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6806\">/// <span style=\" color: #008000;\" id=\"6807\">Validates the email.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6808\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6809\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6810\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6811\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6812\">true on valid email </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6813\">public bool </span><span style=\" color: #000;\" id=\"6814\">ValidateEmail(</span><span style=\" color: #00F;\" id=\"6815\">string </span><span style=\" color: #000;\" id=\"6816\">email)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6817\">{</p><p class=\"s66\" style=\"padding-left: 4pt;text-indent: 0pt;line-height: 11pt;text-align: center;\" id=\"6818\">return <span style=\" color: #2B91AE;\" id=\"6819\">Regex</span><span style=\" color: #000;\" id=\"6820\">.IsMatch(email,</span></p><p class=\"s99\" style=\"padding-left: 72pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6821\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\" style=\"padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"6822\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span style=\" color: #000;\" id=\"6823\">+</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 67pt;text-align: left;\" id=\"6824\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a- zA-Z]{2,6}))$\"<span style=\" color: #000;\" id=\"6825\">);</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6826\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6827\"><br id=\"6828\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6829\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6830\">/// <span style=\" color: #008000;\" id=\"6831\">Removes the special character.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6832\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6833\">/// &lt;param name=\"input\"&gt;<span style=\" color: #008000;\" id=\"6834\">The input.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6835\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6836\">secure string </span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6837\">public string <span style=\" color: #000;\" id=\"6838\">RemoveSpecialCharacter(</span>string <span style=\" color: #000;\" id=\"6839\">input)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6840\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6841\"><span style=\" color: #00F;\" id=\"6842\">return </span><span style=\" color: #2B91AE;\" id=\"6843\">Regex</span>.Replace(input, <span style=\" color: #A21515;\" id=\"6844\">\"[^0-9a-zA-Z. ]+\"</span>, <span style=\" color: #A21515;\" id=\"6845\">\"\"</span>);</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6846\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6847\"><br id=\"6848\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6849\"><span style=\" color: #00F;\" id=\"6850\">protected void </span>TextBoxEmail_TextChanged(<span style=\" color: #00F;\" id=\"6851\">object </span>sender, <span style=\" color: #2B91AE;\" id=\"6852\">EventArgs </span>e)</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6853\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6854\"><br id=\"6855\"></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6856\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6857\"><br id=\"6858\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6859\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6860\">/// <span style=\" color: #008000;\" id=\"6861\">Creates the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6862\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6863\">/// &lt;param name=\"tableName\"&gt;<span style=\" color: #008000;\" id=\"6864\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6865\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6866\">true if table created</span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6867\">private static bool </span><span style=\" color: #000;\" id=\"6868\">CreateTable(</span><span style=\" color: #00F;\" id=\"6869\">string </span><span style=\" color: #000;\" id=\"6870\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6871\">{</p><p class=\"s66\" style=\"text-indent: 0pt;text-align: right;\" id=\"6872\">try</p><p class=\"s70\" style=\"text-indent: 0pt;text-align: right;\" id=\"6873\">{</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6874\"><br id=\"6875\"></p><p class=\"s70\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6876\"><span style=\" color: #2B91AE;\" id=\"6877\">SqlConnection </span>connection = <span style=\" color: #00F;\" id=\"6878\">new </span><span style=\" color: #2B91AE;\" id=\"6879\">SqlConnection</span>(<span style=\" color: #2B91AE;\" id=\"6880\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"6881\">string </span>queryString =</p><p class=\"s99\" style=\"padding-left: 24pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6882\">@\" CREATE TABLE [vcardimage](</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6883\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 5pt;text-align: left;\" id=\"6884\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s99\" style=\"padding-left: 45pt;text-indent: 0pt;text-align: left;\" id=\"6885\">[imageguid] [nvarchar](250) NULL)\"<span style=\" color: #000;\" id=\"6886\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6887\"><br id=\"6888\"></p><p class=\"s98\" style=\"padding-left: 3pt;text-indent: 0pt;text-align: left;\" id=\"6889\">SqlCommand <span style=\" color: #000;\" id=\"6890\">command = </span><span style=\" color: #00F;\" id=\"6891\">new </span>SqlCommand<span style=\" color: #000;\" id=\"6892\">(queryString, connection);</span></p><p class=\"s70\" style=\"padding-top: 2pt;padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6893\">connection.Open(); command.ExecuteNonQuery(); connection.Close();</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6894\">return true<span style=\" color: #000;\" id=\"6895\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6896\">}</p><p class=\"s66\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6897\">catch</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6898\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6899\">return false<span style=\" color: #000;\" id=\"6900\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6901\">}</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6902\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6903\"><br id=\"6904\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6905\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6906\">/// <span style=\" color: #008000;\" id=\"6907\">Checks the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6908\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6909\">/// &lt;param name=\"tableName\"&gt;<span style=\" color: #008000;\" id=\"6910\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6911\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6912\">true if table exist </span>&lt;/returns&gt; <span style=\" color: #00F;\" id=\"6913\">private static bool </span><span style=\" color: #000;\" id=\"6914\">CheckTable(</span><span style=\" color: #00F;\" id=\"6915\">string </span><span style=\" color: #000;\" id=\"6916\">tableName)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6917\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6918\"><span style=\" color: #2B91AE;\" id=\"6919\">SqlServerHelper </span>sqlHeplper = <span style=\" color: #00F;\" id=\"6920\">new </span><span style=\" color: #2B91AE;\" id=\"6921\">SqlServerHelper</span>(<span style=\" color: #2B91AE;\" id=\"6922\">GlobalSettings</span>.DbDSN); <span style=\" color: #00F;\" id=\"6923\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6924\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6925\"><br id=\"6926\"></p><p class=\"s103\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6927\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6928\">/// <span style=\" color: #008000;\" id=\"6929\">Inserts the table.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6930\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6931\">/// &lt;param name=\"name\"&gt;<span style=\" color: #008000;\" id=\"6932\">The name.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6933\">/// &lt;param name=\"street\"&gt;<span style=\" color: #008000;\" id=\"6934\">The street.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6935\">/// &lt;param name=\"postalcode\"&gt;<span style=\" color: #008000;\" id=\"6936\">The postalcode.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6937\">/// &lt;param name=\"country\"&gt;<span style=\" color: #008000;\" id=\"6938\">The country.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6939\">/// &lt;param name=\"phone\"&gt;<span style=\" color: #008000;\" id=\"6940\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6941\">/// &lt;param name=\"email\"&gt;<span style=\" color: #008000;\" id=\"6942\">The email.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6943\">/// &lt;param name=\"website\"&gt;<span style=\" color: #008000;\" id=\"6944\">The website.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6945\">/// &lt;param name=\"imageguid\"&gt;<span style=\" color: #008000;\" id=\"6946\">The imageguid.</span>&lt;/param&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6947\">/// &lt;returns&gt; <span style=\" color: #008000;\" id=\"6948\">true on successul data insert</span>&lt;/returns&gt;</p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 41pt;text-align: left;\" id=\"6949\">public static bool <span style=\" color: #000;\" id=\"6950\">InsertTable(</span>string <span style=\" color: #000;\" id=\"6951\">name, </span>string <span style=\" color: #000;\" id=\"6952\">street, </span>string <span style=\" color: #000;\" id=\"6953\">postalcode, </span>string <span style=\" color: #000;\" id=\"6954\">country, </span>string <span style=\" color: #000;\" id=\"6955\">phone, </span>string <span style=\" color: #000;\" id=\"6956\">email, </span>string <span style=\" color: #000;\" id=\"6957\">website, </span>string <span style=\" color: #000;\" id=\"6958\">imageguid)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"6959\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6960\"><span style=\" color: #00F;\" id=\"6961\">string </span>tableName = <span style=\" color: #A21515;\" id=\"6962\">\"vcardimage\"</span>; <span style=\" color: #00F;\" id=\"6963\">try</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6964\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6965\">if <span style=\" color: #000;\" id=\"6966\">(!CheckTable(tableName))</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6967\">{ CreateTable(tableName); }</p><p class=\"s98\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6968\">ISqlHelper <span style=\" color: #000;\" id=\"6969\">sqlHelper = umbraco.BusinessLogic.</span>Application<span style=\" color: #000;\" id=\"6970\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"6971\">@\"insert into \" <span style=\" color: #000;\" id=\"6972\">+ tableName + </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span style=\" color: #000;\" id=\"6973\">+</span></p><p class=\"s99\" style=\"padding-left: 88pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6974\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6975\">@website, @imageguid, @date);\"<span style=\" color: #000;\" id=\"6976\">,</span></p><p class=\"s70\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6977\">sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6978\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6979\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6980\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6981\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6982\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6983\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6984\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6985\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span style=\" color: #A21515;\" id=\"6986\">\"@date\"</span>, <span style=\" color: #2B91AE;\" id=\"6987\">DateTime</span>.Now)); <span style=\" color: #00F;\" id=\"6988\">return true</span>;</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"6989\">}</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6990\"><span style=\" color: #00F;\" id=\"6991\">catch </span>(<span style=\" color: #2B91AE;\" id=\"6992\">Exception</span>)</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"6993\">{</p><p class=\"s66\" style=\"padding-left: 88pt;text-indent: 0pt;text-align: left;\" id=\"6994\">return false<span style=\" color: #000;\" id=\"6995\">;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6996\"><br id=\"6997\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"6998\"><br id=\"6999\"></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7000\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7001\"><br id=\"7002\"></p><p class=\"s70\" style=\"padding-top: 3pt;padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7003\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7004\"><br id=\"7005\"></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7006\">/// &lt;summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7007\">/// <span style=\" color: #008000;\" id=\"7008\">Downloads the vcard.</span></p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7009\">/// &lt;/summary&gt;</p><p class=\"s103\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7010\">/// &lt;param name=\"vcardFile\"&gt;<span style=\" color: #008000;\" id=\"7011\">The vcard file.</span>&lt;/param&gt; <span style=\" color: #00F;\" id=\"7012\">public void </span><span style=\" color: #000;\" id=\"7013\">DownloadVcard(</span><span style=\" color: #00F;\" id=\"7014\">byte </span><span style=\" color: #000;\" id=\"7015\">[] vcardFile)</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;text-align: left;\" id=\"7016\">{</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7017\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span style=\" color: #00F;\" id=\"7018\">true</span>;</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7019\">Response.ContentType = <span style=\" color: #A21515;\" id=\"7020\">\"application/vcard\"</span>; Response.AddHeader(<span style=\" color: #A21515;\" id=\"7021\">\"content-disposition\"</span>, <span style=\" color: #A21515;\" id=\"7022\">\"attach;filename =</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7023\">YourVcard.vcf\"<span style=\" color: #000;\" id=\"7024\">);</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7025\">Response.Charset = <span style=\" color: #A21515;\" id=\"7026\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7027\">HttpContext<span style=\" color: #000;\" id=\"7028\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7029\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7030\">}</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7031\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7032\"><br id=\"7033\"></p><p style=\"padding-top: 4pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7034\"><span class=\"s97\" style=\" background-color: #FF0;\" id=\"7035\">GlobalSetting.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7036\"><br id=\"7037\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7038\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7039\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: -6pt;line-height: 114%;text-align: left;\" id=\"7040\">&lt;xsl:stylesheet version=\"1.0\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7041\"><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7042\">xmlns:xsl=\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml=\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library=\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon=\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes=\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath=\"urn:Exslt.ExsltMath\" xmlns:Exslt.ExsltRegularExpressions=\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings=\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets=\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7043\">exclude-result-prefixes=\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7044\"><br id=\"7045\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7046\">&lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7047\">&lt;xsl:param name=\"currentPage\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7048\">&lt;xsl:template match=\"/\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 8pt;text-indent: 0pt;text-align: left;\" id=\"7049\">&lt;!-- start writing XSLT --&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7050\">&lt;xsl:variable name=\"items\" select=\"$currentPage/ancestor-or-self::*</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7051\">/WebSiteGlobalSettings \"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7052\">&lt;xsl:variable name=\"logo\" select=\"$items/logo\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7053\">&lt;div class=\"vcard\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7054\">&lt;div class=\"logo\"&gt;&lt;a href=\"/\" title=\"start page\"&gt;</p><p style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7055\">&lt;img src=\"{$logo}\" alt=\"semic provider logo; visual identity\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: center;\" id=\"7056\">&lt;/a&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7057\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7058\">&lt;div class=\"fn\" &gt;</p><p style=\"padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"7059\">&lt;xsl:value-of select=\"$items/siteName\"/&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7060\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7061\">&lt;h4&gt; &lt;xsl:value-of select=\"$items/slogan\"/&gt; &lt;/h4&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7062\">&lt;/div&gt;</p><p style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7063\">&lt;/xsl:template&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7064\">&lt;/xsl:stylesheet&gt;</p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7065\">Navigation.xslt</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7066\"><br id=\"7067\"></p><p style=\"padding-top: 8pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7068\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7069\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7070\">&lt;<span class=\"p\" id=\"7071\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7072\">version<span class=\"s56\" id=\"7073\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7074\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7075\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7076\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7077\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7078\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7079\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7080\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7081\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7082\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7083\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7084\">=</span>\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7085\">exclude-result-prefixes<span class=\"s56\" id=\"7086\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7087\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7088\">&lt;<span class=\"p\" id=\"7089\">xsl:output method</span>=<span class=\"p\" id=\"7090\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7091\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7092\">&lt;<span class=\"p\" id=\"7093\">xsl:param name</span>=<span class=\"p\" id=\"7094\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7095\">&lt;<span class=\"p\" id=\"7096\">xsl:template match</span>=<span class=\"p\" id=\"7097\">\"/\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7098\">&lt;<span class=\"p\" id=\"7099\">xsl:variable name</span>=<span class=\"p\" id=\"7100\">\"items\" select</span>=<span class=\"p\" id=\"7101\">\"$currentPage/ancestor-or-self::*</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7102\">/GeneralContent [string(useInNavigation) = '1'] \"<span class=\"s56\" id=\"7103\">/&gt;</span></p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7104\">&lt;<span class=\"p\" id=\"7105\">xsl:if test</span>=<span class=\"p\" id=\"7106\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7107\">&lt;<span class=\"p\" id=\"7108\">ul</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7109\">&lt;<span class=\"p\" id=\"7110\">xsl:for-each select</span>=<span class=\"p\" id=\"7111\">\"$items\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7112\">&lt;<span class=\"p\" id=\"7113\">xsl:if test</span>=<span class=\"p\" id=\"7114\">\"$currentPage/@id = @id\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7115\">&lt;<span class=\"p\" id=\"7116\">li class</span>=<span class=\"p\" id=\"7117\">\"current\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7118\">&lt;<span class=\"p\" id=\"7119\">xsl:value-of select</span>=<span class=\"p\" id=\"7120\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7121\">&lt;/<span class=\"p\" id=\"7122\">li</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7123\">&lt;/<span class=\"p\" id=\"7124\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 21pt;text-indent: 0pt;text-align: left;\" id=\"7125\">&lt;<span class=\"p\" id=\"7126\">xsl:if test</span>=<span class=\"p\" id=\"7127\">\"$currentPage/@id != @id\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7128\">&lt;<span class=\"p\" id=\"7129\">li class</span>=<span class=\"p\" id=\"7130\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 35pt;text-indent: 0pt;text-align: left;\" id=\"7131\">&lt;<span class=\"p\" id=\"7132\">a href</span>=<span class=\"p\" id=\"7133\">\"{umbraco.library:NiceUrl(@id)}\" title</span>=<span class=\"p\" id=\"7134\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7135\">&lt;<span class=\"p\" id=\"7136\">xsl:value-of select</span>=<span class=\"p\" id=\"7137\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 24pt;text-indent: 0pt;text-align: center;\" id=\"7138\">&lt;/<span class=\"p\" id=\"7139\">a</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7140\">&lt;/<span class=\"p\" id=\"7141\">li</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7142\">&lt;/<span class=\"p\" id=\"7143\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7144\">&lt;/<span class=\"p\" id=\"7145\">xsl:for-each</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7146\">&lt;/<span class=\"p\" id=\"7147\">ul</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 18pt;text-indent: 0pt;text-align: left;\" id=\"7148\">&lt;/<span class=\"p\" id=\"7149\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 3pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7150\">&lt;/<span class=\"p\" id=\"7151\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7152\">&lt;/<span class=\"p\" id=\"7153\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7154\"><br id=\"7155\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7156\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7157\">NewsList.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7158\"><br id=\"7159\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7160\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7161\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7162\">&lt;<span class=\"p\" id=\"7163\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7164\">version<span class=\"s56\" id=\"7165\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7166\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7167\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7168\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7169\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7170\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7171\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7172\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7173\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7174\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7175\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7176\">=</span>\"urn:Exslt.ExsltSets\"</p><p style=\"padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7177\">exclude-result-prefixes<span class=\"s56\" id=\"7178\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7179\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7180\">&lt;<span class=\"p\" id=\"7181\">xsl:output method</span>=<span class=\"p\" id=\"7182\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7183\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7184\">&lt;<span class=\"p\" id=\"7185\">xsl:param name</span>=<span class=\"p\" id=\"7186\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7187\">&lt;<span class=\"p\" id=\"7188\">xsl:template match</span>=<span class=\"p\" id=\"7189\">\"/\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7190\">&lt;<span class=\"p\" id=\"7191\">xsl:variable name</span>=<span class=\"p\" id=\"7192\">\"newsItems\" select</span>=<span class=\"p\" id=\"7193\">\"$currentPage/ancestor-or-self::*</span></p><p style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7194\">/NewsContainer/NewsArticle \"<span class=\"s56\" id=\"7195\">/&gt;</span></p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7196\">&lt;<span class=\"p\" id=\"7197\">xsl:variable name</span>=<span class=\"p\" id=\"7198\">\"numberofnewsitems\" select</span>=<span class=\"p\" id=\"7199\">\"/macro/numberofnewsitems\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7200\">&lt;<span class=\"p\" id=\"7201\">xsl:if test</span>=<span class=\"p\" id=\"7202\">\"count($newsItems) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7203\">&lt;<span class=\"p\" id=\"7204\">xsl:for-each select</span>=<span class=\"p\" id=\"7205\">\"$newsItems\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"7206\">&lt;<span class=\"p\" id=\"7207\">xsl:sort select</span>=<span class=\"p\" id=\"7208\">\"@createDate\" order</span>=<span class=\"p\" id=\"7209\">\"ascending\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 15pt;text-indent: 0pt;text-align: left;\" id=\"7210\">&lt;<span class=\"p\" id=\"7211\">xsl:if test</span>=<span class=\"p\" id=\"7212\">\"position() &amp;lt;=$numberofnewsitems\" </span>&gt; &lt;<span class=\"p\" id=\"7213\">div clas</span>=<span class=\"p\" id=\"7214\">\"newsItem\"</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 27pt;text-indent: 0pt;text-align: center;\" id=\"7215\">&lt;<span class=\"p\" id=\"7216\">h3</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7217\">&lt;<span class=\"p\" id=\"7218\">a href</span>=<span class=\"p\" id=\"7219\">\"{umbraco.library:NiceUrl(@id)}\" </span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 45pt;text-indent: 0pt;text-align: left;\" id=\"7220\">&lt;<span class=\"p\" id=\"7221\">xsl:value-of select</span>=<span class=\"p\" id=\"7222\">\"newsTitle\" </span>/&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7223\"><br id=\"7224\"></p><p class=\"s56\" style=\"padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7225\">&lt;/<span class=\"p\" id=\"7226\">a</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 30pt;text-indent: 0pt;text-align: center;\" id=\"7227\">&lt;/<span class=\"p\" id=\"7228\">h3</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7229\">&lt;<span class=\"p\" id=\"7230\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7231\">&lt;<span class=\"p\" id=\"7232\">xsl:value-of select</span>=<span class=\"p\" id=\"7233\">\"newsBody\" disable-output-escaping</span>=<span class=\"p\" id=\"7234\">\"yes\" </span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7235\">&lt;/<span class=\"p\" id=\"7236\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 31pt;text-indent: 0pt;text-align: left;\" id=\"7237\">&lt;<span class=\"p\" id=\"7238\">p</span>&gt;</p><p style=\"padding-top: 2pt;padding-left: 38pt;text-indent: 0pt;text-align: left;\" id=\"7239\">Last update: <span class=\"s56\" id=\"7240\">&lt;</span>xsl:value-of select<span class=\"s56\" id=\"7241\">=</span>\"@updateDate\" <span class=\"s56\" id=\"7242\">/&gt;</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7243\"><br id=\"7244\"></p><p class=\"s56\" style=\"padding-top: 4pt;text-indent: 0pt;text-align: center;\" id=\"7245\">&lt;/<span class=\"p\" id=\"7246\">p</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 2pt;text-indent: 0pt;text-align: center;\" id=\"7247\">&lt;/<span class=\"p\" id=\"7248\">div</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7249\">&lt;/<span class=\"p\" id=\"7250\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7251\">&lt;/<span class=\"p\" id=\"7252\">xsl:for-each</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7253\">&lt;/<span class=\"p\" id=\"7254\">xsl:if</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"7255\">&lt;/<span class=\"p\" id=\"7256\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 4pt;text-indent: 0pt;text-align: center;\" id=\"7257\">&lt;/<span class=\"p\" id=\"7258\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7259\"><br id=\"7260\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7261\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7262\">RecentVcard.xslt</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7263\"><br id=\"7264\"></p><p style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7265\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7266\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7267\">&lt;<span class=\"p\" id=\"7268\">xsl:stylesheet</span></p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 6pt;line-height: 114%;text-align: left;\" id=\"7269\">version<span class=\"s56\" id=\"7270\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7271\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7272\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7273\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:recentVcard<span class=\"s56\" id=\"7274\">=</span>\"urn:recentvcard\" xmlns:umbraco.library<span class=\"s56\" id=\"7275\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7276\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7277\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7278\">=</span>\"urn:Exslt.ExsltMath\"</p><p style=\"padding-left: 5pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7279\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7280\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7281\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7282\">=</span>\"urn:Exslt.ExsltSets\" xmlns:recentvcard<span class=\"s56\" id=\"7283\">=</span>\"urn:recentvcard\" exclude-result-prefixes<span class=\"s56\" id=\"7284\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets recentvcard \"<span class=\"s56\" id=\"7285\">&gt;</span></p><p class=\"s56\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7286\">&lt;<span class=\"p\" id=\"7287\">xsl:output method</span>=<span class=\"p\" id=\"7288\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7289\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7290\">&lt;<span class=\"p\" id=\"7291\">xsl:param name</span>=<span class=\"p\" id=\"7292\">\"currentPage\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7293\">&lt;<span class=\"p\" id=\"7294\">xsl:template match</span>=<span class=\"p\" id=\"7295\">\"/\"</span>&gt;</p><p style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7296\">&lt;!-- start writing XSLT --&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 11pt;text-indent: 0pt;text-align: left;\" id=\"7297\">&lt;<span class=\"p\" id=\"7298\">xsl:value-of select</span>=<span class=\"p\" id=\"7299\">\"recentVcard:GetVcardData()\" disable-output-escaping</span>=<span class=\"p\" id=\"7300\">\"yes\"</span>/&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7301\">&lt;/<span class=\"p\" id=\"7302\">xsl:template</span>&gt;</p><p class=\"s56\" style=\"padding-top: 2pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7303\">&lt;/<span class=\"p\" id=\"7304\">xsl:stylesheet</span>&gt;</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7305\"><br id=\"7306\"></p><p style=\"padding-top: 5pt;padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7307\"><span class=\"s131\" style=\" background-color: #FF0;\" id=\"7308\">RecentVcard.cs</span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7309\"><br id=\"7310\"></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7311\">using <span style=\" color: #000;\" id=\"7312\">System;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7313\">using <span style=\" color: #000;\" id=\"7314\">System.Collections.Generic; </span>using <span style=\" color: #000;\" id=\"7315\">System.Linq;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7316\">using <span style=\" color: #000;\" id=\"7317\">System.Web;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7318\">using <span style=\" color: #000;\" id=\"7319\">umbraco.DataLayer; </span>using <span style=\" color: #000;\" id=\"7320\">umbraco;</span></p><p class=\"s66\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7321\">namespace <span style=\" color: #000;\" id=\"7322\">VCardGenerator</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7323\">{</p><p class=\"s66\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7324\">public class <span style=\" color: #2B91AE;\" id=\"7325\">RecentVcard</span></p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7326\">{</p><p class=\"s66\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7327\">public static string <span style=\" color: #000;\" id=\"7328\">GetVcardData()</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7329\">{</p><p class=\"s98\" style=\"padding-left: 5pt;text-indent: 62pt;text-align: left;\" id=\"7330\">ISqlHelper <span style=\" color: #000;\" id=\"7331\">getVcard = </span>DataLayerHelper<span style=\" color: #000;\" id=\"7332\">.CreateSqlHelper(</span>GlobalSettings<span style=\" color: #000;\" id=\"7333\">.DbDSN);</span></p><p class=\"s98\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7334\">IRecordsReader <span style=\" color: #000;\" id=\"7335\">read = getVcard.ExecuteReader(</span><span style=\" color: #A21515;\" id=\"7336\">@\"select top 10 id, name,</span></p><p class=\"s99\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7337\">country</p><p class=\"s99\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7338\">from vcardimage where id &gt; @id order by id desc\"<span style=\" color: #000;\" id=\"7339\">,</span></p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7340\">getVcard.CreateParameter(<span style=\" color: #A21515;\" id=\"7341\">\"@id\"</span>, <span style=\" color: #A21515;\" id=\"7342\">\"0\"</span>));</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7343\"><span style=\" color: #00F;\" id=\"7344\">string </span>data = <span style=\" color: #A21515;\" id=\"7345\">\"\"</span>; <span style=\" color: #00F;\" id=\"7346\">while </span>(read.Read())</p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7347\">{</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 83pt;text-align: left;\" id=\"7348\">data += <span style=\" color: #A21515;\" id=\"7349\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span style=\" color: #A21515;\" id=\"7350\">\"name\"</span>) +</p><p class=\"s99\" style=\"padding-left: 104pt;text-indent: 0pt;text-align: left;\" id=\"7351\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span style=\" color: #000;\" id=\"7352\">+ read.GetString(</span>\"country\"<span style=\" color: #000;\" id=\"7353\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span style=\" color: #000;\" id=\"7354\">;</span></p><p class=\"s70\" style=\"padding-left: 67pt;text-indent: 0pt;text-align: left;\" id=\"7355\">}</p><p class=\"s99\" style=\"padding-left: 67pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7356\"><span style=\" color: #00F;\" id=\"7357\">return </span>\"&lt;ul&gt;\" <span style=\" color: #000;\" id=\"7358\">+ data + </span>\"&lt;/ul\"<span style=\" color: #000;\" id=\"7359\">;</span></p><p class=\"s70\" style=\"padding-left: 46pt;text-indent: 0pt;line-height: 11pt;text-align: left;\" id=\"7360\">}</p><p class=\"s70\" style=\"padding-left: 25pt;text-indent: 0pt;text-align: left;\" id=\"7361\">}</p><p class=\"s70\" style=\"padding-left: 5pt;text-indent: 0pt;text-align: left;\" id=\"7362\">}</p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7363\"><span id=\"7364\"><img width=\"602\" height=\"851\" alt=\"image\" src=\"Image_137.png\" id=\"7365\"></span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7366\"><br id=\"7367\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7368\"><br id=\"7369\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7370\"><br id=\"7371\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7372\">About Writer</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7373\">Name: Jivan Thapa</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7374\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p style=\"padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;line-height: 159%;text-align: left;\" id=\"7375\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7376\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7377\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7378\">jeevan_2np@yahoo.com</a></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7379\"><br id=\"7380\"></p><p class=\"s8\" style=\"padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7381\">About Writer</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7382\">Name: Jivan Thapa</p><p style=\"padding-top: 8pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7383\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p style=\"padding-top: 6pt;padding-left: 7pt;text-indent: 0pt;line-height: 159%;text-align: left;\" id=\"7384\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7385\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7386\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7387\">jeevan_2np@yahoo.com</a></p><p style=\"padding-left: 30pt;text-indent: 0pt;text-align: left;\" id=\"7388\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"7389\"> </span></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7390\"><br id=\"7391\"></p><p style=\"text-indent: 0pt;text-align: left;\" id=\"7392\"><br id=\"7393\"></p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7394\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7395\">Here I covered:</p><ul id=\"l140\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7397\"><p style=\"display: inline;\" id=\"7398\">Document Type</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7399\"><p style=\"display: inline;\" id=\"7400\">Template</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7401\"><p style=\"display: inline;\" id=\"7402\">Content</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7403\"><p style=\"display: inline;\" id=\"7404\">Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7405\"><p style=\"display: inline;\" id=\"7406\">Extending Umbraco using .net class and User Control</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7407\"><p style=\"display: inline;\" id=\"7408\">And more ….</p></li></ul><p style=\"padding-top: 11pt;text-indent: 0pt;text-align: right;\" id=\"7409\">Jivan Thapa</p><p style=\"padding-top: 3pt;padding-left: 7pt;text-indent: 0pt;line-height: 114%;text-align: left;\" id=\"7410\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p style=\"padding-top: 10pt;padding-left: 7pt;text-indent: 0pt;text-align: left;\" id=\"7411\">Here I covered:</p><ul id=\"l141\"><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7413\"><p style=\"display: inline;\" id=\"7414\">Document Type</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7415\"><p style=\"display: inline;\" id=\"7416\">Template</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7417\"><p style=\"display: inline;\" id=\"7418\">Content</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7419\"><p style=\"display: inline;\" id=\"7420\">Xslt</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7421\"><p style=\"display: inline;\" id=\"7422\">Extending Umbraco using .net class and User Control</p></li><li style=\"padding-top: 1pt;padding-left: 43pt;text-indent: -18pt;text-align: left;\" id=\"7423\"><p style=\"display: inline;\" id=\"7424\">And more ….</p></li></ul><p style=\"padding-top: 11pt;text-indent: 0pt;text-align: right;\" id=\"7425\">Jivan Thapa</p><p style=\"padding-left: 30pt;text-indent: 0pt;text-align: left;\" id=\"7426\"><span style=\" color: black; font-family:&quot;Times New Roman&quot;, serif; font-style: normal; font-weight: normal; text-decoration: none; font-size: 10pt;\" id=\"7427\"> </span></p></div>","templateType":"article:topic","pageStyleReducedHeading":"<h3  id=\"heading6010\" class=\"heading6010\"><a name=\"bookmark77\" id=\"6011\" >Web grid.</a></h3>","pageStyleReducedContent":"<div id=\"contentheading6010\" ><p  id=\"6012\"><span id=\"6013\"><img width=\"599\" height=\"371\" alt=\"image\" src=\"Image_136.jpg\" id=\"6014\"></span></p><h3  id=\"6015\"><a name=\"bookmark78\" id=\"6016\">File “VcardControl.ascx”</a></h3><p  id=\"6017\"><span class=\"s65\"  id=\"6018\">&lt;%</span><span class=\"s66\" id=\"6019\">@ </span><span class=\"s67\" id=\"6020\">Control </span><span class=\"s68\" id=\"6021\">Language</span><span class=\"s66\" id=\"6022\">=\"C#\" </span><span class=\"s68\" id=\"6023\">AutoEventWireup</span><span class=\"s66\" id=\"6024\">=\"true\" </span><span class=\"s68\" id=\"6025\">CodeBehind</span><span class=\"s66\" id=\"6026\">=\"VcardControl.ascx.cs\" </span><span class=\"s68\" id=\"6027\">Inherits</span><span class=\"s66\" id=\"6028\">=\"VCardGenerator.VcardControl\" </span><span class=\"s65\"  id=\"6029\">%&gt;</span></p><p  id=\"6030\"><br id=\"6031\"></p><p class=\"s66\"  id=\"6032\">&lt;<span  id=\"6033\">form </span><span  id=\"6034\">id</span>=\"FormVcard\" <span  id=\"6035\">runat</span>=\"server\"&gt;</p><p class=\"s66\"  id=\"6036\">&lt;<span  id=\"6037\">div </span><span  id=\"6038\">class</span>=\"errorMessage\"&gt;</p><p class=\"s66\"  id=\"6039\">&lt;<span  id=\"6040\">asp</span>:<span  id=\"6041\">Label </span><span  id=\"6042\">ID</span>=\"LabelNotice\" <span  id=\"6043\">runat</span>=\"server\" <span  id=\"6044\">Text</span>=\"\"&gt;&lt;/<span  id=\"6045\">asp</span>:<span  id=\"6046\">Label</span>&gt;</p><p class=\"s66\"  id=\"6047\">&lt;<span  id=\"6048\">asp</span>:<span  id=\"6049\">ValidationSummary </span><span  id=\"6050\">ID</span>=\"ValidationSummary\" <span  id=\"6051\">runat</span>=\"server\" <span  id=\"6052\">ForeColor</span>=\"#FF6666\"</p><p class=\"s66\"  id=\"6053\">/&gt;</p><p class=\"s66\"  id=\"6054\">&lt;/<span  id=\"6055\">div</span>&gt;</p><p class=\"s66\"  id=\"6056\">&lt;<span  id=\"6057\">table </span>&gt;</p><p class=\"s66\"  id=\"6058\">&lt;<span  id=\"6059\">tr </span><span  id=\"6060\">class</span>=\"name\"&gt;</p><p class=\"s66\"  id=\"6061\">&lt;<span  id=\"6062\">td</span>&gt; <span  id=\"6063\">Name: </span>&lt;/<span  id=\"6064\">td</span>&gt;&lt;<span  id=\"6065\">td</span>&gt;&lt;<span  id=\"6066\">asp</span>:<span  id=\"6067\">TextBox </span><span  id=\"6068\">ID</span>=\"TextBoxName\" <span  id=\"6069\">runat</span>=server&gt;&lt;/<span  id=\"6070\">asp</span>:<span  id=\"6071\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6072\">&lt;<span  id=\"6073\">asp</span>:<span  id=\"6074\">RequiredFieldValidator </span><span  id=\"6075\">ID</span>=\"RequiredFieldValidatorName\" <span  id=\"6076\">runat</span>=\"server\" <span  id=\"6077\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"6078\">ErrorMessage</span>=\"Name Required\" <span  id=\"6079\">Font-</span></p><p class=\"s68\"  id=\"6080\">Size<span  id=\"6081\">=\"Small\"</span></p><p class=\"s66\"  id=\"6082\"><span  id=\"6083\">ForeColor</span>=\"#CC0000\"&gt;&lt;/<span  id=\"6084\">asp</span>:<span  id=\"6085\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\"  id=\"6086\">&lt;<span  id=\"6087\">asp</span>:<span  id=\"6088\">CustomValidator </span><span  id=\"6089\">ID</span>=\"CustomValidatorName\" <span  id=\"6090\">runat</span>=\"server\" <span  id=\"6091\">ControlToValidate</span>=\"TextBoxName\" <span  id=\"6092\">ErrorMessage</span>=\"Name is not Valid\" <span  id=\"6093\">ForeColor</span>=\"#CC0000\"</p><p class=\"s66\"  id=\"6094\"><span  id=\"6095\">onservervalidate</span>=\"CustomValidatorName_ServerValidate\"&gt;<span  id=\"6096\">*</span>&lt;/<span  id=\"6097\">asp</span>:<span  id=\"6098\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6099\">&lt;/<span  id=\"6100\">td</span>&gt;</p><p class=\"s66\"  id=\"6101\">&lt;/<span  id=\"6102\">tr</span>&gt;</p><p class=\"s66\"  id=\"6103\">&lt;<span  id=\"6104\">tr </span><span  id=\"6105\">class</span>=\"street\"&gt;</p><p class=\"s66\"  id=\"6106\">&lt;<span  id=\"6107\">td</span>&gt; <span  id=\"6108\">Street:</span>&lt;/<span  id=\"6109\">td</span>&gt;&lt;<span  id=\"6110\">td</span>&gt; &lt;<span  id=\"6111\">asp</span>:<span  id=\"6112\">TextBox </span><span  id=\"6113\">ID</span>=\"TextBoxStreet\" <span  id=\"6114\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6115\">asp</span>:<span  id=\"6116\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6117\">&lt;/<span  id=\"6118\">td</span>&gt;</p><p class=\"s66\"  id=\"6119\">&lt;/<span  id=\"6120\">tr</span>&gt;</p><p class=\"s66\"  id=\"6121\">&lt;<span  id=\"6122\">tr </span><span  id=\"6123\">class</span>=\"postalCode\"&gt;</p><p class=\"s66\"  id=\"6124\">&lt;<span  id=\"6125\">td</span>&gt; <span  id=\"6126\">PostalCode:</span>&lt;/<span  id=\"6127\">td</span>&gt;&lt;<span  id=\"6128\">td</span>&gt; &lt;<span  id=\"6129\">asp</span>:<span  id=\"6130\">TextBox </span><span  id=\"6131\">ID</span>=\"TextBoxPostalCode\" <span  id=\"6132\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6133\">asp</span>:<span  id=\"6134\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6135\">&lt;<span  id=\"6136\">asp</span>:<span  id=\"6137\">CustomValidator </span><span  id=\"6138\">ID</span>=\"CustomValidatorPostalCode\" <span  id=\"6139\">runat</span>=\"server\" <span  id=\"6140\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6141\">ErrorMessage<span  id=\"6142\">=\"Postal Code 4 digit\" </span>ControlToValidate<span  id=\"6143\">=\"TextBoxPostalCode\"</span></p><p  id=\"6144\"><br id=\"6145\"></p><p class=\"s66\"  id=\"6146\"><span  id=\"6147\">onservervalidate</span>=\"CustomValidatorPostalCode_ServerValidate\"&gt;<span  id=\"6148\">*</span>&lt;/<span  id=\"6149\">asp</span>:<span  id=\"6150\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6151\">&lt;/<span  id=\"6152\">td</span>&gt;</p><p class=\"s66\"  id=\"6153\">&lt;/<span  id=\"6154\">tr</span>&gt;</p><p class=\"s66\"  id=\"6155\">&lt;<span  id=\"6156\">tr </span><span  id=\"6157\">class</span>=\"city\"&gt;</p><p class=\"s66\"  id=\"6158\">&lt;<span  id=\"6159\">td</span>&gt; <span  id=\"6160\">City:</span>&lt;/<span  id=\"6161\">td</span>&gt;&lt;<span  id=\"6162\">td</span>&gt; &lt;<span  id=\"6163\">asp</span>:<span  id=\"6164\">TextBox </span><span  id=\"6165\">ID</span>=\"TextBoxCity\" <span  id=\"6166\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6167\">asp</span>:<span  id=\"6168\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6169\">&lt;/<span  id=\"6170\">tr</span>&gt;</p><p class=\"s66\"  id=\"6171\">&lt;<span  id=\"6172\">tr </span><span  id=\"6173\">class</span>=\"country\"&gt;</p><p class=\"s66\"  id=\"6174\">&lt;<span  id=\"6175\">td</span>&gt; <span  id=\"6176\">Country:</span>&lt;/<span  id=\"6177\">td</span>&gt;&lt;<span  id=\"6178\">td</span>&gt; &lt;<span  id=\"6179\">asp</span>:<span  id=\"6180\">TextBox </span><span  id=\"6181\">ID</span>=\"TextBoxCountry\" <span  id=\"6182\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6183\">asp</span>:<span  id=\"6184\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6185\">&lt;<span  id=\"6186\">asp</span>:<span  id=\"6187\">CustomValidator </span><span  id=\"6188\">ID</span>=\"CustomValidatorCountry\" <span  id=\"6189\">runat</span>=\"server\" <span  id=\"6190\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6191\">ErrorMessage<span  id=\"6192\">=\"Country Not Valid\" </span>ControlToValidate<span  id=\"6193\">=\"TextBoxCountry\"</span></p><p  id=\"6194\"><br id=\"6195\"></p><p class=\"s66\"  id=\"6196\"><span  id=\"6197\">onservervalidate</span>=\"CustomValidatorCountry_ServerValidate\"&gt;<span  id=\"6198\">*</span>&lt;/<span  id=\"6199\">asp</span>:<span  id=\"6200\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6201\">&lt;/<span  id=\"6202\">td</span>&gt;</p><p class=\"s66\"  id=\"6203\">&lt;/<span  id=\"6204\">tr</span>&gt;</p><p class=\"s66\"  id=\"6205\">&lt;<span  id=\"6206\">tr </span><span  id=\"6207\">class</span>=\"phone\"&gt;</p><p class=\"s66\"  id=\"6208\">&lt;<span  id=\"6209\">td</span>&gt; <span  id=\"6210\">Phone:</span><span  id=\"6211\">&amp;nbsp; </span><span  id=\"6212\">+45</span>&lt;/<span  id=\"6213\">td</span>&gt;&lt;<span  id=\"6214\">td</span>&gt;&lt;<span  id=\"6215\">asp</span>:<span  id=\"6216\">TextBox </span><span  id=\"6217\">ID</span>=\"TextBoxPhone\" <span  id=\"6218\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6219\">asp</span>:<span  id=\"6220\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6221\">&lt;<span  id=\"6222\">asp</span>:<span  id=\"6223\">CustomValidator </span><span  id=\"6224\">ID</span>=\"CustomValidatorPhone\" <span  id=\"6225\">runat</span>=\"server\" <span  id=\"6226\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6227\">ErrorMessage<span  id=\"6228\">=\"Phone must be 8 digit, Without +45 \" </span>ControlToValidate<span  id=\"6229\">=\"TextBoxPhone\"</span></p><p  id=\"6230\"><br id=\"6231\"></p><p class=\"s66\"  id=\"6232\"><span  id=\"6233\">onservervalidate</span>=\"CustomValidatorPhone_ServerValidate\"&gt;<span  id=\"6234\">*</span>&lt;/<span  id=\"6235\">asp</span>:<span  id=\"6236\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6237\">&lt;/<span  id=\"6238\">td</span>&gt;</p><p  id=\"6239\"><br id=\"6240\"></p><p class=\"s66\"  id=\"6241\">&lt;/<span  id=\"6242\">tr</span>&gt;</p><p class=\"s66\"  id=\"6243\">&lt;<span  id=\"6244\">tr </span><span  id=\"6245\">class</span>=\"email\"&gt;</p><p class=\"s66\"  id=\"6246\">&lt;<span  id=\"6247\">td</span>&gt; <span  id=\"6248\">Email: </span>&lt;/<span  id=\"6249\">td</span>&gt;&lt;<span  id=\"6250\">td</span>&gt;&lt;<span  id=\"6251\">asp</span>:<span  id=\"6252\">TextBox </span><span  id=\"6253\">ID</span>=\"TextBoxEmail\" <span  id=\"6254\">runat</span>=\"server\" <span  id=\"6255\">ontextchanged</span>=\"TextBoxEmail_TextChanged\"&gt;&lt;/<span  id=\"6256\">asp</span>:<span  id=\"6257\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6258\">&lt;<span  id=\"6259\">asp</span>:<span  id=\"6260\">RequiredFieldValidator </span><span  id=\"6261\">ID</span>=\"RequiredFieldValidatorEmail\" <span  id=\"6262\">runat</span>=\"server\" <span  id=\"6263\">Font-Size</span>=\"Small\"</p><p class=\"s66\"  id=\"6264\"><span  id=\"6265\">ErrorMessage</span>=\"Email Required\" <span  id=\"6266\">ControlToValidate</span>=\"TextBoxEmail\"&gt;<span  id=\"6267\">Email Required</span>&lt;/<span  id=\"6268\">asp</span>:<span  id=\"6269\">RequiredFieldValidator</span>&gt;</p><p class=\"s66\"  id=\"6270\">&lt;<span  id=\"6271\">asp</span>:<span  id=\"6272\">CustomValidator </span><span  id=\"6273\">ID</span>=\"CustomValidatorEmail\" <span  id=\"6274\">runat</span>=\"server\" <span  id=\"6275\">Font- Size</span>=\"Small\"</p><p class=\"s68\"  id=\"6276\">ErrorMessage<span  id=\"6277\">=\"Email Not Valid\" </span>ControlToValidate<span  id=\"6278\">=\"TextBoxEmail\"</span></p><p  id=\"6279\"><br id=\"6280\"></p><p class=\"s66\"  id=\"6281\"><span  id=\"6282\">onservervalidate</span>=\"CustomValidatorEmail_ServerValidate\"&gt;<span  id=\"6283\">*</span>&lt;/<span  id=\"6284\">asp</span>:<span  id=\"6285\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6286\">&lt;/<span  id=\"6287\">td</span>&gt;</p><p class=\"s66\"  id=\"6288\">&lt;/<span  id=\"6289\">tr</span>&gt;</p><p class=\"s66\"  id=\"6290\">&lt;<span  id=\"6291\">tr </span><span  id=\"6292\">class</span>=\"website\"&gt;</p><p class=\"s66\"  id=\"6293\">&lt;<span  id=\"6294\">td</span>&gt; <span  id=\"6295\">WebSite:</span>&lt;/<span  id=\"6296\">td</span>&gt;&lt;<span  id=\"6297\">td</span>&gt; &lt;<span  id=\"6298\">asp</span>:<span  id=\"6299\">TextBox </span><span  id=\"6300\">ID</span>=\"TextBoxWebsite\" <span  id=\"6301\">runat</span>=\"server\"&gt;&lt;/<span  id=\"6302\">asp</span>:<span  id=\"6303\">TextBox</span>&gt;</p><p class=\"s66\"  id=\"6304\">&lt;<span  id=\"6305\">asp</span>:<span  id=\"6306\">CustomValidator </span><span  id=\"6307\">ID</span>=\"CustomValidatorWebSite\" <span  id=\"6308\">runat</span>=\"server\" <span  id=\"6309\">ErrorMessage</span>=\"Website not valid\" <span  id=\"6310\">ControlToValidate</span>=\"TextBoxWebsite\"</p><p  id=\"6311\"><br id=\"6312\"></p><p class=\"s66\"  id=\"6313\"><span  id=\"6314\">onservervalidate</span>=\"CustomValidatorWebSite_ServerValidate\"&gt;<span  id=\"6315\">*</span>&lt;/<span  id=\"6316\">asp</span>:<span  id=\"6317\">CustomValidator</span>&gt;</p><p class=\"s66\"  id=\"6318\">&lt;/<span  id=\"6319\">td</span>&gt;</p><p class=\"s66\"  id=\"6320\">&lt;/<span  id=\"6321\">tr</span>&gt;</p><p class=\"s66\"  id=\"6322\">&lt;<span  id=\"6323\">tr </span><span  id=\"6324\">class</span>=\"photo\"&gt;</p><p class=\"s66\"  id=\"6325\">&lt;<span  id=\"6326\">td</span>&gt; <span  id=\"6327\">Photo:</span>&lt;/<span  id=\"6328\">td</span>&gt;&lt;<span  id=\"6329\">td</span>&gt; &lt;<span  id=\"6330\">asp</span>:<span  id=\"6331\">FileUpload </span><span  id=\"6332\">ID</span>=\"FileUploadPhoto\" <span  id=\"6333\">runat</span>=\"server\" /&gt;</p><p class=\"s66\"  id=\"6334\">&lt;/<span  id=\"6335\">td</span>&gt;</p><p class=\"s66\"  id=\"6336\">&lt;/<span  id=\"6337\">tr</span>&gt;</p><p class=\"s66\"  id=\"6338\">&lt;<span  id=\"6339\">tr </span>&gt;</p><p class=\"s66\"  id=\"6340\">&lt;<span  id=\"6341\">td</span>&gt;</p><p class=\"s66\"  id=\"6342\"><span  id=\"6343\">&amp;nbsp;</span>&lt;/<span  id=\"6344\">td</span>&gt; &lt;<span  id=\"6345\">td</span>&gt; &lt;<span  id=\"6346\">asp</span>:<span  id=\"6347\">Button </span><span  id=\"6348\">ID</span>=\"ButtonCreate\" <span  id=\"6349\">runat</span>=\"server\" <span  id=\"6350\">Text</span>=\"Create\"</p><p class=\"s66\"  id=\"6351\"><span  id=\"6352\">onclick</span>=\"ButtonCreate_Click\" /&gt; &lt;/<span  id=\"6353\">td</span>&gt;</p><p class=\"s66\"  id=\"6354\">&lt;/<span  id=\"6355\">tr</span>&gt;</p><p  id=\"6356\"><br id=\"6357\"></p><p class=\"s66\"  id=\"6358\">&lt;/<span  id=\"6359\">table</span>&gt;</p><p class=\"s66\"  id=\"6360\">&lt;/<span  id=\"6361\">form</span>&gt;</p><p  id=\"6362\"><a name=\"a68\" id=\"6363\"><span class=\"p\" id=\"6364\">File </span></a><span class=\"s128\"  id=\"6365\">VcardControl.ascx.cs</span></p><p  id=\"6366\"><br id=\"6367\"></p><p class=\"s66\"  id=\"6368\">using <span  id=\"6369\">System;</span></p><p class=\"s66\"  id=\"6370\">using <span  id=\"6371\">System.Collections.Generic; </span>using <span  id=\"6372\">System.Linq;</span></p><p class=\"s66\"  id=\"6373\">using <span  id=\"6374\">System.Web;</span></p><p class=\"s66\"  id=\"6375\">using <span  id=\"6376\">umbraco.DataLayer.SqlHelpers.SqlServer; </span>using <span  id=\"6377\">umbraco.DataLayer;</span></p><p class=\"s66\"  id=\"6378\">using <span  id=\"6379\">umbraco;</span></p><p class=\"s66\"  id=\"6380\">using <span  id=\"6381\">System.Data.SqlClient;</span></p><p class=\"s66\"  id=\"6382\">using <span  id=\"6383\">System.Text.RegularExpressions; </span>using <span  id=\"6384\">System.Web.UI.WebControls; </span>using <span  id=\"6385\">System.IO;</span></p><p class=\"s66\"  id=\"6386\">using <span  id=\"6387\">System.Text; </span>using <span  id=\"6388\">System.Net.Mail; </span>using <span  id=\"6389\">System.Net;</span></p><p  id=\"6390\"><br id=\"6391\"></p><p class=\"s66\"  id=\"6392\">namespace <span  id=\"6393\">VCardGenerator</span></p><p class=\"s70\"  id=\"6394\">{</p><p class=\"s98\"  id=\"6395\"><span  id=\"6396\">public partial class </span>VcardControl <span  id=\"6397\">: System.Web.UI.</span>UserControl</p><p class=\"s70\"  id=\"6398\">{</p><p class=\"s103\"  id=\"6399\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6400\">/// <span  id=\"6401\">Handles the Load event of the Page control.</span></p><p class=\"s103\"  id=\"6402\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6403\">/// &lt;param name=\"sender\"&gt;<span  id=\"6404\">The source of the event.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6405\">/// &lt;param name=\"e\"&gt;<span  id=\"6406\">The </span>&lt;see cref=\"System.EventArgs\"/&gt; <span  id=\"6407\">instance containing the event data.</span>&lt;/param&gt;</p><p class=\"s70\"  id=\"6408\"><span  id=\"6409\">protected void </span>Page_Load(<span  id=\"6410\">object </span>sender, <span  id=\"6411\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6412\">{</p><p  id=\"6413\"><br id=\"6414\"></p><p class=\"s70\"  id=\"6415\">}</p><p  id=\"6416\"><br id=\"6417\"></p><p class=\"s70\"  id=\"6418\"><span  id=\"6419\">protected void </span>ButtonCreate_Click(<span  id=\"6420\">object </span>sender, <span  id=\"6421\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6422\">{</p><p class=\"s66\"  id=\"6423\">if <span  id=\"6424\">(Page.IsValid)</span></p><p class=\"s70\"  id=\"6425\">{</p><p class=\"s70\"  id=\"6426\"><span  id=\"6427\">Guid </span>id = <span  id=\"6428\">Guid</span>.NewGuid(); <span  id=\"6429\">string </span>imgFile = <span  id=\"6430\">\"noimage\"</span>;</p><p class=\"s66\"  id=\"6431\">string <span  id=\"6432\">name = RemoveSpecialCharacter(TextBoxName.Text);</span></p><p class=\"s66\"  id=\"6433\">string <span  id=\"6434\">streetaddress = RemoveSpecialCharacter(TextBoxStreet.Text); </span>string <span  id=\"6435\">country = RemoveSpecialCharacter(TextBoxCountry.Text); </span>string <span  id=\"6436\">zip = RemoveSpecialCharacter(TextBoxPostalCode.Text); </span>string <span  id=\"6437\">city = RemoveSpecialCharacter(TextBoxCity.Text);</span></p><p class=\"s66\"  id=\"6438\">string <span  id=\"6439\">email = TextBoxEmail.Text;</span></p><p class=\"s66\"  id=\"6440\">string <span  id=\"6441\">web = RemoveSpecialCharacter(TextBoxWebsite.Text); </span>string <span  id=\"6442\">phone = RemoveSpecialCharacter(TextBoxPhone.Text); </span>if <span  id=\"6443\">(FileUploadPhoto.PostedFile != </span>null <span  id=\"6444\">&amp;&amp;</span></p><p class=\"s70\"  id=\"6445\">FileUploadPhoto.PostedFile.ContentLength &gt; 0)</p><p class=\"s70\"  id=\"6446\">{</p><p class=\"s70\"  id=\"6447\"><span  id=\"6448\">string </span>guid = id.ToString(<span  id=\"6449\">\"N\"</span>);</p><p class=\"s70\"  id=\"6450\"><span  id=\"6451\">string </span>imageDirectory = Server.MapPath(<span  id=\"6452\">\"vcardimage\"</span>); <span  id=\"6453\">if </span>(<span  id=\"6454\">Directory</span>.Exists(imageDirectory))</p><p class=\"s70\"  id=\"6455\">{</p><p class=\"s70\"  id=\"6456\">FileUploadPhoto.PostedFile.SaveAs( Server.MapPath(<span  id=\"6457\">\"/vcardimage/\" </span>+ guid +</p><p class=\"s70\"  id=\"6458\">FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"6459\">}</p><p class=\"s66\"  id=\"6460\">else</p><p class=\"s70\"  id=\"6461\">{</p><p class=\"s70\"  id=\"6462\"><span  id=\"6463\">Directory</span>.CreateDirectory(Server.MapPath(<span  id=\"6464\">\"vcardimage\"</span>));</p><p class=\"s70\"  id=\"6465\">FileUploadPhoto.PostedFile.SaveAs(Server.MapPath(<span  id=\"6466\">\"/vcardimage/\" </span>+ guid + FileUploadPhoto.FileName));</p><p class=\"s70\"  id=\"6467\">}</p><p  id=\"6468\"><br id=\"6469\"></p><p class=\"s70\"  id=\"6470\">imgFile = imageDirectory + <span  id=\"6471\">\"/\" </span>+ guid + FileUploadPhoto.FileName; SendVcard(<span  id=\"6472\">\"Your Vcard:\"</span>,</p><p class=\"s99\"  id=\"6473\">\"Your vcard is ready. Please open Attachment. \\n Thank you very much \\n Semic Provider\"<span  id=\"6474\">,</span></p><p class=\"s70\"  id=\"6475\">email,</p><p class=\"s70\"  id=\"6476\">GenerateVcard(name, streetaddress, zip, city, country,</p><p class=\"s70\"  id=\"6477\">email, phone, web, imgFile));</p><p class=\"s70\"  id=\"6478\">LabelNotice.Text = <span  id=\"6479\">\"VCard has been sent to \" </span>+ email;</p><p class=\"s70\"  id=\"6480\">}</p><p class=\"s66\"  id=\"6481\">else</p><p class=\"s70\"  id=\"6482\">{</p><p class=\"s70\"  id=\"6483\">SendVcard(<span  id=\"6484\">\"Vcard:\"</span>, <span  id=\"6485\">\"Your vcard is ready. Please open Attachment.</span></p><p class=\"s99\"  id=\"6486\">\\n Thank you very much \\n Semic Provider\"<span  id=\"6487\">,</span></p><p class=\"s70\"  id=\"6488\">email,</p><p class=\"s70\"  id=\"6489\">GenerateVcard(name, streetaddress, zip, city, country, email, phone, web, imgFile));</p><p class=\"s70\"  id=\"6490\">LabelNotice.Text = <span  id=\"6491\">\"VCard has been sent to \" </span>+ email;</p><p  id=\"6492\"><br id=\"6493\"></p><p class=\"s70\"  id=\"6494\">imgFile);</p><p  id=\"6495\"><br id=\"6496\"></p><p class=\"s70\"  id=\"6497\">}</p><p class=\"s70\"  id=\"6498\">}</p><p class=\"s70\"  id=\"6499\">InsertTable(name, streetaddress, zip, country, phone, email, web,</p><p  id=\"6500\"><br id=\"6501\"></p><p class=\"s70\"  id=\"6502\">}</p><p  id=\"6503\"><br id=\"6504\"></p><p  id=\"6505\"><br id=\"6506\"></p><p class=\"s103\"  id=\"6507\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6508\">/// <span  id=\"6509\">Generates the vcard.</span></p><p class=\"s103\"  id=\"6510\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6511\">/// &lt;param name=\"firstName\"&gt;<span  id=\"6512\">The first name.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6513\">/// &lt;param name=\"streetAddress\"&gt;<span  id=\"6514\">The street address.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6515\">/// &lt;param name=\"zip\"&gt;<span  id=\"6516\">The zip.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6517\">/// &lt;param name=\"city\"&gt;<span  id=\"6518\">The city.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6519\">/// &lt;param name=\"country\"&gt;<span  id=\"6520\">The country.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6521\">/// &lt;param name=\"email\"&gt;<span  id=\"6522\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6523\">/// &lt;param name=\"phone\"&gt;<span  id=\"6524\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6525\">/// &lt;param name=\"web\"&gt;<span  id=\"6526\">The web.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6527\">/// &lt;param name=\"image\"&gt;<span  id=\"6528\">The image.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6529\">/// &lt;returns&gt; <span  id=\"6530\">vcard string </span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6531\">public string <span  id=\"6532\">GenerateVcard(</span>string <span  id=\"6533\">firstName, </span>string <span  id=\"6534\">streetAddress, </span>string <span  id=\"6535\">zip, </span>string <span  id=\"6536\">city, </span>string <span  id=\"6537\">country, </span>string <span  id=\"6538\">email, </span>string <span  id=\"6539\">phone, </span>string <span  id=\"6540\">web, </span>string <span  id=\"6541\">image)</span></p><p class=\"s70\"  id=\"6542\">{</p><p class=\"s70\"  id=\"6543\"><span  id=\"6544\">string </span>url = <span  id=\"6545\">\"\"</span>; <span  id=\"6546\">if </span>(web.Length &gt; 0)</p><p class=\"s70\"  id=\"6547\">{</p><p class=\"s70\"  id=\"6548\">url = <span  id=\"6549\">\"http://\" </span>+ web.Replace(<span  id=\"6550\">\"http\"</span>, <span  id=\"6551\">\"\"</span>);</p><p class=\"s70\"  id=\"6552\">}</p><p class=\"s70\"  id=\"6553\"><span  id=\"6554\">var </span>vcardStringBuilder = <span  id=\"6555\">new </span><span  id=\"6556\">StringBuilder</span>(); vcardStringBuilder.AppendLine(<span  id=\"6557\">\"BEGIN:VCARD\"</span>); vcardStringBuilder.AppendLine(<span  id=\"6558\">\"VERSION:2.1\"</span>); vcardStringBuilder.AppendLine(<span  id=\"6559\">\"FN;LANGUAGE=en-us:\" </span>+ firstName); vcardStringBuilder.Append(<span  id=\"6560\">\"ADR;HOME;PREF:;;\"</span>); vcardStringBuilder.Append(streetAddress + <span  id=\"6561\">\";\"</span>); vcardStringBuilder.Append(zip + <span  id=\"6562\">\";\"</span>); vcardStringBuilder.Append(city + <span  id=\"6563\">\";\"</span>); vcardStringBuilder.AppendLine(country + <span  id=\"6564\">\" \"</span>); vcardStringBuilder.AppendLine(<span  id=\"6565\">\"TEL;HOME;VOICE:\" </span>+ phone); vcardStringBuilder.AppendLine(<span  id=\"6566\">\"URL;type=pref:\" </span>+ url);</p><p class=\"s70\"  id=\"6567\">vcardStringBuilder.AppendLine(<span  id=\"6568\">\"EMAIL:\" </span>+ email); <span  id=\"6569\">if </span>(image != <span  id=\"6570\">\"noimage\"</span>)</p><p class=\"s70\"  id=\"6571\">{</p><p class=\"s70\"  id=\"6572\">vcardStringBuilder.AppendLine(<span  id=\"6573\">\"PHOTO;ENCODING=BASE64;TYPE=\" </span>+ image.GetType().ToString().ToUpper() + <span  id=\"6574\">\":\"</span>);</p><p  id=\"6575\"><br id=\"6576\"></p><p class=\"s70\"  id=\"6577\">vcardStringBuilder.AppendLine(<span  id=\"6578\">Convert</span>.ToBase64String(ReadImage(image))); vcardStringBuilder.AppendLine(<span  id=\"6579\">string</span>.Empty);</p><p class=\"s70\"  id=\"6580\">}</p><p class=\"s70\"  id=\"6581\">vcardStringBuilder.AppendLine(<span  id=\"6582\">\"END:VCARD\"</span>); <span  id=\"6583\">return </span>vcardStringBuilder.ToString();</p><p class=\"s70\"  id=\"6584\">}</p><p  id=\"6585\"><br id=\"6586\"></p><p class=\"s103\"  id=\"6587\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6588\">/// <span  id=\"6589\">Reads the image.</span></p><p class=\"s103\"  id=\"6590\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6591\">/// &lt;param name=\"image\"&gt;<span  id=\"6592\">The image.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6593\">/// &lt;returns&gt; <span  id=\"6594\">image bytes </span>&lt;/returns&gt; <span  id=\"6595\">public byte</span><span  id=\"6596\">[] ReadImage(</span><span  id=\"6597\">string </span><span  id=\"6598\">image)</span></p><p class=\"s70\"  id=\"6599\">{</p><p class=\"s66\"  id=\"6600\">try</p><p class=\"s70\"  id=\"6601\">{</p><p  id=\"6602\"><br id=\"6603\"></p><p class=\"s70\"  id=\"6604\">}</p><p  id=\"6605\"><br id=\"6606\"></p><p class=\"s66\"  id=\"6607\">return <span  id=\"6608\">File</span><span  id=\"6609\">.ReadAllBytes(image);</span></p><p class=\"s70\"  id=\"6610\"><span  id=\"6611\">catch </span>(<span  id=\"6612\">Exception </span>ex)</p><p class=\"s70\"  id=\"6613\">{</p><p class=\"s70\"  id=\"6614\"><span  id=\"6615\">return </span><span  id=\"6616\">File</span>.ReadAllBytes(Server.MapPath(<span  id=\"6617\">\"media/logo-vcard.png\"</span>));</p><p class=\"s70\"  id=\"6618\">}</p><p class=\"s70\"  id=\"6619\">}</p><p  id=\"6620\"><br id=\"6621\"></p><p class=\"s103\"  id=\"6622\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6623\">/// <span  id=\"6624\">Sends the vcard.</span></p><p class=\"s103\"  id=\"6625\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6626\">/// &lt;param name=\"subject\"&gt;<span  id=\"6627\">The subject.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6628\">/// &lt;param name=\"body\"&gt;<span  id=\"6629\">The body.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6630\">/// &lt;param name=\"email\"&gt;<span  id=\"6631\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6632\">/// &lt;param name=\"file\"&gt;<span  id=\"6633\">The file.</span>&lt;/param&gt;</p><p class=\"s66\"  id=\"6634\">private void <span  id=\"6635\">SendVcard(</span>string <span  id=\"6636\">subject, </span>string <span  id=\"6637\">body, </span>string <span  id=\"6638\">email, </span>string <span  id=\"6639\">file)</span></p><p class=\"s70\"  id=\"6640\">{</p><p class=\"s70\"  id=\"6641\"><span  id=\"6642\">byte</span>[] byteArray = <span  id=\"6643\">Encoding</span>.ASCII.GetBytes(file); <span  id=\"6644\">try</span></p><p class=\"s70\"  id=\"6645\">{</p><p  id=\"6646\"><br id=\"6647\"></p><p class=\"s98\"  id=\"6648\">MemoryStream <span  id=\"6649\">stream = </span><span  id=\"6650\">new </span>MemoryStream<span  id=\"6651\">(byteArray); </span>MailMessage <span  id=\"6652\">message = </span><span  id=\"6653\">new </span>MailMessage<span  id=\"6654\">(); message.Subject = subject;</span></p><p class=\"s70\"  id=\"6655\">message.Body = body;</p><p class=\"s70\"  id=\"6656\">message.From = <span  id=\"6657\">new </span><span  id=\"6658\">MailAddress</span>(<a href=\"mailto:jeevan_2np@yahoo.com\" class=\"s130\" target=\"_blank\" id=\"6659\">\"sender id example: </a><span  id=\"6660\">jeevan_2np@yahoo.com\"</span>);</p><p class=\"s70\"  id=\"6661\">message.To.Add(email);</p><p class=\"s98\"  id=\"6662\">SmtpClient <span  id=\"6663\">client = </span><span  id=\"6664\">new </span>SmtpClient<span  id=\"6665\">();</span></p><p class=\"s70\"  id=\"6666\"><span  id=\"6667\">Attachment </span>vcard = <span  id=\"6668\">new </span><span  id=\"6669\">Attachment</span>(stream, <span  id=\"6670\">\"PersonalVCard.vcf\"</span>); message.Attachments.Add(vcard);</p><p class=\"s70\"  id=\"6671\">client.Host = <span  id=\"6672\">\"smtp address\"</span>; client.Port = smtp port number;</p><p class=\"s70\"  id=\"6673\">client.Credentials = <span  id=\"6674\">new </span><span  id=\"6675\">NetworkCredential</span>(<span  id=\"6676\">\"user id \"</span>, <span  id=\"6677\">\"password\"</span>); client.EnableSsl = <span  id=\"6678\">true</span>;</p><p class=\"s70\"  id=\"6679\">client.Send(message);</p><p class=\"s70\"  id=\"6680\">}</p><p class=\"s66\"  id=\"6681\">catch</p><p class=\"s70\"  id=\"6682\">{</p><p class=\"s70\"  id=\"6683\">LabelNotice.Text = <span  id=\"6684\">\"Internal Error\"</span>;</p><p class=\"s70\"  id=\"6685\">DownloadVcard(byteArray);</p><p class=\"s70\"  id=\"6686\">}</p><p  id=\"6687\"><br id=\"6688\"></p><p class=\"s70\"  id=\"6689\">}</p><p  id=\"6690\"><br id=\"6691\"></p><p class=\"s70\"  id=\"6692\"><span  id=\"6693\">protected void </span>CustomValidatorName_ServerValidate(<span  id=\"6694\">object </span>source, <span  id=\"6695\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6696\">{</p><p class=\"s70\"  id=\"6697\">args.IsValid = RemoveSpecialCharacter(args.Value).Length &gt; 0;</p><p class=\"s70\"  id=\"6698\">}</p><p  id=\"6699\"><br id=\"6700\"></p><p class=\"s70\"  id=\"6701\"><span  id=\"6702\">protected void </span>CustomValidatorPostalCode_ServerValidate(<span  id=\"6703\">object </span>source, <span  id=\"6704\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6705\">{</p><p class=\"s66\"  id=\"6706\">try</p><p class=\"s70\"  id=\"6707\">{</p><p  id=\"6708\"><br id=\"6709\"></p><p class=\"s66\"  id=\"6710\">if <span  id=\"6711\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"6712\">{</p><p class=\"s70\"  id=\"6713\">args.IsValid = RemoveSpecialCharacter(args.Value).Length == 4;</p><p class=\"s70\"  id=\"6714\">}</p><p class=\"s66\"  id=\"6715\">else</p><p class=\"s70\"  id=\"6716\">{</p><p class=\"s70\"  id=\"6717\">args.IsValid = <span  id=\"6718\">true</span>;</p><p class=\"s70\"  id=\"6719\">}</p><p class=\"s70\"  id=\"6720\">}</p><p class=\"s66\"  id=\"6721\">catch <span  id=\"6722\">{ args.IsValid = </span>false<span  id=\"6723\">; }</span></p><p class=\"s70\"  id=\"6724\">}</p><p  id=\"6725\"><br id=\"6726\"></p><p class=\"s70\"  id=\"6727\"><span  id=\"6728\">protected void </span>CustomValidatorCountry_ServerValidate(<span  id=\"6729\">object </span>source, <span  id=\"6730\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6731\">{</p><p  id=\"6732\"><br id=\"6733\"></p><p class=\"s70\"  id=\"6734\">}</p><p  id=\"6735\"><br id=\"6736\"></p><p class=\"s70\"  id=\"6737\"><span  id=\"6738\">protected void </span>CustomValidatorPhone_ServerValidate(<span  id=\"6739\">object </span>source, <span  id=\"6740\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6741\">{</p><p class=\"s66\"  id=\"6742\">if <span  id=\"6743\">(args.Value.Length &gt; 0)</span></p><p class=\"s70\"  id=\"6744\">{</p><p  id=\"6745\"><br id=\"6746\"></p><p class=\"s70\"  id=\"6747\">}</p><p class=\"s66\"  id=\"6748\">else</p><p class=\"s70\"  id=\"6749\">{</p><p  id=\"6750\"><br id=\"6751\"></p><p class=\"s70\"  id=\"6752\">}</p><p class=\"s70\"  id=\"6753\">}</p><p class=\"s70\"  id=\"6754\">args.IsValid = ValidatePhone(args.Value);</p><p  id=\"6755\"><br id=\"6756\"></p><p class=\"s70\"  id=\"6757\">args.IsValid = <span  id=\"6758\">true</span>;</p><p  id=\"6759\"><br id=\"6760\"></p><p class=\"s70\"  id=\"6761\"><span  id=\"6762\">protected void </span>CustomValidatorEmail_ServerValidate(<span  id=\"6763\">object </span>source, <span  id=\"6764\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6765\">{</p><p class=\"s70\"  id=\"6766\">args.IsValid = ValidateEmail(args.Value.ToString());</p><p class=\"s70\"  id=\"6767\">}</p><p  id=\"6768\"><br id=\"6769\"></p><p class=\"s70\"  id=\"6770\"><span  id=\"6771\">protected void </span>CustomValidatorWebSite_ServerValidate(<span  id=\"6772\">object </span>source, <span  id=\"6773\">ServerValidateEventArgs </span>args)</p><p class=\"s70\"  id=\"6774\">{</p><p  id=\"6775\"><br id=\"6776\"></p><p class=\"s70\"  id=\"6777\">}</p><p  id=\"6778\"><br id=\"6779\"></p><p class=\"s103\"  id=\"6780\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6781\">/// <span  id=\"6782\">Validates the phone.</span></p><p class=\"s103\"  id=\"6783\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6784\">/// &lt;param name=\"input\"&gt;<span  id=\"6785\">The input.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6786\">/// &lt;returns&gt; <span  id=\"6787\">true if it valid </span>&lt;/returns&gt; <span  id=\"6788\">public bool </span><span  id=\"6789\">ValidatePhone(</span><span  id=\"6790\">string </span><span  id=\"6791\">input)</span></p><p class=\"s70\"  id=\"6792\">{</p><p class=\"s70\"  id=\"6793\"><span  id=\"6794\">if </span>(input.Length != 8) { <span  id=\"6795\">return false</span>; } <span  id=\"6796\">Regex </span>num = <span  id=\"6797\">new </span><span  id=\"6798\">Regex</span>(<span  id=\"6799\">\"[^0-9]\"</span>);</p><p class=\"s66\"  id=\"6800\">return <span  id=\"6801\">!num.IsMatch(input);</span></p><p class=\"s70\"  id=\"6802\">}</p><p  id=\"6803\"><br id=\"6804\"></p><p class=\"s103\"  id=\"6805\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6806\">/// <span  id=\"6807\">Validates the email.</span></p><p class=\"s103\"  id=\"6808\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6809\">/// &lt;param name=\"email\"&gt;<span  id=\"6810\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6811\">/// &lt;returns&gt; <span  id=\"6812\">true on valid email </span>&lt;/returns&gt; <span  id=\"6813\">public bool </span><span  id=\"6814\">ValidateEmail(</span><span  id=\"6815\">string </span><span  id=\"6816\">email)</span></p><p class=\"s70\"  id=\"6817\">{</p><p class=\"s66\"  id=\"6818\">return <span  id=\"6819\">Regex</span><span  id=\"6820\">.IsMatch(email,</span></p><p class=\"s99\"  id=\"6821\">@\"^(?(\"\")(\"\".+?\"\"@)|(([0-9a-zA-Z]((\\.(?!\\.))|[-</p><p class=\"s99\"  id=\"6822\">!#\\$%&amp;'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?&lt;=[0-9a-zA-Z])@))\" <span  id=\"6823\">+</span></p><p class=\"s99\"  id=\"6824\">@\"(?(\\[)(\\[(\\d{1,3}\\.){3}\\d{1,3}\\])|(([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a- zA-Z]{2,6}))$\"<span  id=\"6825\">);</span></p><p class=\"s70\"  id=\"6826\">}</p><p  id=\"6827\"><br id=\"6828\"></p><p class=\"s103\"  id=\"6829\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6830\">/// <span  id=\"6831\">Removes the special character.</span></p><p class=\"s103\"  id=\"6832\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6833\">/// &lt;param name=\"input\"&gt;<span  id=\"6834\">The input.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6835\">/// &lt;returns&gt; <span  id=\"6836\">secure string </span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6837\">public string <span  id=\"6838\">RemoveSpecialCharacter(</span>string <span  id=\"6839\">input)</span></p><p class=\"s70\"  id=\"6840\">{</p><p class=\"s70\"  id=\"6841\"><span  id=\"6842\">return </span><span  id=\"6843\">Regex</span>.Replace(input, <span  id=\"6844\">\"[^0-9a-zA-Z. ]+\"</span>, <span  id=\"6845\">\"\"</span>);</p><p class=\"s70\"  id=\"6846\">}</p><p  id=\"6847\"><br id=\"6848\"></p><p class=\"s70\"  id=\"6849\"><span  id=\"6850\">protected void </span>TextBoxEmail_TextChanged(<span  id=\"6851\">object </span>sender, <span  id=\"6852\">EventArgs </span>e)</p><p class=\"s70\"  id=\"6853\">{</p><p  id=\"6854\"><br id=\"6855\"></p><p class=\"s70\"  id=\"6856\">}</p><p  id=\"6857\"><br id=\"6858\"></p><p class=\"s103\"  id=\"6859\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6860\">/// <span  id=\"6861\">Creates the table.</span></p><p class=\"s103\"  id=\"6862\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6863\">/// &lt;param name=\"tableName\"&gt;<span  id=\"6864\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6865\">/// &lt;returns&gt; <span  id=\"6866\">true if table created</span>&lt;/returns&gt; <span  id=\"6867\">private static bool </span><span  id=\"6868\">CreateTable(</span><span  id=\"6869\">string </span><span  id=\"6870\">tableName)</span></p><p class=\"s70\"  id=\"6871\">{</p><p class=\"s66\"  id=\"6872\">try</p><p class=\"s70\"  id=\"6873\">{</p><p  id=\"6874\"><br id=\"6875\"></p><p class=\"s70\"  id=\"6876\"><span  id=\"6877\">SqlConnection </span>connection = <span  id=\"6878\">new </span><span  id=\"6879\">SqlConnection</span>(<span  id=\"6880\">GlobalSettings</span>.DbDSN); <span  id=\"6881\">string </span>queryString =</p><p class=\"s99\"  id=\"6882\">@\" CREATE TABLE [vcardimage](</p><p class=\"s99\"  id=\"6883\">[id] [int] IDENTITY(1,1) NOT NULL,</p><p class=\"s99\"  id=\"6884\">[name] [nvarchar] (250) NULL, [street] [nvarchar](250) NULL, [postalcode] [int] NULL, [country] [nvarchar](250) NULL, [phone] [nvarchar](250) NULL, [email] [nvarchar](250) NULL, [website] [nvarchar](250) NULL, [date] [datetime] NULL,</p><p class=\"s99\"  id=\"6885\">[imageguid] [nvarchar](250) NULL)\"<span  id=\"6886\">;</span></p><p  id=\"6887\"><br id=\"6888\"></p><p class=\"s98\"  id=\"6889\">SqlCommand <span  id=\"6890\">command = </span><span  id=\"6891\">new </span>SqlCommand<span  id=\"6892\">(queryString, connection);</span></p><p class=\"s70\"  id=\"6893\">connection.Open(); command.ExecuteNonQuery(); connection.Close();</p><p class=\"s66\"  id=\"6894\">return true<span  id=\"6895\">;</span></p><p class=\"s70\"  id=\"6896\">}</p><p class=\"s66\"  id=\"6897\">catch</p><p class=\"s70\"  id=\"6898\">{</p><p class=\"s66\"  id=\"6899\">return false<span  id=\"6900\">;</span></p><p class=\"s70\"  id=\"6901\">}</p><p class=\"s70\"  id=\"6902\">}</p><p  id=\"6903\"><br id=\"6904\"></p><p class=\"s103\"  id=\"6905\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6906\">/// <span  id=\"6907\">Checks the table.</span></p><p class=\"s103\"  id=\"6908\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6909\">/// &lt;param name=\"tableName\"&gt;<span  id=\"6910\">Name of the table.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6911\">/// &lt;returns&gt; <span  id=\"6912\">true if table exist </span>&lt;/returns&gt; <span  id=\"6913\">private static bool </span><span  id=\"6914\">CheckTable(</span><span  id=\"6915\">string </span><span  id=\"6916\">tableName)</span></p><p class=\"s70\"  id=\"6917\">{</p><p class=\"s70\"  id=\"6918\"><span  id=\"6919\">SqlServerHelper </span>sqlHeplper = <span  id=\"6920\">new </span><span  id=\"6921\">SqlServerHelper</span>(<span  id=\"6922\">GlobalSettings</span>.DbDSN); <span  id=\"6923\">return </span>sqlHeplper.Utility.CreateTableUtility().ContainsTable(tableName);</p><p class=\"s70\"  id=\"6924\">}</p><p  id=\"6925\"><br id=\"6926\"></p><p class=\"s103\"  id=\"6927\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"6928\">/// <span  id=\"6929\">Inserts the table.</span></p><p class=\"s103\"  id=\"6930\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"6931\">/// &lt;param name=\"name\"&gt;<span  id=\"6932\">The name.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6933\">/// &lt;param name=\"street\"&gt;<span  id=\"6934\">The street.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6935\">/// &lt;param name=\"postalcode\"&gt;<span  id=\"6936\">The postalcode.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6937\">/// &lt;param name=\"country\"&gt;<span  id=\"6938\">The country.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6939\">/// &lt;param name=\"phone\"&gt;<span  id=\"6940\">The phone.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6941\">/// &lt;param name=\"email\"&gt;<span  id=\"6942\">The email.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6943\">/// &lt;param name=\"website\"&gt;<span  id=\"6944\">The website.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6945\">/// &lt;param name=\"imageguid\"&gt;<span  id=\"6946\">The imageguid.</span>&lt;/param&gt;</p><p class=\"s103\"  id=\"6947\">/// &lt;returns&gt; <span  id=\"6948\">true on successul data insert</span>&lt;/returns&gt;</p><p class=\"s66\"  id=\"6949\">public static bool <span  id=\"6950\">InsertTable(</span>string <span  id=\"6951\">name, </span>string <span  id=\"6952\">street, </span>string <span  id=\"6953\">postalcode, </span>string <span  id=\"6954\">country, </span>string <span  id=\"6955\">phone, </span>string <span  id=\"6956\">email, </span>string <span  id=\"6957\">website, </span>string <span  id=\"6958\">imageguid)</span></p><p class=\"s70\"  id=\"6959\">{</p><p class=\"s70\"  id=\"6960\"><span  id=\"6961\">string </span>tableName = <span  id=\"6962\">\"vcardimage\"</span>; <span  id=\"6963\">try</span></p><p class=\"s70\"  id=\"6964\">{</p><p class=\"s66\"  id=\"6965\">if <span  id=\"6966\">(!CheckTable(tableName))</span></p><p class=\"s70\"  id=\"6967\">{ CreateTable(tableName); }</p><p class=\"s98\"  id=\"6968\">ISqlHelper <span  id=\"6969\">sqlHelper = umbraco.BusinessLogic.</span>Application<span  id=\"6970\">.SqlHelper; sqlHelper.ExecuteNonQuery(</span></p><p class=\"s99\"  id=\"6971\">@\"insert into \" <span  id=\"6972\">+ tableName + </span>\"(name,street,postalcode,country,phone, email, website,imageguid, date)\" <span  id=\"6973\">+</span></p><p class=\"s99\"  id=\"6974\">\"values(@name, @street, @postalcode, @country, @phone, @email,</p><p class=\"s99\"  id=\"6975\">@website, @imageguid, @date);\"<span  id=\"6976\">,</span></p><p class=\"s70\"  id=\"6977\">sqlHelper.CreateParameter(<span  id=\"6978\">\"@name\"</span>, name), sqlHelper.CreateParameter(<span  id=\"6979\">\"@street\"</span>, street), sqlHelper.CreateParameter(<span  id=\"6980\">\"@postalcode\"</span>, postalcode), sqlHelper.CreateParameter(<span  id=\"6981\">\"@country\"</span>, country), sqlHelper.CreateParameter(<span  id=\"6982\">\"@phone\"</span>, phone), sqlHelper.CreateParameter(<span  id=\"6983\">\"@email\"</span>, email), sqlHelper.CreateParameter(<span  id=\"6984\">\"@website\"</span>, website), sqlHelper.CreateParameter(<span  id=\"6985\">\"@imageguid\"</span>, imageguid), sqlHelper.CreateParameter(<span  id=\"6986\">\"@date\"</span>, <span  id=\"6987\">DateTime</span>.Now)); <span  id=\"6988\">return true</span>;</p><p class=\"s70\"  id=\"6989\">}</p><p class=\"s70\"  id=\"6990\"><span  id=\"6991\">catch </span>(<span  id=\"6992\">Exception</span>)</p><p class=\"s70\"  id=\"6993\">{</p><p class=\"s66\"  id=\"6994\">return false<span  id=\"6995\">;</span></p><p  id=\"6996\"><br id=\"6997\"></p><p  id=\"6998\"><br id=\"6999\"></p><p class=\"s70\"  id=\"7000\">}</p><p  id=\"7001\"><br id=\"7002\"></p><p class=\"s70\"  id=\"7003\">}</p><p  id=\"7004\"><br id=\"7005\"></p><p class=\"s103\"  id=\"7006\">/// &lt;summary&gt;</p><p class=\"s103\"  id=\"7007\">/// <span  id=\"7008\">Downloads the vcard.</span></p><p class=\"s103\"  id=\"7009\">/// &lt;/summary&gt;</p><p class=\"s103\"  id=\"7010\">/// &lt;param name=\"vcardFile\"&gt;<span  id=\"7011\">The vcard file.</span>&lt;/param&gt; <span  id=\"7012\">public void </span><span  id=\"7013\">DownloadVcard(</span><span  id=\"7014\">byte </span><span  id=\"7015\">[] vcardFile)</span></p><p class=\"s70\"  id=\"7016\">{</p><p class=\"s70\"  id=\"7017\">Response.ClearHeaders(); Response.Clear(); Response.Buffer = <span  id=\"7018\">true</span>;</p><p class=\"s70\"  id=\"7019\">Response.ContentType = <span  id=\"7020\">\"application/vcard\"</span>; Response.AddHeader(<span  id=\"7021\">\"content-disposition\"</span>, <span  id=\"7022\">\"attach;filename =</span></p><p class=\"s99\"  id=\"7023\">YourVcard.vcf\"<span  id=\"7024\">);</span></p><p class=\"s70\"  id=\"7025\">Response.Charset = <span  id=\"7026\">\"\"</span>; Response.BinaryWrite(vcardFile);</p><p class=\"s98\"  id=\"7027\">HttpContext<span  id=\"7028\">.Current.ApplicationInstance.CompleteRequest(); Response.End();</span></p><p class=\"s70\"  id=\"7029\">}</p><p class=\"s70\"  id=\"7030\">}</p><p class=\"s70\"  id=\"7031\">}</p><p  id=\"7032\"><br id=\"7033\"></p><p  id=\"7034\"><span class=\"s97\"  id=\"7035\">GlobalSetting.xslt</span></p><p  id=\"7036\"><br id=\"7037\"></p><p  id=\"7038\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7039\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p  id=\"7040\">&lt;xsl:stylesheet version=\"1.0\"</p><p  id=\"7041\"><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7042\">xmlns:xsl=\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml=\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library=\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon=\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes=\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath=\"urn:Exslt.ExsltMath\" xmlns:Exslt.ExsltRegularExpressions=\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings=\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets=\"urn:Exslt.ExsltSets\"</p><p  id=\"7043\">exclude-result-prefixes=\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"&gt;</p><p  id=\"7044\"><br id=\"7045\"></p><p  id=\"7046\">&lt;xsl:output method=\"xml\" omit-xml-declaration=\"yes\"/&gt;</p><p  id=\"7047\">&lt;xsl:param name=\"currentPage\"/&gt;</p><p  id=\"7048\">&lt;xsl:template match=\"/\"&gt;</p><p  id=\"7049\">&lt;!-- start writing XSLT --&gt;</p><p  id=\"7050\">&lt;xsl:variable name=\"items\" select=\"$currentPage/ancestor-or-self::*</p><p  id=\"7051\">/WebSiteGlobalSettings \"/&gt;</p><p  id=\"7052\">&lt;xsl:variable name=\"logo\" select=\"$items/logo\"/&gt;</p><p  id=\"7053\">&lt;div class=\"vcard\"&gt;</p><p  id=\"7054\">&lt;div class=\"logo\"&gt;&lt;a href=\"/\" title=\"start page\"&gt;</p><p  id=\"7055\">&lt;img src=\"{$logo}\" alt=\"semic provider logo; visual identity\"/&gt;</p><p  id=\"7056\">&lt;/a&gt;</p><p  id=\"7057\">&lt;/div&gt;</p><p  id=\"7058\">&lt;div class=\"fn\" &gt;</p><p  id=\"7059\">&lt;xsl:value-of select=\"$items/siteName\"/&gt;</p><p  id=\"7060\">&lt;/div&gt;</p><p  id=\"7061\">&lt;h4&gt; &lt;xsl:value-of select=\"$items/slogan\"/&gt; &lt;/h4&gt;</p><p  id=\"7062\">&lt;/div&gt;</p><p  id=\"7063\">&lt;/xsl:template&gt;</p><p  id=\"7064\">&lt;/xsl:stylesheet&gt;</p><p  id=\"7065\">Navigation.xslt</p><p  id=\"7066\"><br id=\"7067\"></p><p  id=\"7068\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7069\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7070\">&lt;<span class=\"p\" id=\"7071\">xsl:stylesheet</span></p><p  id=\"7072\">version<span class=\"s56\" id=\"7073\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7074\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7075\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7076\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7077\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7078\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7079\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7080\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7081\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7082\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7083\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7084\">=</span>\"urn:Exslt.ExsltSets\"</p><p  id=\"7085\">exclude-result-prefixes<span class=\"s56\" id=\"7086\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7087\">&gt;</span></p><p class=\"s56\"  id=\"7088\">&lt;<span class=\"p\" id=\"7089\">xsl:output method</span>=<span class=\"p\" id=\"7090\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7091\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7092\">&lt;<span class=\"p\" id=\"7093\">xsl:param name</span>=<span class=\"p\" id=\"7094\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7095\">&lt;<span class=\"p\" id=\"7096\">xsl:template match</span>=<span class=\"p\" id=\"7097\">\"/\"</span>&gt;</p><p class=\"s56\"  id=\"7098\">&lt;<span class=\"p\" id=\"7099\">xsl:variable name</span>=<span class=\"p\" id=\"7100\">\"items\" select</span>=<span class=\"p\" id=\"7101\">\"$currentPage/ancestor-or-self::*</span></p><p  id=\"7102\">/GeneralContent [string(useInNavigation) = '1'] \"<span class=\"s56\" id=\"7103\">/&gt;</span></p><p class=\"s56\"  id=\"7104\">&lt;<span class=\"p\" id=\"7105\">xsl:if test</span>=<span class=\"p\" id=\"7106\">\"count($items) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\"  id=\"7107\">&lt;<span class=\"p\" id=\"7108\">ul</span>&gt;</p><p class=\"s56\"  id=\"7109\">&lt;<span class=\"p\" id=\"7110\">xsl:for-each select</span>=<span class=\"p\" id=\"7111\">\"$items\"</span>&gt;</p><p class=\"s56\"  id=\"7112\">&lt;<span class=\"p\" id=\"7113\">xsl:if test</span>=<span class=\"p\" id=\"7114\">\"$currentPage/@id = @id\"</span>&gt;</p><p class=\"s56\"  id=\"7115\">&lt;<span class=\"p\" id=\"7116\">li class</span>=<span class=\"p\" id=\"7117\">\"current\" </span>&gt;</p><p class=\"s56\"  id=\"7118\">&lt;<span class=\"p\" id=\"7119\">xsl:value-of select</span>=<span class=\"p\" id=\"7120\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\"  id=\"7121\">&lt;/<span class=\"p\" id=\"7122\">li</span>&gt;</p><p class=\"s56\"  id=\"7123\">&lt;/<span class=\"p\" id=\"7124\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7125\">&lt;<span class=\"p\" id=\"7126\">xsl:if test</span>=<span class=\"p\" id=\"7127\">\"$currentPage/@id != @id\"</span>&gt;</p><p class=\"s56\"  id=\"7128\">&lt;<span class=\"p\" id=\"7129\">li class</span>=<span class=\"p\" id=\"7130\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\"  id=\"7131\">&lt;<span class=\"p\" id=\"7132\">a href</span>=<span class=\"p\" id=\"7133\">\"{umbraco.library:NiceUrl(@id)}\" title</span>=<span class=\"p\" id=\"7134\">\"{contentTitle}\" </span>&gt;</p><p class=\"s56\"  id=\"7135\">&lt;<span class=\"p\" id=\"7136\">xsl:value-of select</span>=<span class=\"p\" id=\"7137\">\"contentTitle\"</span>/&gt;</p><p class=\"s56\"  id=\"7138\">&lt;/<span class=\"p\" id=\"7139\">a</span>&gt;</p><p class=\"s56\"  id=\"7140\">&lt;/<span class=\"p\" id=\"7141\">li</span>&gt;</p><p class=\"s56\"  id=\"7142\">&lt;/<span class=\"p\" id=\"7143\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7144\">&lt;/<span class=\"p\" id=\"7145\">xsl:for-each</span>&gt;</p><p class=\"s56\"  id=\"7146\">&lt;/<span class=\"p\" id=\"7147\">ul</span>&gt;</p><p class=\"s56\"  id=\"7148\">&lt;/<span class=\"p\" id=\"7149\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7150\">&lt;/<span class=\"p\" id=\"7151\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7152\">&lt;/<span class=\"p\" id=\"7153\">xsl:stylesheet</span>&gt;</p><p  id=\"7154\"><br id=\"7155\"></p><p  id=\"7156\"><span class=\"s131\"  id=\"7157\">NewsList.xslt</span></p><p  id=\"7158\"><br id=\"7159\"></p><p  id=\"7160\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7161\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7162\">&lt;<span class=\"p\" id=\"7163\">xsl:stylesheet</span></p><p  id=\"7164\">version<span class=\"s56\" id=\"7165\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7166\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7167\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7168\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:umbraco.library<span class=\"s56\" id=\"7169\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7170\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7171\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7172\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7173\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7174\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7175\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7176\">=</span>\"urn:Exslt.ExsltSets\"</p><p  id=\"7177\">exclude-result-prefixes<span class=\"s56\" id=\"7178\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets \"<span class=\"s56\" id=\"7179\">&gt;</span></p><p class=\"s56\"  id=\"7180\">&lt;<span class=\"p\" id=\"7181\">xsl:output method</span>=<span class=\"p\" id=\"7182\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7183\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7184\">&lt;<span class=\"p\" id=\"7185\">xsl:param name</span>=<span class=\"p\" id=\"7186\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7187\">&lt;<span class=\"p\" id=\"7188\">xsl:template match</span>=<span class=\"p\" id=\"7189\">\"/\"</span>&gt;</p><p class=\"s56\"  id=\"7190\">&lt;<span class=\"p\" id=\"7191\">xsl:variable name</span>=<span class=\"p\" id=\"7192\">\"newsItems\" select</span>=<span class=\"p\" id=\"7193\">\"$currentPage/ancestor-or-self::*</span></p><p  id=\"7194\">/NewsContainer/NewsArticle \"<span class=\"s56\" id=\"7195\">/&gt;</span></p><p class=\"s56\"  id=\"7196\">&lt;<span class=\"p\" id=\"7197\">xsl:variable name</span>=<span class=\"p\" id=\"7198\">\"numberofnewsitems\" select</span>=<span class=\"p\" id=\"7199\">\"/macro/numberofnewsitems\"</span>/&gt;</p><p class=\"s56\"  id=\"7200\">&lt;<span class=\"p\" id=\"7201\">xsl:if test</span>=<span class=\"p\" id=\"7202\">\"count($newsItems) &amp;gt; 0\"</span>&gt;</p><p class=\"s56\"  id=\"7203\">&lt;<span class=\"p\" id=\"7204\">xsl:for-each select</span>=<span class=\"p\" id=\"7205\">\"$newsItems\" </span>&gt;</p><p class=\"s56\"  id=\"7206\">&lt;<span class=\"p\" id=\"7207\">xsl:sort select</span>=<span class=\"p\" id=\"7208\">\"@createDate\" order</span>=<span class=\"p\" id=\"7209\">\"ascending\"</span>/&gt;</p><p class=\"s56\"  id=\"7210\">&lt;<span class=\"p\" id=\"7211\">xsl:if test</span>=<span class=\"p\" id=\"7212\">\"position() &amp;lt;=$numberofnewsitems\" </span>&gt; &lt;<span class=\"p\" id=\"7213\">div clas</span>=<span class=\"p\" id=\"7214\">\"newsItem\"</span>&gt;</p><p class=\"s56\"  id=\"7215\">&lt;<span class=\"p\" id=\"7216\">h3</span>&gt;</p><p class=\"s56\"  id=\"7217\">&lt;<span class=\"p\" id=\"7218\">a href</span>=<span class=\"p\" id=\"7219\">\"{umbraco.library:NiceUrl(@id)}\" </span>&gt;</p><p class=\"s56\"  id=\"7220\">&lt;<span class=\"p\" id=\"7221\">xsl:value-of select</span>=<span class=\"p\" id=\"7222\">\"newsTitle\" </span>/&gt;</p><p  id=\"7223\"><br id=\"7224\"></p><p class=\"s56\"  id=\"7225\">&lt;/<span class=\"p\" id=\"7226\">a</span>&gt;</p><p class=\"s56\"  id=\"7227\">&lt;/<span class=\"p\" id=\"7228\">h3</span>&gt;</p><p class=\"s56\"  id=\"7229\">&lt;<span class=\"p\" id=\"7230\">p</span>&gt;</p><p class=\"s56\"  id=\"7231\">&lt;<span class=\"p\" id=\"7232\">xsl:value-of select</span>=<span class=\"p\" id=\"7233\">\"newsBody\" disable-output-escaping</span>=<span class=\"p\" id=\"7234\">\"yes\" </span>/&gt;</p><p class=\"s56\"  id=\"7235\">&lt;/<span class=\"p\" id=\"7236\">p</span>&gt;</p><p class=\"s56\"  id=\"7237\">&lt;<span class=\"p\" id=\"7238\">p</span>&gt;</p><p  id=\"7239\">Last update: <span class=\"s56\" id=\"7240\">&lt;</span>xsl:value-of select<span class=\"s56\" id=\"7241\">=</span>\"@updateDate\" <span class=\"s56\" id=\"7242\">/&gt;</span></p><p  id=\"7243\"><br id=\"7244\"></p><p class=\"s56\"  id=\"7245\">&lt;/<span class=\"p\" id=\"7246\">p</span>&gt;</p><p class=\"s56\"  id=\"7247\">&lt;/<span class=\"p\" id=\"7248\">div</span>&gt;</p><p class=\"s56\"  id=\"7249\">&lt;/<span class=\"p\" id=\"7250\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7251\">&lt;/<span class=\"p\" id=\"7252\">xsl:for-each</span>&gt;</p><p class=\"s56\"  id=\"7253\">&lt;/<span class=\"p\" id=\"7254\">xsl:if</span>&gt;</p><p class=\"s56\"  id=\"7255\">&lt;/<span class=\"p\" id=\"7256\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7257\">&lt;/<span class=\"p\" id=\"7258\">xsl:stylesheet</span>&gt;</p><p  id=\"7259\"><br id=\"7260\"></p><p  id=\"7261\"><span class=\"s131\"  id=\"7262\">RecentVcard.xslt</span></p><p  id=\"7263\"><br id=\"7264\"></p><p  id=\"7265\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</p><p  id=\"7266\">&lt;!DOCTYPE xsl:stylesheet [ &lt;!ENTITY nbsp \"&amp;#x00A0;\"&gt; ]&gt;</p><p class=\"s56\"  id=\"7267\">&lt;<span class=\"p\" id=\"7268\">xsl:stylesheet</span></p><p  id=\"7269\">version<span class=\"s56\" id=\"7270\">=</span>\"1.0\" xmlns:xsl<span class=\"s56\" id=\"7271\">=</span><a href=\"http://www.w3.org/1999/XSL/Transform\" class=\"a\" target=\"_blank\" id=\"7272\">\"</a>http://www.w3.org/1999/XSL/Transform\" xmlns:msxml<span class=\"s56\" id=\"7273\">=</span>\"urn:schemas-microsoft-com:xslt\" xmlns:recentVcard<span class=\"s56\" id=\"7274\">=</span>\"urn:recentvcard\" xmlns:umbraco.library<span class=\"s56\" id=\"7275\">=</span>\"urn:umbraco.library\" xmlns:Exslt.ExsltCommon<span class=\"s56\" id=\"7276\">=</span>\"urn:Exslt.ExsltCommon\" xmlns:Exslt.ExsltDatesAndTimes<span class=\"s56\" id=\"7277\">=</span>\"urn:Exslt.ExsltDatesAndTimes\" xmlns:Exslt.ExsltMath<span class=\"s56\" id=\"7278\">=</span>\"urn:Exslt.ExsltMath\"</p><p  id=\"7279\">xmlns:Exslt.ExsltRegularExpressions<span class=\"s56\" id=\"7280\">=</span>\"urn:Exslt.ExsltRegularExpressions\" xmlns:Exslt.ExsltStrings<span class=\"s56\" id=\"7281\">=</span>\"urn:Exslt.ExsltStrings\" xmlns:Exslt.ExsltSets<span class=\"s56\" id=\"7282\">=</span>\"urn:Exslt.ExsltSets\" xmlns:recentvcard<span class=\"s56\" id=\"7283\">=</span>\"urn:recentvcard\" exclude-result-prefixes<span class=\"s56\" id=\"7284\">=</span>\"msxml umbraco.library Exslt.ExsltCommon Exslt.ExsltDatesAndTimes Exslt.ExsltMath Exslt.ExsltRegularExpressions Exslt.ExsltStrings Exslt.ExsltSets recentvcard \"<span class=\"s56\" id=\"7285\">&gt;</span></p><p class=\"s56\"  id=\"7286\">&lt;<span class=\"p\" id=\"7287\">xsl:output method</span>=<span class=\"p\" id=\"7288\">\"xml\" omit-xml-declaration</span>=<span class=\"p\" id=\"7289\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7290\">&lt;<span class=\"p\" id=\"7291\">xsl:param name</span>=<span class=\"p\" id=\"7292\">\"currentPage\"</span>/&gt;</p><p class=\"s56\"  id=\"7293\">&lt;<span class=\"p\" id=\"7294\">xsl:template match</span>=<span class=\"p\" id=\"7295\">\"/\"</span>&gt;</p><p  id=\"7296\">&lt;!-- start writing XSLT --&gt;</p><p class=\"s56\"  id=\"7297\">&lt;<span class=\"p\" id=\"7298\">xsl:value-of select</span>=<span class=\"p\" id=\"7299\">\"recentVcard:GetVcardData()\" disable-output-escaping</span>=<span class=\"p\" id=\"7300\">\"yes\"</span>/&gt;</p><p class=\"s56\"  id=\"7301\">&lt;/<span class=\"p\" id=\"7302\">xsl:template</span>&gt;</p><p class=\"s56\"  id=\"7303\">&lt;/<span class=\"p\" id=\"7304\">xsl:stylesheet</span>&gt;</p><p  id=\"7305\"><br id=\"7306\"></p><p  id=\"7307\"><span class=\"s131\"  id=\"7308\">RecentVcard.cs</span></p><p  id=\"7309\"><br id=\"7310\"></p><p class=\"s66\"  id=\"7311\">using <span  id=\"7312\">System;</span></p><p class=\"s66\"  id=\"7313\">using <span  id=\"7314\">System.Collections.Generic; </span>using <span  id=\"7315\">System.Linq;</span></p><p class=\"s66\"  id=\"7316\">using <span  id=\"7317\">System.Web;</span></p><p class=\"s66\"  id=\"7318\">using <span  id=\"7319\">umbraco.DataLayer; </span>using <span  id=\"7320\">umbraco;</span></p><p class=\"s66\"  id=\"7321\">namespace <span  id=\"7322\">VCardGenerator</span></p><p class=\"s70\"  id=\"7323\">{</p><p class=\"s66\"  id=\"7324\">public class <span  id=\"7325\">RecentVcard</span></p><p class=\"s70\"  id=\"7326\">{</p><p class=\"s66\"  id=\"7327\">public static string <span  id=\"7328\">GetVcardData()</span></p><p class=\"s70\"  id=\"7329\">{</p><p class=\"s98\"  id=\"7330\">ISqlHelper <span  id=\"7331\">getVcard = </span>DataLayerHelper<span  id=\"7332\">.CreateSqlHelper(</span>GlobalSettings<span  id=\"7333\">.DbDSN);</span></p><p class=\"s98\"  id=\"7334\">IRecordsReader <span  id=\"7335\">read = getVcard.ExecuteReader(</span><span  id=\"7336\">@\"select top 10 id, name,</span></p><p class=\"s99\"  id=\"7337\">country</p><p class=\"s99\"  id=\"7338\">from vcardimage where id &gt; @id order by id desc\"<span  id=\"7339\">,</span></p><p class=\"s70\"  id=\"7340\">getVcard.CreateParameter(<span  id=\"7341\">\"@id\"</span>, <span  id=\"7342\">\"0\"</span>));</p><p class=\"s70\"  id=\"7343\"><span  id=\"7344\">string </span>data = <span  id=\"7345\">\"\"</span>; <span  id=\"7346\">while </span>(read.Read())</p><p class=\"s70\"  id=\"7347\">{</p><p class=\"s70\"  id=\"7348\">data += <span  id=\"7349\">\"&lt;li&gt;&lt;span class=\\\"vcard\\\"&gt;&lt;span class=\\\"fn\\\"&gt;\" </span>+ read.GetString(<span  id=\"7350\">\"name\"</span>) +</p><p class=\"s99\"  id=\"7351\">\"&lt;/span&gt;&lt;span class=\\\"add\\\"&gt; \" <span  id=\"7352\">+ read.GetString(</span>\"country\"<span  id=\"7353\">) + </span>\" &lt;/span&gt;&lt;/span&gt;&lt;/li&gt;\"<span  id=\"7354\">;</span></p><p class=\"s70\"  id=\"7355\">}</p><p class=\"s99\"  id=\"7356\"><span  id=\"7357\">return </span>\"&lt;ul&gt;\" <span  id=\"7358\">+ data + </span>\"&lt;/ul\"<span  id=\"7359\">;</span></p><p class=\"s70\"  id=\"7360\">}</p><p class=\"s70\"  id=\"7361\">}</p><p class=\"s70\"  id=\"7362\">}</p><p  id=\"7363\"><span id=\"7364\"><img width=\"602\" height=\"851\" alt=\"image\" src=\"Image_137.png\" id=\"7365\"></span></p><p  id=\"7366\"><br id=\"7367\"></p><p  id=\"7368\"><br id=\"7369\"></p><p  id=\"7370\"><br id=\"7371\"></p><p class=\"s8\"  id=\"7372\">About Writer</p><p  id=\"7373\">Name: Jivan Thapa</p><p  id=\"7374\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p  id=\"7375\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7376\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7377\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7378\">jeevan_2np@yahoo.com</a></p><p  id=\"7379\"><br id=\"7380\"></p><p class=\"s8\"  id=\"7381\">About Writer</p><p  id=\"7382\">Name: Jivan Thapa</p><p  id=\"7383\">Details: I am an international student at Erhvervsakademiet København Nord Lyngby Denmark, studying in Bsc. Web Development. “How to Umbraco” basic back is a part of final Examination Projects. My interest is in IT security and Object oriented program.</p><p  id=\"7384\"><a href=\"http://www.jeevanthapa.com/\" class=\"a\" target=\"_blank\" id=\"7385\">Web: </a><a href=\"mailto:jeevan_2np@yahoo.com\" class=\"a\" target=\"_blank\" id=\"7386\">www.jeevanthapa.com Email: </a><a href=\"mailto:jeevan_2np@yahoo.com\" target=\"_blank\" id=\"7387\">jeevan_2np@yahoo.com</a></p><p  id=\"7388\"><span  id=\"7389\"> </span></p><p  id=\"7390\"><br id=\"7391\"></p><p  id=\"7392\"><br id=\"7393\"></p><p  id=\"7394\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p  id=\"7395\">Here I covered:</p><ul id=\"l140\"><li  id=\"7397\"><p  id=\"7398\">Document Type</p></li><li  id=\"7399\"><p  id=\"7400\">Template</p></li><li  id=\"7401\"><p  id=\"7402\">Content</p></li><li  id=\"7403\"><p  id=\"7404\">Xslt</p></li><li  id=\"7405\"><p  id=\"7406\">Extending Umbraco using .net class and User Control</p></li><li  id=\"7407\"><p  id=\"7408\">And more ….</p></li></ul><p  id=\"7409\">Jivan Thapa</p><p  id=\"7410\">“How to Umbraco” basic book is design for new asp.net developer who has knowledge of .net programming language and looking to build website using Umbraco CMS. Step by step and explanation through examples to understand core concept of Umbraco CMS is valuable assets of this book. “How to Umbraco” basic book is probably first written books to provide concept of Umbraco CMS and its structure. In General using this book new developer gets knowledge of Building website using Umbraco site from Scratch.</p><p  id=\"7411\">Here I covered:</p><ul id=\"l141\"><li  id=\"7413\"><p  id=\"7414\">Document Type</p></li><li  id=\"7415\"><p  id=\"7416\">Template</p></li><li  id=\"7417\"><p  id=\"7418\">Content</p></li><li  id=\"7419\"><p  id=\"7420\">Xslt</p></li><li  id=\"7421\"><p  id=\"7422\">Extending Umbraco using .net class and User Control</p></li><li  id=\"7423\"><p  id=\"7424\">And more ….</p></li></ul><p  id=\"7425\">Jivan Thapa</p><p  id=\"7426\"><span  id=\"7427\"> </span></p></div>","sub":[]}]}]}]